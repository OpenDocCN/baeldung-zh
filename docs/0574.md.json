["```\r\n<dependency>\r\n    <groupId>org.springframework</groupId>\r\n    <artifactId>spring-web</artifactId>\r\n    <version>5.3.5</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework</groupId>\r\n    <artifactId>spring-webmvc</artifactId>\r\n    <version>5.3.5</version>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n    <version>2.4.4</version>\r\n</dependency>\r\n```","```\r\npublic class MyWebAppInitializer implements WebApplicationInitializer {\r\n\r\n    @Override\r\n    public void onStartup(ServletContext container) {\r\n        AnnotationConfigWebApplicationContext context\r\n          = new AnnotationConfigWebApplicationContext();\r\n        context.setConfigLocation(\"com.baeldung\");\r\n\r\n        container.addListener(new ContextLoaderListener(context));\r\n\r\n        ServletRegistration.Dynamic dispatcher = container\r\n          .addServlet(\"dispatcher\", new DispatcherServlet(context));\r\n\r\n        dispatcher.setLoadOnStartup(1);\r\n        dispatcher.addMapping(\"/\");\r\n    }\r\n}\r\n```","```\r\n@EnableWebMvc\r\n@Configuration\r\npublic class ClientWebConfig implements WebMvcConfigurer { \r\n   @Bean\r\n   public ViewResolver viewResolver() {\r\n      InternalResourceViewResolver bean\r\n        = new InternalResourceViewResolver();\r\n      bean.setViewClass(JstlView.class);\r\n      bean.setPrefix(\"/WEB-INF/view/\");\r\n      bean.setSuffix(\".jsp\");\r\n      return bean;\r\n   }\r\n}\r\n```","```\r\nspring.mvc.view.prefix=/WEB-INF/jsp/\r\nspring.mvc.view.suffix=.jsp\r\n```","```\r\n@Configuration\r\n@EnableWebMvc\r\npublic class MvcWebConfig implements WebMvcConfigurer {\r\n\r\n    @Autowired\r\n    private ApplicationContext applicationContext;\r\n\r\n    @Bean\r\n    public SpringResourceTemplateResolver templateResolver() {\r\n        SpringResourceTemplateResolver templateResolver = \r\n          new SpringResourceTemplateResolver();\r\n        templateResolver.setApplicationContext(applicationContext);\r\n        templateResolver.setPrefix(\"/WEB-INF/views/\");\r\n        templateResolver.setSuffix(\".html\");\r\n        return templateResolver;\r\n    }\r\n\r\n    @Bean\r\n    public SpringTemplateEngine templateEngine() {\r\n        SpringTemplateEngine templateEngine = new SpringTemplateEngine();\r\n        templateEngine.setTemplateResolver(templateResolver());\r\n        templateEngine.setEnableSpringELCompiler(true);\r\n        return templateEngine;\r\n    }\r\n\r\n    @Override\r\n    public void configureViewResolvers(ViewResolverRegistry registry) {\r\n        ThymeleafViewResolver resolver = new ThymeleafViewResolver();\r\n        resolver.setTemplateEngine(templateEngine());\r\n        registry.viewResolver(resolver);\r\n    }\r\n}\r\n```","```\r\n@Configuration\r\n@EnableWebSecurity\r\npublic class CustomWebSecurityConfigurerAdapter extends WebSecurityConfigurerAdapter {\r\n\r\n    @Autowired\r\n    public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {\r\n        auth.inMemoryAuthentication()\r\n          .withUser(\"user1\")\r\n            .password(passwordEncoder()\r\n            .encode(\"user1Pass\"))\r\n          .authorities(\"ROLE_USER\");\r\n    }\r\n\r\n    @Override\r\n    protected void configure(HttpSecurity http) throws Exception {\r\n        http.authorizeRequests()\r\n          .anyRequest().authenticated()\r\n          .and()\r\n          .httpBasic();\r\n    }\r\n\r\n    @Bean\r\n    public PasswordEncoder passwordEncoder() {\r\n        return new BCryptPasswordEncoder();\r\n    }\r\n}\r\n```","```\r\n@SpringBootApplication\r\npublic class Application {\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(Application.class, args);\r\n    }\r\n}\r\n```","```\r\n@SpringBootApplication\r\npublic class Application extends SpringBootServletInitializer {\r\n    // ...\r\n}\r\n```"]