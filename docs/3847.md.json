["```\r\n@Service\r\npublic class IdService {\r\n    private static int count;\r\n\r\n    int generateId() {\r\n        return ++count;\r\n    }\r\n}\r\n```","```\r\n@ComponentScan\r\npublic class AspectJConfig {\r\n}\r\n```","```\r\n@Configurable\r\npublic class PersonObject {\r\n    private int id;\r\n    private String name;\r\n\r\n    public PersonObject(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    // getters and other code shown in the next subsection\r\n}\r\n```","```\r\n@Configurable\r\npublic class PersonObject {\r\n    @Autowired\r\n    private IdService idService;\r\n\r\n    // fields, constructor and getters - shown in the previous subsection\r\n\r\n    void generateId() {\r\n        this.id = idService.generateId();\r\n    }\r\n}\r\n```","```\r\n<plugin>\r\n    <groupId>org.codehaus.mojo</groupId>\r\n    <artifactId>aspectj-maven-plugin</artifactId>\r\n    <version>1.11</version>\r\n    <!-- configuration and executions -->\r\n</plugin>\r\n```","```\r\n<configuration>\r\n    <complianceLevel>1.8</complianceLevel>\r\n    <Xlint>ignore</Xlint>\r\n    <aspectLibraries>\r\n        <aspectLibrary>\r\n            <groupId>org.springframework</groupId>\r\n            <artifactId>spring-aspects</artifactId>\r\n        </aspectLibrary>\r\n    </aspectLibraries>\r\n</configuration>\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework</groupId>\r\n    <artifactId>spring-aspects</artifactId>\r\n    <version>5.2.7.RELEASE</version>\r\n</dependency>\r\n```","```\r\n<executions>\r\n    <execution>\r\n        <goals>\r\n            <goal>compile</goal>\r\n        </goals>\r\n    </execution>\r\n</executions>\r\n```","```\r\n@ComponentScan\r\n@EnableSpringConfigured\r\npublic class AspectJConfig {\r\n}\r\n```","```\r\n@RunWith(SpringRunner.class)\r\n@ContextConfiguration(classes = AspectJConfig.class)\r\npublic class PersonUnitTest {\r\n    @Test\r\n    public void givenUnmanagedObjects_whenInjectingIdService_thenIdValueIsCorrectlySet() {\r\n        PersonObject personObject = new PersonObject(\"Baeldung\");\r\n        personObject.generateId();\r\n        assertEquals(1, personObject.getId());\r\n        assertEquals(\"Baeldung\", personObject.getName());\r\n    }\r\n}\r\n```","```\r\n@Entity\r\n@Configurable(preConstruction = true)\r\npublic class PersonEntity {\r\n    @Id\r\n    private int id;\r\n    private String name;\r\n\r\n    public PersonEntity() {\r\n    }\r\n\r\n    // other code - shown in the next subsection\r\n}\r\n```","```\r\n// annotations\r\npublic class PersonEntity {\r\n    @Autowired\r\n    @Transient\r\n    private IdService idService;\r\n\r\n    // fields and no-arg constructor\r\n\r\n    public PersonEntity(String name) {\r\n        id = idService.generateId();\r\n        this.name = name;\r\n    }\r\n\r\n    // getters\r\n}\r\n```","```\r\n@Test\r\npublic void givenUnmanagedObjects_whenInjectingIdService_thenIdValueIsCorrectlySet() {\r\n    // existing statements\r\n\r\n    PersonEntity personEntity = new PersonEntity(\"Baeldung\");\r\n    assertEquals(2, personEntity.getId());\r\n    assertEquals(\"Baeldung\", personEntity.getName());\r\n}\r\n```"]