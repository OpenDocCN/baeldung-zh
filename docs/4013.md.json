["```\r\nIntStream intNumbers = IntStream.range(0, 3);\r\nassertEquals(3, intNumbers.sum());\r\n```","```\r\nList<Double> doubleNumbers = Arrays.asList(23.48, 52.26, 13.5);\r\ndouble result = doubleNumbers.stream()\r\n    .mapToDouble(Double::doubleValue)\r\n    .sum();\r\nassertEquals(89.24, result, .1);\r\n```","```\r\nStream<Integer> intNumbers = Stream.of(5, 1, 100);\r\nint result = intNumbers.reduce(0, Integer::sum);\r\nassertEquals(106, result);\r\n```","```\r\nStream<BigDecimal> bigDecimalNumber = \r\n  Stream.of(BigDecimal.ZERO, BigDecimal.ONE, BigDecimal.TEN);\r\nBigDecimal result = bigDecimalNumber.reduce(BigDecimal.ZERO, BigDecimal::add);\r\nassertEquals(11, result);\r\n```"]