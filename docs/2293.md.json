["```\r\npublic class Person {\r\n    private Integer id;\r\n    private String name;\r\n    private String lastName;\r\n    private Integer age;\r\n    //getters and setters\r\n} \r\n```","```\r\nCREATE TABLE Person (id INTEGER not null, name VARCHAR(50), lastName VARCHAR(50), age INTEGER, PRIMARY KEY (id));\r\n```","```\r\n@Test\r\npublic void givenNewPerson_whenSetNullIsUsed_thenNewRecordIsCreated() throws SQLException {\r\n    Person person = new Person(1, \"John\", \"Doe\", null);\r\n\r\n    try (PreparedStatement preparedStatement = DBConfig.getConnection().prepareStatement(SQL)) {\r\n        preparedStatement.setInt(1, person.getId());\r\n        preparedStatement.setString(2, person.getName());\r\n        preparedStatement.setString(3, person.getLastName());\r\n        if (person.getAge() == null) {\r\n            preparedStatement.setNull(4, Types.INTEGER);\r\n        }\r\n        else {\r\n            preparedStatement.setInt(4, person.getAge());\r\n        }\r\n        int noOfRows = preparedStatement.executeUpdate();\r\n\r\n        assertThat(noOfRows, equalTo(1));\r\n    }\r\n} \r\n```","```\r\n@Test\r\npublic void givenNewPerson_whenSetObjectIsUsed_thenNewRecordIsCreated() throws SQLException {\r\n    Person person = new Person(2, \"John\", \"Doe\", null);\r\n\r\n    try (PreparedStatement preparedStatement = DBConfig.getConnection().prepareStatement(SQL)) {\r\n        preparedStatement.setInt(1, person.getId());\r\n        preparedStatement.setString(2, person.getName());\r\n        preparedStatement.setString(3, person.getLastName());\r\n        preparedStatement.setObject(4, person.getAge(), Types.INTEGER);\r\n        int noOfRows = preparedStatement.executeUpdate();\r\n\r\n        assertThat(noOfRows, equalTo(1));\r\n    }\r\n}\r\n```"]