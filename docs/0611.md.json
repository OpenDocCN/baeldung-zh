["```\r\nThread printingHook = new Thread(() -> System.out.println(\"In the middle of a shutdown\"));\r\nRuntime.getRuntime().addShutdownHook(printingHook);\r\n```","```\r\n> System.exit(129);\r\nIn the middle of a shutdown\r\n```","```\r\nThread longRunningHook = new Thread(() -> {\r\n    try {\r\n        Thread.sleep(300);\r\n    } catch (InterruptedException ignored) {}\r\n});\r\nlongRunningHook.start();\r\n\r\nassertThatThrownBy(() -> Runtime.getRuntime().addShutdownHook(longRunningHook))\r\n  .isInstanceOf(IllegalArgumentException.class)\r\n  .hasMessage(\"Hook already running\"); \r\n```","```\r\nThread unfortunateHook = new Thread(() -> {});\r\nRuntime.getRuntime().addShutdownHook(unfortunateHook);\r\n\r\nassertThatThrownBy(() -> Runtime.getRuntime().addShutdownHook(unfortunateHook))\r\n  .isInstanceOf(IllegalArgumentException.class)\r\n  .hasMessage(\"Hook previously registered\");\r\n```","```\r\nThread willNotRun = new Thread(() -> System.out.println(\"Won't run!\"));\r\nRuntime.getRuntime().addShutdownHook(willNotRun);\r\n\r\nassertThat(Runtime.getRuntime().removeShutdownHook(willNotRun)).isTrue(); \r\n```","```\r\nThread haltedHook = new Thread(() -> System.out.println(\"Halted abruptly\"));\r\nRuntime.getRuntime().addShutdownHook(haltedHook);\r\n\r\nRuntime.getRuntime().halt(129); \r\n```"]