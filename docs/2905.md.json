["```\r\nString example = \"Mary;Thomas:Jane-Kate\";\r\nString[] expectedArray = new String[]{\"Mary\", \"Thomas\", \"Jane\", \"Kate\"};\r\n```","```\r\nString[] names = example.split(\"[;:-]\");\r\nAssertions.assertEquals(4, names.length);\r\nAssertions.assertArrayEquals(expectedArray, names);\r\n```","```\r\n<dependency>\r\n    <groupId>com.google.guava</groupId>\r\n    <artifactId>guava</artifactId>\r\n    <version>31.0.1-jre</version>\r\n</dependency>\r\n```","```\r\nIterable<String> names = Splitter.on(Pattern.compile(\"[;:-]\")).split(example);\r\nAssertions.assertEquals(4, Iterators.size(names.iterator()));\r\nAssertions.assertIterableEquals(Arrays.asList(expectedArray), names);\r\n```","```\r\nIterable<String> names = Splitter.onPattern(\"[;:-]\").split(example);\r\nAssertions.assertEquals(4, Iterators.size(names.iterator()));\r\nAssertions.assertIterableEquals(Arrays.asList(expectedArray), names);\r\n```","```\r\nIterable<String> names = Splitter.on(CharMatcher.anyOf(\";:-\")).split(example);\r\nAssertions.assertEquals(4, Iterators.size(names.iterator()));\r\nAssertions.assertIterableEquals(Arrays.asList(expectedArray), names);\r\n```","```\r\n<dependency>\r\n    <groupId>org.apache.commons</groupId>\r\n    <artifactId>commons-lang3</artifactId>\r\n    <version>3.12.0</version>\r\n</dependency>\r\n```","```\r\nString[] names = StringUtils.split(example, \";:-\");\r\nAssertions.assertEquals(4, names.length);\r\nAssertions.assertArrayEquals(expectedArray, names);\r\n```"]