["```\r\nList<Integer> intList = new ArrayList<>();\r\nintList.add(1);\r\nintList.add(2);\r\nintList.add(3);\r\nStream<Integer> intStream = intList.stream(); //form the stream\r\nintList.add(5); //modify underlying list\r\nintStream.forEach(i -> System.out.println(\"In a Java stream: \" + i)); \r\n```","```\r\nin a Java stream: 1\r\nin a Java stream: 2\r\nin a Java stream: 3\r\nin a Java stream: 5 \r\n```","```\r\nStream<Integer> vavrStream = Stream.ofAll(intList);\r\nintList.add(5)\r\nvavrStream.forEach(i -> System.out.println(\"in a Vavr Stream: \" + i)); \r\n```","```\r\nException in thread \"main\" java.util.ConcurrentModificationException\r\n  at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:901)\r\n  at java.util.ArrayList$Itr.next(ArrayList.java:851)\r\n  at io.vavr.collection.StreamModule$StreamFactory.create(Stream.java:2078)\r\n```","```\r\nint[] aStream = new int[]{1, 2, 4};\r\nStream<Integer> wrapped = Stream.ofAll(aStream);\r\n\r\naStream[2] = 5;\r\nwrapped.forEach(i -> System.out.println(\"Vavr looped \" + i));\r\n```","```\r\nVavr looped 1\r\nVavr looped 2\r\nVavr looped 5 \r\n```","```\r\nStream.of(42)\r\n  .flatMap(i -> Stream.generate(() -> { \r\n      System.out.println(\"nested call\"); \r\n      return 42; \r\n  }))\r\n  .findAny();\r\n```","```\r\nStream.of(42)\r\n  .flatMap(i -> Stream.continually(() -> { \r\n      System.out.println(\"nested call\"); \r\n      return 42; \r\n  }))\r\n  .get(0); \r\n```","```\r\nStream<String> vavredStream = Stream.of(\"foo\", \"bar\", \"baz\");\r\nvavredStream.forEach(item -> System.out.println(\"List items: \" + item));\r\nStream<String> vavredStream2 = vavredStream.insert(2, \"buzz\");\r\nvavredStream2.forEach(item -> System.out.println(\"List items: \" + item));\r\n```","```\r\nStream<String> removed = inserted.remove(\"buzz\"); \r\n```"]