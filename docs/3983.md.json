["```\r\npublic class Foo {}\r\n```","```\r\npublic class InstanceFooFactory {\r\n\r\n    public Foo createInstance() {\r\n        return new Foo();\r\n    }\r\n}\r\n```","```\r\n<beans ...>\r\n\r\n    <bean id=\"instanceFooFactory\"\r\n      class=\"com.baeldung.factorymethod.InstanceFooFactory\" />\r\n\r\n    <bean id=\"foo\"\r\n      factory-bean=\"instanceFooFactory\"\r\n      factory-method=\"createInstance\" />\r\n\r\n</beans>\r\n```","```\r\n@RunWith(SpringJUnit4ClassRunner.class)\r\n@ContextConfiguration(\"/factorymethod/instance-config.xml\")\r\npublic class InstanceFooFactoryIntegrationTest {\r\n\r\n    @Autowired\r\n    private Foo foo;\r\n\r\n    @Test\r\n    public void givenValidInstanceFactoryConfig_whenCreateFooInstance_thenInstanceIsNotNull() {\r\n        assertNotNull(foo);\r\n    }\r\n}\r\n```","```\r\npublic class Bar {\r\n\r\n    private String name;\r\n\r\n    public Bar(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    // ...getters & setters\r\n}\r\n```","```\r\npublic class InstanceBarFactory {\r\n\r\n    public Bar createInstance(String name) {\r\n        return new Bar(name);\r\n    }\r\n}\r\n```","```\r\n<beans ...>\r\n\r\n    <bean id=\"instanceBarFactory\"\r\n      class=\"com.baeldung.factorymethod.InstanceBarFactory\" />\r\n\r\n    <bean id=\"bar\"\r\n      factory-bean=\"instanceBarFactory\"\r\n      factory-method=\"createInstance\">\r\n        <constructor-arg value=\"someName\" />\r\n    </bean>\r\n\r\n</beans>\r\n```","```\r\n@RunWith(SpringJUnit4ClassRunner.class)\r\n@ContextConfiguration(\"/factorymethod/instance-bar-config.xml\")\r\npublic class InstanceBarFactoryIntegrationTest {\r\n\r\n    @Autowired\r\n    private Bar instance;\r\n\r\n    @Test\r\n    public void givenValidInstanceFactoryConfig_whenCreateInstance_thenNameIsCorrect() {\r\n        assertNotNull(instance);\r\n        assertEquals(\"someName\", instance.getName());\r\n    }\r\n}\r\n```","```\r\npublic class SingletonFooFactory {\r\n\r\n    private static final Foo INSTANCE = new Foo();\r\n\r\n    public static Foo createInstance() {\r\n        return INSTANCE;\r\n    }\r\n}\r\n```","```\r\n<beans ...>\r\n\r\n    <bean id=\"foo\"\r\n      class=\"com.baeldung.factorymethod.SingletonFooFactory\"\r\n      factory-method=\"createInstance\" />\r\n\r\n</beans>\r\n```","```\r\n@RunWith(SpringJUnit4ClassRunner.class)\r\n@ContextConfiguration(\"/factorymethod/static-foo-config.xml\")\r\npublic class SingletonFooFactoryIntegrationTest {\r\n\r\n    @Autowired\r\n    private Foo singleton;\r\n\r\n    @Test\r\n    public void givenValidStaticFactoryConfig_whenCreateInstance_thenInstanceIsNotNull() {\r\n        assertNotNull(singleton);\r\n    }\r\n}\r\n```","```\r\npublic class SingletonBarFactory {\r\n\r\n    private static final Bar INSTANCE = new Bar(\"unnamed\");\r\n\r\n    public static Bar createInstance(String name) {\r\n        INSTANCE.setName(name);\r\n        return INSTANCE;\r\n    }\r\n}\r\n```","```\r\n<beans ...>\r\n\r\n    <bean id=\"bar\"\r\n      class=\"com.baeldung.factorymethod.SingletonBarFactory\"\r\n      factory-method=\"createInstance\">\r\n        <constructor-arg value=\"someName\" />\r\n    </bean>\r\n\r\n</beans>\r\n```","```\r\n@RunWith(SpringJUnit4ClassRunner.class)\r\n@ContextConfiguration(\"/factorymethod/static-bar-config.xml\")\r\npublic class SingletonBarFactoryIntegrationTest {\r\n\r\n    @Autowired\r\n    private Bar instance;\r\n\r\n    @Test\r\n    public void givenValidStaticFactoryConfig_whenCreateInstance_thenNameIsCorrect() {\r\n        assertNotNull(instance);\r\n        assertEquals(\"someName\", instance.getName());\r\n    }\r\n}\r\n```"]