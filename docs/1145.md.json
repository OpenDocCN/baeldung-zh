["```\r\npublic class Employee {\r\n    private String firstName;\r\n    private String lastName;\r\n\r\n    // constructor, getters and setters\r\n} \r\n```","```\r\npublic class EmployeeDTO {\r\n\r\n    private String firstName;\r\n    private String lastName;\r\n\r\n    // getters and setters\r\n}\r\n```","```\r\n@Mapper\r\npublic interface EmployeeMapper {\r\n    List<EmployeeDTO> map(List<Employee> employees);\r\n} \r\n```","```\r\npublic class EmployeeMapperImpl implements EmployeeMapper {\r\n\r\n    @Override\r\n    public List<EmployeeDTO> map(List<Employee> employees) {\r\n        if (employees == null) {\r\n            return null;\r\n        }\r\n\r\n        List<EmployeeDTO> list = new ArrayList<EmployeeDTO>(employees.size());\r\n        for (Employee employee : employees) {\r\n            list.add(employeeToEmployeeDTO(employee));\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    protected EmployeeDTO employeeToEmployeeDTO(Employee employee) {\r\n        if (employee == null) {\r\n            return null;\r\n        }\r\n\r\n        EmployeeDTO employeeDTO = new EmployeeDTO();\r\n\r\n        employeeDTO.setFirstName(employee.getFirstName());\r\n        employeeDTO.setLastName(employee.getLastName());\r\n\r\n        return employeeDTO;\r\n    }\r\n} \r\n```","```\r\npublic class EmployeeFullNameDTO {\r\n\r\n    private String fullName;\r\n\r\n    // getter and setter\r\n}\r\n```","```\r\nWarning:(11, 31) java: Unmapped target property: \"fullName\". \r\n  Mapping from Collection element \"com.baeldung.mapstruct.mappingCollections.model.Employee employee\" to \r\n  \"com.baeldung.mapstruct.mappingCollections.dto.EmployeeFullNameDTO employeeFullNameDTO\".\r\n```","```\r\n@Mapper\r\npublic interface EmployeeFullNameMapper {\r\n\r\n    List<EmployeeFullNameDTO> map(List<Employee> employees);\r\n\r\n    default EmployeeFullNameDTO map(Employee employee) {\r\n        EmployeeFullNameDTO employeeInfoDTO = new EmployeeFullNameDTO();\r\n        employeeInfoDTO.setFullName(employee.getFirstName() + \" \" + employee.getLastName());\r\n\r\n        return employeeInfoDTO;\r\n    }\r\n}\r\n```","```\r\n@Mapper\r\npublic interface EmployeeMapper {\r\n\r\n    Set<EmployeeDTO> map(Set<Employee> employees);\r\n}\r\n```","```\r\npublic class EmployeeMapperImpl implements EmployeeMapper {\r\n\r\n    @Override\r\n    public Set<EmployeeDTO> map(Set<Employee> employees) {\r\n        if (employees == null) {\r\n            return null;\r\n        }\r\n\r\n        Set<EmployeeDTO> set = \r\n          new HashSet<EmployeeDTO>(Math.max((int)(employees.size() / .75f ) + 1, 16));\r\n        for (Employee employee : employees) {\r\n            set.add(employeeToEmployeeDTO(employee));\r\n        }\r\n\r\n        return set;\r\n    }\r\n\r\n    protected EmployeeDTO employeeToEmployeeDTO(Employee employee) {\r\n        if (employee == null) {\r\n            return null;\r\n        }\r\n\r\n        EmployeeDTO employeeDTO = new EmployeeDTO();\r\n\r\n        employeeDTO.setFirstName(employee.getFirstName());\r\n        employeeDTO.setLastName(employee.getLastName());\r\n\r\n        return employeeDTO;\r\n    }\r\n}\r\n```","```\r\n@Mapper\r\npublic interface EmployeeMapper {\r\n\r\n    Map<String, EmployeeDTO> map(Map<String, Employee> idEmployeeMap);\r\n}\r\n```","```\r\npublic class EmployeeMapperImpl implements EmployeeMapper {\r\n\r\n    @Override\r\n    public Map<String, EmployeeDTO> map(Map<String, Employee> idEmployeeMap) {\r\n        if (idEmployeeMap == null) {\r\n            return null;\r\n        }\r\n\r\n        Map<String, EmployeeDTO> map = new HashMap<String, EmployeeDTO>(Math.max((int)(idEmployeeMap.size() / .75f) + 1, 16));\r\n\r\n        for (java.util.Map.Entry<String, Employee> entry : idEmployeeMap.entrySet()) {\r\n            String key = entry.getKey();\r\n            EmployeeDTO value = employeeToEmployeeDTO(entry.getValue());\r\n            map.put(key, value);\r\n        }\r\n\r\n        return map;\r\n    }\r\n\r\n    protected EmployeeDTO employeeToEmployeeDTO(Employee employee) {\r\n        if (employee == null) {\r\n            return null;\r\n        }\r\n\r\n        EmployeeDTO employeeDTO = new EmployeeDTO();\r\n\r\n        employeeDTO.setFirstName(employee.getFirstName());\r\n        employeeDTO.setLastName(employee.getLastName());\r\n\r\n        return employeeDTO;\r\n    }\r\n}\r\n```","```\r\npublic class Company {\r\n\r\n    private List<Employee> employees;\r\n\r\n   // getter and setter\r\n}\r\n```","```\r\npublic class CompanyDTO {\r\n\r\n    private List<EmployeeDTO> employees;\r\n\r\n    public List<EmployeeDTO> getEmployees() {\r\n        return employees;\r\n    }\r\n\r\n    public void setEmployees(List<EmployeeDTO> employees) {\r\n        this.employees = employees;\r\n    }\r\n\r\n    public void addEmployee(EmployeeDTO employeeDTO) {\r\n        if (employees == null) {\r\n            employees = new ArrayList<>();\r\n        }\r\n\r\n        employees.add(employeeDTO);\r\n    }\r\n}\r\n```","```\r\n@Mapper(uses = EmployeeMapper.class)\r\npublic interface CompanyMapper {\r\n    CompanyDTO map(Company company);\r\n}\r\n```","```\r\npublic class CompanyMapperImpl implements CompanyMapper {\r\n\r\n    private final EmployeeMapper employeeMapper = Mappers.getMapper(EmployeeMapper.class);\r\n\r\n    @Override\r\n    public CompanyDTO map(Company company) {\r\n        if (company == null) {\r\n            return null;\r\n        }\r\n\r\n        CompanyDTO companyDTO = new CompanyDTO();\r\n\r\n        companyDTO.setEmployees(employeeMapper.map(company.getEmployees()));\r\n\r\n        return companyDTO;\r\n    }\r\n}\r\n```","```\r\n@Mapper(collectionMappingStrategy = CollectionMappingStrategy.ADDER_PREFERRED,\r\n        uses = EmployeeMapper.class)\r\npublic interface CompanyMapperAdderPreferred {\r\n    CompanyDTO map(Company company);\r\n}\r\n```","```\r\n@Mapper\r\npublic interface EmployeeMapper {\r\n    EmployeeDTO map(Employee employee);\r\n    List map(List employees);\r\n    Set map(Set employees);\r\n    Map<String, EmployeeDTO> map(Map<String, Employee> idEmployeeMap);\r\n}\r\n```","```\r\npublic class CompanyMapperAdderPreferredImpl implements CompanyMapperAdderPreferred {\r\n\r\n    private final EmployeeMapper employeeMapper = Mappers.getMapper( EmployeeMapper.class );\r\n\r\n    @Override\r\n    public CompanyDTO map(Company company) {\r\n        if ( company == null ) {\r\n            return null;\r\n        }\r\n\r\n        CompanyDTO companyDTO = new CompanyDTO();\r\n\r\n        if ( company.getEmployees() != null ) {\r\n            for ( Employee employee : company.getEmployees() ) {\r\n                companyDTO.addEmployee( employeeMapper.map( employee ) );\r\n            }\r\n        }\r\n\r\n        return companyDTO;\r\n    }\r\n}\r\n```"]