["```\r\npublic abstract class UuidIdentifiedEntity {\r\n\r\n    @Id   \r\n    protected UUID id;    \r\n\r\n    public void setId(UUID id) {\r\n\r\n        if (this.id != null) {\r\n            throw new UnsupportedOperationException(\"ID is already defined\");\r\n        }\r\n\r\n        this.id = id;\r\n    }\r\n\r\n    // Getter\r\n}\r\n```","```\r\n@Bean\r\npublic MongoClient mongo() throws Exception {\r\n    ConnectionString connectionString = new ConnectionString(\"mongodb://localhost:27017/test\");\r\n    MongoClientSettings mongoClientSettings = MongoClientSettings.builder()\r\n      .uuidRepresentation(UuidRepresentation.STANDARD)\r\n      .applyConnectionString(connectionString).build();\r\n    return MongoClients.create(mongoClientSettings);\r\n} \r\n```","```\r\nspring.data.mongodb.uuid-representation=standard\r\n```","```\r\npublic class UuidIdentifiedEntityEventListener extends AbstractMongoEventListener<UuidIdentifiedEntity> {\r\n\r\n    @Override\r\n    public void onBeforeConvert(BeforeConvertEvent<UuidIdentifiedEntity> event) {\r\n\r\n        super.onBeforeConvert(event);\r\n        UuidIdentifiedEntity entity = event.getSource();\r\n\r\n        if (entity.getId() == null) {\r\n            entity.setId(UUID.randomUUID());\r\n        } \r\n    }    \r\n}\r\n```","```\r\n@Bean\r\npublic UuidIdentifiedEntityEventListener uuidIdentifiedEntityEventListener() {\r\n    return new UuidIdentifiedEntityEventListener();\r\n}\r\n```","```\r\n@Bean\r\npublic BeforeConvertCallback<UuidIdentifiedEntity> beforeSaveCallback() {\r\n\r\n    return (entity, collection) -> {\r\n\r\n        if (entity.getId() == null) {\r\n            entity.setId(UUID.randomUUID());\r\n        }\r\n        return entity;\r\n    };\r\n} \r\n```","```\r\n@NoRepositoryBean\r\npublic interface CustomMongoRepository<T extends UuidIdentifiedEntity> extends MongoRepository<T, UUID> { } \r\n```","```\r\npublic class CustomMongoRepositoryImpl<T extends UuidIdentifiedEntity> \r\n  extends SimpleMongoRepository<T, UUID> implements CustomMongoRepository<T>\r\n```","```\r\n@Override\r\npublic <S extends T> S save(S entity) {\r\n    generateId(entity);\r\n    return super.save(entity);\r\n} \r\n```","```\r\n@EnableMongoRepositories(basePackages = \"com.baeldung.repository\", repositoryBaseClass = CustomMongoRepositoryImpl.class) \r\n```","```\r\npublic interface BookRepository extends MongoRepository<Book, UUID> { }\r\n```"]