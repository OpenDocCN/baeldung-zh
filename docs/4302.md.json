["```\r\npublic class CustomAuthenticationManager implements AuthenticationManager {\r\n    @Override\r\n    public Authentication authenticate(Authentication authentication) throws AuthenticationException {\r\n        try {\r\n            ResponseEntity<LoginResponse> response =\r\n                restTemplate.postForEntity(REMOTE_LOGIN_URL, loginRequest, LoginResponse.class);\r\n\r\n            if(response.getStatusCode().is2xxSuccessful()) {\r\n                String login = authentication.getPrincipal().toString();\r\n                User user = userService.getUserWithAuthoritiesByLogin(login)\r\n                  .orElseGet(() -> userService.createUser(\r\n                    createUserDTO(response.getBody(), authentication)));\r\n                return createAuthentication(authentication, user);\r\n            }\r\n            else {\r\n                throw new BadCredentialsException(\"Invalid username or password\");\r\n            }\r\n        }\r\n        catch (Exception e) {\r\n            throw new AuthenticationServiceException(\"Failed to login\", e);\r\n        }\r\n    }\r\n}\r\n```","```\r\n<div class=\"alert alert-warning\">\r\n  <a class=\"alert-link\" (click)=\"requestResetPassword()\">Did you forget your password?</a>\r\n</div>\r\n<div class=\"alert alert-warning\">\r\n  <span>You don't have an account yet?</span>\r\n   <a class=\"alert-link\" (click)=\"register()\">Register a new account</a>\r\n</div>\r\n```","```\r\n<li *ngSwitchCase=\"true\">\r\n  <a class=\"dropdown-item\" routerLink=\"password\" routerLinkActive=\"active\" (click)=\"collapseNavbar()\">\r\n    <fa-icon icon=\"clock\" fixedWidth=\"true\"></fa-icon>\r\n    <span>Password</span>\r\n  </a>\r\n</li>\r\n```","```\r\n<li *ngSwitchCase=\"false\">\r\n  <a class=\"dropdown-item\" routerLink=\"register\" routerLinkActive=\"active\" (click)=\"collapseNavbar()\">\r\n    <fa-icon icon=\"user-plus\" fixedWidth=\"true\"></fa-icon>\r\n    <span>Register</span>\r\n  </a>\r\n</li>\r\n```","```\r\nimport { settingsRoute } from './';\r\nconst ACCOUNT_ROUTES = [settingsRoute];\r\n```","```\r\n.antMatchers(\"/api/register\").denyAll()\r\n.antMatchers(\"/api/activate\").denyAll()\r\n.antMatchers(\"/api/account/reset-password/init\").denyAll()\r\n.antMatchers(\"/api/account/reset-password/finish\").denyAll()\r\n```"]