["```\r\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\r\n```","```\r\n@Component\r\npublic class RestTemplateFactory\r\n  implements FactoryBean<RestTemplate>, InitializingBean {\r\n\r\n    private RestTemplate restTemplate;\r\n\r\n    public RestTemplate getObject() {\r\n        return restTemplate;\r\n    }\r\n    public Class<RestTemplate> getObjectType() {\r\n        return RestTemplate.class;\r\n    }\r\n    public boolean isSingleton() {\r\n        return true;\r\n    }\r\n\r\n    public void afterPropertiesSet() {\r\n        HttpHost host = new HttpHost(\"localhost\", 8082, \"http\");\r\n        restTemplate = new RestTemplate(\r\n          new HttpComponentsClientHttpRequestFactoryBasicAuth(host));\r\n    }\r\n}\r\n```","```\r\nHttpHeaders createHeaders(String username, String password){\r\n   return new HttpHeaders() {{\r\n         String auth = username + \":\" + password;\r\n         byte[] encodedAuth = Base64.encodeBase64( \r\n            auth.getBytes(Charset.forName(\"US-ASCII\")) );\r\n         String authHeader = \"Basic \" + new String( encodedAuth );\r\n         set( \"Authorization\", authHeader );\r\n      }};\r\n}\r\n```","```\r\nrestTemplate.exchange\r\n (uri, HttpMethod.POST, new HttpEntity<T>(createHeaders(username, password)), clazz);\r\n```","```\r\npublic class HttpComponentsClientHttpRequestFactoryBasicAuth \r\n  extends HttpComponentsClientHttpRequestFactory {\r\n\r\n    HttpHost host;\r\n\r\n    public HttpComponentsClientHttpRequestFactoryBasicAuth(HttpHost host) {\r\n        super();\r\n        this.host = host;\r\n    }\r\n\r\n    protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {\r\n        return createHttpContext();\r\n    }\r\n\r\n    private HttpContext createHttpContext() {\r\n        AuthCache authCache = new BasicAuthCache();\r\n\r\n        BasicScheme basicAuth = new BasicScheme();\r\n        authCache.put(host, basicAuth);\r\n\r\n        BasicHttpContext localcontext = new BasicHttpContext();\r\n        localcontext.setAttribute(HttpClientContext.AUTH_CACHE, authCache);\r\n        return localcontext;\r\n    }\r\n}\r\n```","```\r\nrestTemplate.getInterceptors().add(\r\n  new BasicAuthorizationInterceptor(\"username\", \"password\"));\r\n```","```\r\nrestTemplate.exchange(\r\n  \"http://localhost:8082/spring-security-rest-basic-auth/api/foos/1\", \r\n  HttpMethod.GET, null, Foo.class);\r\n```","```\r\n<dependency>\r\n   <groupId>org.springframework</groupId>\r\n   <artifactId>spring-webmvc</artifactId>\r\n   <version>5.0.6.RELEASE</version>\r\n</dependency>\r\n\r\n<dependency>\r\n   <groupId>org.apache.httpcomponents</groupId>\r\n   <artifactId>httpclient</artifactId>\r\n   <version>4.5.3</version>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n   <groupId>commons-codec</groupId>\r\n   <artifactId>commons-codec</artifactId>\r\n   <version>1.10</version>\r\n</dependency>\r\n```"]