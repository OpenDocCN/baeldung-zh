["```\r\npublic ProducerFactory<String, String> producerFactory() {\r\n    Map<String, Object> configProps = new HashMap<>();\r\n    configProps.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, bootstrapAddress);\r\n    configProps.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class);\r\n    configProps.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, StringSerializer.class);\r\n    configProps.put(ProducerConfig.MAX_REQUEST_SIZE_CONFIG, \"20971520\");\r\n\r\n    return new DefaultKafkaProducerFactory<>(configProps);\r\n}\r\n```","```\r\n./kafka-topics.sh --bootstrap-server localhost:9092 --create --topic longMessage --partitions 1 \\\r\n--replication-factor 1 --config max.message.bytes=20971520 \r\n```","```\r\npublic NewTopic topic() {\r\n    NewTopic newTopic = new NewTopic(longMsgTopicName, 1, (short) 1);\r\n    Map<String, String> configs = new HashMap<>();\r\n    configs.put(\"max.message.bytes\", \"20971520\");\r\n    newTopic.configs(configs);\r\n    return newTopic;\r\n}\r\n```","```\r\nmessage.max.bytes=20971520\r\n```","```\r\npublic ConsumerFactory<String, String> consumerFactory(String groupId) {\r\n    Map<String, Object> props = new HashMap<>();\r\n    props.put(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, bootstrapAddress);\r\n    props.put(ConsumerConfig.GROUP_ID_CONFIG, groupId);\r\n    props.put(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class);\r\n    props.put(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class);\r\n    props.put(ConsumerConfig.MAX_PARTITION_FETCH_BYTES_CONFIG, \"20971520\");\r\n    props.put(ConsumerConfig.FETCH_MAX_BYTES_CONFIG, \"20971520\");\r\n    return new DefaultKafkaConsumerFactory<>(props);\r\n}\r\n```"]