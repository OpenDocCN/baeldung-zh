["```\r\npublic static double divideNumbers(double dividend, double divisor) {  \r\n    if (divisor == 0) { \r\n        throw new ArithmeticException(\"Division by zero!\"); \r\n    } \r\n    return dividend / divisor; \r\n}\r\n```","```\r\n@Test\r\nvoid whenDivideNumbers_thenExpectWrongResult() {\r\n    double result = SimpleCalculator.divideNumbers(6, 3);\r\n    assertEquals(15, result);\r\n}\r\n```","```\r\n@Test\r\nvoid whenDivideByZero_thenThrowsException(){\r\n    SimpleCalculator.divideNumbers(10, 0);\r\n} \r\n```","```\r\n@Test\r\nvoid whenDivideByZero_thenAssertException(){\r\n    assertThrows(ArithmeticException.class, () -> SimpleCalculator.divideNumbers(10, 0));\r\n}\r\n```"]