["```\r\n@Test\r\npublic void whenSpyingOnList_thenCorrect() {\r\n    List<String> list = new ArrayList<String>();\r\n    List<String> spyList = Mockito.spy(list);\r\n\r\n    spyList.add(\"one\");\r\n    spyList.add(\"two\");\r\n\r\n    Mockito.verify(spyList).add(\"one\");\r\n    Mockito.verify(spyList).add(\"two\");\r\n\r\n    assertThat(spyList).hasSize(2);\r\n}\r\n```","```\r\n@Spy\r\nList<String> spyList = new ArrayList<String>();\r\n\r\n@Test\r\npublic void whenUsingTheSpyAnnotation_thenObjectIsSpied() {\r\n    spyList.add(\"one\");\r\n    spyList.add(\"two\");\r\n\r\n    Mockito.verify(spyList).add(\"one\");\r\n    Mockito.verify(spyList).add(\"two\");\r\n\r\n    assertThat(aSpyList).hasSize(2);\r\n}\r\n```","```\r\n@Test\r\npublic void whenStubASpy_thenStubbed() {\r\n    List<String> list = new ArrayList<String>();\r\n    List<String> spyList = Mockito.spy(list);\r\n\r\n    assertEquals(0, spyList.size());\r\n\r\n    Mockito.doReturn(100).when(spyList).size();\r\n    assertThat(spyList).hasSize(100);\r\n}\r\n```","```\r\n@Test\r\npublic void whenCreateMock_thenCreated() {\r\n    List mockedList = Mockito.mock(ArrayList.class);\r\n\r\n    mockedList.add(\"one\");\r\n    Mockito.verify(mockedList).add(\"one\");\r\n\r\n    assertThat(mockedList).hasSize(0);\r\n}\r\n```","```\r\n@Test\r\npublic void whenCreateSpy_thenCreate() {\r\n    List spyList = Mockito.spy(new ArrayList());\r\n\r\n    spyList.add(\"one\");\r\n    Mockito.verify(spyList).add(\"one\");\r\n\r\n    assertThat(spyList).hasSize(1);\r\n}\r\n```","```\r\nList<String> list = new ArrayList<String>();\r\nMockito.doReturn(100).when(list).size();\r\n```","```\r\norg.mockito.exceptions.misusing.NotAMockException: \r\nArgument passed to when() is not a mock!\r\nExample of correct stubbing:\r\n    doThrow(new RuntimeException()).when(mock).someMethod(); \r\n```","```\r\nfinal List<String> spyList = Mockito.spy(new ArrayList<>());\r\nassertThatNoException().isThrownBy(() -> Mockito.doReturn(100).when(spyList).size());\r\n```"]