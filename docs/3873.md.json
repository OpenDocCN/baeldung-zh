["```\r\n<dependency>\r\n    <groupId>org.cactoos</groupId>\r\n    <artifactId>cactoos</artifactId>\r\n    <version>0.43</version>\r\n</dependency>\r\n```","```\r\nString testString = new TextOf(\"Test String\").asString();\r\n```","```\r\nString formattedString = new FormattedText(\"Hello %s\", stringToFormat).asString();\r\n```","```\r\nStringMethods obj = new StringMethods();\r\n\r\nString formattedString = obj.createdFormattedString(\"John\");\r\nassertEquals(\"Hello John\", formattedString);\r\n```","```\r\nString lowerCaseString = new Lowered(new TextOf(testString)).asString();\r\n```","```\r\nString upperCaseString = new Upper(new TextOf(testString)).asString();\r\n```","```\r\nStringMethods obj = new StringMethods();\r\n\r\nString lowerCaseString = obj.toLowerCase(\"TeSt StrIng\");\r\nString upperCaseString = obj.toUpperCase(\"TeSt StrIng\"); \r\n\r\nassertEquals(\"test string\", lowerCaseString);\r\nassertEquals(\"TEST STRING\", upperCaseString);\r\n```","```\r\nnew IsBlank(new TextOf(testString)) != null;\r\n```","```\r\nnew And((String input) -> LOGGER.info(new FormattedText(\"%s\\n\", input).asString()), strings).value();\r\n```","```\r\nCollection<String> filteredStrings \r\n  = new ListOf<>(new Filtered<>(string -> string.length() == 5, new IterableOf<>(strings)));\r\n```","```\r\nCollectionUtils obj = new CollectionUtils(); \r\n\r\nList<String> strings = new ArrayList<String>() {\r\n    add(\"Hello\"); \r\n    add(\"John\");\r\n    add(\"Smith\"); \r\n    add(\"Eric\"); \r\n    add(\"Dizzy\"); \r\n};\r\n\r\nint size = obj.getFilteredList(strings).size(); \r\n\r\nassertEquals(3, size);\r\n```"]