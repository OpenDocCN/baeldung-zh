["```\r\npublic static <T> T[] unsafe(T... elements) {\r\n    return elements; // unsafe! don't ever return a parameterized varargs array\r\n}\r\n\r\npublic static <T> T[] broken(T seed) {\r\n    T[] plant = unsafe(seed, seed, seed); // broken! This will be an Object[] no matter what T is\r\n    return plant;\r\n}\r\n\r\npublic static void plant() {\r\n   String[] plants = broken(\"seed\"); // ClassCastException\r\n}\r\n```","```\r\nwarning: [unchecked] Possible heap pollution from parameterized vararg type T\r\n  public static <T> T[] unsafe(T... elements) {\r\n```","```\r\npublic class Machine<T> {\r\n    private List<T> versions = new ArrayList<>();\r\n\r\n    @SafeVarargs\r\n    public final void safe(T... toAdd) {\r\n        for (T version : toAdd) {\r\n            versions.add(version);\r\n        }\r\n    }\r\n}\r\n```"]