["```\r\n@Entity\r\npublic class User {\r\n    private static Log log = LogFactory.getLog(User.class);\r\n\r\n    @Id\r\n    @GeneratedValue\r\n    private int id;\r\n\r\n    private String userName;\r\n    private String firstName;\r\n    private String lastName;\r\n    @Transient\r\n    private String fullName;\r\n\r\n    // Standard getters/setters\r\n}\r\n```","```\r\npublic interface UserRepository extends JpaRepository<User, Integer> {\r\n    public User findByUserName(String userName);\r\n}\r\n```","```\r\n@PrePersist\r\npublic void logNewUserAttempt() {\r\n    log.info(\"Attempting to add new user with username: \" + userName);\r\n}\r\n\r\n@PostPersist\r\npublic void logNewUserAdded() {\r\n    log.info(\"Added user '\" + userName + \"' with ID: \" + id);\r\n}\r\n\r\n@PreRemove\r\npublic void logUserRemovalAttempt() {\r\n    log.info(\"Attempting to delete user: \" + userName);\r\n}\r\n\r\n@PostRemove\r\npublic void logUserRemoval() {\r\n    log.info(\"Deleted user: \" + userName);\r\n}\r\n\r\n@PreUpdate\r\npublic void logUserUpdateAttempt() {\r\n    log.info(\"Attempting to update user: \" + userName);\r\n}\r\n\r\n@PostUpdate\r\npublic void logUserUpdate() {\r\n    log.info(\"Updated user: \" + userName);\r\n}\r\n\r\n@PostLoad\r\npublic void logUserLoad() {\r\n    fullName = firstName + \" \" + lastName;\r\n}\r\n```","```\r\npublic class AuditTrailListener {\r\n    private static Log log = LogFactory.getLog(AuditTrailListener.class);\r\n\r\n    @PrePersist\r\n    @PreUpdate\r\n    @PreRemove\r\n    private void beforeAnyUpdate(User user) {\r\n        if (user.getId() == 0) {\r\n            log.info(\"[USER AUDIT] About to add a user\");\r\n        } else {\r\n            log.info(\"[USER AUDIT] About to update/delete user: \" + user.getId());\r\n        }\r\n    }\r\n\r\n    @PostPersist\r\n    @PostUpdate\r\n    @PostRemove\r\n    private void afterAnyUpdate(User user) {\r\n        log.info(\"[USER AUDIT] add/update/delete complete for user: \" + user.getId());\r\n    }\r\n\r\n    @PostLoad\r\n    private void afterLoad(User user) {\r\n        log.info(\"[USER AUDIT] user loaded from database: \" + user.getId());\r\n    }\r\n}\r\n```","```\r\n@EntityListeners(AuditTrailListener.class)\r\n@Entity\r\npublic class User {\r\n    //...\r\n}\r\n```"]