["```\r\n@BenchmarkMode(Mode.AverageTime)\r\n@OutputTimeUnit(TimeUnit.MICROSECONDS)\r\n@Warmup(iterations = 10)\r\npublic class ArrayListBenchmark {\r\n}\r\n```","```\r\n@State(Scope.Thread)\r\npublic static class MyState {\r\n\r\n    List<Employee> employeeList = new ArrayList<>();\r\n\r\n    long iterations = 100000;\r\n\r\n    Employee employee = new Employee(100L, \"Harry\");\r\n\r\n    int employeeIndex = -1;\r\n\r\n    @Setup(Level.Trial)\r\n    public void setUp() {\r\n        for (long i = 0; i < iterations; i++) {\r\n            employeeList.add(new Employee(i, \"John\"));\r\n        }\r\n\r\n        employeeList.add(employee);\r\n        employeeIndex = employeeList.indexOf(employee);\r\n    }\r\n}\r\n```","```\r\n@Benchmark\r\npublic void testAdd(ArrayListBenchmark.MyState state) {\r\n    state.employeeList.add(new Employee(state.iterations + 1, \"John\"));\r\n}\r\n\r\n@Benchmark\r\npublic void testAddAt(ArrayListBenchmark.MyState state) {\r\n    state.employeeList.add((int) (state.iterations), new Employee(state.iterations, \"John\"));\r\n}\r\n\r\n@Benchmark\r\npublic boolean testContains(ArrayListBenchmark.MyState state) {\r\n    return state.employeeList.contains(state.employee);\r\n}\r\n\r\n@Benchmark\r\npublic int testIndexOf(ArrayListBenchmark.MyState state) {\r\n    return state.employeeList.indexOf(state.employee);\r\n}\r\n\r\n@Benchmark\r\npublic Employee testGet(ArrayListBenchmark.MyState state) {\r\n    return state.employeeList.get(state.employeeIndex);\r\n}\r\n\r\n@Benchmark\r\npublic boolean testRemove(ArrayListBenchmark.MyState state) {\r\n    return state.employeeList.remove(state.employee);\r\n}\r\n```","```\r\nBenchmark                        Mode  Cnt     Score     Error\r\nArrayListBenchmark.testAdd       avgt   20     2.296 ±   0.007\r\nArrayListBenchmark.testAddAt     avgt   20   101.092 ±  14.145\r\nArrayListBenchmark.testContains  avgt   20   709.404 ±  64.331\r\nArrayListBenchmark.testGet       avgt   20     0.007 ±   0.001\r\nArrayListBenchmark.testIndexOf   avgt   20   717.158 ±  58.782\r\nArrayListBenchmark.testRemove    avgt   20   624.856 ±  51.101\r\n```","```\r\nBenchmark                          Mode  Cnt    Score     Error\r\nCopyOnWriteBenchmark.testAdd       avgt   20  652.189 ±  36.641\r\nCopyOnWriteBenchmark.testAddAt     avgt   20  897.258 ±  35.363\r\nCopyOnWriteBenchmark.testContains  avgt   20  537.098 ±  54.235\r\nCopyOnWriteBenchmark.testGet       avgt   20    0.006 ±   0.001\r\nCopyOnWriteBenchmark.testIndexOf   avgt   20  547.207 ±  48.904\r\nCopyOnWriteBenchmark.testRemove    avgt   20  648.162 ± 138.379\r\n```","```\r\nBenchmark        Cnt     Score       Error\r\ntestAdd          20     2.580        ± 0.003\r\ntestContains     20     1808.102     ± 68.155\r\ntestGet          20     1561.831     ± 70.876 \r\ntestRemove       20     0.006        ± 0.001\r\n```","```\r\nBenchmark                         Mode  Cnt  Score   Error\r\nHashMapBenchmark.testContainsKey  avgt   20  0.009 ± 0.002\r\nHashMapBenchmark.testGet          avgt   20  0.011 ± 0.001\r\nHashMapBenchmark.testPut          avgt   20  0.019 ± 0.002\r\nHashMapBenchmark.testRemove       avgt   20  0.010 ± 0.001\r\n```","```\r\nBenchmark      LinkedHashMap  IdentityHashMap  WeakHashMap  ConcurrentHashMap\r\ntestContainsKey    0.008         0.009          0.014          0.011\r\ntestGet            0.011         0.109          0.019          0.012\r\ntestPut            0.020         0.013          0.020          0.031\r\ntestRemove         0.011         0.115          0.021          0.019\r\n```","```\r\nitems count (n)         1000      10,000     100,000   1,000,000\r\nall tests total score   00:03:17  00:03:17   00:03:30  00:05:27 \r\n```","```\r\n@Benchmark\r\npublic boolean testAdd(SetBenchMark.MyState state) {\r\n    return state.employeeSet.add(state.employee);\r\n}\r\n\r\n@Benchmark\r\npublic Boolean testContains(SetBenchMark.MyState state) {\r\n    return state.employeeSet.contains(state.employee);\r\n}\r\n\r\n@Benchmark\r\npublic boolean testRemove(SetBenchMark.MyState state) {\r\n    return state.employeeSet.remove(state.employee);\r\n}\r\n```","```\r\nBenchmark      1000    10,000    100,000\r\n.add()         0.026   0.023     0.024\r\n.remove()      0.009   0.009     0.009\r\n.contains()    0.009   0.009     0.010\r\n```","```\r\nBenchmark      1000    10,000    100,000\r\n.add()         0.022   0.026     0.027\r\n.remove()      0.008   0.012     0.009\r\n.contains()    0.008   0.013     0.009\r\n```"]