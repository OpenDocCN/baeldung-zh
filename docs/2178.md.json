["```\r\n<dependency>\r\n    <groupId>org.springframework.ws</groupId>\r\n    <artifactId>spring-ws-test</artifactId>\r\n    <version>3.1.3</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n```","```\r\n@Endpoint\r\npublic class ProductEndpoint {\r\n\r\n    @Autowired\r\n    private ProductRepository productRepository;\r\n\r\n    @ResponsePayload\r\n    public GetProductResponse getProduct(@RequestPayload GetProductRequest request) {\r\n        GetProductResponse response = new GetProductResponse();\r\n        response.setProduct(productRepository.findProduct(request.getId()));\r\n        return response;\r\n    }\r\n}\r\n```","```\r\n@WebServiceServerTest\r\nclass ProductEndpointIntegrationTest {\r\n\r\n    @Autowired\r\n    private MockWebServiceClient client;\r\n\r\n    @MockBean\r\n    private ProductRepository productRepository;\r\n\r\n    @Test\r\n    void givenXmlRequest_whenServiceInvoked_thenValidResponse() throws IOException {\r\n        Product product = createProduct();\r\n        when(productRepository.findProduct(\"1\")).thenReturn(product);\r\n\r\n        StringSource request = new StringSource(\r\n          \"<bd:getProductRequest xmlns:bd='http://baeldung.com/spring-boot-web-service'>\" + \r\n            \"<bd:id>1</bd:id>\" + \r\n          \"</bd:getProductRequest>\"\r\n        );\r\n\r\n        StringSource expectedResponse = new StringSource(\r\n          \"<bd:getProductResponse xmlns:bd='http://baeldung.com/spring-boot-web-service'>\" + \r\n            \"<bd:product>\" + \r\n              \"<bd:id>1</bd:id>\" + \r\n              \"<bd:name>Product 1</bd:name>\" + \r\n            \"</bd:product>\" + \r\n          \"</bd:getProductResponse>\"\r\n        );\r\n\r\n        client.sendRequest(withPayload(request))\r\n          .andExpect(noFault())\r\n          .andExpect(validPayload(new ClassPathResource(\"webservice/products.xsd\")))\r\n          .andExpect(payload(expectedResponse))\r\n          .andExpect(xpath(\"/bd:getProductResponse/bd:product[1]/bd:name\", NAMESPACE_MAPPING)\r\n            .evaluatesTo(\"Product 1\"));\r\n    }\r\n}\r\n```"]