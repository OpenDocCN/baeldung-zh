["```\r\nmvn install spring-boot:run\r\n```","```\r\n<dependency>\r\n    <groupId>io.github.openfeign</groupId>\r\n    <artifactId>feign-okhttp</artifactId>\r\n    <version>10.11</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>io.github.openfeign</groupId>\r\n    <artifactId>feign-gson</artifactId>\r\n    <version>10.11</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>io.github.openfeign</groupId>\r\n    <artifactId>feign-slf4j</artifactId>\r\n    <version>10.11</version>\r\n</dependency>\r\n```","```\r\npublic class Book {\r\n    private String isbn;\r\n    private String author;\r\n    private String title;\r\n    private String synopsis;\r\n    private String language;\r\n\r\n    // standard constructor, getters and setters\r\n}\r\n```","```\r\npublic class BookResource {\r\n    private Book book;\r\n\r\n    // standard constructor, getters and setters\r\n}\r\n```","```\r\ncurl http://localhost:8081/api/books\r\n```","```\r\n[\r\n  {\r\n    \"book\": {\r\n      \"isbn\": \"1447264533\",\r\n      \"author\": \"Margaret Mitchell\",\r\n      \"title\": \"Gone with the Wind\",\r\n      \"synopsis\": null,\r\n      \"language\": null\r\n    },\r\n    \"links\": [\r\n      {\r\n        \"rel\": \"self\",\r\n        \"href\": \"http://localhost:8081/api/books/1447264533\"\r\n      }\r\n    ]\r\n  },\r\n\r\n  ...\r\n\r\n  {\r\n    \"book\": {\r\n      \"isbn\": \"0451524934\",\r\n      \"author\": \"George Orwell\",\r\n      \"title\": \"1984\",\r\n      \"synopsis\": null,\r\n      \"language\": null\r\n    },\r\n    \"links\": [\r\n      {\r\n        \"rel\": \"self\",\r\n        \"href\": \"http://localhost:8081/api/books/0451524934\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n```","```\r\ncurl http://localhost:8081/api/books/1447264533\r\n```","```\r\npublic interface BookClient {\r\n    @RequestLine(\"GET /{isbn}\")\r\n    BookResource findByIsbn(@Param(\"isbn\") String isbn);\r\n\r\n    @RequestLine(\"GET\")\r\n    List<BookResource> findAll();\r\n\r\n    @RequestLine(\"POST\")\r\n    @Headers(\"Content-Type: application/json\")\r\n    void create(Book book);\r\n}\r\n```","```\r\nBookClient bookClient = Feign.builder()\r\n  .client(new OkHttpClient())\r\n  .encoder(new GsonEncoder())\r\n  .decoder(new GsonDecoder())\r\n  .logger(new Slf4jLogger(BookClient.class))\r\n  .logLevel(Logger.Level.FULL)\r\n  .target(BookClient.class, \"http://localhost:8081/api/books\");\r\n```","```\r\n@Test\r\npublic void givenBookClient_shouldRunSuccessfully() throws Exception {\r\n   List<Book> books = bookClient.findAll().stream()\r\n     .map(BookResource::getBook)\r\n     .collect(Collectors.toList());\r\n\r\n   assertTrue(books.size() > 2);\r\n}\r\n\r\n@Test\r\npublic void givenBookClient_shouldFindOneBook() throws Exception {\r\n    Book book = bookClient.findByIsbn(\"0151072558\").getBook();\r\n    assertThat(book.getAuthor(), containsString(\"Orwell\"));\r\n}\r\n\r\n@Test\r\npublic void givenBookClient_shouldPostBook() throws Exception {\r\n    String isbn = UUID.randomUUID().toString();\r\n    Book book = new Book(isbn, \"Me\", \"It's me!\", null, null);\r\n    bookClient.create(book);\r\n    book = bookClient.findByIsbn(isbn).getBook();\r\n\r\n    assertThat(book.getAuthor(), is(\"Me\"));\r\n} \r\n```","```\r\nBookClient bookClient = Feign.builder()\r\n  .client(RibbonClient.create())\r\n  .target(BookClient.class, \"http://localhost:8081/api/books\");\r\n```"]