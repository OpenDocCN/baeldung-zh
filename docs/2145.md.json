["```\r\n<dependency>\r\n    <groupId>org.springframework.cloud</groupId>\r\n    <artifactId>spring-cloud-starter-consul-all</artifactId>\r\n    <version>3.1.1</version>\r\n</dependency>\r\n```","```\r\n@SpringBootApplication\r\npublic class ServiceDiscoveryApplication {\r\n\r\n    public static void main(String[] args) {\r\n        new SpringApplicationBuilder(ServiceDiscoveryApplication.class)\r\n          .web(true).run(args);\r\n    }\r\n}\r\n```","```\r\nspring:\r\n  cloud:\r\n    consul:\r\n      host: localhost\r\n      port: 8500\r\n```","```\r\nspring:\r\n  application:\r\n    name: myApp\r\n  cloud:\r\n    consul:\r\n      discovery:\r\n        instanceId: ${spring.application.name}:${random.value}\r\n```","```\r\n@SpringBootApplication\r\n@EnableDiscoveryClient\r\npublic class DiscoveryClientApplication {\r\n    // ...\r\n}\r\n```","```\r\n@RestController\r\npublic class DiscoveryClientController {\r\n\r\n    @Autowired\r\n    private DiscoveryClient discoveryClient;\r\n\r\n    public Optional<URI> serviceUrl() {\r\n        return discoveryClient.getInstances(\"myApp\")\r\n          .stream()\r\n          .findFirst() \r\n          .map(si -> si.getUri());\r\n    }\r\n}\r\n```","```\r\n@GetMapping(\"/discoveryClient\")\r\npublic String discoveryPing() throws RestClientException, \r\n  ServiceUnavailableException {\r\n    URI service = serviceUrl()\r\n      .map(s -> s.resolve(\"/ping\"))\r\n      .orElseThrow(ServiceUnavailableException::new);\r\n    return restTemplate.getForEntity(service, String.class)\r\n      .getBody();\r\n}\r\n\r\n@GetMapping(\"/ping\")\r\npublic String ping() {\r\n    return \"pong\";\r\n}\r\n```","```\r\nspring:\r\n  cloud:\r\n    consul:\r\n      discovery:\r\n        healthCheckPath: /my-health-check\r\n        healthCheckInterval: 20s\r\n```","```\r\n@GetMapping(\"/my-health-check\")\r\npublic ResponseEntity<String> myCustomCheck() {\r\n    String message = \"Testing my healh check function\";\r\n    return new ResponseEntity<>(message, HttpStatus.FORBIDDEN);\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.cloud</groupId>\r\n    <artifactId>spring-cloud-starter-consul-config</artifactId>\r\n    <version>3.1.1</version>\r\n</dependency>\r\n```","```\r\nspring:\r\n  application:\r\n    name: myApp\r\n  cloud:\r\n    consul:\r\n      host: localhost\r\n      port: 8500\r\n      config:\r\n        enabled: true\r\n```","```\r\n@RestController\r\npublic class DistributedPropertiesController {\r\n\r\n    @Value(\"${my.prop}\")\r\n    String value;\r\n\r\n    @Autowired\r\n    private MyProperties properties;\r\n\r\n    @GetMapping(\"/getConfigFromValue\")\r\n    public String getConfigFromValue() {\r\n        return value;\r\n    }\r\n\r\n    @GetMapping(\"/getConfigFromProperty\")\r\n    public String getConfigFromProperty() {\r\n        return properties.getProp();\r\n    }\r\n}\r\n```","```\r\n@RefreshScope\r\n@Configuration\r\n@ConfigurationProperties(\"my\")\r\npublic class MyProperties {\r\n    private String prop;\r\n\r\n    // standard getter, setter\r\n}\r\n```"]