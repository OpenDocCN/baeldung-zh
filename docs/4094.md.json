["```\r\npublic class MyDtoNoAccessors {\r\n    String stringValue;\r\n    int intValue;\r\n    boolean booleanValue;\r\n\r\n    public MyDtoNoAccessors() {\r\n        super();\r\n    }\r\n\r\n    // no getters\r\n}\r\n```","```\r\n@Test(expected = JsonMappingException.class)\r\npublic void givenObjectHasNoAccessors_whenSerializing_thenException() \r\n  throws JsonParseException, IOException {\r\n    String dtoAsString = new ObjectMapper().writeValueAsString(new MyDtoNoAccessors());\r\n\r\n    assertThat(dtoAsString, notNullValue());\r\n}\r\n```","```\r\ncom.fasterxml.jackson.databind.JsonMappingException: \r\nNo serializer found for class dtos.MyDtoNoAccessors \r\nand no properties discovered to create BeanSerializer \r\n(to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) )\r\n```","```\r\nobjectMapper.setVisibility(PropertyAccessor.FIELD, Visibility.ANY);\r\n```","```\r\n@Test\r\npublic void givenObjectHasNoAccessors_whenSerializingWithAllFieldsDetected_thenNoException() \r\n  throws JsonParseException, IOException {\r\n    ObjectMapper objectMapper = new ObjectMapper();\r\n    objectMapper.setVisibility(PropertyAccessor.FIELD, Visibility.ANY);\r\n    String dtoAsString = objectMapper.writeValueAsString(new MyDtoNoAccessors());\r\n\r\n    assertThat(dtoAsString, containsString(\"intValue\"));\r\n    assertThat(dtoAsString, containsString(\"stringValue\"));\r\n    assertThat(dtoAsString, containsString(\"booleanValue\"));\r\n}\r\n```","```\r\n@JsonAutoDetect(fieldVisibility = Visibility.ANY)\r\npublic class MyDtoNoAccessors { ... }\r\n```","```\r\n@Test\r\npublic void givenObjectHasNoAccessorsButHasVisibleFields_whenSerializing_thenNoException() \r\n  throws JsonParseException, IOException {\r\n    ObjectMapper objectMapper = new ObjectMapper();\r\n    String dtoAsString = objectMapper.writeValueAsString(new MyDtoNoAccessors());\r\n\r\n    assertThat(dtoAsString, containsString(\"intValue\"));\r\n    assertThat(dtoAsString, containsString(\"stringValue\"));\r\n    assertThat(dtoAsString, containsString(\"booleanValue\"));\r\n}\r\n```"]