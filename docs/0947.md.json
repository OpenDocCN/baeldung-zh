["```\r\n<dependency>\r\n   <groupId>org.jclouds</groupId>\r\n   <artifactId>jclouds-allblobstore</artifactId>\r\n   <version>1.5.10</version>\r\n</dependency>\r\n```","```\r\nBlobStoreContext context = \r\n  ContextBuilder.newBuilder(\"aws-s3\").credentials(identity, credentials)\r\n    .buildView(BlobStoreContext.class);\r\n```","```\r\nBlobStoreContext context = \r\n  ContextBuilder.newBuilder(\"aws-s3\").credentials(identity, credentials)\r\n    .buildView(S3BlobStoreContext.class);\r\n```","```\r\nBlobStoreContext context = \r\n  ContextBuilder.newBuilder(\"aws-s3\").credentials(identity, credentials)\r\n    .buildView(AWSS3BlobStoreContext.class);\r\n```","```\r\nInputStreamMap bucket = context.createInputStreamMap(\"bucketName\");\r\n```","```\r\nbucket.putString(\"index1.html\", \"<html><body>hello world1</body></html>\");\r\n```","```\r\n@Test\r\npublic void whenFileIsUploadedToS3WithMapApi_thenNoExceptions() {\r\n   BlobStoreContext context = \r\n      ContextBuilder.newBuilder(\"aws-s3\").credentials(identity, credentials)\r\n         .buildView(AWSS3BlobStoreContext.class);\r\n\r\n   InputStreamMap bucket = context.createInputStreamMap(\"bucketName\");  \r\n\r\n   bucket.putString(\"index1.html\", \"<html><body>hello world1</body></html>\");\r\n   context.close();\r\n}\r\n```","```\r\nBlobMap bucket = context.createBlobMap(\"bucketName\");\r\n```","```\r\nBlob blob = bucket.blobBuilder().name(\"index2.html\").\r\n   payload(\"<html><body>hello world2</body></html>\").\r\n      contentType(\"text/html\").calculateMD5().build();\r\n```","```\r\n@Test\r\npublic void whenFileIsUploadedToS3WithBlobMap_thenNoExceptions() throws IOException {\r\n   BlobStoreContext context = \r\n      ContextBuilder.newBuilder(\"aws-s3\").credentials(identity, credentials)\r\n         .buildView(AWSS3BlobStoreContext.class);\r\n\r\n   BlobMap bucket = context.createBlobMap(\"bucketName\");\r\n\r\n   Blob blob = bucket.blobBuilder().name(\"index2.html\").\r\n      payload(\"<html><body>hello world2</body></html>\").\r\n         contentType(\"text/html\").calculateMD5().build();\r\n   bucket.put(blob.getMetadata().getName(), blob);\r\n\r\n   context.close();\r\n}\r\n```","```\r\nBlobStore blobStore = context.getBlobStore();\r\n```","```\r\nBlob blob = blobStore.blobBuilder(\"index3.html\").\r\n   payload(\"<html><body>hello world3</body></html>\").contentType(\"text/html\").build();\r\nblobStore.putBlob(\"bucketName\", blob, PutOptions.Builder.multipart());\r\n```","```\r\n@Test\r\npublic void whenFileIsUploadedToS3WithBlobStore_thenNoExceptions() {\r\n   BlobStoreContext context = \r\n      ContextBuilder.newBuilder(\"aws-s3\").credentials(identity, credentials)\r\n         .buildView(AWSS3BlobStoreContext.class);\r\n\r\n   BlobStore blobStore = context.getBlobStore();\r\n\r\n   Blob blob = blobStore.blobBuilder(\"index3.html\").\r\n      payload(\"<html><body>hello world3</body></html>\").contentType(\"text/html\").build();\r\n   blobStore.putBlob(\"bucketName\", blob, PutOptions.Builder.multipart());\r\n   context.close();\r\n}\r\n```","```\r\nAsyncBlobStore blobStore = context.getAsyncBlobStore();\r\n```","```\r\nBlob blob = blobStore.blobBuilder(\"index4.html\").\r\n   .payload(\"<html><body>hello world4</body></html>\").build();\r\nblobStore.putBlob(\"bucketName\", blob)<strong>.get()</strong>;\r\n```","```\r\n@Test\r\npublic void whenFileIsUploadedToS3WithBlobStore_thenNoExceptions() {\r\n   BlobStoreContext context = \r\n      ContextBuilder.newBuilder(\"aws-s3\").credentials(identity, credentials)\r\n         .buildView(AWSS3BlobStoreContext.class);\r\n\r\n   BlobStore blobStore = context.getBlobStore();\r\n\r\n   Blob blob = blobStore.blobBuilder(\"index4.html\").\r\n      payload(\"<html><body>hello world4</body></html>\").contentType(\"text/html\").build();\r\n   Future<String> putOp = blobStore.putBlob(\"bucketName\", blob, PutOptions.Builder.multipart());\r\n   putOp.get();\r\n   context.close();\r\n}\r\n```"]