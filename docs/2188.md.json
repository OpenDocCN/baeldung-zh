["```\r\n<dependency>\r\n    <groupId>com.structurizr</groupId>\r\n    <artifactId>structurizr-core</artifactId>\r\n    <version>1.0.0</version>\r\n</dependency>\r\n```","```\r\nWorkspace workspace = new Workspace(\"Payment Gateway\", \"Payment Gateway\");\r\nModel model = workspace.getModel();\r\n```","```\r\nPerson user = model.addPerson(\"Merchant\", \"Merchant\");\r\nSoftwareSystem paymentTerminal = model.addSoftwareSystem(\r\n  \"Payment Terminal\", \"Payment Terminal\");\r\nuser.uses(paymentTerminal, \"Makes payment\");\r\nSoftwareSystem fraudDetector = model.addSoftwareSystem(\r\n  \"Fraud Detector\", \"Fraud Detector\");\r\npaymentTerminal.uses(fraudDetector, \"Obtains fraud score\"); \r\n```","```\r\nViewSet viewSet = workspace.getViews();\r\n\r\nSystemContextView contextView = viewSet.createSystemContextView(\r\n  paymentTerminal, \"context\", \"Payment Gateway Diagram\");\r\ncontextView.addAllSoftwareSystems();\r\ncontextView.addAllPeople();\r\n```","```\r\nStringWriter stringWriter = new StringWriter();\r\nPlantUMLWriter plantUMLWriter = new PlantUMLWriter();\r\nplantUMLWriter.write(workspace, stringWriter);\r\nSystem.out.println(stringWriter.toString());\r\n```","```\r\nStructurizrClient client = new StructurizrClient(\"key\", \"secret\");\r\n```","```\r\nclient.putWorkspace(1337, workspace);\r\n```","```\r\nContainer f5 = paymentTerminal.addContainer(\r\n  \"Payment Load Balancer\", \"Payment Load Balancer\", \"F5\");\r\nContainer jvm1 = paymentTerminal.addContainer(\r\n  \"JVM-1\", \"JVM-1\", \"Java Virtual Machine\");\r\nContainer jvm2 = paymentTerminal.addContainer(\r\n  \"JVM-2\", \"JVM-2\", \"Java Virtual Machine\");\r\nContainer jvm3 = paymentTerminal.addContainer(\r\n  \"JVM-3\", \"JVM-3\", \"Java Virtual Machine\");\r\nContainer oracle = paymentTerminal.addContainer(\r\n  \"oracleDB\", \"Oracle Database\", \"RDBMS\");\r\n```","```\r\nf5.uses(jvm1, \"route\");\r\nf5.uses(jvm2, \"route\");\r\nf5.uses(jvm3, \"route\");\r\n\r\njvm1.uses(oracle, \"storage\");\r\njvm2.uses(oracle, \"storage\");\r\njvm3.uses(oracle, \"storage\");\r\n```","```\r\nContainerView view = workspace.getViews()\r\n  .createContainerView(paymentTerminal, \"F5\", \"Container View\");\r\nview.addAllContainers();\r\n```","```\r\nComponent jaxrs = jvm1.addComponent(\"jaxrs-jersey\", \r\n  \"restful webservice implementation\", \"rest\");\r\nComponent gemfire = jvm1.addComponent(\"gemfire\", \r\n  \"Clustered Cache Gemfire\", \"cache\");\r\nComponent hibernate = jvm1.addComponent(\"hibernate\", \r\n  \"Data Access Layer\", \"jpa\");\r\n```","```\r\njaxrs.uses(gemfire, \"\");\r\ngemfire.uses(hibernate, \"\");\r\n```","```\r\nComponentView componentView = workspace.getViews()\r\n  .createComponentView(jvm1, JVM_COMPOSITION, \"JVM Components\");\r\n\r\ncomponentView.addAllComponents();\r\n```","```\r\n<dependency>\r\n    <groupId>com.structurizr</groupId>\r\n    <artifactId>structurizr-spring</artifactId>\r\n    <version>1.0.0-RC5</version>\r\n</dependency>\r\n```","```\r\nComponentFinder componentFinder = new ComponentFinder(\r\n  jvm, \"com.baeldung.structurizr\",\r\n  new SpringComponentFinderStrategy(\r\n    new ReferencedTypesSupportingTypesStrategy()\r\n  ),\r\n  new SourceCodeComponentFinderStrategy(new File(\"/path/to/base\"), 150));\r\n```","```\r\ncomponentFinder.findComponents();\r\n```"]