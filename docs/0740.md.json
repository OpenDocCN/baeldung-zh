["```\r\ndelete from table_product where id=1\r\n```","```\r\nupdate from table_product set deleted=1 where id=1\r\n```","```\r\nselect * from table_product where deleted=0\r\n```","```\r\n@Entity\r\n@Table(name = \"table_product\")\r\npublic class Product {\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n    private Long id;\r\n\r\n    private String name;\r\n\r\n    private double price;\r\n\r\n    private boolean deleted = Boolean.FALSE;\r\n\r\n    // setter getter methods\r\n}\r\n```","```\r\n@Entity\r\n@Table(name = \"table_product\")\r\n@SQLDelete(sql = \"UPDATE table_product SET deleted = true WHERE id=?\")\r\n@Where(clause = \"deleted=false\")\r\npublic class Product {\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n    private Long id;\r\n\r\n    private String name;\r\n\r\n    private double price;\r\n\r\n    private boolean deleted = Boolean.FALSE;\r\n\r\n    // setter getter method\r\n}\r\n```","```\r\npublic interface ProductRepository extends CrudRepository<Product, Long>{\r\n\r\n}\r\n```","```\r\n@Service\r\npublic class ProductService {\r\n\r\n    @Autowired\r\n    private ProductRepository productRepository;\r\n\r\n    public Product create(Product product) {\r\n        return productRepository.save(product);\r\n    }\r\n\r\n    public void remove(Long id){\r\n        productRepository.deleteById(id);\r\n    }\r\n\r\n    public Iterable<Product> findAll(){\r\n        return productRepository.findAll();\r\n    }\r\n}\r\n```","```\r\n@Entity\r\n@Table(name = \"tbl_products\")\r\n@SQLDelete(sql = \"UPDATE tbl_products SET deleted = true WHERE id=?\")\r\n@FilterDef(name = \"deletedProductFilter\", parameters = @ParamDef(name = \"isDeleted\", type = \"boolean\"))\r\n@Filter(name = \"deletedProductFilter\", condition = \"deleted = :isDeleted\")\r\npublic class Product {\r\n\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n    private Long id;\r\n\r\n    private String name;\r\n\r\n    private double price;\r\n\r\n    private boolean deleted = Boolean.FALSE;\r\n}\r\n```","```\r\n@Service\r\npublic class ProductService {\r\n\r\n    @Autowired\r\n    private ProductRepository productRepository;\r\n\r\n    @Autowired\r\n    private EntityManager entityManager;\r\n\r\n    public Product create(Product product) {\r\n        return productRepository.save(product);\r\n    }\r\n\r\n    public void remove(Long id){\r\n        productRepository.deleteById(id);\r\n    }\r\n\r\n    public Iterable<Product> findAll(boolean isDeleted){\r\n        Session session = entityManager.unwrap(Session.class);\r\n        Filter filter = session.enableFilter(\"deletedProductFilter\");\r\n        filter.setParameter(\"isDeleted\", isDeleted);\r\n        Iterable<Product> products =  productRepository.findAll();\r\n        session.disableFilter(\"deletedProductFilter\");\r\n        return products;\r\n    }\r\n}\r\n```"]