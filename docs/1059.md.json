["```\r\n@Bean\r\npublic QueueMessagingTemplate queueMessagingTemplate(\r\n  AmazonSQSAsync amazonSQSAsync) {\r\n    return new QueueMessagingTemplate(amazonSQSAsync);\r\n}\r\n```","```\r\n@Autowired\r\nQueueMessagingTemplate messagingTemplate;\r\n\r\npublic void send(String topicName, Object message) {\r\n    messagingTemplate.convertAndSend(topicName, message);\r\n}\r\n```","```\r\n@SqsListener(\"spring-cloud-test-queue\")\r\npublic void receiveMessage(String message, \r\n  @Header(\"SenderId\") String senderId) {\r\n    // ...\r\n}\r\n```","```\r\n@Bean\r\npublic NotificationMessagingTemplate notificationMessagingTemplate(\r\n  AmazonSNS amazonSNS) {\r\n    return new NotificationMessagingTemplate(amazonSNS);\r\n}\r\n```","```\r\n@Autowired\r\nNotificationMessagingTemplate messagingTemplate;\r\n\r\npublic void send(String Object message, String subject) {\r\n    messagingTemplate\r\n      .sendNotification(\"spring-cloud-test-topic\", message, subject);\r\n}\r\n```","```\r\n@Controller\r\n@RequestMapping(\"/topic-subscriber\")\r\npublic class SNSEndpointController {\r\n\r\n    @NotificationSubscriptionMapping\r\n    public void confirmUnsubscribeMessage(\r\n      NotificationStatus notificationStatus) {\r\n        notificationStatus.confirmSubscription();\r\n    }\r\n\r\n    @NotificationMessageMapping\r\n    public void receiveNotification(@NotificationMessage String message, \r\n      @NotificationSubject String subject) {\r\n        // handle message\r\n    }\r\n\r\n    @NotificationUnsubscribeConfirmationMapping\r\n    public void confirmSubscriptionMessage(\r\n      NotificationStatus notificationStatus) {\r\n        notificationStatus.confirmSubscription();\r\n    }\r\n}\r\n```","```\r\nhttps://host:port/topic-subscriber/\r\n```"]