["```\r\n<dependency>\r\n    <groupId>com.fasterxml.jackson.core</groupId>\r\n    <artifactId>jackson-core</artifactId>\r\n    <version>2.11.1</version>\r\n</dependency>\r\n```","```\r\nByteArrayOutputStream stream = new ByteArrayOutputStream();\r\nJsonFactory jfactory = new JsonFactory();\r\nJsonGenerator jGenerator = jfactory\r\n  .createGenerator(stream, JsonEncoding.UTF8);\r\n```","```\r\n{  \r\n   \"name\":\"Tom\",\r\n   \"age\":25,\r\n   \"address\":[  \r\n      \"Poland\",\r\n      \"5th avenue\"\r\n   ]\r\n}\r\n```","```\r\njGenerator.writeStartObject();\r\njGenerator.writeStringField(\"name\", \"Tom\");\r\njGenerator.writeNumberField(\"age\", 25);\r\njGenerator.writeFieldName(\"address\");\r\njGenerator.writeStartArray();\r\njGenerator.writeString(\"Poland\");\r\njGenerator.writeString(\"5th avenue\");\r\njGenerator.writeEndArray();\r\njGenerator.writeEndObject();\r\njGenerator.close();\r\n```","```\r\nString json = new String(stream.toByteArray(), \"UTF-8\");\r\nassertEquals(\r\n  json, \r\n  \"{\\\"name\\\":\\\"Tom\\\",\\\"age\\\":25,\\\"address\\\":[\\\"Poland\\\",\\\"5th avenue\\\"]}\");\r\n```","```\r\nString json\r\n  = \"{\\\"name\\\":\\\"Tom\\\",\\\"age\\\":25,\\\"address\\\":[\\\"Poland\\\",\\\"5th avenue\\\"]}\";\r\nJsonFactory jfactory = new JsonFactory();\r\nJsonParser jParser = jfactory.createParser(json);\r\n\r\nString parsedName = null;\r\nInteger parsedAge = null;\r\nList<String> addresses = new LinkedList<>();\r\n```","```\r\nwhile (jParser.nextToken() != JsonToken.END_OBJECT) {\r\n    String fieldname = jParser.getCurrentName();\r\n    if (\"name\".equals(fieldname)) {\r\n        jParser.nextToken();\r\n        parsedName = jParser.getText();\r\n    }\r\n\r\n    if (\"age\".equals(fieldname)) {\r\n        jParser.nextToken();\r\n        parsedAge = jParser.getIntValue();\r\n    }\r\n\r\n    if (\"address\".equals(fieldname)) {\r\n        jParser.nextToken();\r\n        while (jParser.nextToken() != JsonToken.END_ARRAY) {\r\n            addresses.add(jParser.getText());\r\n        }\r\n    }\r\n}\r\njParser.close();\r\n```","```\r\nassertEquals(parsedName, \"Tom\");\r\nassertEquals(parsedAge, (Integer) 25);\r\nassertEquals(addresses, Arrays.asList(\"Poland\", \"5th avenue\"));\r\n```","```\r\nwhile (jParser.nextToken() != JsonToken.END_OBJECT) {\r\n    String fieldname = jParser.getCurrentName();\r\n\r\n    if (\"age\".equals(fieldname)) {\r\n        jParser.nextToken();\r\n        parsedAge = jParser.getIntValue();\r\n        return;\r\n    }\r\n\r\n}\r\njParser.close();\r\n```","```\r\nassertNull(parsedName);\r\nassertEquals(parsedAge, (Integer) 25);\r\nassertTrue(addresses.isEmpty());\r\n```"]