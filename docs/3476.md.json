["```\r\n<servlet>\r\n    <servlet-name>dispatcher</servlet-name>\r\n    <servlet-class>\r\n        org.springframework.web.servlet.DispatcherServlet\r\n    </servlet-class>\r\n    <init-param>\r\n        <param-name>contextConfigLocation</param-name>\r\n        <param-value>/WEB-INF/spring/dispatcher-config.xml</param-value>\r\n    </init-param>\r\n    <load-on-startup>1</load-on-startup>\r\n</servlet>\r\n```","```\r\n<servlet-mapping>\r\n    <servlet-name>dispatcher</servlet-name>\r\n    <url-pattern>/</url-pattern>\r\n</servlet-mapping>\r\n```","```\r\npublic class MyWebAppInitializer implements WebApplicationInitializer {\r\n    @Override\r\n    public void onStartup(ServletContext container) {\r\n        XmlWebApplicationContext context = new XmlWebApplicationContext();\r\n        context.setConfigLocation(\"/WEB-INF/spring/dispatcher-config.xml\");\r\n\r\n        ServletRegistration.Dynamic dispatcher = container\r\n          .addServlet(\"dispatcher\", new DispatcherServlet(context));\r\n\r\n        dispatcher.setLoadOnStartup(1);\r\n        dispatcher.addMapping(\"/\");\r\n    }\r\n}\r\n```","```\r\nAnnotationConfigWebApplicationContext context\r\n  = new AnnotationConfigWebApplicationContext();\r\n```","```\r\ncontext.register(AppConfig.class);\r\n```","```\r\ncontext.setConfigLocation(\"com.example.app.config\");\r\n```","```\r\ncontainer.addListener(new ContextLoaderListener(context));\r\n```","```\r\nServletRegistration.Dynamic dispatcher = container\r\n  .addServlet(\"dispatcher\", new DispatcherServlet(context));\r\n\r\ndispatcher.setLoadOnStartup(1);\r\ndispatcher.addMapping(\"/\");\r\n```","```\r\npublic class MyWebAppInitializer implements WebApplicationInitializer {\r\n    @Override\r\n    public void onStartup(ServletContext container) {\r\n        AnnotationConfigWebApplicationContext context\r\n          = new AnnotationConfigWebApplicationContext();\r\n        context.setConfigLocation(\"com.example.app.config\");\r\n\r\n        container.addListener(new ContextLoaderListener(context));\r\n\r\n        ServletRegistration.Dynamic dispatcher = container\r\n          .addServlet(\"dispatcher\", new DispatcherServlet(context));\r\n\r\n        dispatcher.setLoadOnStartup(1);\r\n        dispatcher.addMapping(\"/\");\r\n    }\r\n}\r\n```"]