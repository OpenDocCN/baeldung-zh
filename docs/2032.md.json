["```\r\npublic static void main(String[] args) {\r\n    ThreadLocalRandom random = ThreadLocalRandom.current();\r\n    int count = 0;\r\n    for (int i = 0; i < 5; i++) {\r\n        if (isInterested(random.nextInt(10))) {\r\n            count++;\r\n        }\r\n    }\r\n    System.out.printf(\"Found %d interested values%n\", count);\r\n}\r\n\r\nprivate static boolean isInterested(int i) {\r\n    return i % 2 == 0;\r\n}\r\n```","```\r\nisInterested(1)\r\nisInterested(4)\r\nisInterested(3)\r\nisInterested(1)\r\nisInterested(6)\r\nFound 2 interested values\r\n```","```\r\npublic class Test {\r\n\r\n    public static void main(String[] args) {\r\n        Collection<Task> tasks = Arrays.asList(new Task(), new Task());\r\n        tasks.forEach(task -> new Thread(task).start());\r\n    }\r\n\r\n    private static void mayBeAdd(Collection<Integer> holder) {\r\n        int i = ThreadLocalRandom.current().nextInt(10);\r\n        if (i % 3 == 0) {\r\n            holder.add(i);\r\n        }\r\n    }\r\n\r\n    private static class Task implements Runnable {\r\n\r\n        private final Collection<Integer> holder = new ArrayList<>();\r\n\r\n        @Override\r\n        public void run() {\r\n            for (int i = 0; i < 20; i++) {\r\n                mayBeAdd(holder);\r\n            }\r\n        }\r\n    }\r\n}\r\n```"]