["```\r\nHttpClient client = HttpClient.newHttpClient();\r\nHttpRequest request = HttpRequest.newBuilder()\r\n    .uri(URI.create(DUMMY_URL))\r\n    .build();\r\n```","```\r\nHttpResponse response = client.send(request, HttpResponse.BodyHandlers.ofString());\r\n```","```\r\nHttpURLConnection connection = (HttpURLConnection) new URL(DUMMY_URL).openConnection();\r\n```","```\r\nInputStream inputStream = connection.getInputStream();\r\n```","```\r\n<dependency>\r\n    <groupId>org.apache.httpcomponents</groupId>\r\n    <artifactId>httpclient</artifactId>\r\n    <version>4.5.12</version>\r\n</dependency>\r\n```","```\r\nHttpGet request = new HttpGet(DUMMY_URL);\r\n```","```\r\nCloseableHttpClient client = HttpClients.createDefault();\r\n```","```\r\nCloseableHttpResponse response = client.execute(request);\r\n```","```\r\nHttpEntity entity = response.getEntity();\r\nString result = EntityUtils.toString(entity);\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n    <version>${spring-boot.version}</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-test</artifactId>\r\n    <version>${spring-boot.version}</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n```","```\r\nRestTemplate restTemplate = new RestTemplate();\r\n```","```\r\nString response = restTemplate.getForObject(DUMMY_URL, String.class);\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-webflux</artifactId>\r\n</dependency>\r\n```","```\r\nWebClient webClient = WebClient.create(DUMMY_URL);\r\n```","```\r\nMono<String> body = webClient.get().retrieve().bodyToMono(String.class);\r\n```","```\r\nString s = body.block();\r\n```"]