["```\r\n<dependency>\r\n    <groupId>com.google.code.gson</groupId>\r\n    <artifactId>gson</artifactId>\r\n    <version>2.8.5</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n<dependency>\r\n    <groupId>com.fasterxml.jackson.core</groupId>\r\n    <artifactId>jackson-databind</artifactId>\r\n    <version>2.13.0</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n```","```\r\n{\r\n    \"location\": \"London\",\r\n    \"temp\": 15,\r\n    \"weather\": \"Cloudy\"\r\n}\r\n```","```\r\n{\r\n    \"place\": \"Lisbon\",\r\n    \"temperature\": 35,\r\n    \"outlook\": \"Sunny\"\r\n}\r\n```","```\r\npublic class Weather {\r\n    private String location;\r\n    private int temp;\r\n    private String outlook;\r\n}\r\n```","```\r\n@JsonProperty(\"location\")\r\n@JsonAlias(\"place\")\r\nprivate String location;\r\n@JsonProperty(\"temp\")\r\n@JsonAlias(\"temperature\")\r\nprivate int temp;\r\n\r\n@JsonProperty(\"outlook\")\r\n@JsonAlias(\"weather\")\r\nprivate String outlook; \r\n```","```\r\n@Test\r\npublic void givenTwoJsonFormats_whenDeserialized_thenWeatherObjectsCreated() throws Exception {\r\n\r\n    ObjectMapper mapper = new ObjectMapper();\r\n\r\n    Weather weather = mapper.readValue(\"{\\n\"  \r\n      + \"  \\\"location\\\": \\\"London\\\",\\n\" \r\n      + \"  \\\"temp\\\": 15,\\n\" \r\n      + \"  \\\"weather\\\": \\\"Cloudy\\\"\\n\" \r\n      + \"}\", Weather.class);\r\n\r\n    assertEquals(\"London\", weather.getLocation());\r\n    assertEquals(\"Cloudy\", weather.getOutlook());\r\n    assertEquals(15, weather.getTemp());\r\n\r\n    weather = mapper.readValue(\"{\\n\" \r\n      + \"  \\\"place\\\": \\\"Lisbon\\\",\\n\" \r\n      + \"  \\\"temperature\\\": 35,\\n\"\r\n      + \"  \\\"outlook\\\": \\\"Sunny\\\"\\n\"\r\n      + \"}\", Weather.class);\r\n\r\n    assertEquals(\"Lisbon\", weather.getLocation());\r\n    assertEquals(\"Sunny\", weather.getOutlook());\r\n    assertEquals(35, weather.getTemp());\r\n}\r\n```","```\r\n@SerializedName(value=\"location\", alternate=\"place\")\r\nprivate String location;\r\n@SerializedName(value=\"temp\", alternate=\"temperature\")\r\nprivate int temp;\r\n\r\n@SerializedName(value=\"outlook\", alternate=\"weather\")\r\nprivate String outlook; \r\n```","```\r\n@Test\r\npublic void givenTwoJsonFormats_whenDeserialized_thenWeatherObjectsCreated() throws Exception {\r\n\r\n    Gson gson = new GsonBuilder().create();\r\n    Weather weather = gson.fromJson(\"{\\n\" \r\n      + \"  \\\"location\\\": \\\"London\\\",\\n\" \r\n      + \"  \\\"temp\\\": 15,\\n\" \r\n      + \"  \\\"weather\\\": \\\"Cloudy\\\"\\n\" \r\n      + \"}\", Weather.class);\r\n\r\n    assertEquals(\"London\", weather.getLocation());\r\n    assertEquals(\"Cloudy\", weather.getOutlook());\r\n    assertEquals(15, weather.getTemp());\r\n\r\n    weather = gson.fromJson(\"{\\n\"\r\n      + \"  \\\"place\\\": \\\"Lisbon\\\",\\n\"\r\n      + \"  \\\"temperature\\\": 35,\\n\"\r\n      + \"  \\\"outlook\\\": \\\"Sunny\\\"\\n\"\r\n      + \"}\", Weather.class);\r\n\r\n    assertEquals(\"Lisbon\", weather.getLocation());\r\n    assertEquals(\"Sunny\", weather.getOutlook());\r\n    assertEquals(35, weather.getTemp());\r\n\r\n}\r\n```"]