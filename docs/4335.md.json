["```\r\n@BenchmarkMode(Mode.AverageTime)\r\n@OutputTimeUnit(TimeUnit.NANOSECONDS)\r\n@Warmup(iterations = 5)\r\npublic class CollectionsBenchmark {\r\n\r\n    @State(Scope.Thread)\r\n    public static class MyState {\r\n        private Set<Employee> employeeSet = new HashSet<>();\r\n        private List<Employee> employeeList = new ArrayList<>();\r\n\r\n        private long iterations = 1000;\r\n\r\n        private Employee employee = new Employee(100L, \"Harry\");\r\n\r\n        @Setup(Level.Trial)\r\n        public void setUp() {\r\n\r\n            for (long i = 0; i < iterations; i++) {\r\n                employeeSet.add(new Employee(i, \"John\"));\r\n                employeeList.add(new Employee(i, \"John\"));\r\n            }\r\n\r\n            employeeList.add(employee);\r\n            employeeSet.add(employee);\r\n        }\r\n    }\r\n}\r\n```","```\r\npublic class Employee {\r\n\r\n    private Long id;\r\n    private String name;\r\n\r\n    // constructor and getter setters go here\r\n}\r\n```","```\r\n@Benchmark\r\npublic boolean testArrayList(MyState state) {\r\n    return state.employeeList.contains(state.employee);\r\n}\r\n```","```\r\n@Benchmark\r\npublic boolean testHashSet(MyState state) {\r\n    return state.employeeSet.contains(state.employee);\r\n}\r\n```","```\r\npublic static void main(String[] args) throws Exception {\r\n    Options options = new OptionsBuilder()\r\n      .include(CollectionsBenchmark.class.getSimpleName())\r\n      .forks(1).build();\r\n    new Runner(options).run();\r\n}\r\n```","```\r\nBenchmark                           Mode  Cnt     Score     Error  Units\r\nCollectionsBenchmark.testArrayList  avgt   20  4035.646 ± 598.541  ns/op\r\nCollectionsBenchmark.testHashSet    avgt   20     9.456 ±   0.729  ns/op\r\n```","```\r\nBenchmark                           Mode  Cnt      Score       Error  Units\r\nCollectionsBenchmark.testArrayList  avgt   20  57499.620 ± 11388.645  ns/op\r\nCollectionsBenchmark.testHashSet    avgt   20     11.802 ±     1.164  ns/op\r\n```"]