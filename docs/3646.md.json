["```\r\n@Entity\r\nclass Image {\r\n\r\n    @Id\r\n    @GeneratedValue\r\n    Long id;\r\n\r\n    @Lob\r\n    byte[] content;\r\n\r\n    String name;\r\n    // Getters and Setters\r\n}\r\n```","```\r\n@Repository\r\ninterface ImageDbRepository extends JpaRepository<Image, Long> {}\r\n```","```\r\n@RestController\r\nclass ImageController {\r\n\r\n    @Autowired\r\n    ImageDbRepository imageDbRepository;\r\n\r\n    @PostMapping\r\n    Long uploadImage(@RequestParam MultipartFile multipartImage) throws Exception {\r\n        Image dbImage = new Image();\r\n        dbImage.setName(multipartImage.getName());\r\n        dbImage.setContent(multipartImage.getBytes());\r\n\r\n        return imageDbRepository.save(dbImage)\r\n            .getId();\r\n    }\r\n}\r\n```","```\r\n@GetMapping(value = \"/image/{imageId}\", produces = MediaType.IMAGE_JPEG_VALUE)\r\nResource downloadImage(@PathVariable Long imageId) {\r\n    byte[] image = imageRepository.findById(imageId)\r\n      .orElseThrow(() -> new ResponseStatusException(HttpStatus.NOT_FOUND))\r\n      .getContent();\r\n\r\n    return new ByteArrayResource(image);\r\n}\r\n```","```\r\nmvn package\r\n```","```\r\njava -jar target/image-archive-0.0.1-SNAPSHOT.jar\r\n```","```\r\ncurl -H \"Content-Type: multipart/form-data\" \\\r\n  -F \"[[email protected]](/web/20221129124459/https://www.baeldung.com/cdn-cgi/l/email-protection)\" http://localhost:8080/image\r\n```","```\r\n1\r\n```","```\r\ncurl -v http://localhost:8080/image/1 -o image.jpeg\r\n```","```\r\n% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying ::1...\r\n* TCP_NODELAY set\r\n* Connected to localhost (::1) port 8080 (#0)\r\n> GET /image/1 HTTP/1.1\r\n> Host: localhost:8080\r\n> User-Agent: curl/7.54.0\r\n> Accept: */*\r\n> \r\n< HTTP/1.1 200 \r\n< Accept-Ranges: bytes\r\n< Content-Type: image/jpeg\r\n< Content-Length: 9291\r\n```","```\r\nString location;\r\n```","```\r\n@Repository\r\nclass FileSystemRepository {\r\n\r\n    String RESOURCES_DIR = FileSystemRepository.class.getResource(\"/\")\r\n        .getPath();\r\n\r\n    String save(byte[] content, String imageName) throws Exception {\r\n        Path newFile = Paths.get(RESOURCES_DIR + new Date().getTime() + \"-\" + imageName);\r\n        Files.createDirectories(newFile.getParent());\r\n\r\n        Files.write(newFile, content);\r\n\r\n        return newFile.toAbsolutePath()\r\n            .toString();\r\n    }\r\n}\r\n```","```\r\n/workspace/archive-achive/target/classes/1602949218879-baeldung.jpeg\r\n```","```\r\nFileSystemResource findInFileSystem(String location) {\r\n    try {\r\n        return new FileSystemResource(Paths.get(location));\r\n    } catch (Exception e) {\r\n        // Handle access or file not found problems.\r\n        throw new RuntimeException();\r\n    }\r\n}\r\n```","```\r\n@Service\r\nclass FileLocationService {\r\n\r\n    @Autowired\r\n    FileSystemRepository fileSystemRepository;\r\n    @Autowired\r\n    ImageDbRepository imageDbRepository;\r\n\r\n    Long save(byte[] bytes, String imageName) throws Exception {\r\n        String location = fileSystemRepository.save(bytes, imageName);\r\n\r\n        return imageDbRepository.save(new Image(imageName, location))\r\n            .getId();\r\n    }\r\n}\r\n```","```\r\nFileSystemResource find(Long imageId) {\r\n    Image image = imageDbRepository.findById(imageId)\r\n      .orElseThrow(() -> new ResponseStatusException(HttpStatus.NOT_FOUND));\r\n\r\n    return fileSystemRepository.findInFileSystem(image.getLocation());\r\n} \r\n```","```\r\n@RestController\r\n@RequestMapping(\"file-system\")\r\nclass FileSystemImageController {\r\n\r\n    @Autowired\r\n    FileLocationService fileLocationService;\r\n\r\n    @PostMapping(\"/image\")\r\n    Long uploadImage(@RequestParam MultipartFile image) throws Exception {\r\n        return fileLocationService.save(image.getBytes(), image.getOriginalFilename());\r\n    }\r\n\r\n    @GetMapping(value = \"/image/{imageId}\", produces = MediaType.IMAGE_JPEG_VALUE)\r\n    FileSystemResource downloadImage(@PathVariable Long imageId) throws Exception {\r\n        return fileLocationService.find(imageId);\r\n    }\r\n}\r\n```","```\r\ncurl -H \"Content-Type: multipart/form-data\" \\\r\n  -F \"[[email protected]](/web/20221129124459/https://www.baeldung.com/cdn-cgi/l/email-protection)\" http://localhost:8080/file-system/image\r\n\r\n1\r\n```","```\r\ncurl -v http://localhost:8080/file-system/image/1 -o image.jpeg\r\n```"]