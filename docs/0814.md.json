["```\r\ncurl -Ls https://sh.jbang.dev | bash -s - app setup\r\n```","```\r\niex \"& { $(iwr https://ps.jbang.dev) } app setup\"\r\n```","```\r\n$ curl -Ls https://sh.jbang.dev | bash -s - app setup\r\nDownloading JBang...\r\nInstalling JBang...\r\nDownloading JDK 11\\. Be patient, this can take several minutes...\r\nInstalling JDK 11...\r\n[jbang] Default JDK set to 11\r\n[jbang] Setting up Jbang environment...\r\nPlease start a new Shell for changes to take effect\r\n```","```\r\n$ jbang version\r\n0.83.1\r\n```","```\r\n$ jbang init hello.java\r\n[jbang] File initialized. You can now run it with 'jbang hello.java' or edit it using 'jbang edit --open=[editor] hello.java' where [editor] is your editor or IDE, e.g. 'netbeans'\r\n\r\n```","```\r\n./hello.java\r\n[jbang] Building jar...\r\nHello World\r\n❯ ./hello.java\r\nHello World\r\n```","```\r\njbang init -t cli hellocli.java\r\n```","```\r\n$ jbang template list\r\nagent = Agent template\r\ncli = CLI template\r\nhello = Basic Hello World template\r\nhello.kt = Basic kotlin Hello World template\r\nqcli = Quarkus CLI template\r\nqmetrics = Quarkus Metrics template\r\nqrest = Quarkus REST template\r\n```","```\r\n$ jbang hellocli.java Baeldung\r\n[jbang] Resolving dependencies...\r\n[jbang]     Resolving info.picocli:picocli:4.5.0...Done\r\n[jbang] Dependencies resolved\r\n[jbang] Building jar...\r\nHello Baeldung\r\n```","```\r\n///usr/bin/env jbang \"$0\" \"[[email protected]](/web/20221208073738/https://www.baeldung.com/cdn-cgi/l/email-protection)\" ; exit $?\r\n//DEPS info.picocli:picocli:4.5.0\r\n\r\nimport picocli.CommandLine;\r\nimport picocli.CommandLine.Command;\r\nimport picocli.CommandLine.Parameters;\r\n\r\nimport java.util.concurrent.Callable;\r\n\r\n@Command(name = \"hellocli\", mixinStandardHelpOptions = true, version = \"hellocli 0.1\",\r\n        description = \"hellocli made with jbang\")\r\nclass hellocli implements Callable<Integer> {\r\n\r\n    @Parameters(index = \"0\", description = \"The greeting to print\", defaultValue = \"World!\")\r\n    private String greeting;\r\n\r\n    public static void main(String... args) {\r\n        int exitCode = new CommandLine(new hellocli()).execute(args);\r\n        System.exit(exitCode);\r\n    }\r\n\r\n    @Override\r\n    public Integer call() throws Exception { // your business logic goes here...\r\n        System.out.println(\"Hello \" + greeting);\r\n        return 0;\r\n    }\r\n}\r\n```","```\r\n//FILES resource.properties\r\n//FILES META-INF/resources/index.html=index.html\r\n```","```\r\n///usr/bin/env jbang \"$0\" \"[[email protected]](/web/20221208073738/https://www.baeldung.com/cdn-cgi/l/email-protection)\" ; exit $?\r\n// Update the Quarkus version to what you want here or run jbang with\r\n// `-Dquarkus.version=<version>` to override it.\r\n//DEPS io.quarkus:quarkus-bom:${quarkus.version:2.4.0.Final}@pom\r\n//DEPS io.quarkus:quarkus-resteasy\r\n//JAVAC_OPTIONS -parameters\r\n\r\n//FILES META-INF/resources/index.html=index.html\r\n\r\nimport javax.enterprise.context.ApplicationScoped;\r\nimport javax.ws.rs.GET;\r\nimport javax.ws.rs.Path;\r\n\r\n@Path(\"/hello\")\r\n@ApplicationScoped\r\npublic class jbangquarkus {\r\n    @GET\r\n    public String sayHello() {\r\n        return \"Hello from Quarkus with jbang.dev\";\r\n    }\r\n} \r\n```"]