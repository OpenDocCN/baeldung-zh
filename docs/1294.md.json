["```\r\n<dependency>\r\n    <groupId>com.thoughtworks.xstream</groupId>\r\n    <artifactId>xstream</artifactId>\r\n    <version>1.4.18</version>\r\n</dependency>\r\n```","```\r\nXStream xstream = new XStream();\r\n```","```\r\nXStream xstream = new XStream(new StaxDriver()); \r\n```","```\r\npublic class Customer {\r\n\r\n    private String firstName;\r\n    private String lastName;\r\n    private Date dob;\r\n\r\n    // standard constructor, setters, and getters\r\n}\r\n```","```\r\nCustomer customer = new Customer(\"John\", \"Doe\", new Date());\r\nString dataXml = xstream.toXML(customer);\r\n```","```\r\n<com.baeldung.pojo.Customer>\r\n    <firstName>John</firstName>\r\n    <lastName>Doe</lastName>\r\n    <dob>1986-02-14 03:46:16.381 UTC</dob>\r\n</com.baeldung.pojo.Customer> \r\n```","```\r\n@XStreamAlias(\"customer\")\r\n```","```\r\nxstream.processAnnotations(Customer.class);\r\n```","```\r\nxstream.alias(\"customer\", Customer.class);\r\n```","```\r\n<customer>\r\n    <firstName>John</firstName>\r\n    <lastName>Doe</lastName>\r\n    <dob>1986-02-14 03:46:16.381 UTC</dob>\r\n</customer> \r\n```","```\r\n@XStreamAlias(\"fn\")\r\nprivate String firstName;\r\n```","```\r\nxstream.aliasField(\"fn\", Customer.class, \"firstName\");\r\n```","```\r\n<customer>\r\n    <fn>John</fn>\r\n    <lastName>Doe</lastName>\r\n    <dob>1986-02-14 03:46:16.381 UTC</dob>\r\n</customer>\r\n```","```\r\nalias(\"float\", Float.class);\r\nalias(\"date\", Date.class);\r\nalias(\"gregorian-calendar\", Calendar.class);\r\nalias(\"url\", URL.class);\r\nalias(\"list\", List.class);\r\nalias(\"locale\", Locale.class);\r\nalias(\"currency\", Currency.class);\r\n```","```\r\nprivate List<ContactDetails> contactDetailsList;\r\n```","```\r\n<customer>\r\n    <firstName>John</firstName>\r\n    <lastName>Doe</lastName>\r\n    <dob>1986-02-14 04:14:05.874 UTC</dob>\r\n    <contactDetailsList>\r\n        <ContactDetails>\r\n            <mobile>6673543265</mobile>\r\n            <landline>0124-2460311</landline>\r\n        </ContactDetails>\r\n        <ContactDetails>\r\n            <mobile>4676543565</mobile>\r\n            <landline>0120-223312</landline>\r\n        </ContactDetails>\r\n    </contactDetailsList>\r\n</customer>\r\n```","```\r\nxstream.addImplicitCollection(Customer.class, \"contactDetailsList\");\r\n```","```\r\n<customer>\r\n    <firstName>John</firstName>\r\n    <lastName>Doe</lastName>\r\n    <dob>1986-02-14 04:14:20.541 UTC</dob>\r\n    <ContactDetails>\r\n        <mobile>6673543265</mobile>\r\n        <landline>0124-2460311</landline>\r\n    </ContactDetails>\r\n    <ContactDetails>\r\n        <mobile>4676543565</mobile>\r\n        <landline>0120-223312</landline>\r\n    </ContactDetails>\r\n</customer>\r\n```","```\r\n@XStreamImplicit\r\nprivate List<ContactDetails> contactDetailsList;\r\n```","```\r\nxstream.registerConverter(new DateConverter(\"dd-MM-yyyy\", null));\r\n```","```\r\n<customer>\r\n    <firstName>John</firstName>\r\n    <lastName>Doe</lastName>\r\n    <dob>14-02-1986</dob>\r\n</customer>\r\n```","```\r\npublic class MyDateConverter implements Converter {\r\n\r\n    private SimpleDateFormat formatter = new SimpleDateFormat(\"dd-MM-yyyy\");\r\n\r\n    @Override\r\n    public boolean canConvert(Class clazz) {\r\n        return Date.class.isAssignableFrom(clazz);\r\n    }\r\n\r\n    @Override\r\n    public void marshal(\r\n      Object value, HierarchicalStreamWriter writer, MarshallingContext arg2) {\r\n        Date date = (Date)value;\r\n        writer.setValue(formatter.format(date));\r\n    }\r\n\r\n    // other methods\r\n}\r\n```","```\r\nxstream.registerConverter(new MyDateConverter());\r\n```","```\r\npublic class MySingleValueConverter implements SingleValueConverter {\r\n\r\n    @Override\r\n    public boolean canConvert(Class clazz) {\r\n        return Customer.class.isAssignableFrom(clazz);\r\n    }\r\n\r\n    @Override\r\n    public String toString(Object obj) {\r\n        SimpleDateFormat formatter = new SimpleDateFormat(\"dd-MM-yyyy\");\r\n        Date date = ((Customer) obj).getDob();\r\n        return ((Customer) obj).getFirstName() + \",\" \r\n          + ((Customer) obj).getLastName() + \",\"\r\n          + formatter.format(date);\r\n    }\r\n\r\n    // other methods\r\n}\r\n```","```\r\nxstream.registerConverter(new MySingleValueConverter()); \r\n```","```\r\n<customer>John,Doe,14-02-1986</customer>\r\n```","```\r\nprivate static final int PRIORITY_NORMAL = 0;\r\nprivate static final int PRIORITY_LOW = -10;\r\nprivate static final int PRIORITY_VERY_LOW = -20; \r\n```","```\r\n@XStreamOmitField \r\nprivate String firstName;\r\n```","```\r\nxstream.omitField(Customer.class, \"firstName\");\r\n```","```\r\n<customer> \r\n    <lastName>Doe</lastName> \r\n    <dob>14-02-1986</dob> \r\n</customer>\r\n```","```\r\nprivate String contactType;\r\n```","```\r\n@XStreamAsAttribute\r\nprivate String contactType; \r\n```","```\r\nxstream.useAttributeFor(ContactDetails.class, \"contactType\");\r\n```","```\r\n<ContactDetails contactType=\"Office\">\r\n    <mobile>6673543265</mobile>\r\n    <landline>0124-2460311</landline>\r\n</ContactDetails>\r\n```"]