["```\r\n<http create-session=\"stateless\">\r\n   <intercept-url pattern=\"/api/admin/**\" access=\"ROLE_ADMIN\" />\r\n\r\n   <http-basic />\r\n</http>\r\n```","```\r\n<http create-session=\"stateless\" entry-point-ref=\"digestEntryPoint\">\r\n   <intercept-url pattern=\"/api/admin/**\" access=\"ROLE_ADMIN\" />\r\n\r\n   <http-basic />\r\n   <custom-filter ref=\"digestFilter\" after=\"BASIC_AUTH_FILTER\" />\r\n</http>\r\n\r\n<beans:bean id=\"digestFilter\" class=\r\n \"org.springframework.security.web.authentication.www.DigestAuthenticationFilter\">\r\n   <beans:property name=\"userDetailsService\" ref=\"userService\" />\r\n   <beans:property name=\"authenticationEntryPoint\" ref=\"digestEntryPoint\" />\r\n</beans:bean>\r\n\r\n<beans:bean id=\"digestEntryPoint\" class=\r\n \"org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint\">\r\n   <beans:property name=\"realmName\" value=\"Contacts Realm via Digest Authentication\"/>\r\n   <beans:property name=\"key\" value=\"acegi\" />\r\n</beans:bean>\r\n\r\n<authentication-manager>\r\n   <authentication-provider>\r\n      <user-service id=\"userService\">\r\n         <user name=\"eparaschiv\" password=\"eparaschiv\" authorities=\"ROLE_ADMIN\" />\r\n         <user name=\"user\" password=\"user\" authorities=\"ROLE_USER\" />\r\n      </user-service>\r\n   </authentication-provider>\r\n</authentication-manager>\r\n```","```\r\n@Test\r\npublic void givenAuthenticatedByBasicAuth_whenAResourceIsCreated_then201IsReceived(){\r\n   // Given\r\n   // When\r\n   Response response = given()\r\n    .auth().preemptive().basic( ADMIN_USERNAME, ADMIN_PASSWORD )\r\n    .contentType( HttpConstants.MIME_JSON ).body( new Foo( randomAlphabetic( 6 ) ) )\r\n    .post( paths.getFooURL() );\r\n\r\n   // Then\r\n   assertThat( response.getStatusCode(), is( 201 ) );\r\n}\r\n@Test\r\npublic void givenAuthenticatedByDigestAuth_whenAResourceIsCreated_then201IsReceived(){\r\n   // Given\r\n   // When\r\n   Response response = given()\r\n    .auth().digest( ADMIN_USERNAME, ADMIN_PASSWORD )\r\n    .contentType( HttpConstants.MIME_JSON ).body( new Foo( randomAlphabetic( 6 ) ) )\r\n    .post( paths.getFooURL() );\r\n\r\n   // Then\r\n   assertThat( response.getStatusCode(), is( 201 ) );\r\n}\r\n```"]