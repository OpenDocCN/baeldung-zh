["```\r\n<dependency>\r\n    <groupId>com.itextpdf</groupId>\r\n    <artifactId>itextpdf</artifactId>\r\n    <version>5.5.10</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.apache.pdfbox</groupId>\r\n    <artifactId>pdfbox</artifactId>\r\n    <version>2.0.4</version>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>org.bouncycastle</groupId>\r\n    <artifactId>bcprov-jdk15on</artifactId>\r\n    <version>1.56</version>\r\n</dependency> \r\n```","```\r\nDocument document = new Document();\r\nPdfWriter.getInstance(document, new FileOutputStream(\"iTextHelloWorld.pdf\"));\r\n\r\ndocument.open();\r\nFont font = FontFactory.getFont(FontFactory.COURIER, 16, BaseColor.BLACK);\r\nChunk chunk = new Chunk(\"Hello World\", font);\r\n\r\ndocument.add(chunk);\r\ndocument.close();\r\n```","```\r\nPath path = Paths.get(ClassLoader.getSystemResource(\"Java_logo.png\").toURI());\r\n\r\nDocument document = new Document();\r\nPdfWriter.getInstance(document, new FileOutputStream(\"iTextImageExample.pdf\"));\r\ndocument.open();\r\nImage img = Image.getInstance(path.toAbsolutePath().toString());\r\ndocument.add(img);\r\n\r\ndocument.close();\r\n```","```\r\nDocument document = new Document();\r\nPdfWriter.getInstance(document, new FileOutputStream(\"iTextTable.pdf\"));\r\n\r\ndocument.open();\r\n\r\nPdfPTable table = new PdfPTable(3);\r\naddTableHeader(table);\r\naddRows(table);\r\naddCustomRows(table);\r\n\r\ndocument.add(table);\r\ndocument.close();\r\n```","```\r\nprivate void addTableHeader(PdfPTable table) {\r\n    Stream.of(\"column header 1\", \"column header 2\", \"column header 3\")\r\n      .forEach(columnTitle -> {\r\n        PdfPCell header = new PdfPCell();\r\n        header.setBackgroundColor(BaseColor.LIGHT_GRAY);\r\n        header.setBorderWidth(2);\r\n        header.setPhrase(new Phrase(columnTitle));\r\n        table.addCell(header);\r\n    });\r\n}\r\n```","```\r\nprivate void addRows(PdfPTable table) {\r\n    table.addCell(\"row 1, col 1\");\r\n    table.addCell(\"row 1, col 2\");\r\n    table.addCell(\"row 1, col 3\");\r\n}\r\n```","```\r\nprivate void addCustomRows(PdfPTable table) \r\n  throws URISyntaxException, BadElementException, IOException {\r\n    Path path = Paths.get(ClassLoader.getSystemResource(\"Java_logo.png\").toURI());\r\n    Image img = Image.getInstance(path.toAbsolutePath().toString());\r\n    img.scalePercent(10);\r\n\r\n    PdfPCell imageCell = new PdfPCell(img);\r\n    table.addCell(imageCell);\r\n\r\n    PdfPCell horizontalAlignCell = new PdfPCell(new Phrase(\"row 2, col 2\"));\r\n    horizontalAlignCell.setHorizontalAlignment(Element.ALIGN_CENTER);\r\n    table.addCell(horizontalAlignCell);\r\n\r\n    PdfPCell verticalAlignCell = new PdfPCell(new Phrase(\"row 2, col 3\"));\r\n    verticalAlignCell.setVerticalAlignment(Element.ALIGN_BOTTOM);\r\n    table.addCell(verticalAlignCell);\r\n}\r\n```","```\r\nPdfReader pdfReader = new PdfReader(\"HelloWorld.pdf\");\r\nPdfStamper pdfStamper \r\n  = new PdfStamper(pdfReader, new FileOutputStream(\"encryptedPdf.pdf\"));\r\n\r\npdfStamper.setEncryption(\r\n  \"userpass\".getBytes(),\r\n  \".getBytes(),\r\n  0,\r\n  PdfWriter.ENCRYPTION_AES_256\r\n);\r\n\r\npdfStamper.close();\r\n```","```\r\nPdfWriter.ALLOW_PRINTING\r\n```","```\r\nPdfWriter.ALLOW_PRINTING | PdfWriter.ALLOW_COPY\r\n```","```\r\nPDDocument document = new PDDocument();\r\nPDPage page = new PDPage();\r\ndocument.addPage(page);\r\n\r\nPDPageContentStream contentStream = new PDPageContentStream(document, page);\r\n\r\ncontentStream.setFont(PDType1Font.COURIER, 12);\r\ncontentStream.beginText();\r\ncontentStream.showText(\"Hello World\");\r\ncontentStream.endText();\r\ncontentStream.close();\r\n\r\ndocument.save(\"pdfBoxHelloWorld.pdf\");\r\ndocument.close();\r\n```","```\r\nPDDocument document = new PDDocument();\r\nPDPage page = new PDPage();\r\ndocument.addPage(page);\r\n\r\nPath path = Paths.get(ClassLoader.getSystemResource(\"Java_logo.png\").toURI());\r\nPDPageContentStream contentStream = new PDPageContentStream(document, page);\r\nPDImageXObject image \r\n  = PDImageXObject.createFromFile(path.toAbsolutePath().toString(), document);\r\ncontentStream.drawImage(image, 0, 0);\r\ncontentStream.close();\r\n\r\ndocument.save(\"pdfBoxImage.pdf\");\r\ndocument.close(); \r\n```","```\r\nPDDocument document = new PDDocument();\r\nPDPage page = new PDPage();\r\ndocument.addPage(page);\r\n\r\nAccessPermission accessPermission = new AccessPermission();\r\naccessPermission.setCanPrint(false);\r\naccessPermission.setCanModify(false);\r\n\r\nStandardProtectionPolicy standardProtectionPolicy \r\n  = new StandardProtectionPolicy(\"ownerpass\", \"userpass\", accessPermission);\r\ndocument.protect(standardProtectionPolicy);\r\ndocument.save(\"pdfBoxEncryption.pdf\");\r\ndocument.close(); \r\n```"]