["```\r\n@Configuration\r\n@EnableWebSecurity\r\npublic class CustomWebSecurityConfigurerAdapter extends WebSecurityConfigurerAdapter {\r\n\r\n    @Autowired\r\n    private MyBasicAuthenticationEntryPoint authenticationEntryPoint;\r\n\r\n    @Autowired\r\n    public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {\r\n        auth.inMemoryAuthentication()\r\n          .withUser(\"user1\").password(passwordEncoder().encode(\"user1Pass\"))\r\n          .authorities(\"ROLE_USER\");\r\n    }\r\n\r\n    @Override\r\n    protected void configure(HttpSecurity http) throws Exception {\r\n        http.authorizeRequests()\r\n          .antMatchers(\"/securityNone\").permitAll()\r\n          .anyRequest().authenticated()\r\n          .and()\r\n          .httpBasic()\r\n          .authenticationEntryPoint(authenticationEntryPoint);\r\n\r\n        http.addFilterAfter(new CustomFilter(),\r\n          BasicAuthenticationFilter.class);\r\n    }\r\n\r\n    @Bean\r\n    public PasswordEncoder passwordEncoder() {\r\n        return new BCryptPasswordEncoder();\r\n    }\r\n}\r\n```","```\r\n<http pattern=\"/securityNone\" security=\"none\"/>\r\n<http use-expressions=\"true\">\r\n    <intercept-url pattern=\"/**\" access=\"isAuthenticated()\" />\r\n    <http-basic />\r\n</http>\r\n\r\n<authentication-manager>\r\n    <authentication-provider>\r\n        <user-service>\r\n            <user name=\"user1\" password=\"{noop}user1Pass\" authorities=\"ROLE_USER\" />\r\n        </user-service>\r\n    </authentication-provider>\r\n</authentication-manager>\r\n```","```\r\ncurl -i http://localhost:8080/spring-security-rest-basic-auth/api/foos/1\r\n```","```\r\nHTTP/1.1 401 Unauthorized\r\nServer: Apache-Coyote/1.1\r\nSet-Cookie: JSESSIONID=E5A8D3C16B65A0A007CFAACAEEE6916B; Path=/spring-security-mvc-basic-auth/; HttpOnly\r\nWWW-Authenticate: Basic realm=\"Spring Security Application\"\r\nContent-Type: text/html;charset=utf-8\r\nContent-Length: 1061\r\nDate: Wed, 29 May 2013 15:14:08 GMT\r\n```","```\r\ncurl -i --user user1:user1Pass \r\n  http://localhost:8080/spring-security-rest-basic-auth/api/foos/1\r\n```","```\r\nHTTP/1.1 200 OK\r\nServer: Apache-Coyote/1.1\r\nSet-Cookie: JSESSIONID=301225C7AE7C74B0892887389996785D; Path=/spring-security-mvc-basic-auth/; HttpOnly\r\nContent-Type: text/html;charset=ISO-8859-1\r\nContent-Language: en-US\r\nContent-Length: 90\r\nDate: Wed, 29 May 2013 15:19:38 GMT\r\n```","```\r\n<http-basic entry-point-ref=\"myBasicAuthenticationEntryPoint\" />\r\n```","```\r\n@Component\r\npublic class MyBasicAuthenticationEntryPoint extends BasicAuthenticationEntryPoint {\r\n\r\n    @Override\r\n    public void commence(\r\n      HttpServletRequest request, HttpServletResponse response, AuthenticationException authEx) \r\n      throws IOException, ServletException {\r\n        response.addHeader(\"WWW-Authenticate\", \"Basic realm=\"\" + getRealmName() + \"\"\");\r\n        response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);\r\n        PrintWriter writer = response.getWriter();\r\n        writer.println(\"HTTP Status 401 - \" + authEx.getMessage());\r\n    }\r\n\r\n    @Override\r\n    public void afterPropertiesSet() throws Exception {\r\n        setRealmName(\"Baeldung\");\r\n        super.afterPropertiesSet();\r\n    }\r\n}\r\n```"]