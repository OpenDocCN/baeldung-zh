["```\r\n<dependency>\r\n    <groupId>org.apache.commons</groupId>\r\n    <artifactId>commons-lang3</artifactId>\r\n    <version>3.12.0</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>com.google.guava</groupId>\r\n    <artifactId>guava</artifactId>\r\n    <version>31.0.1-jre</version>\r\n</dependency>\r\n```","```\r\nString countries = \"Russia,Germany,England,France,Italy\";\r\nString ranks = \"1,2,3,4,5,6,7\";\r\n```","```\r\nList<String> convertedCountriesList;\r\nList<Integer> convertedRankList;\r\n```","```\r\nList<String> expectedCountriesList = Arrays.asList(\"Russia\", \"Germany\", \"England\", \"France\", \"Italy\");\r\nList<Integer> expectedRanksList = Arrays.asList(1, 2, 3, 4, 5, 6, 7);\r\n```","```\r\nList<String> convertedCountriesList = Arrays.asList(countries.split(\",\", -1));\r\n```","```\r\nString[] convertedRankArray = ranks.split(\",\");\r\nList<Integer> convertedRankList = new ArrayList<Integer>();\r\nfor (String number : convertedRankArray) {\r\n    convertedRankList.add(Integer.parseInt(number.trim()));\r\n}\r\n```","```\r\nList<String> convertedCountriesList = Stream.of(countries.split(\",\", -1))\r\n  .collect(Collectors.toList());\r\n```","```\r\nList<Integer> convertedRankList = Stream.of(ranks.split(\",\"))\r\n  .map(String::trim)\r\n  .map(Integer::parseInt)\r\n  .collect(Collectors.toList());\r\n```","```\r\nList<String> convertedCountriesList = Arrays.asList(StringUtils.splitPreserveAllTokens(countries, \",\"));\r\n```","```\r\nString[] convertedRankArray = StringUtils.split(ranks, \",\");\r\nList<Integer> convertedRankList = new ArrayList<Integer>();\r\nfor (String number : convertedRankArray) {\r\n    convertedRankList.add(Integer.parseInt(number.trim()));\r\n} \r\n```","```\r\nList<String> convertedCountriesList = Splitter.on(\",\")\r\n  .trimResults()\r\n  .splitToList(countries);\r\n```","```\r\nList<Integer> convertedRankList = Lists.transform(Splitter.on(\",\")\r\n  .trimResults()\r\n  .splitToList(ranks), new Function<String, Integer>() {\r\n      @Override\r\n      public Integer apply(String input) {\r\n          return Integer.parseInt(input.trim());\r\n      }\r\n  }); \r\n```"]