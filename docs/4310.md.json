["```\r\n@Configuration\r\nclass AnnotationConfig {\r\n\r\n    @Bean(name = {\"tiger\", \"kitty\"})\r\n    @Scope(value = \"prototype\")\r\n    Tiger getTiger(String name) {\r\n        return new Tiger(name);\r\n    }\r\n\r\n    @Bean(name = \"lion\")\r\n    Lion getLion() {\r\n        return new Lion(\"Hardcoded lion name\");\r\n    }\r\n\r\n    interface Animal {}\r\n} \r\n```","```\r\nObject lion = context.getBean(\"lion\");\r\n\r\nassertEquals(Lion.class, lion.getClass());\r\n```","```\r\nassertThrows(ClassCastException.class, () -> {\r\n    Tiger tiger = (Tiger) context.getBean(\"lion\");\r\n});\r\n```","```\r\nLion lion = context.getBean(\"lion\", Lion.class);\r\n```","```\r\nassertThrows(BeanNotOfRequiredTypeException.class, () -> \r\n    context.getBean(\"lion\", Tiger.class));\r\n}\r\n```","```\r\nLion lion = context.getBean(Lion.class);\r\n```","```\r\nassertThrows(NoUniqueBeanDefinitionException.class, () -> \r\n    context.getBean(Animal.class));\r\n}\r\n```","```\r\nTiger tiger = (Tiger) context.getBean(\"tiger\", \"Siberian\");\r\n```","```\r\nTiger tiger = (Tiger) context.getBean(\"tiger\", \"Siberian\");\r\nTiger secondTiger = (Tiger) context.getBean(\"tiger\", \"Striped\");\r\n\r\nassertEquals(\"Siberian\", tiger.getName());\r\nassertEquals(\"Striped\", secondTiger.getName());\r\n```","```\r\nTiger tiger = context.getBean(Tiger.class, \"Shere Khan\");\r\n\r\nassertEquals(\"Shere Khan\", tiger.getName());\r\n```"]