["```\r\npublic class ResilientFeignClientBuilder {\r\n    public static <T> T createClient(Class<T> type, String uri) {\r\n        return Feign.builder()\r\n          .client(new OkHttpClient())\r\n          .encoder(new GsonEncoder())\r\n          .decoder(new GsonDecoder())\r\n          .target(type, uri);\r\n    }\r\n}\r\n```","```\r\npublic class NaiveRetryer implements feign.Retryer {\r\n    @Override\r\n    public void continueOrPropagate(RetryableException e) {\r\n        try {\r\n            Thread.sleep(1000L);\r\n        } catch (InterruptedException ex) {\r\n            Thread.currentThread().interrupt();\r\n            throw e;\r\n        }\r\n    }\r\n} \r\n```","```\r\n@Override\r\npublic Retryer clone() {\r\n    return new NaiveRetryer();\r\n} \r\n```","```\r\npublic static <T> T createClient(Class<T> type, String uri) {\r\n    return Feign.builder()\r\n      // ...\r\n      .retryer(new NaiveRetryer())    \r\n      // ...\r\n}\r\n```","```\r\n@Bean\r\npublic Retryer retryer() {\r\n    return new NaiveRetryer();\r\n}\r\n```","```\r\npublic static <T> T createClient(Class<T> type, String uri) {\r\n    return Feign.builder()\r\n// ...\r\n      .retryer(new Retryer.Default(100L, TimeUnit.SECONDS.toMillis(3L), 5))    \r\n// ...\r\n}\r\n```","```\r\npublic class Custom5xxErrorDecoder implements ErrorDecoder {\r\n    @Override\r\n    public Exception decode(String methodKey, Response response) {\r\n        FeignException exception = feign.FeignException.errorStatus(methodKey, response);\r\n        int status = response.status();\r\n        if (status >= 500) {\r\n            return new RetryableException(\r\n              response.status(),\r\n              exception.getMessage(),\r\n              response.request().httpMethod(),\r\n              exception,\r\n              null,\r\n              response.request());\r\n        }\r\n        return exception;\r\n    }\r\n}\r\n```","```\r\npublic static <T> T createClient(Class<T> type, String uri) {\r\n    return Feign.builder()\r\n      // ...\r\n      .errorDecoder(new Custom5xxErrorDecoder())\r\n      // ...\r\n}\r\n```"]