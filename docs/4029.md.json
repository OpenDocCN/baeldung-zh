["```\r\n@Entity\r\npublic class Student {\r\n\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.SEQUENCE)\r\n    private long studentId;\r\n\r\n    private String name;\r\n\r\n    private int age;\r\n\r\n    // constructor, getters and setters\r\n}\r\n```","```\r\npublic class AggregateFunctionsIntegrationTest {\r\n\r\n    private static Session session;\r\n    private static Transaction transaction;\r\n\r\n    @BeforeClass\r\n    public static final void setup() throws HibernateException, IOException {\r\n        session = HibernateUtil.getSessionFactory()\r\n          .openSession();\r\n        transaction = session.beginTransaction();\r\n\r\n        session.save(new Student(\"Jonas\", 22, 12f));\r\n        session.save(new Student(\"Sally\", 20, 34f));\r\n        session.save(new Student(\"Simon\", 25, 45f));\r\n        session.save(new Student(\"Raven\", 21, 43f));\r\n        session.save(new Student(\"Sam\", 23, 33f));\r\n\r\n    }\r\n\r\n}\r\n```","```\r\n@Test\r\npublic void whenMinAge_ThenReturnValue() {\r\n    int minAge = (int) session.createQuery(\"SELECT min(age) from Student\")\r\n      .getSingleResult();\r\n    assertThat(minAge).isEqualTo(20);\r\n}\r\n```","```\r\n@Test\r\npublic void whenMaxAge_ThenReturnValue() {\r\n    int maxAge = (int) session.createQuery(\"SELECT max(age) from Student\")\r\n      .getSingleResult();\r\n    assertThat(maxAge).isEqualTo(25);\r\n}\r\n```","```\r\n@Test\r\npublic void whenSumOfAllAges_ThenReturnValue() {\r\n    Long sumOfAllAges = (Long) session.createQuery(\"SELECT sum(age) from Student\")\r\n      .getSingleResult();\r\n    assertThat(sumOfAllAges).isEqualTo(111);\r\n}\r\n```","```\r\n@Test\r\npublic void whenAverageAge_ThenReturnValue() {\r\n    Double avgAge = (Double) session.createQuery(\"SELECT avg(age) from Student\")\r\n      .getSingleResult();\r\n    assertThat(avgAge).isEqualTo(22.2);\r\n}\r\n```","```\r\n@Test\r\npublic void whenCountAll_ThenReturnValue() {\r\n    Long totalStudents = (Long) session.createQuery(\"SELECT count(*) from Student\")\r\n      .getSingleResult();\r\n    assertThat(totalStudents).isEqualTo(5);\r\n}\r\n```"]