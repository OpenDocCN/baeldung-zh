["```\r\n<dependency>\r\n    <groupId>org.projectlombok</groupId>\r\n    <artifactId>lombok</artifactId>\r\n    <version>1.18.20</version>\r\n    <scope>provided</scope>\r\n</dependency>\r\n```","```\r\njava -jar lombok.jar config -g --verbose \r\n```","```\r\nconfig.stopBubbling = true\r\nlombok.anyconstructor.addconstructorproperties = false\r\nlombok.addLombokGeneratedAnnotation = true\r\nlombok.experimental.flagUsage = WARNING\r\n\r\n# ... more properties \r\n```","```\r\n@AllArgsConstructor\r\n@NoArgsConstructor\r\n@Getter\r\n@Setter\r\npublic class Account {\r\n    private double balance;\r\n    private String accountHolder;\r\n}\r\n```","```\r\npublic class Account {\r\n    private double balance;\r\n    private String accountHolder;\r\n\r\n    @ConstructorProperties({\"balance\", \"accountHolder\"})\r\n    @Generated\r\n    public Account(double balance, String accountHolder) {\r\n        this.balance = balance;\r\n        this.accountHolder = accountHolder;\r\n    }\r\n\r\n    @Generated\r\n    public Account() {}\r\n\r\n    // default generated getter and setters\r\n}\r\n```","```\r\n@Test\r\nvoid should_initialize_account() {\r\n    Account myAccount = new Account()\r\n      .setBalance(2000.00)\r\n      .setAccountHolder(\"John Snow\");\r\n\r\n    assertEquals(2000.00, myAccount.getBalance());\r\n    assertEquals(\"John Snow\", myAccount.getAccountHolder());\r\n}\r\n```","```\r\n#Log name customization\r\nlombok.log.fieldName = domainLog\r\n```","```\r\n@AllArgsConstructor\r\n@NoArgsConstructor\r\n@Getter\r\n@Setter\r\n@Log\r\npublic class Account {\r\n\r\n    // same as defined previously\r\n\r\n   public Account withdraw(double amount) {\r\n        if (this.balance - abs(amount) < 0) {\r\n            domainLog.log(Level.INFO, \"Transaction denied for account holder: %s\", this.accountHolder);\r\n            throw new IllegalArgumentException(String.format(\"Not enough balance, you have %.2f\", this.balance));\r\n        }\r\n\r\n        this.balance -= abs(amount);\r\n        return this;\r\n    }\r\n}\r\n```","```\r\n/home/dev/repository/git/tutorials/lombok/src/main/java/com/baeldung/lombok/configexamples/TransactionLog.java:9:\r\n warning: Use of any lombok.experimental feature is flagged according to lombok configuration.\r\n@Accessors(prefix = {\"op\"})\r\n```","```\r\n@NoArgsConstructor\r\n@AllArgsConstructor\r\n@Getter\r\n@Setter\r\n@Log\r\npublic class Account {\r\n\r\n    @NonNull\r\n    private Double balance = 0.;\r\n    @NonNull\r\n    private String accountHolder = \"\";\r\n\r\n    // other methods\r\n}\r\n```","```\r\npublic class Account {\r\n\r\n    @Generated\r\n    private static final Logger domainLog = Logger.getLogger(Account.class.getName());\r\n    @NonNull\r\n    private Double balance = 0.0D;\r\n    @NonNull\r\n    private String accountHolder = \"\";\r\n\r\n    @ConstructorProperties({\"balance\", \"accountHolder\"})\r\n    @Generated\r\n    public Account(@NonNull Double balance, @NonNull String accountHolder) {\r\n        if (balance == null) {\r\n            throw new NullPointerException(\"balance is marked non-null but is null\");\r\n        } else if (accountHolder == null) {\r\n            throw new NullPointerException(\"accountHolder is marked non-null but is null\");\r\n        } else {\r\n            this.balance = balance;\r\n            this.accountHolder = accountHolder;\r\n        }\r\n    }\r\n\r\n    @NonNull\r\n    @Generated\r\n    public Double getBalance() {\r\n        return this.balance;\r\n    }\r\n\r\n    @NonNull\r\n    @Generated\r\n    public String getAccountHolder() {\r\n        return this.accountHolder;\r\n    }\r\n\r\n    // Rest of the class members...\r\n\r\n}\r\n```","```\r\nclear lombok.addNullAnnotations\r\n```","```\r\n##     relative or absolute path  \r\nimport lombok_feature.config\r\n\r\nconfig.stopBubbling = true\r\nlombok.anyconstructor.addconstructorproperties=false\r\nlombok.addLombokGeneratedAnnotation = true\r\nlombok.addSuppressWarnings = false \r\n```","```\r\n# lombok_feature.config file\r\n\r\nlombok.experimental.flagUsage = warning\r\n```"]