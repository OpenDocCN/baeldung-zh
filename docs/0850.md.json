["```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n    <version>2.7.1</version>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>org.springdoc</groupId>\r\n    <artifactId>springdoc-openapi-ui</artifactId>\r\n    <version>1.6.9</version>\r\n</dependency>\r\n```","```\r\n@SpringBootApplication\r\npublic class DefaultGlobalSecuritySchemeApplication {\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(DefaultGlobalSecuritySchemeApplication.class, args);\r\n    }\r\n}\r\n```","```\r\n@SecurityScheme(type = SecuritySchemeType.APIKEY, name = \"api_key\", in = SecuritySchemeIn.HEADER)\r\n```","```\r\n@OpenAPIDefinition(info = @Info(title = \"Apply Default Global SecurityScheme in springdoc-openapi\", version = \"1.0.0\"), security = { @SecurityRequirement(name = \"api_key\") })\r\n```","```\r\n@RestController\r\n@RequestMapping(\"/\")\r\npublic class DefaultGlobalSecuritySchemeOpenApiController {\r\n    ...\r\n} \r\n```","```\r\n@RequestMapping(method = RequestMethod.POST, value = \"/login\", produces = { \"application/json\" }, consumes = { \"application/json\" })\r\n```","```\r\n@Operation(operationId = \"login\", responses = {\r\n    @ApiResponse(responseCode = \"200\", description = \"api_key to be used in the secured-ping endpoint\", content = { @Content(mediaType = \"application/json\", schema = @Schema(implementation = TokenDto.class)) }),\r\n    @ApiResponse(responseCode = \"401\", description = \"Unauthorized request\", content = { @Content(mediaType = \"application/json\", schema = @Schema(implementation = ApplicationExceptionDto.class)) }) })\r\n@SecurityRequirements() \r\n```","```\r\npublic ResponseEntity login(@Parameter(name = \"LoginDto\", description = \"Login\") @Valid @RequestBody(required = true) LoginDto loginDto) {\r\n    ...\r\n}\r\n```","```\r\npublic class LoginDto {\r\n    private String user;\r\n    private String pass;\r\n\r\n    ...\r\n\r\n    @Schema(name = \"user\", required = true)\r\n    public String getUser() {\r\n        return user;\r\n    }\r\n\r\n    @Schema(name = \"pass\", required = true)\r\n    public String getPass() {\r\n        return pass;\r\n    }\r\n}\r\n```","```\r\n@Operation(operationId = \"ping\", responses = {\r\n    @ApiResponse(responseCode = \"200\", description = \"Ping that needs an api_key attribute in the header\", content = {\r\n        @Content(mediaType = \"application/json\", schema = @Schema(implementation = PingResponseDto.class), examples = { @ExampleObject(value = \"{ pong: '2022-06-17T18:30:33.465+02:00' }\") }) }),\r\n    @ApiResponse(responseCode = \"401\", description = \"Unauthorized request\", content = { @Content(mediaType = \"application/json\", schema = @Schema(implementation = ApplicationExceptionDto.class)) }),\r\n    @ApiResponse(responseCode = \"403\", description = \"Forbidden request\", content = { @Content(mediaType = \"application/json\", schema = @Schema(implementation = ApplicationExceptionDto.class)) }) })\r\n@RequestMapping(method = RequestMethod.GET, value = \"/ping\", produces = { \"application/json\" })\r\npublic ResponseEntity ping(@RequestHeader(name = \"api_key\", required = false) String api_key) {\r\n    ...\r\n} \r\n```","```\r\nmvn spring-boot:run -Dstart-class=\"com.baeldung.defaultglobalsecurityscheme.DefaultGlobalSecuritySchemeApplication\"\r\n```"]