["```\r\npublic class SimpleThread extends Thread {\r\n\r\n    private String message;\r\n\r\n    // standard logger, constructor\r\n\r\n    @Override\r\n    public void run() {\r\n        log.info(message);\r\n    }\r\n}\r\n```","```\r\n@Test\r\npublic void givenAThread_whenRunIt_thenResult()\r\n  throws Exception {\r\n\r\n    Thread thread = new SimpleThread(\r\n      \"SimpleThread executed using Thread\");\r\n    thread.start();\r\n    thread.join();\r\n}\r\n```","```\r\n@Test\r\npublic void givenAThread_whenSubmitToES_thenResult()\r\n  throws Exception {\r\n\r\n    executorService.submit(new SimpleThread(\r\n      \"SimpleThread executed using ExecutorService\")).get();\r\n}\r\n```","```\r\nclass SimpleRunnable implements Runnable {\r\n\r\n    private String message;\r\n\r\n    // standard logger, constructor\r\n\r\n    @Override\r\n    public void run() {\r\n        log.info(message);\r\n    }\r\n}\r\n```","```\r\n@Test\r\npublic void givenRunnable_whenRunIt_thenResult()\r\n throws Exception {\r\n    Thread thread = new Thread(new SimpleRunnable(\r\n      \"SimpleRunnable executed using Thread\"));\r\n    thread.start();\r\n    thread.join();\r\n}\r\n```","```\r\n@Test\r\npublic void givenARunnable_whenSubmitToES_thenResult()\r\n throws Exception {\r\n\r\n    executorService.submit(new SimpleRunnable(\r\n      \"SimpleRunnable executed using ExecutorService\")).get();\r\n}\r\n```","```\r\n@Test\r\npublic void givenARunnableLambda_whenSubmitToES_thenResult() \r\n  throws Exception {\r\n\r\n    executorService.submit(\r\n      () -> log.info(\"Lambda runnable executed!\"));\r\n}\r\n```"]