["```\r\nCharSequence charSequence = \"baeldung\";\r\n```","```\r\nCharSequence charSequence = new StringBuffer(\"baeldung\");\r\nCharSequence charSequence = new StringBuilder(\"baeldung\");\r\n```","```\r\n@Test\r\npublic void givenUsingString_whenInstantiatingString_thenWrong() {\r\n    CharSequence firstString = \"baeldung\";\r\n    String secondString = \"baeldung\";\r\n\r\n    assertNotEquals(firstString, secondString);\r\n}\r\n```","```\r\n@Test\r\npublic void givenString_whenAppended_thenUnmodified() {\r\n    String test = \"a\";\r\n    int firstAddressOfTest = System.identityHashCode(test);\r\n    test += \"b\";\r\n    int secondAddressOfTest = System.identityHashCode(test);\r\n\r\n    assertNotEquals(firstAddressOfTest, secondAddressOfTest);\r\n}\r\n```","```\r\n@Test\r\npublic void givenStringBuilder_whenAppended_thenModified() {\r\n    StringBuilder test = new StringBuilder();\r\n    test.append(\"a\");\r\n    int firstAddressOfTest = System.identityHashCode(test);\r\n    test.append(\"b\");\r\n    int secondAddressOfTest = System.identityHashCode(test);        \r\n\r\n    assertEquals(firstAddressOfTest, secondAddressOfTest);\r\n}\r\n```","```\r\n@Test\r\npublic void givenIdenticalCharSequences_whenCastToString_thenEqual() {\r\n    CharSequence charSeq1 = \"baeldung_1\";\r\n    CharSequence charSeq2 = \"baeldung_2\";\r\n\r\n    assertTrue(charSeq1.toString().compareTo(charSeq2.toString()) > 0);\r\n}\r\n```"]