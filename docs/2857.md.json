["```\r\nPath socketPath = Path\r\n  .of(System.getProperty(\"user.home\"))\r\n  .resolve(\"baeldung.socket\");\r\nUnixDomainSocketAddress socketAddress = UnixDomainSocketAddress.of(socketPath);\r\n```","```\r\nFiles.deleteIfExists(socketPath);\r\n```","```\r\njava.net.BindException: Address already in use\r\n```","```\r\nServerSocketChannel serverChannel = ServerSocketChannel\r\n  .open(StandardProtocolFamily.UNIX);\r\n```","```\r\nserverChannel.bind(socketAddress);\r\n```","```\r\nSocketChannel channel = serverChannel.accept();\r\n```","```\r\nwhile (true) {\r\n    readSocketMessage(channel)\r\n      .ifPresent(message -> System.out.printf(\"[Client message] %s\", message));\r\n    Thread.sleep(100);\r\n}\r\n```","```\r\nprivate Optional<String> readSocketMessage(SocketChannel channel) throws IOException {\r\n    ByteBuffer buffer = ByteBuffer.allocate(1024);\r\n    int bytesRead = channel.read(buffer);\r\n    if (bytesRead < 0)\r\n        return Optional.empty();\r\n\r\n    byte[] bytes = new byte[bytesRead];\r\n    buffer.flip();\r\n    buffer.get(bytes);\r\n    String message = new String(bytes);\r\n    return Optional.of(message);\r\n}\r\n```","```\r\nSocketChannel channel = SocketChannel\r\n  .open(StandardProtocolFamily.UNIX);\r\nchannel.connect(socketAddress);\r\n```","```\r\nString message = \"Hello from Baeldung Unix domain socket article\";\r\n```","```\r\nByteBuffer buffer = ByteBuffer.allocate(1024);\r\nbuffer.clear();\r\nbuffer.put(message.getBytes());\r\nbuffer.flip();\r\n```","```\r\nwhile (buffer.hasRemaining()) {\r\n    channel.write(buffer);\r\n}\r\n```","```\r\n[Client message] Hello from Baeldung Unix domain socket article!\r\n```","```\r\nMongoClient mongoClient = new MongoClient(\"/tmp/mongodb-27017.sock\");\r\n```","```\r\n<dependency>\r\n    <groupId>com.github.jnr</groupId>\r\n    <artifactId>jnr-unixsocket</artifactId>\r\n    <version>0.38.13</version>\r\n</dependency>\r\n```","```\r\nString dbUrl = \"jdbc:postgresql://databaseName?socketFactory=org.newsclub.net.unix.\r\n  AFUNIXSocketFactory$FactoryArg&socketFactoryArg;=/var/run/postgresql/.s.PGSQL.5432\";\r\nConnection connection = DriverManager\r\n  .getConnection(dbUrl, \"dbUsername\", \"dbPassword\")\r\n```","```\r\n<dependency>\r\n  <groupId>com.kohlschutter.junixsocket</groupId>\r\n  <artifactId>junixsocket-core</artifactId>\r\n  <version>2.4.0</version>\r\n</dependency>\r\n```"]