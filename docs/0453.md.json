["```\r\ndocker run -d -p 5672:5672 -p 15672:15672 --name my-rabbit rabbitmq:3-management\r\n```","```\r\npublic static final String QUEUE_MESSAGES = \"baeldung-messages-queue\";\r\npublic static final String EXCHANGE_MESSAGES = \"baeldung-messages-exchange\";\r\n\r\n@Bean\r\nQueue messagesQueue() {\r\n    return QueueBuilder.durable(QUEUE_MESSAGES)\r\n      .build();\r\n}\r\n\r\n@Bean\r\nDirectExchange messagesExchange() {\r\n    return new DirectExchange(EXCHANGE_MESSAGES);\r\n}\r\n\r\n@Bean\r\nBinding bindingMessages() {\r\n    return BindingBuilder.bind(messagesQueue()).to(messagesExchange()).with(QUEUE_MESSAGES);\r\n}\r\n```","```\r\npublic void sendMessage() {\r\n    rabbitTemplate\r\n      .convertAndSend(SimpleDLQAmqpConfiguration.EXCHANGE_MESSAGES,\r\n        SimpleDLQAmqpConfiguration.QUEUE_MESSAGES, \"Some message id:\" + messageNumber++);\r\n}\r\n```","```\r\n@RabbitListener(queues = SimpleDLQAmqpConfiguration.QUEUE_MESSAGES)\r\npublic void receiveMessage(Message message) throws BusinessException {\r\n    throw new BusinessException();\r\n}\r\n```","```\r\nmvn spring-boot:run -Dstart-class=com.baeldung.springamqp.errorhandling.ErrorHandlingApp\r\n```","```\r\nWARN 22260 --- [ntContainer#0-1] s.a.r.l.ConditionalRejectingErrorHandler :\r\n  Execution of Rabbit message listener failed.\r\nCaused by: com.baeldung.springamqp.errorhandling.errorhandler.BusinessException: null\r\n```","```\r\n@Bean\r\nQueue messagesQueue() {\r\n    return QueueBuilder.durable(QUEUE_MESSAGES)\r\n      .withArgument(\"x-dead-letter-exchange\", \"\")\r\n      .withArgument(\"x-dead-letter-routing-key\", QUEUE_MESSAGES_DLQ)\r\n      .build();\r\n}\r\n\r\n@Bean\r\nQueue deadLetterQueue() {\r\n    return QueueBuilder.durable(QUEUE_MESSAGES_DLQ).build();\r\n}\r\n```","```\r\nExchange: (AMQP default)\r\nRouting Key: baeldung-messages-queue.dlq\r\n```","```\r\nx-death:\r\n  count: 1\r\n  exchange: baeldung-messages-exchange\r\n  queue: baeldung-messages-queue \r\n  reason: rejected\r\n  routing-keys: baeldung-messages-queue \r\n  time: 1571232954 \r\n```","```\r\npublic static final String DLX_EXCHANGE_MESSAGES = QUEUE_MESSAGES + \".dlx\";\r\n\r\n@Bean\r\nQueue messagesQueue() {\r\n    return QueueBuilder.durable(QUEUE_MESSAGES)\r\n      .withArgument(\"x-dead-letter-exchange\", DLX_EXCHANGE_MESSAGES)\r\n      .build();\r\n}\r\n\r\n@Bean\r\nFanoutExchange deadLetterExchange() {\r\n    return new FanoutExchange(DLX_EXCHANGE_MESSAGES);\r\n}\r\n\r\n@Bean\r\nQueue deadLetterQueue() {\r\n    return QueueBuilder.durable(QUEUE_MESSAGES_DLQ).build();\r\n}\r\n\r\n@Bean\r\nBinding deadLetterBinding() {\r\n    return BindingBuilder.bind(deadLetterQueue()).to(deadLetterExchange());\r\n}\r\n```","```\r\nExchange: baeldung-messages-queue.dlx\r\nRouting Key: baeldung-messages-queue \r\n```","```\r\n@RabbitListener(queues = QUEUE_MESSAGES_DLQ)\r\npublic void processFailedMessages(Message message) {\r\n    log.info(\"Received failed message: {}\", message.toString());\r\n}\r\n```","```\r\nWARN 11752 --- [ntContainer#0-1] s.a.r.l.ConditionalRejectingErrorHandler :\r\n  Execution of Rabbit message listener failed.\r\nINFO 11752 --- [ntContainer#1-1] c.b.s.e.consumer.SimpleDLQAmqpContainer  : \r\n  Received failed message:\r\n```","```\r\n@RabbitListener(queues = QUEUE_MESSAGES_DLQ)\r\npublic void processFailedMessagesRequeue(Message failedMessage) {\r\n    log.info(\"Received failed message, requeueing: {}\", failedMessage.toString());\r\n    rabbitTemplate.send(EXCHANGE_MESSAGES, \r\n      failedMessage.getMessageProperties().getReceivedRoutingKey(), failedMessage);\r\n}\r\n```","```\r\nINFO 23476 --- [ntContainer#0-1] c.b.s.e.c.RoutingDLQAmqpContainer        :\r\n  Received message: \r\nWARN 23476 --- [ntContainer#0-1] s.a.r.l.ConditionalRejectingErrorHandler :\r\n  Execution of Rabbit message listener failed.\r\nINFO 23476 --- [ntContainer#1-1] c.b.s.e.c.RoutingDLQAmqpContainer        : \r\n  Received failed message, requeueing:\r\n```","```\r\npublic void processFailedMessagesRetryHeaders(Message failedMessage) {\r\n    Integer retriesCnt = (Integer) failedMessage.getMessageProperties()\r\n      .getHeaders().get(HEADER_X_RETRIES_COUNT);\r\n    if (retriesCnt == null) retriesCnt = 1;\r\n    if (retriesCnt > MAX_RETRIES_COUNT) {\r\n        log.info(\"Discarding message\");\r\n        return;\r\n    }\r\n    log.info(\"Retrying message for the {} time\", retriesCnt);\r\n    failedMessage.getMessageProperties()\r\n      .getHeaders().put(HEADER_X_RETRIES_COUNT, ++retriesCnt);\r\n    rabbitTemplate.send(EXCHANGE_MESSAGES, \r\n      failedMessage.getMessageProperties().getReceivedRoutingKey(), failedMessage);\r\n}\r\n```","```\r\nWARN 1224 --- [ntContainer#0-1] s.a.r.l.ConditionalRejectingErrorHandler : \r\n  Execution of Rabbit message listener failed.\r\nINFO 1224 --- [ntContainer#1-1] c.b.s.e.consumer.DLQCustomAmqpContainer  : \r\n  Retrying message for the 1 time\r\nWARN 1224 --- [ntContainer#0-1] s.a.r.l.ConditionalRejectingErrorHandler : \r\n  Execution of Rabbit message listener failed.\r\nINFO 1224 --- [ntContainer#1-1] c.b.s.e.consumer.DLQCustomAmqpContainer  : \r\n  Retrying message for the 2 time\r\nWARN 1224 --- [ntContainer#0-1] s.a.r.l.ConditionalRejectingErrorHandler : \r\n  Execution of Rabbit message listener failed.\r\nINFO 1224 --- [ntContainer#1-1] c.b.s.e.consumer.DLQCustomAmqpContainer  : \r\n  Discarding message\r\n```","```\r\npublic static final String QUEUE_PARKING_LOT = QUEUE_MESSAGES + \".parking-lot\";\r\npublic static final String EXCHANGE_PARKING_LOT = QUEUE_MESSAGES + \"exchange.parking-lot\";\r\n\r\n@Bean\r\nFanoutExchange parkingLotExchange() {\r\n    return new FanoutExchange(EXCHANGE_PARKING_LOT);\r\n}\r\n\r\n@Bean\r\nQueue parkingLotQueue() {\r\n    return QueueBuilder.durable(QUEUE_PARKING_LOT).build();\r\n}\r\n\r\n@Bean\r\nBinding parkingLotBinding() {\r\n    return BindingBuilder.bind(parkingLotQueue()).to(parkingLotExchange());\r\n}\r\n```","```\r\n@RabbitListener(queues = QUEUE_MESSAGES_DLQ)\r\npublic void processFailedMessagesRetryWithParkingLot(Message failedMessage) {\r\n    Integer retriesCnt = (Integer) failedMessage.getMessageProperties()\r\n      .getHeaders().get(HEADER_X_RETRIES_COUNT);\r\n    if (retriesCnt == null) retriesCnt = 1;\r\n    if (retriesCnt > MAX_RETRIES_COUNT) {\r\n        log.info(\"Sending message to the parking lot queue\");\r\n        rabbitTemplate.send(EXCHANGE_PARKING_LOT, \r\n          failedMessage.getMessageProperties().getReceivedRoutingKey(), failedMessage);\r\n        return;\r\n    }\r\n    log.info(\"Retrying message for the {} time\", retriesCnt);\r\n    failedMessage.getMessageProperties()\r\n      .getHeaders().put(HEADER_X_RETRIES_COUNT, ++retriesCnt);\r\n    rabbitTemplate.send(EXCHANGE_MESSAGES, \r\n      failedMessage.getMessageProperties().getReceivedRoutingKey(), failedMessage);\r\n}\r\n```","```\r\n@RabbitListener(queues = QUEUE_PARKING_LOT)\r\npublic void processParkingLotQueue(Message failedMessage) {\r\n    log.info(\"Received message in parking lot queue\");\r\n    // Save to DB or send a notification.\r\n}\r\n```","```\r\nWARN 14768 --- [ntContainer#0-1] s.a.r.l.ConditionalRejectingErrorHandler : \r\n  Execution of Rabbit message listener failed.\r\nINFO 14768 --- [ntContainer#1-1] c.b.s.e.c.ParkingLotDLQAmqpContainer     : \r\n  Retrying message for the 1 time\r\nWARN 14768 --- [ntContainer#0-1] s.a.r.l.ConditionalRejectingErrorHandler : \r\n  Execution of Rabbit message listener failed.\r\nINFO 14768 --- [ntContainer#1-1] c.b.s.e.c.ParkingLotDLQAmqpContainer     : \r\n  Retrying message for the 2 time\r\nWARN 14768 --- [ntContainer#0-1] s.a.r.l.ConditionalRejectingErrorHandler : \r\n  Execution of Rabbit message listener failed.\r\nINFO 14768 --- [ntContainer#1-1] c.b.s.e.c.ParkingLotDLQAmqpContainer     : \r\n  Sending message to the parking lot queue\r\nINFO 14768 --- [ntContainer#2-1] c.b.s.e.c.ParkingLotDLQAmqpContainer     : \r\n  Received message in parking lot queue\r\n```","```\r\npublic class CustomErrorHandler implements ErrorHandler {\r\n    @Override\r\n    public void handleError(Throwable t) {\r\n        if (!(t.getCause() instanceof BusinessException)) {\r\n            throw new AmqpRejectAndDontRequeueException(\"Error Handler converted exception to fatal\", t);\r\n        }\r\n    }\r\n}\r\n```","```\r\npublic class CustomFatalExceptionStrategy \r\n      extends ConditionalRejectingErrorHandler.DefaultExceptionStrategy {\r\n    @Override\r\n    public boolean isFatal(Throwable t) {\r\n        return !(t.getCause() instanceof BusinessException);\r\n    }\r\n}\r\n```","```\r\n@Bean\r\npublic SimpleRabbitListenerContainerFactory rabbitListenerContainerFactory(\r\n  ConnectionFactory connectionFactory,\r\n  SimpleRabbitListenerContainerFactoryConfigurer configurer) {\r\n      SimpleRabbitListenerContainerFactory factory = \r\n        new SimpleRabbitListenerContainerFactory();\r\n      configurer.configure(factory, connectionFactory);\r\n      factory.setErrorHandler(errorHandler());\r\n      return factory;\r\n}\r\n\r\n@Bean\r\npublic ErrorHandler errorHandler() {\r\n    return new ConditionalRejectingErrorHandler(customExceptionStrategy());\r\n}\r\n\r\n@Bean\r\nFatalExceptionStrategy customExceptionStrategy() {\r\n    return new CustomFatalExceptionStrategy();\r\n}\r\n```"]