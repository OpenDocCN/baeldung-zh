["```\r\n<dependency>\r\n    <groupId>net.objecthunter</groupId>\r\n    <artifactId>exp4j</artifactId>\r\n    <version>0.4.8</version>\r\n</dependency>\r\n```","```\r\n@Test\r\npublic void givenSimpleExpression_whenCallEvaluateMethod_thenSuccess() {\r\n    Expression expression = new ExpressionBuilder(\"3+2\").build();\r\n    double result = expression.evaluate();\r\n    Assertions.assertEquals(5, result);\r\n}\r\n```","```\r\n@Test\r\npublic void givenTwoVariables_whenCallEvaluateMethod_thenSuccess() {\r\n    Expression expression = new ExpressionBuilder(\"3x+2y\")\r\n      .variables(\"x\", \"y\")\r\n      .build()\r\n      .setVariable(\"x\", 2)\r\n      .setVariable(\"y\", 3);\r\n\r\n    double result = expression.evaluate();\r\n\r\n    Assertions.assertEquals(12, result);\r\n}\r\n```","```\r\n@Test\r\npublic void givenMathFunctions_whenCallEvaluateMethod_thenSuccess() {\r\n    Expression expression = new ExpressionBuilder(\"sin(x)*sin(x)+cos(x)*cos(x)\")\r\n      .variables(\"x\")\r\n      .build()\r\n      .setVariable(\"x\", 0.5);\r\n\r\n    double result = expression.evaluate();\r\n\r\n    Assertions.assertEquals(1, result);\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>com.fathzer</groupId>\r\n    <artifactId>javaluator</artifactId>\r\n    <version>3.0.3</version>\r\n</dependency>\r\n```","```\r\n@Test\r\npublic void givenExpression_whenCallEvaluateMethod_thenSuccess() {\r\n    String expression = \"3+2\";\r\n    DoubleEvaluator eval = new DoubleEvaluator();\r\n\r\n    Double result = eval.evaluate(expression);\r\n\r\n    Assertions.assertEquals(5, result);\r\n}\r\n```","```\r\n@Test\r\npublic void givenVariables_whenCallEvaluateMethod_thenSuccess() {\r\n    String expression = \"3*x+2*y\";\r\n    DoubleEvaluator eval = new DoubleEvaluator();\r\n    StaticVariableSet<Double> variables = new StaticVariableSet<Double>();\r\n    variables.set(\"x\", 2.0);\r\n    variables.set(\"y\", 3.0);\r\n\r\n    Double result = eval.evaluate(expression, variables);\r\n\r\n    Assertions.assertEquals(12, result);\r\n}\r\n```","```\r\n@Test\r\npublic void givenMathFunction_whenCallEvaluateMethod_thenSuccess() {\r\n    String expression = \"sin(x)*sin(x)+cos(x)*cos(x)\";\r\n    DoubleEvaluator eval = new DoubleEvaluator();\r\n    StaticVariableSet<Double> variables = new StaticVariableSet<Double>();\r\n    variables.set(\"x\", 0.5);\r\n\r\n    Double result = eval.evaluate(expression, variables);\r\n\r\n    Assertions.assertEquals(1, result);\r\n}\r\n```","```\r\nScriptEngineManager scriptEngineManager = new ScriptEngineManager();\r\nScriptEngine scriptEngine = scriptEngineManager.getEngineByName(\"JavaScript\");\r\n```","```\r\nString expression = \"3+2\";\r\nInteger result = (Integer) scriptEngine.eval(expression);\r\nAssertions.assertEquals(5, result);\r\n```","```\r\nString expression = \"x=2; y=3; 3*x+2*y;\";\r\nDouble result = (Double) scriptEngine.eval(expression);\r\nAssertions.assertEquals(12, result);\r\n```"]