["```\r\n<dependency>\r\n    <groupId>com.google.crypto.tink</groupId>\r\n    <artifactId>tink</artifactId>\r\n    <version>1.2.2</version>\r\n</dependency>\r\n```","```\r\ndependencies {\r\n  compile 'com.google.crypto.tink:tink:latest'\r\n}\r\n```","```\r\nTinkConfig.register();\r\n```","```\r\nAeadConfig.register();\r\n```","```\r\nAead aead = AeadFactory.getPrimitive(keysetHandle); \r\n```","```\r\nKeysetHandle keysetHandle = KeysetHandle.generateNew(AeadKeyTemplates.AES256_GCM);\r\n```","```\r\nString keysetFilename = \"keyset.json\";\r\nCleartextKeysetHandle.write(keysetHandle, JsonKeysetWriter.withFile(new File(keysetFilename)));\r\n```","```\r\nString keysetFilename = \"keyset.json\";\r\nKeysetHandle keysetHandle = CleartextKeysetHandle.read(JsonKeysetReader.withFile(new File(keysetFilename)));\r\n```","```\r\nAeadConfig.register();\r\nKeysetHandle keysetHandle = KeysetHandle.generateNew(\r\n  AeadKeyTemplates.AES256_GCM);\r\n```","```\r\nString plaintext = \"baeldung\";\r\nString associatedData = \"Tink\";\r\n\r\nAead aead = AeadFactory.getPrimitive(keysetHandle); \r\nbyte[] ciphertext = aead.encrypt(plaintext.getBytes(), associatedData.getBytes());\r\n```","```\r\nString decrypted = new String(aead.decrypt(ciphertext, associatedData.getBytes()));\r\n```","```\r\nAeadConfig.register();\r\nKeysetHandle keysetHandle = KeysetHandle.generateNew(\r\n  StreamingAeadKeyTemplates.AES128_CTR_HMAC_SHA256_4KB);\r\nStreamingAead streamingAead = StreamingAeadFactory.getPrimitive(keysetHandle);\r\n\r\nFileChannel cipherTextDestination = new FileOutputStream(\"cipherTextFile\").getChannel();\r\nWritableByteChannel encryptingChannel =\r\n  streamingAead.newEncryptingChannel(cipherTextDestination, associatedData.getBytes());\r\n\r\nByteBuffer buffer = ByteBuffer.allocate(CHUNK_SIZE);\r\nInputStream in = new FileInputStream(\"plainTextFile\");\r\n\r\nwhile (in.available() > 0) {\r\n    in.read(buffer.array());\r\n    encryptingChannel.write(buffer);\r\n}\r\n\r\nencryptingChannel.close();\r\nin.close();\r\n```","```\r\nFileChannel cipherTextSource = new FileInputStream(\"cipherTextFile\").getChannel();\r\nReadableByteChannel decryptingChannel =\r\n  streamingAead.newDecryptingChannel(cipherTextSource, associatedData.getBytes());\r\n\r\nOutputStream out = new FileOutputStream(\"plainTextFile\");\r\nint cnt = 1;\r\ndo {\r\n    buffer.clear();\r\n    cnt = decryptingChannel.read(buffer);\r\n    out.write(buffer.array());\r\n} while (cnt>0);\r\n\r\ndecryptingChannel.close();\r\nout.close();\r\n```","```\r\nTinkConfig.register();\r\n\r\nKeysetHandle privateKeysetHandle = KeysetHandle.generateNew(\r\n  HybridKeyTemplates.ECIES_P256_HKDF_HMAC_SHA256_AES128_CTR_HMAC_SHA256);\r\nKeysetHandle publicKeysetHandle = privateKeysetHandle.getPublicKeysetHandle();\r\n\r\nString plaintext = \"baeldung\";\r\nString contextInfo = \"Tink\";\r\n\r\nHybridEncrypt hybridEncrypt = HybridEncryptFactory.getPrimitive(publicKeysetHandle);\r\nHybridDecrypt hybridDecrypt = HybridDecryptFactory.getPrimitive(privateKeysetHandle);\r\n\r\nbyte[] ciphertext = hybridEncrypt.encrypt(plaintext.getBytes(), contextInfo.getBytes());\r\nbyte[] plaintextDecrypted = hybridDecrypt.decrypt(ciphertext, contextInfo.getBytes());\r\n```","```\r\nTinkConfig.register();\r\n\r\nKeysetHandle keysetHandle = KeysetHandle.generateNew(\r\n  MacKeyTemplates.HMAC_SHA256_128BITTAG);\r\n\r\nString data = \"baeldung\";\r\n\r\nMac mac = MacFactory.getPrimitive(keysetHandle);\r\n\r\nbyte[] tag = mac.computeMac(data.getBytes());\r\nmac.verifyMac(tag, data.getBytes());\r\n```","```\r\nTinkConfig.register();\r\n\r\nKeysetHandle privateKeysetHandle = KeysetHandle.generateNew(SignatureKeyTemplates.ECDSA_P256);\r\nKeysetHandle publicKeysetHandle = privateKeysetHandle.getPublicKeysetHandle();\r\n\r\nString data = \"baeldung\";\r\n\r\nPublicKeySign signer = PublicKeySignFactory.getPrimitive(privateKeysetHandle);\r\nPublicKeyVerify verifier = PublicKeyVerifyFactory.getPrimitive(publicKeysetHandle);\r\n\r\nbyte[] signature = signer.sign(data.getBytes()); \r\nverifier.verify(signature, data.getBytes());\r\n```"]