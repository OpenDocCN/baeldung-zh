["```\r\n<dependency>\r\n    <groupId>org.springframework.cloud</groupId>\r\n    <artifactId>spring-cloud-starter-netflix-zuul</artifactId>\r\n    <version>2.0.2.RELEASE</version>\r\n</dependency> \r\n```","```\r\n@EnableZuulProxy\r\n@SpringBootApplication\r\npublic class GatewayApplication {\r\n    public static void main(String[] args) {\r\n\tSpringApplication.run(GatewayApplication.class, args);\r\n    }\r\n} \r\n```","```\r\nserver:\r\n    port: 8080 \r\n```","```\r\nzuul:\r\n  routes:\r\n    spring-security-oauth-resource:\r\n      path: /spring-security-oauth-resource/**\r\n      url: http://localhost:8082/spring-security-oauth-resource\r\n    oauth:\r\n      path: /oauth/**\r\n      url: http://localhost:8081/spring-security-oauth-server/oauth \r\n```","```\r\nserver:\r\n  port: 8080\r\nzuul:\r\n  sensitiveHeaders: Cookie,Set-Cookie\r\n  routes:\r\n    spring-security-oauth-resource:\r\n      path: /spring-security-oauth-resource/**\r\n      url: http://localhost:8082/spring-security-oauth-resource\r\n    oauth:\r\n      path: /oauth/**\r\n      url: http://localhost:8081/spring-security-oauth-server/oauth \r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.security.oauth</groupId>\r\n    <artifactId>spring-security-oauth2</artifactId>\r\n    <version>2.3.3.RELEASE</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.security</groupId>\r\n    <artifactId>spring-security-jwt</artifactId>\r\n    <version>1.0.9.RELEASE</version>\r\n</dependency> \r\n```","```\r\n@Configuration\r\n@Configuration\r\n@EnableResourceServer\r\npublic class GatewayConfiguration extends ResourceServerConfigurerAdapter {\r\n    @Override\r\n    public void configure(final HttpSecurity http) throws Exception {\r\n\thttp.authorizeRequests()\r\n          .antMatchers(\"/oauth/**\")\r\n          .permitAll()\r\n          .antMatchers(\"/**\")\r\n\t  .authenticated();\r\n    }\r\n} \r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.security.oauth.boot</groupId>\r\n    <artifactId>spring-security-oauth2-autoconfigure</artifactId>\r\n    <version>2.1.2.RELEASE</version>\r\n</dependency>\r\n```","```\r\nsecurity:\r\n  oauth2:\r\n    resource:\r\n      jwt:\r\n        key-value: 123 \r\n```","```\r\ncurl -X POST \\\r\n  http://localhost:8080/oauth/token \\\r\n  -H 'Authorization: Basic Zm9vQ2xpZW50SWRQYXNzd29yZDpzZWNyZXQ=' \\\r\n  -H 'Cache-Control: no-cache' \\\r\n  -H 'Content-Type: application/x-www-form-urlencoded' \\\r\n  -d 'grant_type=password&password;=123&username;=john' \r\n```","```\r\n{    \r\n    \"access_token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpX...\",\r\n    \"token_type\":\"bearer\",    \r\n    \"refresh_token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpX...\",\r\n    \"expires_in\":3599,\r\n    \"scope\":\"foo read write\",\r\n    \"organization\":\"johnwKfc\",\r\n    \"jti\":\"8e2c56d3-3e2e-4140-b120-832783b7374b\"\r\n} \r\n```","```\r\ncurl -X GET \\\r\ncurl -X GET \\\r\n  http:/localhost:8080/spring-security-oauth-resource/users/extra \\\r\n  -H 'Accept: application/json, text/plain, */*' \\\r\n  -H 'Accept-Encoding: gzip, deflate' \\\r\n  -H 'Accept-Language: en-US,en;q=0.9' \\\r\n  -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXV...' \\\r\n  -H 'Cache-Control: no-cache' \\ \r\n```","```\r\n{\r\n    \"user_name\":\"john\",\r\n    \"scope\":[\"foo\",\"read\",\"write\"],\r\n    \"organization\":\"johnwKfc\",\r\n    \"exp\":1544584758,\r\n    \"authorities\":[\"ROLE_USER\"],\r\n    \"jti\":\"8e2c56d3-3e2e-4140-b120-832783b7374b\",\r\n    \"client_id\":\"fooClientIdPassword\"\r\n} \r\n```"]