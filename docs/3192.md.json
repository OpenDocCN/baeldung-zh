["```\r\nPattern.compile(\"[^:]+://(?:[.a-z]+/?)+\")\r\n```","```\r\nPattern simpleUrlPattern = Pattern.compile(\"[^:]+://(?:[.a-z]+/?)+\");\r\nMatcher urlMatcher\r\n  = simpleUrlPattern.matcher(\"http://www.microsoft.com/some/other/url/path\");\r\n\r\nAssertions.assertThat(urlMatcher.matches()).isTrue(); \r\n```","```\r\nPattern simpleUrlPattern = Pattern.compile(\"[^:]+://(?:[.a-z]+/?)+\");\r\nMatcher urlMatcher = simpleUrlPattern.matcher(\"http://www.microsoft.com/\");\r\n\r\nAssertions.assertThat(urlMatcher.matches()).isTrue();\r\nAssertions.assertThatThrownBy(() -> urlMatcher.group(1))\r\n  .isInstanceOf(IndexOutOfBoundsException.class);\r\n```","```\r\nPattern simpleUrlPattern\r\n  = Pattern.compile(\"[^:]+://(?:[.a-z]+/?)+\");\r\nMatcher urlMatcher\r\n  = simpleUrlPattern.matcher(\"http://www.Microsoft.com/\");\r\n\r\nAssertions.assertThat(urlMatcher.matches()).isFalse();\r\n```","```\r\nPattern.compile(\"[^:]+://(?:[.a-zA-Z]+/?)+\")\r\n```","```\r\nPattern.compile(\"[^:]+://(?:[.a-z]+/?)+\", Pattern.CASE_INSENSITIVE)\r\n```","```\r\nPattern.compile(\"[^:]+://(?i:[.a-z]+/?)+\");\r\n```","```\r\nPattern scopedCaseInsensitiveUrlPattern\r\n  = Pattern.compile(\"[^:]+://(?i:[.a-z]+/?)+\");\r\nMatcher urlMatcher\r\n  = scopedCaseInsensitiveUrlPattern.matcher(\"http://www.Microsoft.com/\");\r\n\r\nAssertions.assertThat(urlMatcher.matches()).isTrue();\r\n```","```\r\nPattern scopedCaseSensitiveUrlPattern\r\n  = Pattern.compile(\"[^:]+://(?-i:[.a-z]+/?)+/ending-path\", Pattern.CASE_INSENSITIVE);\r\nMatcher urlMatcher\r\n  = scopedCaseSensitiveUrlPattern.matcher(\"http://www.Microsoft.com/ending-path\");\r\n\r\nAssertions.assertThat(urlMatcher.matches()).isFalse(); \r\n```","```\r\nPattern independentUrlPattern\r\n  = Pattern.compile(\"[^:]+://(?>[.a-z]+/?)+/ending-path\");\r\nMatcher independentMatcher\r\n  = independentUrlPattern.matcher(\"http://www.microsoft.com/ending-path\");\r\n\r\nAssertions.assertThat(independentMatcher.matches()).isFalse();\r\n```","```\r\nPattern independentUrlPatternWithBacktracking\r\n  = Pattern.compile(\"[^:]+://(?>(?:[.a-z]+/?)+/)ending-path\");\r\nMatcher independentMatcher\r\n  = independentUrlPatternWithBacktracking.matcher(\"http://www.microsoft.com/ending-path\");\r\n\r\nAssertions.assertThat(independentMatcher.matches()).isTrue();\r\n```"]