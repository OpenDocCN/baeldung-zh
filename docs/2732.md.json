["```\r\n<dependency>\r\n    <groupId>org.apache.directory.server</groupId>\r\n    <artifactId>apacheds-test-framework</artifactId>\r\n    <version>2.0.0.AM26</version>\r\n    <scope>test</scope>\r\n</dependency> \r\n```","```\r\nHashtable<String, String> environment = new Hashtable<String, String>();\r\n\r\nenvironment.put(Context.INITIAL_CONTEXT_FACTORY, \"com.sun.jndi.ldap.LdapCtxFactory\");\r\nenvironment.put(Context.PROVIDER_URL, \"ldap://localhost:10389\");\r\nenvironment.put(Context.SECURITY_AUTHENTICATION, \"simple\");\r\nenvironment.put(Context.SECURITY_PRINCIPAL, \"cn=Joe Simms,ou=Users,dc=baeldung,dc=com\");\r\nenvironment.put(Context.SECURITY_CREDENTIALS, \"12345\");\r\n```","```\r\nDirContext context = new InitialDirContext(environment);\r\ncontext.close();\r\n```","```\r\nassertThatCode(() -> authenticateUser(environment)).doesNotThrowAnyException();\r\n```","```\r\nenvironment.put(Context.SECURITY_CREDENTIALS, \"wrongpassword\");\r\n```","```\r\nassertThatExceptionOfType(AuthenticationException.class).isThrownBy(() -> authenticateUser(environment));\r\n```","```\r\nHashtable<String, String> environment = new Hashtable<String, String>();\r\n\r\nenvironment.put(Context.INITIAL_CONTEXT_FACTORY, \"com.sun.jndi.ldap.LdapCtxFactory\");\r\nenvironment.put(Context.PROVIDER_URL, \"ldap://localhost:10389\");\r\nenvironment.put(Context.SECURITY_AUTHENTICATION, \"simple\");\r\nenvironment.put(Context.SECURITY_PRINCIPAL, \"uid=admin,ou=system\");\r\nenvironment.put(Context.SECURITY_CREDENTIALS, \"secret\");\r\n```","```\r\nDirContext adminContext = new InitialDirContext(environment);\r\n```","```\r\nString filter = \"(&(objectClass=person)(cn=Joe Simms))\";\r\n```","```\r\nString[] attrIDs = { \"cn\" };\r\nSearchControls searchControls = new SearchControls();\r\nsearchControls.setReturningAttributes(attrIDs);\r\nsearchControls.setSearchScope(SearchControls.SUBTREE_SCOPE);\r\n```","```\r\nNamingEnumeration<SearchResult> searchResults\r\n  = adminContext.search(\"dc=baeldung,dc=com\", filter, searchControls);\r\n\r\nString commonName = null;\r\nString distinguishedName = null;\r\nif (searchResults.hasMore()) {\r\n\r\n    SearchResult result = (SearchResult) searchResults.next();\r\n    Attributes attrs = result.getAttributes();\r\n\r\n    distinguishedName = result.getNameInNamespace();\r\n    assertThat(distinguishedName, isEqualTo(\"cn=Joe Simms,ou=Users,dc=baeldung,dc=com\")));\r\n\r\n    commonName = attrs.get(\"cn\").toString();\r\n    assertThat(commonName, isEqualTo(\"cn: Joe Simms\")));\r\n} \r\n```","```\r\nenvironment.put(Context.SECURITY_PRINCIPAL, distinguishedName);\r\nenvironment.put(Context.SECURITY_CREDENTIALS, \"12345\");\r\n```","```\r\nassertThatCode(() -> authenticateUser(environment)).doesNotThrowAnyException();\r\n```","```\r\nadminContext.close();\r\n```"]