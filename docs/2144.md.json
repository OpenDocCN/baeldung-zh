["```\r\npublic class SoundPlayerUsingClip implements LineListener {\r\n\r\n    boolean isPlaybackCompleted;\r\n\r\n    @Override\r\n    public void update(LineEvent event) {\r\n        if (LineEvent.Type.START == event.getType()) {\r\n            System.out.println(\"Playback started.\");\r\n        } else if (LineEvent.Type.STOP == event.getType()) {\r\n            isPlaybackCompleted = true;\r\n            System.out.println(\"Playback completed.\");\r\n        }\r\n    }\r\n}\r\n```","```\r\nInputStream inputStream = getClass().getClassLoader().getResourceAsStream(audioFilePath);\r\n```","```\r\nAudioInputStream audioStream = AudioSystem.getAudioInputStream(inputStream);\r\n```","```\r\nAudioFormat audioFormat = audioStream.getFormat();\r\nDataLine.Info info = new DataLine.Info(SourceDataLine.class, audioFormat);\r\n```","```\r\nClip audioClip = (Clip) AudioSystem.getLine(info);\r\naudioClip.addLineListener(this);\r\naudioClip.open(audioStream);\r\naudioClip.start();\r\n```","```\r\naudioClip.close();\r\naudioStream.close();\r\n```","```\r\naudioClip.loop(4); \r\n```","```\r\naudioClip.loop(Clip.LOOP_CONTINUOUSLY);\r\n```","```\r\naudioClip.setMicrosecondPosition(30_000_000);\r\n```","```\r\nInputStream inputStream = getClass().getClassLoader().getResourceAsStream(audioFilePath);\r\n```","```\r\nAudioInputStream audioStream = AudioSystem.getAudioInputStream(inputStream);\r\n```","```\r\nAudioFormat audioFormat = audioStream.getFormat();\r\nDataLine.Info info = new DataLine.Info(Clip.class, audioFormat);\r\n```","```\r\nSourceDataLine sourceDataLine = (SourceDataLine) AudioSystem.getLine(info);\r\nsourceDataLine.open(audioFormat);\r\nsourceDataLine.start();\r\n```","```\r\nprivate static final int BUFFER_SIZE = 4096;\r\n```","```\r\nbyte[] bufferBytes = new byte[BUFFER_SIZE];\r\nint readBytes = -1;\r\nwhile ((readBytes = audioStream.read(bufferBytes)) != -1) {\r\n    sourceDataLine.write(bufferBytes, 0, readBytes);\r\n}\r\n```","```\r\nsourceDataLine.drain();\r\nsourceDataLine.close();\r\naudioStream.close();\r\n```","```\r\nType[] list = AudioSystem.getAudioFileTypes();\r\nStringBuilder supportedFormat = new StringBuilder(\"Supported formats:\");\r\nfor (Type type : list) {\r\n    supportedFormat.append(\", \" + type.toString());\r\n}\r\nSystem.out.println(supportedFormat.toString());\r\n```","```\r\njavax.sound.sampled.UnsupportedAudioFileException: could not get audio input stream from input file\r\n    at javax.sound.sampled.AudioSystem.getAudioInputStream(AudioSystem.java:1189)\r\n```","```\r\nString audioFilePath = \"AudioFileWithMp3Format.mp3\";\r\nSoundPlayerUsingJavaFx soundPlayerWithJavaFx = new SoundPlayerUsingJavaFx();\r\ntry {\r\n    com.sun.javafx.application.PlatformImpl.startup(() -> {});\r\n    Media media = new Media(\r\n      soundPlayerWithJavaFx.getClass().getClassLoader().getResource(audioFilePath).toExternalForm());\r\n    MediaPlayer mp3Player = new MediaPlayer(media);\r\n    mp3Player.play();\r\n} catch (Exception ex) {\r\n    System.out.println(\"Error occured during playback process:\" + ex.getMessage());\r\n}\r\n```","```\r\nString audioFilePath = \"AudioFileWithMp3Format.mp3\";\r\nSoundPlayerUsingJavaZoom player = new SoundPlayerUsingJavaZoom();\r\ntry {\r\n    BufferedInputStream buffer = new BufferedInputStream(\r\n      player.getClass().getClassLoader().getResourceAsStream(audioFilePath));\r\n    Player mp3Player = new Player(buffer);\r\n    mp3Player.play();\r\n} catch (Exception ex) {\r\n    System.out.println(\"Error occured during playback process:\" + ex.getMessage());\r\n}\r\n```"]