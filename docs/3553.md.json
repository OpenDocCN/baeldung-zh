["```\r\ndocker run -d --name es762 -p 9200:9200 -e \"discovery.type=single-node\" elasticsearch:7.6.2\r\n```","```\r\n{\r\n  \"name\" : \"M4ojISw\",\r\n  \"cluster_name\" : \"docker-cluster\",\r\n  \"cluster_uuid\" : \"CNnjvDZzRqeVP-B04D3CmA\",\r\n  \"version\" : {\r\n    \"number\" : \"7.6.2\",\r\n    \"build_flavor\" : \"default\",\r\n    \"build_type\" : \"docker\",\r\n    \"build_hash\" : \"2f4c224\",\r\n    \"build_date\" : \"2020-03-18T23:22:18.622755Z\",\r\n    \"build_snapshot\" : false,\r\n    \"lucene_version\" : \"8.4.0\",\r\n    \"minimum_wire_compatibility_version\" : \"6.8.0\",\r\n    \"minimum_index_compatibility_version\" : \"6.8.0-beta1\"\r\n  },\r\n  \"tagline\" : \"You Know, for Search\"\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>org.elasticsearch</groupId>\r\n    <artifactId>elasticsearch</artifactId>\r\n    <version>7.6.2</version>\r\n</dependency>\r\n```","```\r\nClientConfiguration clientConfiguration =\r\n    ClientConfiguration.builder().connectedTo(\"localhost:9200\").build();\r\nRestHighLevelClient client = RestClients.create(clientConfiguration).rest();\r\n```","```\r\n@Test\r\npublic void givenJsonString_whenJavaObject_thenIndexDocument() {\r\n  String jsonObject = \"{\\\"age\\\":10,\\\"dateOfBirth\\\":1471466076564,\"\r\n    +\"\\\"fullName\\\":\\\"John Doe\\\"}\";\r\n  IndexRequest request = new IndexRequest(\"people\");\r\n  request.source(jsonObject, XContentType.JSON);\r\n\r\n  IndexResponse response = client.index(request, RequestOptions.DEFAULT);\r\n  String index = response.getIndex();\r\n  long version = response.getVersion();\r\n\r\n  assertEquals(Result.CREATED, response.getResult());\r\n  assertEquals(1, version);\r\n  assertEquals(\"people\", index);\r\n}\r\n```","```\r\nXContentBuilder builder = XContentFactory.jsonBuilder()\r\n  .startObject()\r\n  .field(\"fullName\", \"Test\")\r\n  .field(\"dateOfBirth\", new Date())\r\n  .field(\"age\", \"10\")\r\n  .endObject();\r\n\r\n  IndexRequest indexRequest = new IndexRequest(\"people\");\r\n  indexRequest.source(builder);\r\n\r\n  IndexResponse response = client.index(indexRequest, RequestOptions.DEFAULT);\r\n  assertEquals(Result.CREATED, response.getResult());\r\n```","```\r\nSearchRequest searchRequest = new SearchRequest();\r\nSearchResponse response = client.search(searchRequest, RequestOptions.DEFAULT);\r\nSearchHit[] searchHits = response.getHits().getHits();\r\nList<Person> results = \r\n  Arrays.stream(searchHits)\r\n    .map(hit -> JSON.parseObject(hit.getSourceAsString(), Person.class))\r\n    .collect(Collectors.toList());\r\n```","```\r\nSearchSourceBuilder builder = new SearchSourceBuilder()\r\n  .postFilter(QueryBuilders.rangeQuery(\"age\").from(5).to(15));\r\n\r\nSearchRequest searchRequest = new SearchRequest();\r\nsearchRequest.searchType(SearchType.DFS_QUERY_THEN_FETCH);\r\nsearchRequest.source(builder);\r\n\r\nSearchResponse response = client.search(searchRequest, RequestOptions.DEFAULT);\r\n```","```\r\nGetRequest getRequest = new GetRequest(\"people\");\r\ngetRequest.id(id);\r\n\r\nGetResponse getResponse = client.get(getRequest, RequestOptions.DEFAULT);\r\n// process fields\r\n\r\nDeleteRequest deleteRequest = new DeleteRequest(\"people\");\r\ndeleteRequest.id(id);\r\n\r\nDeleteResponse deleteResponse = client.delete(deleteRequest, RequestOptions.DEFAULT);\r\n```","```\r\nQueryBuilder matchAllQuery = QueryBuilders.matchAllQuery();\r\n```","```\r\nQueryBuilder matchDocumentsWithinRange = QueryBuilders\r\n  .rangeQuery(\"price\").from(15).to(100)\r\n```","```\r\nQueryBuilder matchSpecificFieldQuery= QueryBuilders\r\n  .matchQuery(\"fullName\", \"John Doe\");\r\n```","```\r\nQueryBuilder matchSpecificFieldQuery= QueryBuilders.matchQuery(\r\n  \"Text I am looking for\", \"field_1\", \"field_2^3\", \"*_field_wildcard\");\r\n```","```\r\nQueryBuilder simpleStringQuery = QueryBuilders\r\n  .simpleQueryStringQuery(\"+John -Doe OR Janette\");\r\n```"]