["```\r\npublic enum Distance {\r\n    KILOMETER(\"km\", 1000), \r\n    MILE(\"miles\", 1609.34),\r\n    METER(\"meters\", 1), \r\n    INCH(\"inches\", 0.0254),\r\n    CENTIMETER(\"cm\", 0.01), \r\n    MILLIMETER(\"mm\", 0.001);\r\n\r\n    private String unit;\r\n    private final double meters;\r\n\r\n    private Distance(String unit, double meters) {\r\n        this.unit = unit;\r\n        this.meters = meters;\r\n    }\r\n\r\n    // standard getters and setters\r\n}\r\n```","```\r\nnew ObjectMapper().writeValueAsString(Distance.MILE);\r\n```","```\r\n\"MILE\"\r\n```","```\r\n{\"unit\":\"miles\",\"meters\":1609.34} \r\n```","```\r\n@JsonFormat(shape = JsonFormat.Shape.OBJECT)\r\npublic enum Distance { ... }\r\n```","```\r\n{\"unit\":\"miles\",\"meters\":1609.34}\r\n```","```\r\npublic enum Distance { \r\n    ...\r\n\r\n    @JsonValue\r\n    public String getMeters() {\r\n        return meters;\r\n    }\r\n}\r\n```","```\r\n1609.34\r\n```","```\r\npublic class DistanceSerializer extends StdSerializer {\r\n\r\n    public DistanceSerializer() {\r\n        super(Distance.class);\r\n    }\r\n\r\n    public DistanceSerializer(Class t) {\r\n        super(t);\r\n    }\r\n\r\n    public void serialize(\r\n      Distance distance, JsonGenerator generator, SerializerProvider provider) \r\n      throws IOException, JsonProcessingException {\r\n        generator.writeStartObject();\r\n        generator.writeFieldName(\"name\");\r\n        generator.writeString(distance.name());\r\n        generator.writeFieldName(\"unit\");\r\n        generator.writeString(distance.getUnit());\r\n        generator.writeFieldName(\"meters\");\r\n        generator.writeNumber(distance.getMeters());\r\n        generator.writeEndObject();\r\n    }\r\n}\r\n```","```\r\n@JsonSerialize(using = DistanceSerializer.class)\r\npublic enum TypeEnum { ... }\r\n```","```\r\n{\"name\":\"MILE\",\"unit\":\"miles\",\"meters\":1609.34}\r\n```","```\r\npublic class City {\r\n\r\n    private Distance distance;\r\n    ...    \r\n}\r\n```","```\r\n{\"distance\":\"KILOMETER\"}\r\n```","```\r\nCity city = new ObjectMapper().readValue(json, City.class);\r\nassertEquals(Distance.KILOMETER, city.getDistance());\r\n```","```\r\npublic enum Distance {\r\n    ...\r\n\r\n    @JsonValue\r\n    public double getMeters() {\r\n        return meters;\r\n    }\r\n}\r\n```","```\r\n{\"distance\":\"0.0254\"}\r\n```","```\r\nassertEquals(Distance.INCH, city.getDistance()); \r\n```","```\r\npublic enum Distance {\r\n    @JsonProperty(\"distance-in-km\")\r\n    KILOMETER(\"km\", 1000), \r\n    @JsonProperty(\"distance-in-miles\")\r\n    MILE(\"miles\", 1609.34);\r\n\r\n    ...\r\n}\r\n```","```\r\n{\"distance\": \"distance-in-km\"}\r\n```","```\r\nassertEquals(Distance.KILOMETER, city.getDistance());\r\n```","```\r\n{\r\n    \"distance\": {\r\n        \"unit\":\"miles\", \r\n        \"meters\":1609.34\r\n    }\r\n}\r\n```","```\r\npublic enum Distance {\r\n\r\n    @JsonCreator\r\n    public static Distance forValues(@JsonProperty(\"unit\") String unit,\r\n      @JsonProperty(\"meters\") double meters) {\r\n        for (Distance distance : Distance.values()) {\r\n            if (\r\n              distance.unit.equals(unit) && Double.compare(distance.meters, meters) == 0) {\r\n                return distance;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    ...\r\n}\r\n```","```\r\nassertEquals(Distance.MILE, city.getDistance());\r\n```","```\r\npublic class CustomEnumDeserializer extends StdDeserializer<Distance> {\r\n\r\n    @Override\r\n    public Distance deserialize(JsonParser jsonParser, DeserializationContext ctxt)\r\n      throws IOException, JsonProcessingException {\r\n        JsonNode node = jsonParser.getCodec().readTree(jsonParser);\r\n\r\n        String unit = node.get(\"unit\").asText();\r\n        double meters = node.get(\"meters\").asDouble();\r\n\r\n        for (Distance distance : Distance.values()) {\r\n\r\n            if (distance.getUnit().equals(unit) && Double.compare(\r\n              distance.getMeters(), meters) == 0) {\r\n                return distance;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n} \r\n```","```\r\n@JsonDeserialize(using = CustomEnumDeserializer.class)\r\npublic enum Distance {\r\n   ...\r\n}\r\n```","```\r\nassertEquals(Distance.MILE, city.getDistance());\r\n```"]