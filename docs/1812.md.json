["```\r\n@Test\r\npublic void givenUsingPlainJava_whenGeneratingRandomLongUnbounded_thenCorrect() {\r\n    long generatedLong = new Random().nextLong();\r\n}\r\n```","```\r\n@Test\r\npublic void givenUsingPlainJava_whenGeneratingRandomLongBounded_thenCorrect() {\r\n    long leftLimit = 1L;\r\n    long rightLimit = 10L;\r\n    long generatedLong = leftLimit + (long) (Math.random() * (rightLimit - leftLimit));\r\n}\r\n```","```\r\n@Test\r\npublic void givenUsingApacheCommons_whenGeneratingRandomLongBounded_thenCorrect() {\r\n    long leftLimit = 10L;\r\n    long rightLimit = 100L;\r\n    long generatedLong = new RandomDataGenerator().nextLong(leftLimit, rightLimit);\r\n}\r\n```","```\r\n@Test\r\npublic void givenUsingPlainJava_whenGeneratingRandomIntegerUnbounded_thenCorrect() {\r\n    int generatedInteger = new Random().nextInt();\r\n}\r\n```","```\r\n@Test\r\npublic void givenUsingPlainJava_whenGeneratingRandomIntegerBounded_thenCorrect() {\r\n    int leftLimit = 1;\r\n    int rightLimit = 10;\r\n    int generatedInteger = leftLimit + (int) (new Random().nextFloat() * (rightLimit - leftLimit));\r\n}\r\n```","```\r\n@Test\r\npublic void givenUsingApache_whenGeneratingRandomIntegerBounded_thenCorrect() {\r\n    int leftLimit = 1;\r\n    int rightLimit = 10;\r\n    int generatedInteger = new RandomDataGenerator().nextInt(leftLimit, rightLimit);\r\n}\r\n```","```\r\n@Test\r\npublic void givenUsingPlainJava_whenGeneratingRandomFloatUnbouned_thenCorrect() {\r\n    float generatedFloat = new Random().nextFloat();\r\n}\r\n```","```\r\n@Test\r\npublic void givenUsingPlainJava_whenGeneratingRandomFloatBouned_thenCorrect() {\r\n    float leftLimit = 1F;\r\n    float rightLimit = 10F;\r\n    float generatedFloat = leftLimit + new Random().nextFloat() * (rightLimit - leftLimit);\r\n}\r\n```","```\r\n@Test\r\npublic void givenUsingApache_whenGeneratingRandomFloatBounded_thenCorrect() {\r\n    float leftLimit = 1F;\r\n    float rightLimit = 10F;\r\n    float randomFloat = new RandomDataGenerator().getRandomGenerator().nextFloat();\r\n    float generatedFloat = leftLimit + randomFloat * (rightLimit - leftLimit);\r\n}\r\n```","```\r\n@Test\r\npublic void givenUsingPlainJava_whenGeneratingRandomDoubleUnbounded_thenCorrect() {\r\n    double generatedDouble = Math.random();\r\n}\r\n```","```\r\n@Test\r\npublic void givenUsingApache_whenGeneratingRandomDoubleUnbounded_thenCorrect() {\r\n    double generatedDouble = new RandomDataGenerator().getRandomGenerator().nextDouble();\r\n}\r\n```","```\r\n@Test\r\npublic void givenUsingPlainJava_whenGeneratingRandomDoubleBounded_thenCorrect() {\r\n    double leftLimit = 1D;\r\n    double rightLimit = 10D;\r\n    double generatedDouble = leftLimit + new Random().nextDouble() * (rightLimit - leftLimit);\r\n}\r\n```","```\r\n@Test\r\npublic void givenUsingApache_whenGeneratingRandomDoubleBounded_thenCorrect() {\r\n    double leftLimit = 1D;\r\n    double rightLimit = 100D;\r\n    double generatedDouble = new RandomDataGenerator().nextUniform(leftLimit, rightLimit);\r\n}\r\n```"]