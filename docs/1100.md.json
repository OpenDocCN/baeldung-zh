["```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n    <version>2.2.6.RELEASE</version>\r\n</dependency> \r\n```","```\r\npublic interface GreetingController {\r\n    @GetMapping(\"/greeting/{username}\")\r\n    String greeting(@PathVariable(\"username\") String username);\r\n}\r\n```","```\r\n@RestController\r\npublic class GreetingControllerImpl implements GreetingController {\r\n\r\n    @Override\r\n    public String greeting(@PathVariable(\"username\") String username) {\r\n        return String.format(\"Hello %s!\\n\", username);\r\n    }\r\n}\r\n```","```\r\n@SpringBootApplication\r\npublic class RestProducerApplication {\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(RestProducerApplication.class, args);\r\n    }\r\n}\r\n```","```\r\nserver.port=9090\r\nspring.application.name=rest-producer\r\n```","```\r\n$> curl http://localhost:9090/greeting/Cid\r\nHello Cid!\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.cloud</groupId>\r\n    <artifactId>spring-cloud-starter-hystrix</artifactId>\r\n    <version>1.4.7.RELEASE</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n    <version>2.2.6.RELEASE</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-thymeleaf</artifactId>\r\n    <version>2.2.6.RELEASE</version>\r\n</dependency>\r\n```","```\r\n@Service\r\npublic class GreetingService {\r\n    @HystrixCommand(fallbackMethod = \"defaultGreeting\")\r\n    public String getGreeting(String username) {\r\n        return new RestTemplate()\r\n          .getForObject(\"http://localhost:9090/greeting/{username}\", \r\n          String.class, username);\r\n    }\r\n\r\n    private String defaultGreeting(String username) {\r\n        return \"Hello User!\";\r\n    }\r\n}\r\n```","```\r\n@SpringBootApplication\r\n@EnableCircuitBreaker\r\npublic class RestConsumerApplication {\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(RestConsumerApplication.class, args);\r\n    }\r\n}\r\n```","```\r\n@Controller\r\npublic class GreetingController {\r\n\r\n    @Autowired\r\n    private GreetingService greetingService;\r\n\r\n    @GetMapping(\"/get-greeting/{username}\")\r\n    public String getGreeting(Model model, @PathVariable(\"username\") String username) {\r\n        model.addAttribute(\"greeting\", greetingService.getGreeting(username));\r\n        return \"greeting-view\";\r\n    }\r\n}\r\n```","```\r\n<!DOCTYPE html>\r\n<html xmlns:th=\"http://www.thymeleaf.org\">\r\n    <head>\r\n        <title>Greetings from Hystrix</title>\r\n    </head>\r\n    <body>\r\n        <h2 th:text=\"${greeting}\"/>\r\n    </body>\r\n</html>\r\n```","```\r\nserver.port=8080\r\n```","```\r\nHello Cid!\r\n```","```\r\nHello User!\r\n```","```\r\n<dependency>\r\n    <groupId>com.baeldung.spring.cloud</groupId>\r\n    <artifactId>spring-cloud-hystrix-rest-producer</artifactId>\r\n    <version>1.0.0-SNAPSHOT</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.cloud</groupId>\r\n    <artifactId>spring-cloud-starter-feign</artifactId>\r\n    <version>1.1.5.RELEASE</version>\r\n</dependency>\r\n```","```\r\n@FeignClient(\r\n  name = \"rest-producer\"\r\n  url = \"http://localhost:9090\", \r\n  fallback = GreetingClient.GreetingClientFallback.class\r\n)\r\npublic interface GreetingClient extends GreetingController {\r\n\r\n    @Component\r\n    public static class GreetingClientFallback implements GreetingController {\r\n\r\n        @Override\r\n        public String greeting(@PathVariable(\"username\") String username) {\r\n            return \"Hello User!\";\r\n        }\r\n    }\r\n}\r\n```","```\r\n@SpringBootApplication\r\n@EnableCircuitBreaker\r\n@EnableFeignClients\r\npublic class RestConsumerFeignApplication {\r\n\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(RestConsumerFeignApplication.class, args);\r\n    }\r\n}\r\n```","```\r\n@Controller\r\npublic class GreetingController {\r\n    @Autowired\r\n    private GreetingClient greetingClient;\r\n\r\n    @GetMapping(\"/get-greeting/{username}\")\r\n    public String getGreeting(Model model, @PathVariable(\"username\") String username) {\r\n        model.addAttribute(\"greeting\", greetingClient.greeting(username));\r\n        return \"greeting-view\";\r\n    }\r\n}\r\n```","```\r\nserver.port=8082\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.cloud</groupId>\r\n    <artifactId>spring-cloud-starter-hystrix</artifactId>\r\n</dependency>\r\n```","```\r\n@HystrixCommand(\r\n  commandKey = \"ratingsByIdFromDB\", \r\n  fallbackMethod = \"findCachedRatingById\", \r\n  ignoreExceptions = { RatingNotFoundException.class })\r\npublic Rating findRatingById(Long ratingId) {\r\n    return Optional.ofNullable(ratingRepository.findOne(ratingId))\r\n      .orElseThrow(() -> \r\n        new RatingNotFoundException(\"Rating not found. ID: \" + ratingId));\r\n}\r\n\r\npublic Rating findCachedRatingById(Long ratingId) {\r\n    return cacheRepository.findCachedRatingById(ratingId);\r\n}\r\n```","```\r\n@EnableHystrix\r\n@EnableTransactionManagement(\r\n  order=Ordered.LOWEST_PRECEDENCE, \r\n  mode=AdviceMode.ASPECTJ)\r\npublic class RatingServiceApplication {\r\n    @Bean\r\n    @Primary\r\n    @Order(value=Ordered.HIGHEST_PRECEDENCE)\r\n    public HystrixCommandAspect hystrixAspect() {\r\n        return new HystrixCommandAspect();\r\n    }\r\n\r\n    // other beans, configurations\r\n}\r\n```","```\r\n>java -cp h2-1.4.193.jar org.h2.tools.Server -tcp\r\nTCP server running at tcp://192.168.99.1:9092 (only local connections)\r\n```","```\r\nspring.datasource.url = jdbc:h2:tcp://localhost/~/ratings\r\n```","```\r\n@HystrixCommand(fallbackMethod = \"getSomeDefault\", commandProperties = {\r\n  @HystrixProperty(name = \"execution.isolation.strategy\", value = \"SEMAPHORE\")\r\n})\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.cloud</groupId>\r\n    <artifactId>spring-cloud-starter-hystrix-dashboard</artifactId>\r\n    <version>1.4.7.RELEASE</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-actuator</artifactId>\r\n    <version>2.2.6.RELEASE</version>\r\n</dependency>\r\n```"]