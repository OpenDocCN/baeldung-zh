["```\r\n@Configuration\r\n@EnableCaching\r\npublic class SpringCachingConfig {\r\n\r\n    @Bean\r\n    public CacheManager cacheManager() {\r\n        return new ConcurrentMapCacheManager(\"hotels\");\r\n    }\r\n}\r\n```","```\r\n@Component\r\npublic class SpringCacheCustomizer implements CacheManagerCustomizer<ConcurrentMapCacheManager> {\r\n\r\n    @Override\r\n    public void customize(ConcurrentMapCacheManager cacheManager) {\r\n        cacheManager.setCacheNames(asList(\"hotels\"));\r\n    }\r\n}\r\n```","```\r\n@Cacheable(\"hotels\")\r\npublic List<Hotel> getAllHotels() {\r\n    return hotelRepository.getAllHotels();\r\n}\r\n```","```\r\n@CacheEvict(value = \"hotels\", allEntries = true)\r\n@Scheduled(fixedRateString = \"${caching.hotelListTTL}\")\r\npublic void emptyHotelsCache() {\r\n    logger.info(\"emptying Hotels cache\");\r\n}\r\n```","```\r\ncaching.spring.hotelListTTL=43200000\r\n```","```\r\ncaching:\r\n  spring:\r\n    hotelListTTL: 43200000\r\n```"]