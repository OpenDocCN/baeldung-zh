["```\r\nRestTemplate restTemplate = new RestTemplate();\r\n\r\nMockRestServiceServer mockServer =\r\n  MockRestServiceServer.bindTo(restTemplate).build();\r\nmockServer.expect(requestTo(\"/greeting\"))\r\n  .andRespond(withSuccess());\r\n\r\n// Test code that uses the above RestTemplate ...\r\n\r\nmockServer.verify();\r\n```","```\r\n<parent>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-parent</artifactId>\r\n    <relativePath/> <!-- lookup parent from repository -->\r\n</parent>\r\n```","```\r\n<dependencies>\r\n    <dependency>\r\n        <groupId>org.springframework.boot</groupId>\r\n        <artifactId>spring-boot-starter-web</artifactId>\r\n    </dependency>\r\n    <dependency>\r\n        <groupId>org.springframework.boot</groupId>\r\n        <artifactId>spring-boot-starter-test</artifactId>\r\n        <scope>test</scope>\r\n    </dependency>\r\n</dependencies> \r\n```","```\r\n@Service\r\npublic class DetailsServiceClient {\r\n\r\n    private final RestTemplate restTemplate;\r\n\r\n    public DetailsServiceClient(RestTemplateBuilder restTemplateBuilder) {\r\n        restTemplate = restTemplateBuilder.build();\r\n    }\r\n\r\n    public Details getUserDetails(String name) {\r\n        return restTemplate.getForObject(\"/{name}/details\",\r\n          Details.class, name);\r\n    }\r\n}\r\n```","```\r\n@RunWith(SpringRunner.class)\r\n@RestClientTest(DetailsServiceClient.class)\r\npublic class DetailsServiceClientTest {\r\n\r\n    @Autowired\r\n    private DetailsServiceClient client;\r\n\r\n    @Autowired\r\n    private MockRestServiceServer server;\r\n\r\n    @Autowired\r\n    private ObjectMapper objectMapper;\r\n\r\n    @Before\r\n    public void setUp() throws Exception {\r\n        String detailsString = \r\n          objectMapper.writeValueAsString(new Details(\"John Smith\", \"john\"));\r\n\r\n        this.server.expect(requestTo(\"/john/details\"))\r\n          .andRespond(withSuccess(detailsString, MediaType.APPLICATION_JSON));\r\n    }\r\n\r\n    @Test\r\n    public void whenCallingGetUserDetails_thenClientMakesCorrectCall() \r\n      throws Exception {\r\n\r\n        Details details = this.client.getUserDetails(\"john\");\r\n\r\n        assertThat(details.getLogin()).isEqualTo(\"john\");\r\n        assertThat(details.getName()).isEqualTo(\"John Smith\");\r\n    }\r\n}\r\n```"]