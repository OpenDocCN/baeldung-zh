["```\r\n{\r\n  \"kind\": \"AdmissionReview\",\r\n  \"apiVersion\": \"admission.k8s.io/v1\",\r\n  \"request\": {\r\n    \"uid\": \"c46a6607-129d-425b-af2f-c6f87a0756da\",\r\n    \"kind\": {\r\n      \"group\": \"apps\",\r\n      \"version\": \"v1\",\r\n      \"kind\": \"Deployment\"\r\n    },\r\n    \"resource\": {\r\n      \"group\": \"apps\",\r\n      \"version\": \"v1\",\r\n      \"resource\": \"deployments\"\r\n    },\r\n    \"requestKind\": {\r\n      \"group\": \"apps\",\r\n      \"version\": \"v1\",\r\n      \"kind\": \"Deployment\"\r\n    },\r\n    \"requestResource\": {\r\n      \"group\": \"apps\",\r\n      \"version\": \"v1\",\r\n      \"resource\": \"deployments\"\r\n    },\r\n    \"name\": \"test-deployment\",\r\n    \"namespace\": \"test-namespace\",\r\n    \"operation\": \"CREATE\",\r\n    \"object\": {\r\n      \"kind\": \"Deployment\",\r\n      ... deployment fields omitted\r\n    },\r\n    \"oldObject\": null,\r\n    \"dryRun\": false,\r\n    \"options\": {\r\n      \"kind\": \"CreateOptions\",\r\n      \"apiVersion\": \"meta.k8s.io/v1\"\r\n    }\r\n  }\r\n}\r\n```","```\r\n{\r\n  \"apiVersion\": \"admission.k8s.io/v1\",\r\n  \"kind\": \"AdmissionReview\",\r\n  \"response\": {\r\n    \"uid\": \"c46a6607-129d-425b-af2f-c6f87a0756da\",\r\n    \"allowed\": true,\r\n    \"patchType\": \"JSONPatch\",\r\n    \"patch\": \"W3sib3A ... Base64 patch data omitted\"\r\n  }\r\n}\r\n```","```\r\n[\r\n  {\r\n    \"op\": \"add\",\r\n    \"path\": \"/spec/template/spec/volumes/-\",\r\n    \"value\":{\r\n      \"name\": \"migration-data\",\r\n      \"emptyDir\": {}\r\n    }\r\n  }\r\n]\r\n```","```\r\n[\r\n  {\r\n    \"op\": \"add\",\r\n    \"path\": \"/spec/template/spec/volumes\",\r\n    \"value\": [{\r\n      \"name\": \"migration-data\",\r\n      \"emptyDir\": {}\r\n    }]\r\n  }\r\n]\r\n```","```\r\napiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  name: frontend\r\n  labels:\r\n    app: nginx\r\nspec:\r\n  replicas: 1\r\n  selector:\r\n    matchLabels:\r\n      app: nginx\r\n  template:\r\n    metadata:\r\n      labels:\r\n        app: nginx\r\n    spec:\r\n      initContainers:\r\n      - name: wait-backend\r\n        image: willwill/wait-for-it\r\n        args:\r\n        -www.google.com:80 containers: \r\n      - name: nginx \r\n        image: nginx:1.14.2 \r\n        ports: \r\n        - containerPort: 80\r\n```","```\r\napiVersion: apps/v1 \r\nkind: Deployment \r\nmetadata: \r\n  name: frontend \r\n  labels: \r\n    app: nginx \r\n  annotations:\r\n    com.baeldung/wait-for-it: \"www.google.com:80\"\r\nspec: \r\n  replicas: 1 \r\n  selector: \r\n    matchLabels: \r\n      app: nginx \r\n  template: \r\n    metadata: \r\n      labels: \r\n        app: nginx \r\n    spec: \r\n      containers:\r\n      - name: nginx\r\n        image: nginx:1.14.2\r\n        ports:\r\n          - containerPort: 80\r\n```","```\r\n@RestController\r\n@RequiredArgsConstructor\r\npublic class AdmissionReviewController {\r\n\r\n    private final AdmissionService admissionService;\r\n\r\n    @PostMapping(path = \"/mutate\")\r\n    public Mono<AdmissionReviewResponse> processAdmissionReviewRequest(@RequestBody Mono<ObjectNode> request) {\r\n        return request.map((body) -> admissionService.processAdmission(body));\r\n    }\r\n} \r\n```","```\r\nif (admissionControllerProperties.isDisabled()) {\r\n    data = createSimpleAllowedReview(body);\r\n} else if (annotations.isMissingNode()) {\r\n    data = createSimpleAllowedReview(body);\r\n} else {\r\n    data = processAnnotations(body, annotations);\r\n} \r\n```","```\r\nJsonNode maybeInitContainers = originalSpec.path(\"initContainers\");\r\nArrayNode initContainers = \r\nmaybeInitContainers.isMissingNode() ?\r\n  om.createArrayNode() : (ArrayNode) maybeInitContainers;\r\nArrayNode patchArray = om.createArrayNode();\r\nObjectNode addNode = patchArray.addObject();\r\n\r\naddNode.put(\"op\", \"add\");\r\naddNode.put(\"path\", \"/spec/template/spec/initContainers\");\r\nArrayNode values = addNode.putArray(\"values\");\r\nvalues.addAll(initContainers); \r\n```","```\r\nObjectNode wfi = values.addObject();\r\nwfi.put(\"name\", \"wait-for-it-\" + UUID.randomUUID())\r\n// ... additional container fields added (omitted)\r\n```","```\r\napiVersion: admissionregistration.k8s.io/v1\r\nkind: MutatingWebhookConfiguration\r\nmetadata:\r\n  name: \"wait-for-it.baeldung.com\"\r\nwebhooks:\r\n- name: \"wait-for-it.baeldung.com\"\r\n  rules:\r\n  - apiGroups:   [\"*\"]\r\n    apiVersions: [\"*\"]\r\n    operations:  [\"CREATE\",\"UPDATE\"]\r\n    resources:   [\"deployments\"]\r\n  ... other fields omitted\r\n```","```\r\n$ terraform apply -auto-approve\r\n```","```\r\n$ kubectl get mutatingwebhookconfigurations\r\nNAME                               WEBHOOKS   AGE\r\nwait-for-it-admission-controller   1          58s\r\n$ kubectl get deployments wait-for-it-admission-controller         \r\nNAME                               READY   UP-TO-DATE   AVAILABLE   AGE\r\nwait-for-it-admission-controller   1/1     1            1           10m \r\n```","```\r\n$ kubectl apply -f nginx.yaml\r\ndeployment.apps/frontend created\r\n```","```\r\n $ kubectl logs --since=1h --all-containers deployment/frontend\r\nwait-for-it.sh: waiting 15 seconds for www.google.com:80\r\nwait-for-it.sh: www.google.com:80 is available after 0 seconds\r\n```","```\r\n$ kubectl get deployment/frontend -o yaml\r\napiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  annotations:\r\n    com.baeldung/wait-for-it: www.google.com:80\r\n    deployment.kubernetes.io/revision: \"1\"\r\n\t\t... fields omitted\r\nspec:\r\n  ... fields omitted\r\n  template:\r\n\t  ... metadata omitted\r\n    spec:\r\n      containers:\r\n      - image: nginx:1.14.2\r\n        name: nginx\r\n\t\t\t\t... some fields omitted\r\n      initContainers:\r\n      - args:\r\n        - www.google.com:80\r\n        image: willwill/wait-for-it\r\n        imagePullPolicy: Always\r\n        name: wait-for-it-b86c1ced-71cf-4607-b22b-acb33a548bb2\r\n\t... fields omitted\r\n      ... fields omitted\r\nstatus:\r\n  ... status fields omitted\r\n```"]