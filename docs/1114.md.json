["```\r\npublic class StringProcessor {\r\n\r\n    private final StringReader stringReader;\r\n    private final StringWriter stringWriter;\r\n\r\n    public StringProcessor(StringReader stringReader, StringWriter stringWriter) {\r\n        this.stringReader = stringReader;\r\n        this.stringWriter = stringWriter;\r\n    }\r\n\r\n    public void printString() {\r\n        stringWriter.write(stringReader.getValue());\r\n    }\r\n} \r\n```","```\r\npublic class CustomerService {\r\n\r\n    private final CustomerDao customerDao;\r\n\r\n    // standard constructor / getter\r\n\r\n    public Optional<Customer> findById(int id) {\r\n        return customerDao.findById(id);\r\n    }\r\n\r\n    public List<Customer> findAll() {\r\n        return customerDao.findAll();\r\n    }\r\n}\r\n```","```\r\npublic interface CustomerDao {\r\n\r\n    Optional<Customer> findById(int id);\r\n\r\n    List<Customer> findAll();\r\n\r\n} \r\n```","```\r\npublic class SimpleCustomerDao implements CustomerDao {\r\n\r\n    // standard constructor / getter\r\n\r\n    @Override\r\n    public Optional<Customer> findById(int id) {\r\n        return Optional.ofNullable(customers.get(id));\r\n    }\r\n\r\n    @Override\r\n    public List<Customer> findAll() {\r\n        return new ArrayList<>(customers.values());\r\n    }\r\n}\r\n```","```\r\n@Before\r\npublic void setUpCustomerServiceInstance() {\r\n    var customers = new HashMap<Integer, Customer>();\r\n    customers.put(1, new Customer(\"John\"));\r\n    customers.put(2, new Customer(\"Susan\"));\r\n    customerService = new CustomerService(new SimpleCustomerDao(customers));\r\n}\r\n\r\n@Test\r\npublic void givenCustomerServiceInstance_whenCalledFindById_thenCorrect() {\r\n    assertThat(customerService.findById(1)).isInstanceOf(Optional.class);\r\n}\r\n\r\n@Test\r\npublic void givenCustomerServiceInstance_whenCalledFindAll_thenCorrect() {\r\n    assertThat(customerService.findAll()).isInstanceOf(List.class);\r\n}\r\n\r\n@Test\r\npublic void givenCustomerServiceInstance_whenCalledFindByIdWithNullCustomer_thenCorrect() {\r\n    var customers = new HashMap<Integer, Customer>();\r\n    customers.put(1, null);\r\n    customerService = new CustomerService(new SimpleCustomerDao(customers));\r\n    Customer customer = customerService.findById(1).orElseGet(() -> new Customer(\"Non-existing customer\"));\r\n    assertThat(customer.getName()).isEqualTo(\"Non-existing customer\");\r\n}\r\n```","```\r\nproject base directory (could be anything, like dipmodular)\r\n|- com.baeldung.dip.services\r\n   module-info.java\r\n     |- com\r\n       |- baeldung\r\n         |- dip\r\n           |- services\r\n             CustomerService.java\r\n|- com.baeldung.dip.daos\r\n   module-info.java\r\n     |- com\r\n       |- baeldung\r\n         |- dip\r\n           |- daos\r\n             CustomerDao.java\r\n|- com.baeldung.dip.daoimplementations \r\n    module-info.java \r\n      |- com \r\n        |- baeldung \r\n          |- dip \r\n            |- daoimplementations \r\n              SimpleCustomerDao.java  \r\n|- com.baeldung.dip.entities\r\n    module-info.java\r\n      |- com\r\n        |- baeldung\r\n          |- dip\r\n            |- entities\r\n              Customer.java\r\n|- com.baeldung.dip.mainapp \r\n    module-info.java \r\n      |- com \r\n        |- baeldung \r\n          |- dip \r\n            |- mainapp\r\n              MainApplication.java \r\n```","```\r\nmodule com.baeldung.dip.services {\r\n    requires com.baeldung.dip.entities;\r\n    requires com.baeldung.dip.daos;\r\n    uses com.baeldung.dip.daos.CustomerDao;\r\n    exports com.baeldung.dip.services;\r\n}\r\n```","```\r\nmodule com.baeldung.dip.daos {\r\n    requires com.baeldung.dip.entities;\r\n    exports com.baeldung.dip.daos;\r\n}\r\n```","```\r\nmodule com.baeldung.dip.daoimplementations {\r\n    requires com.baeldung.dip.entities;\r\n    requires com.baeldung.dip.daos;\r\n    provides com.baeldung.dip.daos.CustomerDao with com.baeldung.dip.daoimplementations.SimpleCustomerDao;\r\n    exports com.baeldung.dip.daoimplementations;\r\n}\r\n```","```\r\nmodule com.baeldung.dip.entities {\r\n    exports com.baeldung.dip.entities;\r\n}\r\n```","```\r\npublic class Customer {\r\n\r\n    private final String name;\r\n\r\n    // standard constructor / getter / toString\r\n\r\n}\r\n```","```\r\nmodule com.baeldung.dip.mainapp {\r\n    requires com.baeldung.dip.entities;\r\n    requires com.baeldung.dip.daos;\r\n    requires com.baeldung.dip.daoimplementations;\r\n    requires com.baeldung.dip.services;\r\n    exports com.baeldung.dip.mainapp;\r\n}\r\n```","```\r\npublic class MainApplication {\r\n\r\n    public static void main(String args[]) {\r\n        var customers = new HashMap<Integer, Customer>();\r\n        customers.put(1, new Customer(\"John\"));\r\n        customers.put(2, new Customer(\"Susan\"));\r\n        CustomerService customerService = new CustomerService(new SimpleCustomerDao(customers));\r\n        customerService.findAll().forEach(System.out::println);\r\n    }\r\n}\r\n```","```\r\nCustomer{name=John}\r\nCustomer{name=Susan} \r\n```"]