["```\r\n@Data\r\n@AllArgsConstructor\r\npublic class MyClass {\r\n    private long id;\r\n    private String name;\r\n    private String other;\r\n    private MySubClass subclass;\r\n}\r\n\r\n@Data\r\n@AllArgsConstructor\r\npublic class MySubClass {\r\n    private long id;\r\n    private String description;\r\n    private String otherVerboseInfo;\r\n} \r\n```","```\r\nMySubClass subclass = new MySubClass(42L, \"the answer\", \"Verbose field not to serialize\")\r\nMyClass source = new MyClass(1L, \"foo\", \"bar\", subclass); \r\n```","```\r\n{\r\n  \"id\":1,\r\n  \"name\":\"foo\",\r\n  \"subclass\":{\r\n    \"id\":42,\r\n    \"description\":\"the answer\"\r\n  }\r\n} \r\n```","```\r\nString expectedResult = \"{\\\"id\\\":1,\\\"name\\\":\\\"foo\\\",\\\"subclass\\\":{\\\"id\\\":42,\\\"description\\\":\\\"the answer\\\"}}\"; \r\n```","```\r\npublic class MyClass {\r\n    private long id;\r\n    private String name;\r\n    private transient String other;\r\n    private MySubClass subclass;\r\n}\r\n\r\npublic class MySubClass {\r\n    private long id;\r\n    private String description;\r\n    private transient String otherVerboseInfo;\r\n} \r\n```","```\r\nString jsonString = new Gson().toJson(source);\r\nassertEquals(expectedResult, jsonString); \r\n```","```\r\npublic class MyClass {\r\n    @Expose \r\n    private long id;\r\n    @Expose \r\n    private String name;\r\n    private String other;\r\n    @Expose \r\n    private MySubClass subclass;\r\n}\r\n\r\npublic class MySubClass {\r\n    @Expose \r\n    private long id;\r\n    @Expose \r\n    private String description;\r\n    private String otherVerboseInfo;\r\n} \r\n```","```\r\nGson gson = new GsonBuilder()\r\n  .excludeFieldsWithoutExposeAnnotation()\r\n  .create();\r\nString jsonString = gson.toJson(source);\r\nassertEquals(expectedResult, jsonString); \r\n```","```\r\n@Expose(serialize = false, deserialize = true) \r\nprivate String other; \r\n```","```\r\nGson gson = new GsonBuilder()\r\n  .addSerializationExclusionStrategy(strategy)\r\n  .create();\r\nString jsonString = gson.toJson(source);\r\n\r\nassertEquals(expectedResult, jsonString); \r\n```","```\r\nExclusionStrategy strategy = new ExclusionStrategy() {\r\n    @Override\r\n    public boolean shouldSkipField(FieldAttributes field) {\r\n        if (field.getDeclaringClass() == MyClass.class && field.getName().equals(\"other\")) {\r\n            return true;\r\n        }\r\n        if (field.getDeclaringClass() == MySubClass.class && field.getName().equals(\"otherVerboseInfo\")) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean shouldSkipClass(Class<?> clazz) {\r\n        return false;\r\n    }\r\n}; \r\n```","```\r\nExclusionStrategy strategy = new ExclusionStrategy() {\r\n    @Override\r\n    public boolean shouldSkipClass(Class<?> clazz) {\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean shouldSkipField(FieldAttributes field) {\r\n        return field.getName().startsWith(\"other\");\r\n    }\r\n}; \r\n```","```\r\n@Retention(RetentionPolicy.RUNTIME)\r\n@Target(ElementType.FIELD)\r\npublic @interface Exclude {} \r\n```","```\r\npublic class MyClass {\r\n    private long id;\r\n    private String name;\r\n    @Exclude \r\n    private String other;\r\n    private MySubClass subclass;\r\n}\r\n\r\npublic class MySubClass {\r\n    private long id;\r\n    private String description;\r\n    @Exclude \r\n    private String otherVerboseInfo;\r\n} \r\n```","```\r\nExclusionStrategy strategy = new ExclusionStrategy() {\r\n    @Override\r\n    public boolean shouldSkipClass(Class<?> clazz) {\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean shouldSkipField(FieldAttributes field) {\r\n        return field.getAnnotation(Exclude.class) != null;\r\n    }\r\n}; \r\n```","```\r\nGson gson = new GsonBuilder().addSerializationExclusionStrategy(strategy) \r\n```","```\r\nGson gson = new GsonBuilder().addDeserializationExclusionStrategy(strategy) \r\n```","```\r\nGson gson = new GsonBuilder().setExclusionStrategies(strategy); \r\n```"]