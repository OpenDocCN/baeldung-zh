["```\r\nIntStream stream = IntStream.of(5, 10, 0, 2, -8);\r\n```","```\r\nint[] primitives = {5, 10, 0, 2, -8};\r\nIntStream stream = IntStream.of(primitives);\r\n```","```\r\nOptionalDouble average = stream.filter(i -> i > 0).average();\r\n```","```\r\n<dependency>\r\n    <groupId>net.sf.trove4j</groupId>\r\n    <artifactId>trove4j</artifactId>\r\n    <version>3.0.2</version>\r\n</dependency>\r\n```","```\r\nTIntList tList = new TIntArrayList();\r\n```","```\r\n<dependency>\r\n    <groupId>it.unimi.dsi</groupId>\r\n    <artifactId>fastutil</artifactId>\r\n    <version>8.1.0</version>\r\n</dependency>\r\n```","```\r\nIntArrayList list = new IntArrayList();\r\n```","```\r\nint[] primitives = new int[] {5, 10, 0, 2, -8};\r\nIntArrayList list = new IntArrayList(primitives);\r\n```","```\r\n<dependency>\r\n    <groupId>colt</groupId>\r\n    <artifactId>colt</artifactId>\r\n    <version>1.2.0</version>\r\n</dependency>\r\n```","```\r\ncern.colt.list.IntArrayList coltList = new cern.colt.list.IntArrayList();\r\n```","```\r\nint[] primitives = new int[] {5, 10, 0, 2};\r\n```","```\r\nImmutableIntArray list = ImmutableIntArray.builder().addAll(primitives).build();\r\n```"]