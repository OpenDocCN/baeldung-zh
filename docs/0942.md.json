["```\r\n@Configuration\r\n@EnableWebSecurity\r\n@EnableGlobalMethodSecurity\r\npublic class SpringSecurityConfig extends WebSecurityConfigurerAdapter {\r\n\r\n    @Override\r\n    protected void configure(HttpSecurity http) throws Exception {}\r\n}\r\n```","```\r\n@GetMapping(\"/default/users/{name}\")\r\npublic ResponseEntity<UserDto> getUserWithDefaultCaching(@PathVariable String name) {\r\n    return ResponseEntity.ok(new UserDto(name));\r\n}\r\n```","```\r\n[cache-control: no-cache, no-store, max-age=0, must-revalidate]\r\n```","```\r\ngiven()\r\n  .when()\r\n  .get(getBaseUrl() + \"/default/users/Michael\")\r\n  .then()\r\n  .header(\"Cache-Control\", \"no-cache, no-store, max-age=0, must-revalidate\")\r\n  .header(\"Pragma\", \"no-cache\");\r\n```","```\r\n@GetMapping(\"/users/{name}\")\r\npublic ResponseEntity<UserDto> getUser(@PathVariable String name) { \r\n    return ResponseEntity.ok()\r\n      .cacheControl(CacheControl.maxAge(60, TimeUnit.SECONDS))\r\n      .body(new UserDto(name));\r\n}\r\n```","```\r\ngiven()\r\n  .when()\r\n  .get(getBaseUrl() + \"/users/Michael\")\r\n  .then()\r\n  .header(\"Cache-Control\", \"max-age=60\");\r\n```","```\r\n@Override\r\nprotected void configure(HttpSecurity http) throws Exception {\r\n    http.headers().disable();\r\n}\r\n```","```\r\ngiven()\r\n  .when()\r\n  .get(getBaseUrl() + \"/default/users/Michael\")\r\n  .then()\r\n  .headers(new HashMap<String, Object>());\r\n```"]