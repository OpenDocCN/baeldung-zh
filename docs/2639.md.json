["```\r\n@Test\r\npublic void readFromFileUsingFileIO() throws Exception {\r\n    File file = new File(\"src/test/resources/nio-vs-nio2.txt\");\r\n    FileInputStream in = new FileInputStream(file);\r\n    StringBuilder content = new StringBuilder();\r\n    int data = in.read();\r\n    while (data != -1) {\r\n        content.append((char) data);\r\n        data = in.read();\r\n    }\r\n    in.close();\r\n    assertThat(content.toString()).isEqualTo(\"Hello from file!\");\r\n}\r\n```","```\r\n@Test\r\npublic void readFromFileUsingFileChannel() throws Exception {\r\n    RandomAccessFile file = new RandomAccessFile(\"src/test/resources/nio-vs-nio2.txt\", \"r\");\r\n    FileChannel channel = file.getChannel();\r\n    StringBuilder content = new StringBuilder();\r\n    ByteBuffer buffer = ByteBuffer.allocate(256);\r\n    int bytesRead = channel.read(buffer);\r\n    while (bytesRead != -1) {\r\n        buffer.flip();\r\n        while (buffer.hasRemaining()) {\r\n            content.append((char) buffer.get());\r\n        }\r\n        buffer.clear();\r\n        bytesRead = channel.read(buffer);\r\n    }\r\n    file.close();\r\n    assertThat(content.toString()).isEqualTo(\"Hello from file!\");\r\n}\r\n```","```\r\n@Test\r\npublic void readFromFileUsingNIO2() throws Exception {\r\n    List<String> strings = Files.readAllLines(Paths.get(\"src/test/resources/nio-vs-nio2.txt\"));\r\n    assertThat(strings.get(0)).isEqualTo(\"Hello from file!\");\r\n}\r\n```"]