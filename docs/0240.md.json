["```\r\npublic interface MyInterface {\r\n\r\n    // regular interface methods\r\n\r\n    default void defaultMethod() {\r\n        // default method implementation\r\n    }\r\n}\r\n```","```\r\npublic interface Vehicle {\r\n\r\n    String getBrand();\r\n\r\n    String speedUp();\r\n\r\n    String slowDown();\r\n\r\n    default String turnAlarmOn() {\r\n        return \"Turning the vehicle alarm on.\";\r\n    }\r\n\r\n    default String turnAlarmOff() {\r\n        return \"Turning the vehicle alarm off.\";\r\n    }\r\n}\r\n```","```\r\npublic class Car implements Vehicle {\r\n\r\n    private String brand;\r\n\r\n    // constructors/getters\r\n\r\n    @Override\r\n    public String getBrand() {\r\n        return brand;\r\n    }\r\n\r\n    @Override\r\n    public String speedUp() {\r\n        return \"The car is speeding up.\";\r\n    }\r\n\r\n    @Override\r\n    public String slowDown() {\r\n        return \"The car is slowing down.\";\r\n    }\r\n} \r\n```","```\r\npublic static void main(String[] args) { \r\n    Vehicle car = new Car(\"BMW\");\r\n    System.out.println(car.getBrand());\r\n    System.out.println(car.speedUp());\r\n    System.out.println(car.slowDown());\r\n    System.out.println(car.turnAlarmOn());\r\n    System.out.println(car.turnAlarmOff());\r\n}\r\n```","```\r\npublic interface Vehicle {\r\n\r\n    // additional interface methods \r\n\r\n    double getSpeed();\r\n\r\n    default double getSpeedInKMH(double speed) {\r\n       // conversion      \r\n    }\r\n}\r\n```","```\r\npublic interface Alarm {\r\n\r\n    default String turnAlarmOn() {\r\n        return \"Turning the alarm on.\";\r\n    }\r\n\r\n    default String turnAlarmOff() {\r\n        return \"Turning the alarm off.\";\r\n    }\r\n}\r\n```","```\r\npublic class Car implements Vehicle, Alarm {\r\n    // ...\r\n}\r\n```","```\r\n@Override\r\npublic String turnAlarmOn() {\r\n    // custom implementation\r\n}\r\n\r\n@Override\r\npublic String turnAlarmOff() {\r\n    // custom implementation\r\n}\r\n```","```\r\n@Override\r\npublic String turnAlarmOn() {\r\n    return Vehicle.super.turnAlarmOn();\r\n}\r\n\r\n@Override\r\npublic String turnAlarmOff() {\r\n    return Vehicle.super.turnAlarmOff();\r\n} \r\n```","```\r\n@Override\r\npublic String turnAlarmOn() {\r\n    return Alarm.super.turnAlarmOn();\r\n}\r\n\r\n@Override\r\npublic String turnAlarmOff() {\r\n    return Alarm.super.turnAlarmOff();\r\n} \r\n```","```\r\n@Override\r\npublic String turnAlarmOn() {\r\n    return Vehicle.super.turnAlarmOn() + \" \" + Alarm.super.turnAlarmOn();\r\n}\r\n\r\n@Override\r\npublic String turnAlarmOff() {\r\n    return Vehicle.super.turnAlarmOff() + \" \" + Alarm.super.turnAlarmOff();\r\n} \r\n```","```\r\npublic interface Vehicle {\r\n\r\n    // regular / default interface methods\r\n\r\n    static int getHorsePower(int rpm, int torque) {\r\n        return (rpm * torque) / 5252;\r\n    }\r\n} \r\n```","```\r\nVehicle.getHorsePower(2500, 480)); \r\n```"]