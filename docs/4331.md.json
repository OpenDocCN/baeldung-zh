["```\r\n<dependency>\r\n    <groupId>org.apache.commons</groupId>\r\n    <artifactId>commons-collections4</artifactId>\r\n    <version>4.1</version>\r\n</dependency>\r\n```","```\r\npublic void whenAdded_thenCountIsKept() {\r\n    Bag<Integer> bag = new HashBag<>(\r\n      Arrays.asList(1, 2, 3, 3, 3, 1, 4));\r\n\r\n    assertThat(2, equalTo(bag.getCount(1)));\r\n} \r\n```","```\r\nCollection<Integer> collection = new ArrayList<>();\r\ncollection.add(1);\r\nassertThat(collection.add(1), is(true));\r\n```","```\r\nBag<Integer> bag = new HashBag<>();\r\nbag.add(1);\r\n\r\nassertThat(bag.add(1), is(not(true)));\r\n```","```\r\npublic void whenBagAddAPILikeCollectionAPI_thenTrue() {\r\n    Bag<Integer> bag = CollectionBag.collectionBag(new HashBag<>());\r\n    bag.add(1);\r\n\r\n    assertThat(bag.add(1), is((true)));\r\n}\r\n```","```\r\npublic void givenAdd_whenCountOfElementsDefined_thenCountAreAdded() {\r\n    Bag<Integer> bag = new HashBag<>();\r\n\r\n    bag.add(1, 5); // adding 1 five times\r\n\r\n    assertThat(5, equalTo(bag.getCount(1)));\r\n}\r\n```","```\r\npublic void givenMultipleCopies_whenRemove_allAreRemoved() {\r\n    Bag<Integer> bag = new HashBag<>(\r\n      Arrays.asList(1, 2, 3, 3, 3, 1, 4));\r\n\r\n    bag.remove(3, 1); // remove one element, two still remain\r\n    assertThat(2, equalTo(bag.getCount(3)));\r\n\r\n    bag.remove(1); // remove all\r\n    assertThat(0, equalTo(bag.getCount(1)));\r\n}\r\n```","```\r\npublic void givenTree_whenDuplicateElementsAdded_thenSort() {\r\n    TreeBag<Integer> bag = new TreeBag<>(Arrays.asList(7, 5,\r\n      1, 7, 2, 3, 3, 3, 1, 4, 7));\r\n\r\n    assertThat(bag.first(), equalTo(1));\r\n    assertThat(bag.getCount(bag.first()), equalTo(2));\r\n    assertThat(bag.last(), equalTo(7));\r\n    assertThat(bag.getCount(bag.last()), equalTo(3));\r\n}\r\n```","```\r\npublic void whenTreeAddAPILikeCollectionAPI_thenTrue() {\r\n    SortedBag<Integer> bag \r\n      = CollectionSortedBag.collectionSortedBag(new TreeBag<>());\r\n\r\n    bag.add(1);\r\n\r\n    assertThat(bag.add(1), is((true)));\r\n}\r\n```","```\r\npublic void givenSortedBag_whenDuplicateElementsAdded_thenSort() {\r\n    SynchronizedSortedBag<Integer> bag = SynchronizedSortedBag\r\n      .synchronizedSortedBag(new TreeBag<>(\r\n        Arrays.asList(7, 5, 1, 7, 2, 3, 3, 3, 1, 4, 7)));\r\n\r\n    assertThat(bag.first(), equalTo(1));\r\n    assertThat(bag.getCount(bag.first()), equalTo(2));\r\n    assertThat(bag.last(), equalTo(7));\r\n    assertThat(bag.getCount(bag.last()), equalTo(3));\r\n}\r\n```"]