["```\r\n@Test(expected = ClassNotFoundException.class)\r\npublic void givenNonExistingClass_whenUsingForName_thenClassNotFound() throws ClassNotFoundException {\r\n    Class.forName(\"class.that.does.not.exist\");\r\n}\r\n```","```\r\n@Test\r\npublic void givenExistingClass_whenUsingForName_thenNoException() throws ClassNotFoundException {\r\n    Class.forName(\"java.lang.String\");\r\n}\r\n```","```\r\npublic static class InitializingClass {\r\n    static {\r\n        if (true) { //enable throwing of an exception in a static initialization block\r\n            throw new RuntimeException();\r\n        }\r\n    }\r\n}\r\n```","```\r\n@Test(expected = ExceptionInInitializerError.class)\r\npublic void givenInitializingClass_whenUsingForName_thenInitializationError() throws ClassNotFoundException {\r\n    Class.forName(\"path.to.InitializingClass\");\r\n}\r\n```","```\r\nClass.forName(\"Foo\")\r\nClass.forName(\"Foo\", true, this.getClass().getClassLoader())\r\n```","```\r\n@Test\r\npublic void givenInitializingClass_whenUsingForNameWithoutInitialization_thenNoException() throws ClassNotFoundException {\r\n    Class.forName(\"path.to.InitializingClass\", false, getClass().getClassLoader());\r\n}\r\n```"]