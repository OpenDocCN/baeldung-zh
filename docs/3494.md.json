["```\r\n<dependency>\r\n    <groupId>org.testcontainers</groupId>\r\n    <artifactId>testcontainers</artifactId>\r\n    <version>1.11.4</version>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>org.testcontainers</groupId>\r\n    <artifactId>postgresql </artifactId>\r\n    <version>1.11.4</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.testcontainers</groupId>\r\n    <artifactId>selenium </artifactId>\r\n    <version>1.11.4</version>\r\n</dependency>\r\n```","```\r\n@ClassRule\r\npublic static GenericContainer simpleWebServer\r\n = new GenericContainer(\"alpine:3.2\")\r\n   .withExposedPorts(80)\r\n   .withCommand(\"/bin/sh\", \"-c\", \"while true; do echo \"\r\n     + \"\\\"HTTP/1.1 200 OK\\n\\nHello World!\\\" | nc -l -p 80; done\");\r\n```","```\r\n@Test\r\npublic void givenSimpleWebServerContainer_whenGetReuqest_thenReturnsResponse()\r\n  throws Exception {\r\n    String address = \"http://\" \r\n      + simpleWebServer.getContainerIpAddress() \r\n      + \":\" + simpleWebServer.getMappedPort(80);\r\n    String response = simpleGetRequest(address);\r\n\r\n    assertEquals(response, \"Hello World!\");\r\n}\r\n```","```\r\n@Rule\r\npublic PostgreSQLContainer postgresContainer = new PostgreSQLContainer();\r\n\r\n@Test\r\npublic void whenSelectQueryExecuted_thenResulstsReturned()\r\n  throws Exception {\r\n    String jdbcUrl = postgresContainer.getJdbcUrl();\r\n    String username = postgresContainer.getUsername();\r\n    String password = postgresContainer.getPassword();\r\n    Connection conn = DriverManager\r\n      .getConnection(jdbcUrl, username, password);\r\n    ResultSet resultSet = \r\n      conn.createStatement().executeQuery(\"SELECT 1\");\r\n    resultSet.next();\r\n    int result = resultSet.getInt(1);\r\n\r\n    assertEquals(1, result);\r\n}\r\n```","```\r\n@Rule\r\npublic BrowserWebDriverContainer chrome = new BrowserWebDriverContainer()\r\n  .withCapabilities(new ChromeOptions());\r\n@Test\r\npublic void whenNavigatedToPage_thenHeadingIsInThePage() {\r\n    RemoteWebDriver driver = chrome.getWebDriver();\r\n    driver.get(\"http://example.com\");\r\n    String heading = driver.findElement(By.xpath(\"/html/body/div/h1\"))\r\n      .getText();\r\n\r\n    assertEquals(\"Example Domain\", heading);\r\n}\r\n```","```\r\nsimpleWebServer:\r\n  image: alpine:3.2\r\n  command: [\"/bin/sh\", \"-c\", \"while true; do echo 'HTTP/1.1 200 OK\\n\\nHello World!' | nc -l -p 80; done\"]\r\n```","```\r\n@ClassRule\r\npublic static DockerComposeContainer compose = \r\n  new DockerComposeContainer(\r\n    new File(\"src/test/resources/test-compose.yml\"))\r\n      .withExposedService(\"simpleWebServer_1\", 80);\r\n\r\n@Test\r\npublic void givenSimpleWebServerContainer_whenGetReuqest_thenReturnsResponse()\r\n  throws Exception {\r\n\r\n    String address = \"http://\" + compose.getServiceHost(\"simpleWebServer_1\", 80) + \":\" + compose.getServicePort(\"simpleWebServer_1\", 80);\r\n    String response = simpleGetRequest(address);\r\n\r\n    assertEquals(response, \"Hello World\");\r\n}\r\n```"]