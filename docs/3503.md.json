["```\r\n@GetMapping(\r\n  value = \"/ok\",\r\n  produces = MediaType.APPLICATION_JSON_UTF8_VALUE\r\n)\r\npublic Flux<String> ok() {\r\n    return Flux.just(\"ok\");\r\n} \r\n```","```\r\n@GetMapping(\r\n  value = \"/no-content\",\r\n  produces = MediaType.APPLICATION_JSON_UTF8_VALUE\r\n)\r\n@ResponseStatus(HttpStatus.NO_CONTENT)\r\npublic Flux<String> noContent() {\r\n    return Flux.empty();\r\n}\r\n```","```\r\n@GetMapping(\r\n  value = \"/accepted\",\r\n  produces = MediaType.APPLICATION_JSON_UTF8_VALUE\r\n)\r\npublic Flux<String> accepted(ServerHttpResponse response) {\r\n    response.setStatusCode(HttpStatus.ACCEPTED);\r\n    return Flux.just(\"accepted\");\r\n}\r\n```","```\r\n@GetMapping(\r\n  value = \"/bad-request\"\r\n)\r\npublic Mono<String> badRequest() {\r\n    return Mono.error(new IllegalArgumentException());\r\n}\r\n@ResponseStatus(\r\n  value = HttpStatus.BAD_REQUEST,\r\n  reason = \"Illegal arguments\")\r\n@ExceptionHandler(IllegalArgumentException.class)\r\npublic void illegalArgumentHandler() {\r\n    // \r\n}\r\n```","```\r\n@GetMapping(\r\n  value = \"/unauthorized\"\r\n)\r\npublic ResponseEntity<Mono<String>> unathorized() {\r\n    return ResponseEntity\r\n      .status(HttpStatus.UNAUTHORIZED)\r\n      .header(\"X-Reason\", \"user-invalid\")\r\n      .body(Mono.just(\"unauthorized\"));\r\n}\r\n```","```\r\n@Bean\r\npublic RouterFunction<ServerResponse> notFound() {\r\n    return RouterFunctions\r\n      .route(GET(\"/statuses/not-found\"),\r\n         request -> ServerResponse.notFound().build());\r\n}\r\n```"]