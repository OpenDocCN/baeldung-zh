["```\r\n<dependency>\r\n    <groupId>org.hibernate</groupId>\r\n    <artifactId>hibernate-core</artifactId>\r\n    <version>5.4.12.Final</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>com.h2database</groupId>\r\n    <artifactId>h2</artifactId>\r\n    <version>1.4.194</version>\r\n</dependency>\r\n```","```\r\n@Entity\r\npublic class Employee implements Serializable {\r\n\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n    private Integer id;\r\n\r\n    private long grossIncome;\r\n\r\n    private int taxInPercents;\r\n\r\n    public long getTaxJavaWay() {\r\n        return grossIncome * taxInPercents / 100;\r\n    }\r\n\r\n}\r\n```","```\r\n@Entity\r\npublic class Employee implements Serializable {\r\n\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n    private Integer id;\r\n\r\n    private long grossIncome;\r\n\r\n    private int taxInPercents;\r\n\r\n    @Formula(\"grossIncome * taxInPercents / 100\")\r\n    private long tax;\r\n\r\n}\r\n```","```\r\nEmployee employee = new Employee(10_000L, 25);\r\nsession.save(employee);\r\n\r\nsession.flush();\r\nsession.clear();\r\n\r\nemployee = session.get(Employee.class, employee.getId());\r\nassertThat(employee.getTax()).isEqualTo(2_500L);\r\n```","```\r\n@Entity\r\n@Where(clause = \"deleted = false\")\r\npublic class Employee implements Serializable {\r\n\r\n    // ...\r\n}\r\n```","```\r\nemployee.setDeleted(true);\r\n\r\nsession.flush();\r\nsession.clear();\r\n\r\nemployee = session.find(Employee.class, employee.getId());\r\nassertThat(employee).isNull();\r\n```","```\r\n@Entity\r\npublic class Phone implements Serializable {\r\n\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n    private Integer id;\r\n\r\n    private boolean deleted;\r\n\r\n    private String number;\r\n\r\n}\r\n```","```\r\npublic class Employee implements Serializable {\r\n\r\n    // ...\r\n\r\n    @OneToMany\r\n    @JoinColumn(name = \"employee_id\")\r\n    @Where(clause = \"deleted = false\")\r\n    private Set<Phone> phones = new HashSet<>(0);\r\n\r\n}\r\n```","```\r\nemployee.getPhones().iterator().next().setDeleted(true);\r\nsession.flush();\r\nsession.clear();\r\n\r\nemployee = session.find(Employee.class, employee.getId());\r\nassertThat(employee.getPhones()).hasSize(1);\r\n\r\nList<Phone> fullPhoneList \r\n  = session.createQuery(\"from Phone\").getResultList();\r\nassertThat(fullPhoneList).hasSize(2);\r\n```","```\r\n@FilterDef(\r\n    name = \"incomeLevelFilter\", \r\n    parameters = @ParamDef(name = \"incomeLimit\", type = \"int\")\r\n)\r\n@Filter(\r\n    name = \"incomeLevelFilter\", \r\n    condition = \"grossIncome > :incomeLimit\"\r\n)\r\npublic class Employee implements Serializable {\r\n```","```\r\nsession.enableFilter(\"incomeLevelFilter\")\r\n  .setParameter(\"incomeLimit\", 11_000);\r\n```","```\r\nsession.save(new Employee(10_000, 25));\r\nsession.save(new Employee(12_000, 25));\r\nsession.save(new Employee(15_000, 25));\r\n```","```\r\nList<Employee> employees = session.createQuery(\"from Employee\")\r\n  .getResultList();\r\nassertThat(employees).hasSize(2);\r\n```","```\r\nsession = HibernateUtil.getSessionFactory().openSession();\r\nemployees = session.createQuery(\"from Employee\").getResultList();\r\nassertThat(employees).hasSize(3);\r\n```","```\r\nEmployee employee = session.get(Employee.class, 1);\r\nassertThat(employee.getGrossIncome()).isEqualTo(10_000);\r\n```","```\r\n@Entity\r\npublic class EntityDescription implements Serializable {\r\n\r\n    private String description;\r\n\r\n    @Any(\r\n        metaDef = \"EntityDescriptionMetaDef\",\r\n        metaColumn = @Column(name = \"entity_type\"))\r\n    @JoinColumn(name = \"entity_id\")\r\n    private Serializable entity;\r\n\r\n}\r\n```","```\r\n@AnyMetaDef(\r\n    name = \"EntityDescriptionMetaDef\", \r\n    metaType = \"string\", \r\n    idType = \"int\",\r\n    metaValues = {\r\n        @MetaValue(value = \"Employee\", targetEntity = Employee.class),\r\n        @MetaValue(value = \"Phone\", targetEntity = Phone.class)\r\n    }\r\n)\r\npackage com.baeldung.hibernate.pojo;\r\n```","```\r\nEmployee employee = new Employee();\r\nPhone phone1 = new Phone(\"555-45-67\");\r\nPhone phone2 = new Phone(\"555-89-01\");\r\nemployee.getPhones().add(phone1);\r\nemployee.getPhones().add(phone2);\r\n```","```\r\nEntityDescription employeeDescription = new EntityDescription(\r\n  \"Send to conference next year\", employee);\r\nEntityDescription phone1Description = new EntityDescription(\r\n  \"Home phone (do not call after 10PM)\", phone1);\r\nEntityDescription phone2Description = new EntityDescription(\r\n  \"Work phone\", phone1);\r\n```"]