["```\r\nint port = 8443;\r\nServerSocketFactory factory = SSLServerSocketFactory.getDefault();\r\ntry (ServerSocket listener = factory.createServerSocket(port)) {\r\n    SSLServerSocket sslListener = (SSLServerSocket) listener;\r\n    sslListener.setNeedClientAuth(true);\r\n    sslListener.setEnabledCipherSuites(\r\n      new String[] { \"TLS_DHE_DSS_WITH_AES_256_CBC_SHA256\" });\r\n    sslListener.setEnabledProtocols(\r\n      new String[] { \"TLSv1.2\" });\r\n    while (true) {\r\n        try (Socket socket = sslListener.accept()) {\r\n            PrintWriter out = new PrintWriter(socket.getOutputStream(), true);\r\n            out.println(\"Hello World!\");\r\n        }\r\n    }\r\n}\r\n```","```\r\nString host = \"localhost\";\r\nint port = 8443;\r\nSocketFactory factory = SSLSocketFactory.getDefault();\r\ntry (Socket connection = factory.createSocket(host, port)) {\r\n    ((SSLSocket) connection).setEnabledCipherSuites(\r\n      new String[] { \"TLS_DHE_DSS_WITH_AES_256_CBC_SHA256\" });\r\n    ((SSLSocket) connection).setEnabledProtocols(\r\n      new String[] { \"TLSv1.2\" });\r\n\r\n    SSLParameters sslParams = new SSLParameters();\r\n    sslParams.setEndpointIdentificationAlgorithm(\"HTTPS\");\r\n    ((SSLSocket) connection).setSSLParameters(sslParams);\r\n\r\n    BufferedReader input = new BufferedReader(\r\n      new InputStreamReader(connection.getInputStream()));\r\n    return input.readLine();\r\n}\r\n```","```\r\n$ keytool -genkey -keypass password \\\r\n                  -storepass password \\\r\n                  -keystore serverkeystore.jks\r\n```","```\r\n$ keytool -export -storepass password \\\r\n                  -file server.cer \\\r\n                  -keystore serverkeystore.jks\r\n```","```\r\n$ keytool -import -v -trustcacerts \\\r\n                     -file server.cer \\\r\n                     -keypass password \\\r\n                     -storepass password \\\r\n                     -keystore clienttruststore.jks\r\n```","```\r\nException in thread \"main\" javax.net.ssl.SSLHandshakeException: \r\n  Received fatal alert: handshake_failure\r\n```","```\r\n-Djavax.net.ssl.keyStore=serverkeystore.jks -Djavax.net.ssl.keyStorePassword=password\r\n```","```\r\nException in thread \"main\" javax.net.ssl.SSLHandshakeException: \r\n  sun.security.validator.ValidatorException: \r\n  PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: \r\n  unable to find valid certification path to requested target\r\n```","```\r\n-Djavax.net.ssl.trustStore=clienttruststore.jks -Djavax.net.ssl.trustStorePassword=password\r\n```","```\r\nException in thread \"main\" java.net.SocketException: \r\n  Software caused connection abort: recv failed\r\n```","```\r\n((SSLServerSocket) listener).setNeedClientAuth(true);\r\n```","```\r\n-Djavax.net.ssl.keyStore=serverkeystore.jks \\\r\n    -Djavax.net.ssl.keyStorePassword=password \\\r\n    -Djavax.net.ssl.trustStore=clienttruststore.jks \\\r\n    -Djavax.net.ssl.trustStorePassword=password\r\n```","```\r\n-Djavax.net.ssl.keyStore=serverkeystore.jks \\\r\n    -Djavax.net.ssl.keyStorePassword=password \\\r\n    -Djavax.net.ssl.trustStore=clienttruststore.jks \\\r\n    -Djavax.net.ssl.trustStorePassword=password\r\n```","```\r\nHello World!\r\n```","```\r\nkeytool -v -list -keystore serverkeystore.jks\r\n```","```\r\n...\r\nOwner: CN=localhost, OU=technology, O=baeldung, L=city, ST=state, C=xx\r\n...\r\n```","```\r\nException in thread \"main\" javax.net.ssl.SSLHandshakeException: \r\n    java.security.cert.CertificateException: \r\n    No name matching localhost found\r\n```","```\r\nSSLParameters sslParams = new SSLParameters();\r\nsslParams.setEndpointIdentificationAlgorithm(\"HTTPS\");\r\n((SSLSocket) connection).setSSLParameters(sslParams);\r\n```","```\r\n((SSLSocket) connection).setEnabledProtocols(new String[] { \"TLSv1.1\" });\r\n```","```\r\nException in thread \"main\" javax.net.ssl.SSLHandshakeException: \r\n  No appropriate protocol (protocol is disabled or cipher suites are inappropriate)\r\n```","```\r\n((SSLSocket) connection).setEnabledCipherSuites(\r\n  new String[] { \"TLS_RSA_WITH_AES_128_GCM_SHA256\" });\r\n```","```\r\nException in thread \"main\" javax.net.ssl.SSLHandshakeException: \r\n  Received fatal alert: handshake_failure\r\n```"]