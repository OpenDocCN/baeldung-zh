["```\r\n{\r\n  \"name\" : \"Bob\",\r\n  \"profession\" : \"Software engineer\",\r\n  \"department\" : \"Research\",\r\n  \"age\" : 40,\r\n  \"family\" : [\r\n    {\r\n      \"wife\" : {\r\n        \"name\" : \"Alice\",\r\n        \"profession\" : \"Doctor\",\r\n        \"age\" : 38\r\n      }\r\n    },\r\n    {\r\n      \"son\" : {\r\n        \"name\" : \"Peter\",\r\n        \"occupation\" : \"Schoolboy\",\r\n        \"age\" : 11\r\n      }\r\n    }\r\n  ],\r\n  \"performance\" : [\r\n    {\r\n      \"2020\" : 4.5\r\n    },\r\n    {\r\n      \"2021\" : 4.8\r\n    }\r\n  ]\r\n}\r\n```","```\r\n JSONArray family = (JSONArray) jsonObject.get(\"family\");\r\n```","```\r\n JSONArray family = jsonObject.getJSONArray(\"family\");\r\n```","```\r\n JSONArray family = jsonObject.getJSONArray(\"family\");\r\n    JSONObject sonObject = family.getJSONObject(1);\r\n    JSONObject sonData = sonObject.getJSONObject(\"son\");\r\n    String sonName = sonData.getString(\"name\");\r\n    Assertions.assertEquals(sonName, \"Peter\");\r\n```","```\r\n public List<String> getValuesInObject(JSONObject jsonObject, String key) {\r\n        List<String> accumulatedValues = new ArrayList<>();\r\n        for (String currentKey : jsonObject.keySet()) {\r\n            Object value = jsonObject.get(currentKey);\r\n            if (currentKey.equals(key)) {\r\n                accumulatedValues.add(value.toString());\r\n            }\r\n\r\n            if (value instanceof JSONObject) {\r\n                accumulatedValues.addAll(getValuesInObject((JSONObject) value, key));\r\n            } else if (value instanceof JSONArray) {\r\n                accumulatedValues.addAll(getValuesInArray((JSONArray) value, key));\r\n            }\r\n        }\r\n\r\n        return accumulatedValues;\r\n    }\r\n\r\n    public List<String> getValuesInArray(JSONArray jsonArray, String key) {\r\n        List<String> accumulatedValues = new ArrayList<>();\r\n        for (Object obj : jsonArray) {\r\n            if (obj instanceof JSONArray) {\r\n                accumulatedValues.addAll(getValuesInArray((JSONArray) obj, key));\r\n            } else if (obj instanceof JSONObject) {\r\n                accumulatedValues.addAll(getValuesInObject((JSONObject) obj, key));\r\n            }\r\n        }\r\n\r\n        return accumulatedValues;\r\n    }\r\n```","```\r\n @Test\r\n    public void getAllAssociatedValuesRecursively() {\r\n        List<String> values = jsonObjectValueGetter.getValuesInObject(jsonObject, \"son\");\r\n        Assertions.assertEquals(values.size(), 1);\r\n\r\n        String sonString = values.get(0);\r\n        Assertions.assertTrue(sonString.contains(\"Peter\"));\r\n        Assertions.assertTrue(sonString.contains(\"Schoolboy\"));\r\n        Assertions.assertTrue(sonString.contains(\"11\"));\r\n\r\n        values = jsonObjectValueGetter.getValuesInObject(jsonObject, \"name\");\r\n        Assertions.assertEquals(values.size(), 3);\r\n\r\n        Assertions.assertEquals(values.get(0), \"Bob\");\r\n        Assertions.assertEquals(values.get(1), \"Alice\");\r\n        Assertions.assertEquals(values.get(2), \"Peter\");\r\n    }\r\n```"]