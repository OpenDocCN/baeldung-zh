["```\r\n@MessageDriven(activationConfig = { \r\n    @ActivationConfigProperty(\r\n      propertyName = \"destination\", \r\n      propertyValue = \"tutorialQueue\"), \r\n    @ActivationConfigProperty(\r\n      propertyName = \"destinationType\", \r\n      propertyValue = \"javax.jms.Queue\")\r\n})\r\npublic class ReadMessageMDB implements MessageListener {\r\n\r\n    public void onMessage(Message message) {\r\n        TextMessage textMessage = (TextMessage) message;\r\n        try {\r\n            System.out.println(\"Message received: \" + textMessage.getText());\r\n        } catch (JMSException e) {\r\n            System.out.println(\r\n              \"Error while trying to consume messages: \" + e.getMessage());\r\n        }\r\n    }\r\n}\r\n```","```\r\n@Override\r\nprotected void doGet(\r\n  HttpServletRequest req, \r\n  HttpServletResponse res) \r\n  throws ServletException, IOException {\r\n\r\n    String text = req.getParameter(\"text\") != null ? req.getParameter(\"text\") : \"Hello World\";\r\n\r\n    try (\r\n        Context ic = new InitialContext();\r\n\r\n        ConnectionFactory cf = (ConnectionFactory) ic.lookup(\"/ConnectionFactory\");\r\n        Queue queue = (Queue) ic.lookup(\"queue/tutorialQueue\");\r\n\r\n        Connection connection = cf.createConnection();\r\n    ) {\r\n        Session session = connection.createSession(\r\n          false, Session.AUTO_ACKNOWLEDGE);\r\n        MessageProducer publisher = session\r\n          .createProducer(queue);\r\n\r\n        connection.start();\r\n\r\n        TextMessage message = session.createTextMessage(text);\r\n        publisher.send(message);\r\n\r\n    } catch (NamingException | JMSException e) {\r\n        res.getWriter()\r\n          .println(\"Error while trying to send <\" + text + \"> message: \" + e.getMessage());\r\n    } \r\n\r\n    res.getWriter()\r\n      .println(\"Message sent: \" + text);\r\n}\r\n```"]