["```\r\nInstant.now(Clock.fixed( \r\n  Instant.parse(\"2018-08-22T10:00:00Z\"),\r\n  ZoneOffset.UTC))\r\n```","```\r\nClock constantClock = Clock.fixed(ofEpochMilli(0), ZoneId.systemDefault());\r\n\r\n// go to the future:\r\nClock clock = Clock.offset(constantClock, Duration.ofSeconds(10));\r\n\r\n// rewind back with a negative value:\r\nclock = Clock.offset(constantClock, Duration.ofSeconds(-5));\r\n\r\n// the 0 duration returns to the same clock:\r\nclock = Clock.offset(constClock, Duration.ZERO);\r\n```","```\r\npublic aspect ChangeCallsToCurrentTimeInMillisMethod {\r\n    long around(): \r\n      call(public static native long java.lang.System.currentTimeMillis()) \r\n        && within(user.code.base.pckg.*) {\r\n          return 0;\r\n      }\r\n} \r\n```","```\r\n@Test\r\npublic void givenFixedClock_whenNow_thenGetFixedInstant() {\r\n    String instantExpected = \"2014-12-22T10:15:30Z\";\r\n    Clock clock = Clock.fixed(Instant.parse(instantExpected), ZoneId.of(\"UTC\"));\r\n\r\n    Instant instant = Instant.now(clock);\r\n\r\n    assertThat(instant.toString()).isEqualTo(instantExpected);\r\n}\r\n```","```\r\n@Test\r\npublic void givenInstantMock_whenNow_thenGetFixedInstant() {\r\n    String instantExpected = \"2014-12-22T10:15:30Z\";\r\n    Clock clock = Clock.fixed(Instant.parse(instantExpected), ZoneId.of(\"UTC\"));\r\n    Instant instant = Instant.now(clock);\r\n\r\n    try (MockedStatic<Instant> mockedStatic = mockStatic(Instant.class)) {\r\n        mockedStatic.when(Instant::now).thenReturn(instant);\r\n        Instant now = Instant.now();\r\n        assertThat(now.toString()).isEqualTo(instantExpected);\r\n    }\r\n}\r\n```","```\r\n@Test\r\npublic void givenInstantWithJMock_whenNow_thenGetFixedInstant() {\r\n    String instantExpected = \"2014-12-21T10:15:30Z\";\r\n    Clock clock = Clock.fixed(Instant.parse(instantExpected), ZoneId.of(\"UTC\"));\r\n    new MockUp<Instant>() {\r\n        @Mock\r\n        public Instant now() {\r\n            return Instant.now(clock);\r\n        }\r\n    };\r\n\r\n    Instant now = Instant.now();\r\n\r\n    assertThat(now.toString()).isEqualTo(instantExpected);\r\n}\r\n```","```\r\n@Test\r\npublic void givenInstantWithExpectations_whenNow_thenGetFixedInstant() {\r\n    Clock clock = Clock.fixed(Instant.parse(\"2014-12-23T10:15:30.00Z\"), ZoneId.of(\"UTC\"));\r\n    Instant instantExpected = Instant.now(clock);\r\n    new Expectations(Instant.class) {\r\n        {\r\n            Instant.now();\r\n            result = instantExpected;\r\n        }\r\n    };\r\n\r\n    Instant now = Instant.now();\r\n\r\n    assertThat(now).isEqualTo(instantExpected);\r\n}\r\n```","```\r\n@Test\r\npublic void givenFixedClock_whenNow_thenGetFixedLocalDateTime() {\r\n    Clock clock = Clock.fixed(Instant.parse(\"2014-12-22T10:15:30.00Z\"), ZoneId.of(\"UTC\"));\r\n    String dateTimeExpected = \"2014-12-22T10:15:30\";\r\n\r\n    LocalDateTime dateTime = LocalDateTime.now(clock);\r\n\r\n    assertThat(dateTime).isEqualTo(dateTimeExpected);\r\n}\r\n```"]