["```\r\n<plugin>\r\n    <groupId>io.openliberty.tools</groupId>\r\n    <artifactId>liberty-maven-plugin</artifactId>\r\n    <version>3.3-M3</version>\r\n</plugin>\r\n```","```\r\n<dependency>\r\n    <groupId>io.openliberty</groupId>\r\n    <artifactId>openliberty-runtime</artifactId>\r\n    <version>20.0.0.1</version>\r\n    <type>zip</type>\r\n</dependency>\r\n```","```\r\ndependencies {\r\n    libertyRuntime group: 'io.openliberty', name: 'openliberty-runtime', version: '20.0.0.1'\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>jakarta.platform</groupId>\r\n    <artifactId>jakarta.jakartaee-web-api</artifactId>\r\n    <version>8.0.0</version>\r\n    <scope>provided</scope>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.eclipse.microprofile</groupId>\r\n    <artifactId>microprofile</artifactId>\r\n    <version>3.2</version>\r\n    <type>pom</type>\r\n    <scope>provided</scope>\r\n</dependency>\r\n```","```\r\n<properties>\r\n    <liberty.var.default.http.port>9080</liberty.var.default.http.port>\r\n    <liberty.var.default.https.port>9443</liberty.var.default.https.port>\r\n</properties>\r\n```","```\r\n<server description=\"Baeldung Open Liberty server\">\r\n    <featureManager>\r\n        <feature>mpHealth-2.0</feature>\r\n    </featureManager>\r\n    <webApplication location=\"open-liberty.war\" contextRoot=\"/\" />\r\n    <httpEndpoint host=\"*\" httpPort=\"${default.http.port}\" \r\n      httpsPort=\"${default.https.port}\" id=\"defaultHttpEndpoint\" />\r\n</server>\r\n```","```\r\nmvn clean package\r\n```","```\r\nmvn liberty:dev\r\n```","```\r\n{\"checks\":[],\"status\":\"UP\"}\r\n```","```\r\n<featureManager>\r\n    ...\r\n    <feature>servlet-4.0</feature>\r\n</featureManager>\r\n```","```\r\n<dependency>\r\n    <groupId>io.openliberty.features</groupId>\r\n    <artifactId>servlet-4.0</artifactId>\r\n    <version>20.0.0.1</version>\r\n    <type>esa</type>\r\n</dependency>\r\n```","```\r\n@WebServlet(urlPatterns=\"/app\")\r\npublic class AppServlet extends HttpServlet {\r\n    private static final long serialVersionUID = 1L;\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response) \r\n      throws ServletException, IOException {\r\n        String htmlOutput = \"<html><h2>Hello! Welcome to Open Liberty</h2></html>\";\r\n        response.getWriter().append(htmlOutput);\r\n    }\r\n}\r\n```","```\r\n<featureManager>\r\n    ...\r\n    <feature>jaxrs-2.1</feature>\r\n</featureManager>\r\n```","```\r\n@ApplicationPath(\"/api\")\r\npublic class ApiApplication extends Application {\r\n}\r\n```","```\r\npublic class Person {\r\n    private String username;\r\n    private String email;\r\n\r\n    // getters and setters\r\n    // constructors\r\n}\r\n```","```\r\n@RequestScoped\r\n@Path(\"persons\")\r\npublic class PersonResource {\r\n    @GET\r\n    @Produces(MediaType.APPLICATION_JSON)\r\n    public List<Person> getAllPersons() {\r\n        return Arrays.asList(new Person(1, \"normanlewis\", \"[[email protected]](/web/20221205162813/https://www.baeldung.com/cdn-cgi/l/email-protection)\"));\r\n    }\r\n}\r\n```","```\r\ncurl --request GET --url http://localhost:9080/api/persons\r\n```","```\r\n[{\"id\":1, \"username\":\"normanlewis\", \"email\":\"[[email protected]](/web/20221205162813/https://www.baeldung.com/cdn-cgi/l/email-protection)\"}]\r\n```","```\r\n@POST\r\n@Consumes(MediaType.APPLICATION_JSON)\r\npublic Response addPerson(Person person) {\r\n    String respMessage = \"Person \" + person.getUsername() + \" received successfully.\";\r\n    return Response.status(Response.Status.CREATED).entity(respMessage).build();\r\n}\r\n```","```\r\ncurl --request POST --url http://localhost:9080/api/persons \\\r\n  --header 'content-type: application/json' \\\r\n  --data '{\"username\": \"normanlewis\", \"email\": \"[[email protected]](/web/20221205162813/https://www.baeldung.com/cdn-cgi/l/email-protection)\"}'\r\n```","```\r\nPerson normanlewis received successfully.\r\n```","```\r\n<dependency>\r\n    <groupId>org.apache.derby</groupId>\r\n    <artifactId>derby</artifactId>\r\n    <version>10.14.2.0</version>\r\n</dependency>\r\n```","```\r\n<featureManager>\r\n    ...\r\n    <feature>jpa-2.2</feature> \r\n    <feature>jsonp-1.1</feature>\r\n    <feature>cdi-2.0</feature>\r\n</featureManager> \r\n```","```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<persistence version=\"2.2\"\r\n\r\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n    xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/persistence\r\n                        http://xmlns.jcp.org/xml/ns/persistence/persistence_2_2.xsd\">\r\n    <persistence-unit name=\"jpa-unit\" transaction-type=\"JTA\">\r\n        <jta-data-source>jdbc/jpadatasource</jta-data-source>\r\n        <properties>\r\n            <property name=\"eclipselink.ddl-generation\" value=\"create-tables\"/>\r\n            <property name=\"eclipselink.ddl-generation.output-mode\" value=\"both\" />\r\n        </properties>\r\n    </persistence-unit>\r\n</persistence>\r\n```","```\r\n<library id=\"derbyJDBCLib\">\r\n    <fileset dir=\"${shared.resource.dir}\" includes=\"derby*.jar\"/> \r\n</library>\r\n<dataSource id=\"jpadatasource\" jndiName=\"jdbc/jpadatasource\">\r\n    <jdbcDriver libraryRef=\"derbyJDBCLib\" />\r\n    <properties.derby.embedded databaseName=\"libertyDB\" createDatabase=\"create\" />\r\n</dataSource>\r\n```","```\r\n@Entity\r\npublic class Person {\r\n    @GeneratedValue(strategy = GenerationType.AUTO)\r\n    @Id\r\n    private int id;\r\n\r\n    private String username;\r\n    private String email;\r\n\r\n    // getters and setters\r\n}\r\n```","```\r\n@RequestScoped\r\npublic class PersonDao {\r\n    @PersistenceContext(name = \"jpa-unit\")\r\n    private EntityManager em;\r\n\r\n    public Person createPerson(Person person) {\r\n        em.persist(person);\r\n        return person;\r\n    }\r\n\r\n    public Person readPerson(int personId) {\r\n        return em.find(Person.class, personId);\r\n    }\r\n}\r\n```","```\r\n@RequestScoped\r\n@Path(\"person\")\r\npublic class PersonResource {\r\n    @Inject\r\n    private PersonDao personDao;\r\n\r\n    // ...\r\n}\r\n```","```\r\n@POST\r\n@Consumes(MediaType.APPLICATION_JSON)\r\n@Transactional\r\npublic Response addPerson(Person person) {\r\n    personDao.createPerson(person);\r\n    String respMessage = \"Person #\" + person.getId() + \" created successfully.\";\r\n    return Response.status(Response.Status.CREATED).entity(respMessage).build();\r\n}\r\n```","```\r\ncurl --request POST --url http://localhost:9080/api/persons \\\r\n  --header 'content-type: application/json' \\\r\n  --data '{\"username\": \"normanlewis\", \"email\": \"[[email protected]](/web/20221205162813/https://www.baeldung.com/cdn-cgi/l/email-protection)\"}'\r\n```","```\r\nPerson #1 created successfully.\r\n```","```\r\n@GET\r\n@Path(\"{id}\")\r\n@Produces(MediaType.APPLICATION_JSON)\r\n@Transactional\r\npublic Person getPerson(@PathParam(\"id\") int id) {\r\n    Person person = personDao.readPerson(id);\r\n    return person;\r\n}\r\n```","```\r\ncurl --request GET --url http://localhost:9080/api/persons/1\r\n```","```\r\n{\"email\":\"[[email protected]](/web/20221205162813/https://www.baeldung.com/cdn-cgi/l/email-protection)\",\"id\":1,\"username\":\"normanlewis\"}\r\n```","```\r\n<featureManager>\r\n    ...\r\n    <feature>jsonb-1.0</feature>\r\n</featureManager>\r\n```","```\r\npublic class RestConsumer {\r\n    public static String consumeWithJsonb(String targetUrl) {\r\n        Client client = ClientBuilder.newClient();\r\n        Response response = client.target(targetUrl).request().get();\r\n        String result = response.readEntity(String.class);\r\n        response.close();\r\n        client.close();\r\n        return result;\r\n    }\r\n}\r\n```","```\r\n@Test\r\npublic void whenConsumeWithJsonb_thenGetPerson() {\r\n    String url = \"http://localhost:9080/api/persons/1\";\r\n    String result = RestConsumer.consumeWithJsonb(url);        \r\n\r\n    Person person = JsonbBuilder.create().fromJson(result, Person.class);\r\n    assertEquals(1, person.getId());\r\n    assertEquals(\"normanlewis\", person.getUsername());\r\n    assertEquals(\"[[email protected]](/web/20221205162813/https://www.baeldung.com/cdn-cgi/l/email-protection)\", person.getEmail());\r\n}\r\n```"]