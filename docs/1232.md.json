["```\r\n@Entity\r\npublic class Customer {\r\n\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.AUTO)\r\n    private Long id;\r\n    private String firstName;\r\n    private String lastName;\r\n\r\n    // constructor, getters, setters \r\n}\r\n```","```\r\npublic interface CustomerRepository extends CrudRepository<Customer, Long> {\r\n} \r\n```","```\r\n@RestController\r\npublic class CustomerController {   \r\n    @Autowired\r\n    CustomerRepository customerRepository;   \r\n\r\n    @PostMapping(\"/customers\")\r\n    public ResponseEntity<String> insertCustomers() {        \r\n        Customer c1 = new Customer(\"James\", \"Gosling\");\r\n        Customer c2 = new Customer(\"Doug\", \"Lea\");\r\n        Customer c3 = new Customer(\"Martin\", \"Fowler\");\r\n        Customer c4 = new Customer(\"Brian\", \"Goetz\");\r\n        List<Customer> customers = Arrays.asList(c1, c2, c3, c4);\r\n        customerRepository.saveAll(customers);\r\n        return ResponseEntity.created(\"/customers\");\r\n    }\r\n\r\n    // ... @GetMapping to read customers\r\n} \r\n```","```\r\n@Autowired\r\nprivate MockMvc mockMvc;\r\n\r\n@Test \r\npublic void whenInsertingCustomers_thenCustomersAreCreated() throws Exception {\r\n    this.mockMvc.perform(post(\"/customers\"))\r\n      .andExpect(status().isCreated()));\r\n} \r\n```","```\r\nspring.jpa.properties.hibernate.generate_statistics=true \r\n```","```\r\n11232586 nanoseconds spent preparing 4 JDBC statements;\r\n4076610 nanoseconds spent executing 4 JDBC statements;\r\n0 nanoseconds spent executing 0 JDBC batches; \r\n```","```\r\nspring.jpa.properties.hibernate.jdbc.batch_size=4\r\nspring.jpa.properties.hibernate.order_inserts=true \r\n```","```\r\n16577314 nanoseconds spent preparing 4 JDBC statements;\r\n2207548 nanoseconds spent executing 4 JDBC statements;\r\n2003005 nanoseconds spent executing 1 JDBC batches; \r\n```"]