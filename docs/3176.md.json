["```\r\npublic interface Iterable<T> {\r\n\r\n    Iterator<T> iterator();\r\n\r\n    default void forEach(Consumer<? super T> action) { /* */ }\r\n\r\n    default Spliterator<T> spliterator() { /* */ }\r\n}\r\n```","```\r\npublic class Discount {\r\n\r\n    private int percent;\r\n\r\n    private int days;\r\n\r\n    public Discount() {\r\n        this(10);\r\n    }\r\n\r\n    public Discount(int percent) {\r\n        this(percent, 2);\r\n    }\r\n\r\n    public Discount(int percent, int days) {\r\n        this.percent = percent;\r\n        this.days = days;\r\n    }\r\n\r\n}\r\n```","```\r\npublic abstract class Writer {\r\n\r\n    public void write(int c) throws IOException {\r\n        // ...\r\n    }\r\n\r\n    public void write(char cbuf[]) throws IOException {\r\n        // ...\r\n    }\r\n\r\n}\r\n```","```\r\npublic class SingletonExample {\r\n\r\n    private static SingletonExample instance = new SingletonExample();\r\n\r\n    private SingletonExample() {}\r\n\r\n    public static SingletonExample getInstance() {\r\n        return instance;\r\n    }\r\n} \r\n```","```\r\npublic static <T> boolean addAll(\r\n  Collection<? super T> c, T... elements) {\r\n    boolean result = false;\r\n    for (T element : elements)\r\n        result |= c.add(element);\r\n    return result;\r\n}\r\n```","```\r\npublic void clear() {\r\n    super.clear();\r\n    head = tail = null;\r\n} \r\n```"]