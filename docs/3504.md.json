["```\r\n<Resource name=\"jdbc/BaeldungDatabase\" \r\n  auth=\"Container\"\r\n  type=\"javax.sql.DataSource\" \r\n  driverClassName=\"org.postgresql.Driver\"\r\n  url=\"jdbc:postgresql://localhost:5432/postgres\"\r\n  username=\"baeldung\" \r\n  password=\"pass1234\" \r\n  maxTotal=\"20\" \r\n  maxIdle=\"10\" \r\n  maxWaitMillis=\"-1\"/>\r\n```","```\r\n<ResourceLink \r\n  name=\"jdbc/BaeldungDatabase\" \r\n  global=\"jdbc/BaeldungDatabase\" \r\n  type=\"javax.sql.DataSource\"/>\r\n```","```\r\n@Configuration\r\n@EnableTransactionManagement\r\n@PropertySource(\"classpath:persistence-jndi.properties\")\r\n@ComponentScan(\"com.baeldung.hibernate.cache\")\r\n@EnableJpaRepositories(basePackages = \"com.baeldung.hibernate.cache.dao\")\r\npublic class PersistenceJNDIConfig {\r\n\r\n    @Autowired\r\n    private Environment env;\r\n\r\n    @Bean\r\n    public LocalContainerEntityManagerFactoryBean entityManagerFactory() \r\n      throws NamingException {\r\n        LocalContainerEntityManagerFactoryBean em \r\n          = new LocalContainerEntityManagerFactoryBean();\r\n        em.setDataSource(dataSource());\r\n\r\n        // rest of entity manager configuration\r\n        return em;\r\n    }\r\n\r\n    @Bean\r\n    public DataSource dataSource() throws NamingException {\r\n        return (DataSource) new JndiTemplate().lookup(env.getProperty(\"jdbc.url\"));\r\n    }\r\n\r\n    @Bean\r\n    public PlatformTransactionManager transactionManager(EntityManagerFactory emf) {\r\n        JpaTransactionManager transactionManager = new JpaTransactionManager();\r\n        transactionManager.setEntityManagerFactory(emf);\r\n        return transactionManager;\r\n    }\r\n\r\n    // rest of persistence configuration\r\n}\r\n```","```\r\njdbc.url=java:comp/env/jdbc/BaeldungDatabase\r\n```","```\r\n@Entity\r\npublic class Foo {\r\n\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.AUTO)\r\n    @Column(name = \"ID\")\r\n    private Long id;\r\n\r\n    @Column(name = \"NAME\")\r\n    private String name;\r\n\r\n    // default getters and setters\r\n}\r\n```","```\r\n@Repository\r\npublic class FooDao {\r\n\r\n    @PersistenceContext\r\n    private EntityManager entityManager;\r\n\r\n    public List<Foo> findAll() {\r\n        return entityManager\r\n          .createQuery(\"from \" + Foo.class.getName()).getResultList();\r\n    }\r\n}\r\n```","```\r\n@Service\r\n@Transactional\r\npublic class FooService {\r\n\r\n    @Autowired\r\n    private FooDao dao;\r\n\r\n    public List<Foo> findAll() {\r\n        return dao.findAll();\r\n    }\r\n}\r\n```"]