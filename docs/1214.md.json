["```\r\npublic class DumpStackTraceDemo \r\n{ \r\n    public static void main(String[] args) {\r\n        methodA(); \r\n    } \r\n\r\n    public static void methodA() {\r\n        try {\r\n            int num1 = 5/0; // java.lang.ArithmeticException: divide by zero\r\n        }\r\n        catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n```","```\r\njava.lang.ArithmeticException: / by zero\r\nat main.java.com.baeldung.tutorials.DumpStackTraceDemo.methodA(DumpStackTraceDemo.java:11)\r\nat main.java.com.baeldung.tutorials.DumpStackTraceDemo.main(DumpStackTraceDemo.java:6)\r\n```","```\r\npublic class StackTraceUsingThreadDemo {\r\n\r\n    public static void main(String[] args) {\r\n        methodA();\r\n    }\r\n\r\n    public static StackTraceElement[] methodA() {\r\n        return methodB();\r\n    }\r\n\r\n    public static StackTraceElement[] methodB() {\r\n        Thread thread = Thread.currentThread();\r\n        return thread.getStackTrace();\r\n    }\r\n}\r\n```","```\r\n@Test\r\npublic void whenElementIsFetchedUsingThread_thenCorrectMethodAndClassIsReturned() {\r\n    StackTraceElement[] stackTrace = new StackTraceUsingThreadDemo().methodA();\r\n\r\n    StackTraceElement elementZero = stackTrace[0];\r\n    assertEquals(\"java.lang.Thread\", elementZero.getClassName());\r\n    assertEquals(\"getStackTrace\", elementZero.getMethodName());\r\n\r\n    StackTraceElement elementOne = stackTrace[1];\r\n    assertEquals(\"com.baeldung.tutorials.StackTraceUsingThreadDemo\", elementOne.getClassName());\r\n    assertEquals(\"methodB\", elementOne.getMethodName());\r\n\r\n    StackTraceElement elementTwo = stackTrace[2];\r\n    assertEquals(\"com.baeldung.tutorials.StackTraceUsingThreadDemo\", elementTwo.getClassName());\r\n    assertEquals(\"methodA\", elementTwo.getMethodName());\r\n\r\n    StackTraceElement elementThree = stackTrace[3];\r\n    assertEquals(\"test.java.com.baeldung.tutorials.CurrentStacktraceDemoUnitTest\", elementThree.getClassName());\r\n    assertEquals(\"whenElementIsFetchedUsingThread_thenCorrectMethodAndClassIsReturned\", elementThree.getMethodName());\r\n}\r\n```","```\r\npublic class StackTraceUsingThrowableDemo {\r\n\r\n    public static void main(String[] args) {\r\n        methodA(); \r\n    } \r\n\r\n    public static StackTraceElement[] methodA() {\r\n        try {\r\n            methodB();\r\n        } catch (Throwable t) {\r\n            return t.getStackTrace();\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static void methodB() throws Throwable {\r\n        throw new Throwable(\"A test exception\");\r\n    }\r\n}\r\n```","```\r\n@Test\r\npublic void whenElementIsFecthedUsingThrowable_thenCorrectMethodAndClassIsReturned() {\r\n    StackTraceElement[] stackTrace = new StackTraceUsingThrowableDemo().methodA();\r\n\r\n    StackTraceElement elementZero = stackTrace[0];\r\n    assertEquals(\"com.baeldung.tutorials.StackTraceUsingThrowableDemo\", elementZero.getClassName());\r\n    assertEquals(\"methodB\", elementZero.getMethodName());\r\n\r\n    StackTraceElement elementOne = stackTrace[1];\r\n    assertEquals(\"com.baeldung.tutorials.StackTraceUsingThrowableDemo\", elementOne.getClassName());\r\n    assertEquals(\"methodA\", elementOne.getMethodName());\r\n\r\n    StackTraceElement elementThree = stackTrace[2];\r\n    assertEquals(\"test.java.com.baeldung.tutorials.CurrentStacktraceDemoUnitTest\", elementThree.getClassName());\r\n    assertEquals(\"whenElementIsFecthedUsingThrowable_thenCorrectMethodAndClassIsReturned\", elementThree.getMethodName());\r\n}\r\n```"]