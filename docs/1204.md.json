["```\r\npublic static String stream(URL url) {\r\n    try (InputStream input = url.openStream()) {\r\n        InputStreamReader isr = new InputStreamReader(input);\r\n        BufferedReader reader = new BufferedReader(isr);\r\n        StringBuilder json = new StringBuilder();\r\n        int c;\r\n        while ((c = reader.read()) != -1) {\r\n            json.append((char) c);\r\n        }\r\n        return json.toString();\r\n    }\r\n}\r\n```","```\r\npublic static JSONObject getJson(URL url) {\r\n    String json = IOUtils.toString(url, Charset.forName(\"UTF-8\"));\r\n    return new JSONObject(json);\r\n}\r\n```","```\r\njsonObject.getString(\"stringProperty\");\r\n```","```\r\n<dependency>\r\n    <groupId>com.fasterxml.jackson.core</groupId>\r\n    <artifactId>jackson-databind</artifactId>\r\n    <version>2.13.3</version>\r\n</dependency>\r\n```","```\r\npublic static JsonNode get(URL url) {\r\n    ObjectMapper mapper = new ObjectMapper();\r\n    return mapper.readTree(url);\r\n}\r\n```","```\r\njson.get(\"propertyName\");\r\n```","```\r\npublic static <T> T get(URL url, Class<T> type) {\r\n    ObjectMapper mapper = new ObjectMapper();\r\n    return mapper.readValue(url, type);\r\n}\r\n```"]