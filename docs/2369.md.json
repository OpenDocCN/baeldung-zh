["```\r\nSSLConnectionSocketFactory sslsf = new SSLConnectionSocketFactory(\r\n  SSLContexts.createDefault(),\r\n  new String[] { \"TLSv1.2\", \"TLSv1.3\" },\r\n  null,\r\n  SSLConnectionSocketFactory.getDefaultHostnameVerifier());\r\n\r\nCloseableHttpClient httpClient = HttpClients.custom().setSSLSocketFactory(sslsf).build();\r\n```","```\r\nCloseableHttpClient httpClient = HttpClients.createSystem();\r\n```","```\r\nCloseableHttpClient httpClient = HttpClients.custom().useSystemProperties().build();\r\n```","```\r\n$ java -Dhttps.protocols=TLSv1.1,TLSv1.2,TLSv1.3 -jar webClient.jar\r\n```","```\r\nSSLConnectionSocketFactory sslsf = new SSLConnectionSocketFactory(SSLContexts.createDefault()){\r\n\r\n    @Override\r\n    protected void prepareSocket(SSLSocket socket) {\r\n\r\n        String hostname = socket.getInetAddress().getHostName();\r\n        if (hostname.endsWith(\"internal.system.com\")){\r\n            socket.setEnabledProtocols(new String[] { \"TLSv1\", \"TLSv1.1\", \"TLSv1.2\", \"TLSv1.3\" });\r\n        }\r\n        else {\r\n            socket.setEnabledProtocols(new String[] {\"TLSv1.3\"});\r\n        }\r\n    }\r\n};<br />\r\nCloseableHttpClient httpClient = HttpClients.custom().setSSLSocketFactory(sslsf).build(); \r\n```"]