["```\r\n<dependency>\r\n    <groupId>org.apache.velocity</groupId>\r\n    <artifactId>velocity</artifactId>\r\n    <version>1.7</version>\r\n</dependency>\r\n\r\n<dependency>\r\n    <groupId>org.apache.velocity</groupId>\r\n    <artifactId>velocity-tools</artifactId>\r\n    <version>2.0</version>\r\n</dependency>\r\n```","```\r\npublic class MainWebAppInitializer implements WebApplicationInitializer {\r\n\r\n    @Override\r\n    public void onStartup(ServletContext sc) throws ServletException {\r\n        AnnotationConfigWebApplicationContext root = new AnnotationConfigWebApplicationContext();\r\n        root.register(WebConfig.class);\r\n\r\n        sc.addListener(new ContextLoaderListener(root));\r\n\r\n        ServletRegistration.Dynamic appServlet = \r\n          sc.addServlet(\"mvc\", new DispatcherServlet(new GenericWebApplicationContext()));\r\n        appServlet.setLoadOnStartup(1);\r\n    }\r\n}\r\n```","```\r\n<web-app ...>\r\n    <display-name>Spring MVC Velocity</display-name>\r\n    <servlet>\r\n        <servlet-name>mvc</servlet-name>\r\n    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>\r\n        <init-param>\r\n        <param-name>contextConfigLocation</param-name>\r\n        <param-value>/WEB-INF/mvc-servlet.xml</param-value>\r\n     </init-param>\r\n     <load-on-startup>1</load-on-startup>\r\n    </servlet>\r\n\r\n    <servlet-mapping>\r\n        <servlet-name>mvc</servlet-name>\r\n    <url-pattern>/*</url-pattern>\r\n    </servlet-mapping>\r\n\r\n    <context-param>\r\n        <param-name>contextConfigLocation</param-name>\r\n    <param-value>/WEB-INF/spring-context.xml</param-value>\r\n    </context-param>\r\n\r\n    <listener>\r\n        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>\r\n    </listener>\r\n</web-app>\r\n```","```\r\n@Configuration\r\n@EnableWebMvc\r\n@ComponentScan(basePackages= {\r\n  \"com.baeldung.mvc.velocity.controller\",\r\n  \"com.baeldung.mvc.velocity.service\" }) \r\npublic class WebConfig extends WebMvcConfigurerAdapter {\r\n\r\n    @Override\r\n    public void addResourceHandlers(ResourceHandlerRegistry registry) {\r\n        registry\r\n          .addResourceHandler(\"/resources/**\")\r\n          .addResourceLocations(\"/resources/\");\r\n    }\r\n\r\n    @Override\r\n    public void configureDefaultServletHandling(DefaultServletHandlerConfigurer configurer) {\r\n        configurer.enable();\r\n    }\r\n\r\n    @Bean\r\n    public ViewResolver viewResolver() {\r\n        VelocityLayoutViewResolver bean = new VelocityLayoutViewResolver();\r\n        bean.setCache(true);\r\n        bean.setPrefix(\"/WEB-INF/views/\");\r\n        bean.setLayoutUrl(\"/WEB-INF/layouts/layout.vm\");\r\n        bean.setSuffix(\".vm\");\r\n        return bean;\r\n    }\r\n\r\n    @Bean\r\n    public VelocityConfigurer velocityConfig() {\r\n        VelocityConfigurer velocityConfigurer = new VelocityConfigurer();\r\n        velocityConfigurer.setResourceLoaderPath(\"/\");\r\n        return velocityConfigurer;\r\n    }\r\n}\r\n```","```\r\n<beans ...>\r\n    <context:component-scan base-package=\"com.baeldung.mvc.velocity.*\" />\r\n    <context:annotation-config /> \r\n    <bean id=\"velocityConfig\" \r\n      class=\"org.springframework.web.servlet.view.velocity.VelocityConfigurer\">\r\n        <property name=\"resourceLoaderPath\">\r\n            <value>/</value>\r\n        </property>\r\n    </bean> \r\n    <bean id=\"viewResolver\"\r\n      class=\"org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver\">\r\n        <property name=\"cache\" value=\"true\" />\r\n        <property name=\"prefix\" value=\"/WEB-INF/views/\" />\r\n        <property name=\"layoutUrl\" value=\"/WEB-INF/layouts/layout.vm\" />\r\n        <property name=\"suffix\" value=\".vm\" />\r\n    </bean>\r\n</beans>\r\n```","```\r\n<context:component-scan base-package=\"com.baeldung.mvc.velocity.*\" />\r\n```","```\r\n<context:annotation-config />\r\n```","```\r\n<div style=\"...\">\r\n    <div style=\"float: left\">\r\n        <h1>Our tutorials</h1>\r\n    </div>\r\n</div>\r\n```","```\r\n<div style=\"...\">\r\n    @Copyright baeldung.com\r\n</div>\r\n```","```\r\n<html>\r\n    <head>\r\n        <title>Spring & Velocity</title>  \r\n    </head>\r\n    <body>\r\n        <div>\r\n            #parse(\"/WEB-INF/fragments/header.vm\")\r\n        </div>  \r\n        <div>\r\n            <!-- View index.vm is inserted here -->\r\n            $screen_content\r\n        </div>  \r\n        <div>\r\n            #parse(\"/WEB-INF/fragments/footer.vm\")\r\n        </div>\r\n    </body>\r\n</html>\r\n```","```\r\n<h1>Index</h1>\r\n\r\n<h2>Tutorials list</h2>\r\n<table border=\"1\">\r\n    <tr>\r\n        <th>Tutorial Id</th>\r\n        <th>Tutorial Title</th>\r\n        <th>Tutorial Description</th>\r\n        <th>Tutorial Author</th>\r\n    </tr>\r\n    #foreach($tut in $tutorials)\r\n    <tr>\r\n        <td>$tut.tutId</td>\r\n        <td>$tut.title</td>\r\n        <td>$tut.description</td>\r\n        <td>$tut.author</td>\r\n    </tr>\r\n    #end\r\n</table>\r\n```","```\r\n@Controller\r\n@RequestMapping(\"/\")\r\npublic class MainController {\r\n\r\n    @Autowired\r\n    private ITutorialsService tutService;\r\n\r\n    @RequestMapping(value =\"/\", method = RequestMethod.GET)\r\n    public String defaultPage() {\r\n        return \"index\";\r\n    }\r\n\r\n    @RequestMapping(value =\"/list\", method = RequestMethod.GET)\r\n    public String listTutorialsPage(Model model) { \r\n        List<Tutorial> list = tutService.listTutorials();\r\n        model.addAttribute(\"tutorials\", list);\r\n        return \"index\";\r\n    }\r\n} \r\n```"]