["```\r\n@Entity \r\npublic class Product {\r\n\r\n    @Id\r\n    private long id;\r\n    private String name;\r\n    private double price; \r\n\r\n    // constructors, getters and setters \r\n\r\n}\r\n```","```\r\npublic interface ProductRepository extends PagingAndSortingRepository<Product, Integer> {\r\n\r\n    List<Product> findAllByPrice(double price, Pageable pageable);\r\n}\r\n```","```\r\nPageable firstPageWithTwoElements = PageRequest.of(0, 2);\r\n\r\nPageable secondPageWithFiveElements = PageRequest.of(1, 5);\r\n```","```\r\nPage<Product> allProducts = productRepository.findAll(firstPageWithTwoElements);\r\n\r\nList<Product> allTenDollarProducts = \r\n  productRepository.findAllByPrice(10, secondPageWithFiveElements);\r\n```","```\r\nPage<Product> allProductsSortedByName = productRepository.findAll(Sort.by(\"name\"));\r\n```","```\r\nPageable sortedByName = \r\n  PageRequest.of(0, 3, Sort.by(\"name\"));\r\n\r\nPageable sortedByPriceDesc = \r\n  PageRequest.of(0, 3, Sort.by(\"price\").descending());\r\n\r\nPageable sortedByPriceDescNameAsc = \r\n  PageRequest.of(0, 5, Sort.by(\"price\").descending().and(Sort.by(\"name\")));\r\n```"]