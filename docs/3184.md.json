["```\r\npublic class Article {\r\n    private Long id;\r\n    private String title;\r\n    private String author;\r\n\r\n    // constructor, standard getters and setters\r\n}\r\n```","```\r\nCREATE TABLE IF NOT EXISTS `ARTICLES`(\r\n    `id`          INTEGER PRIMARY KEY,\r\n    `title`       VARCHAR(100) NOT NULL,\r\n    `author`      VARCHAR(100) NOT NULL\r\n);\r\n```","```\r\nINSERT INTO ARTICLES\r\nVALUES (1, 'Working with MyBatis in Spring', 'Baeldung');\r\n```","```\r\n<dependency>\r\n    <groupId>org.mybatis</groupId>\r\n    <artifactId>mybatis</artifactId>\r\n    <version>3.5.2</version>\r\n</dependency>\r\n\r\n<dependency>\r\n    <groupId>org.mybatis</groupId>\r\n    <artifactId>mybatis-spring</artifactId>\r\n    <version>2.0.2</version>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework</groupId>\r\n    <artifactId>spring-context</artifactId>\r\n    <version>5.3.8</version>\r\n</dependency>\r\n\r\n<dependency>\r\n    <groupId>org.springframework</groupId>\r\n    <artifactId>spring-beans</artifactId>\r\n    <version>5.3.8</version>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>com.h2database</groupId>\r\n    <artifactId>h2</artifactId>\r\n    <version>1.4.199</version>\r\n</dependency>\r\n\r\n<dependency>\r\n    <groupId>org.springframework</groupId>\r\n    <artifactId>spring-jdbc</artifactId>\r\n    <version>5.3.8</version>\r\n</dependency>\r\n```","```\r\n@Configuration\r\n@MapperScan(\"com.baeldung.mybatis\")\r\npublic class PersistenceConfig {\r\n\r\n    @Bean\r\n    public DataSource dataSource() {\r\n        return new EmbeddedDatabaseBuilder()\r\n          .setType(EmbeddedDatabaseType.H2)\r\n          .addScript(\"schema.sql\")\r\n          .addScript(\"data.sql\")\r\n          .build();\r\n    }\r\n\r\n    @Bean\r\n    public SqlSessionFactory sqlSessionFactory() throws Exception {\r\n        SqlSessionFactoryBean factoryBean = new SqlSessionFactoryBean();\r\n        factoryBean.setDataSource(dataSource());\r\n        return factoryBean.getObject();\r\n    }\r\n}\r\n```","```\r\npublic interface ArticleMapper {\r\n    @Select(\"SELECT * FROM ARTICLES WHERE id = #{id}\")\r\n    Article getArticle(@Param(\"id\") Long id);\r\n}\r\n```","```\r\n@RunWith(SpringJUnit4ClassRunner.class)\r\n@ContextConfiguration(classes = PersistenceConfig.class)\r\npublic class ArticleMapperIntegrationTest {\r\n\r\n    @Autowired\r\n    ArticleMapper articleMapper;\r\n\r\n    @Test\r\n    public void whenRecordsInDatabase_shouldReturnArticleWithGivenId() {\r\n        Article article = articleMapper.getArticle(1L);\r\n\r\n        assertThat(article).isNotNull();\r\n        assertThat(article.getId()).isEqualTo(1L);\r\n        assertThat(article.getAuthor()).isEqualTo(\"Baeldung\");\r\n        assertThat(article.getTitle()).isEqualTo(\"Working with MyBatis in Spring\");\r\n    }\r\n}\r\n```","```\r\n<jdbc:embedded-database id=\"dataSource\" type=\"H2\">\r\n    <jdbc:script location=\"schema.sql\"/>\r\n    <jdbc:script location=\"data.sql\"/>\r\n</jdbc:embedded-database>\r\n\r\n<bean id=\"sqlSessionFactory\" class=\"org.mybatis.spring.SqlSessionFactoryBean\">\r\n    <property name=\"dataSource\" ref=\"dataSource\" />\r\n</bean>\r\n\r\n<bean id=\"articleMapper\" class=\"org.mybatis.spring.mapper.MapperFactoryBean\">\r\n    <property name=\"mapperInterface\" value=\"com.baeldung.mybatis.ArticleMapper\" />\r\n    <property name=\"sqlSessionFactory\" ref=\"sqlSessionFactory\" />\r\n</bean>\r\n```","```\r\n@ContextConfiguration(locations = \"classpath:/beans.xml\")\r\n```","```\r\n<dependency>\r\n    <groupId>org.mybatis.spring.boot</groupId>\r\n    <artifactId>mybatis-spring-boot-starter</artifactId>\r\n    <version>2.1.0</version>\r\n</dependency>\r\n```","```\r\n@RunWith(SpringRunner.class)\r\n@SpringBootTest\r\n```"]