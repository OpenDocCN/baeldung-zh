["```\r\nMap<Integer, String> map = new HashMap<>();\r\nmap.put(1, \"Daniel\");\r\nmap.put(2, \"Marko\");\r\nfor (String name : map.values()) {\r\n    assertThat(name).isIn(map.values());\r\n}\r\nassertThat(map.values()).containsExactlyInAnyOrder(\"Daniel\", \"Marko\");\r\n```","```\r\nList<String> list = new ArrayList<>();\r\nlist.add(\"Daniel\");\r\nlist.add(\"Marko\");\r\nfor (String name : list) {\r\n    assertThat(name).isIn(list);\r\n}\r\nassertThat(list).containsExactly(\"Daniel\", \"Marko\");\r\n```","```\r\nList<String> list = new ArrayList<>();\r\nlist.add(\"Daniel\");\r\nlist.add(0, \"Marko\");\r\nassertThat(list).hasSize(2);\r\nassertThat(list.get(0)).isEqualTo(\"Marko\");\r\n```","```\r\nList<String> list = new ArrayList<>(Arrays.asList(\"Daniel\", \"Marko\"));\r\nlist.remove(1);\r\nassertThat(list).hasSize(1);\r\nassertThat(list).doesNotContain(\"Marko\");\r\n```","```\r\nLinkedList<String> list = new LinkedList<>();\r\nlist.addLast(\"Daniel\");\r\nlist.addFirst(\"Marko\");\r\nassertThat(list).hasSize(2);\r\nassertThat(list.getLast()).isEqualTo(\"Daniel\");\r\n```","```\r\nLinkedList<String> list = new LinkedList<>(Arrays.asList(\"Daniel\", \"Marko\", \"David\"));\r\nlist.removeFirst();\r\nlist.removeLast();\r\nassertThat(list).hasSize(1);\r\nassertThat(list).containsExactly(\"Marko\");\r\n```","```\r\nLinkedList<String> list = new LinkedList<>();\r\nlist.push(\"Daniel\");\r\nlist.push(\"Marko\");\r\nassertThat(list.poll()).isEqualTo(\"Marko\");\r\nassertThat(list).hasSize(1);\r\n```","```\r\nMap<String, String> map = new HashMap<>();\r\nmap.put(\"123456\", \"Daniel\");\r\nmap.put(\"654321\", \"Marko\");\r\nassertThat(map.get(\"654321\")).isEqualTo(\"Marko\");\r\n```","```\r\nMap<String, String> map = new HashMap<>();\r\nmap.put(\"123456\", \"Daniel\");\r\nmap.put(\"654321\", \"Marko\");\r\nmap.remove(\"654321\");\r\nassertThat(map).hasSize(1);\r\n```"]