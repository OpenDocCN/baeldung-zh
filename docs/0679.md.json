["```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>io.springfox</groupId>\r\n    <artifactId>springfox-boot-starter</artifactId>\r\n    <version>3.0.0</version>\r\n</dependency>\r\n```","```\r\nprivate ApiKey apiKey() { \r\n    return new ApiKey(\"JWT\", \"Authorization\", \"header\"); \r\n}\r\n```","```\r\nprivate SecurityContext securityContext() { \r\n    return SecurityContext.builder().securityReferences(defaultAuth()).build(); \r\n} \r\n\r\nprivate List<SecurityReference> defaultAuth() { \r\n    AuthorizationScope authorizationScope = new AuthorizationScope(\"global\", \"accessEverything\"); \r\n    AuthorizationScope[] authorizationScopes = new AuthorizationScope[1]; \r\n    authorizationScopes[0] = authorizationScope; \r\n    return Arrays.asList(new SecurityReference(\"JWT\", authorizationScopes)); \r\n}\r\n```","```\r\n@Bean\r\npublic Docket api() {\r\n    return new Docket(DocumentationType.SWAGGER_2)\r\n      .apiInfo(apiInfo())\r\n      .securityContexts(Arrays.asList(securityContext()))\r\n      .securitySchemes(Arrays.asList(apiKey()))\r\n      .select()\r\n      .apis(RequestHandlerSelectors.any())\r\n      .paths(PathSelectors.any())\r\n      .build();\r\n} \r\n```","```\r\nprivate ApiInfo apiInfo() {\r\n    return new ApiInfo(\r\n      \"My REST API\",\r\n      \"Some custom description of API.\",\r\n      \"1.0\",\r\n      \"Terms of service\",\r\n      new Contact(\"Sallo Szrajbman\", \"www.baeldung.com\", \"[[emailÂ protected]](/web/20221020153607/https://www.baeldung.com/cdn-cgi/l/email-protection)\"),\r\n      \"License of API\",\r\n      \"API license URL\",\r\n      Collections.emptyList());\r\n}\r\n```","```\r\n@RestController(value = \"/clients\")\r\n@Api( tags = \"Clients\")\r\npublic class ClientsRestController {\r\n\r\n    @ApiOperation(value = \"This method is used to get the clients.\")\r\n    @GetMapping\r\n    public List<String> getClients() {\r\n        return Arrays.asList(\"First Client\", \"Second Client\");\r\n    }\r\n}\r\n```"]