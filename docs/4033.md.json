["```\r\n<dependency>\r\n    <groupId>io.rest-assured</groupId>\r\n    <artifactId>json-schema-validator</artifactId>\r\n    <version>3.3.0</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n```","```\r\n{\r\n    \"id\": \"390\",\r\n    \"data\": {\r\n        \"leagueId\": 35,\r\n        \"homeTeam\": \"Norway\",\r\n        \"visitingTeam\": \"England\",\r\n    },\r\n    \"odds\": [{\r\n        \"price\": \"1.30\",\r\n        \"name\": \"1\"\r\n    },\r\n    {\r\n        \"price\": \"5.25\",\r\n        \"name\": \"X\"\r\n    }]\r\n}\r\n```","```\r\n@Test\r\npublic void givenUrl_whenJsonResponseConformsToSchema_thenCorrect() {\r\n    get(\"/events?id=390\").then().assertThat()\r\n      .body(matchesJsonSchemaInClasspath(\"event_0.json\"));\r\n}\r\n```","```\r\n@Test\r\npublic void givenUrl_whenValidatesResponseWithInstanceSettings_thenCorrect() {\r\n    JsonSchemaFactory jsonSchemaFactory = JsonSchemaFactory.newBuilder()\r\n      .setValidationConfiguration(\r\n        ValidationConfiguration.newBuilder()\r\n          .setDefaultVersion(SchemaVersion.DRAFTV4).freeze())\r\n            .freeze();\r\n    get(\"/events?id=390\").then().assertThat()\r\n      .body(matchesJsonSchemaInClasspath(\"event_0.json\")\r\n        .using(jsonSchemaFactory));\r\n}\r\n```","```\r\n{\r\n    \"odds\": [{\r\n        \"price\": \"1.30\",\r\n        \"name\": \"1\"\r\n    },\r\n    {\r\n        \"price\": \"5.25\",\r\n        \"name\": \"X\"\r\n    }]\r\n}\r\n```","```\r\nio.restassured.module.jsv.JsonSchemaValidatorSettings.settings;\r\n```","```\r\n@Test\r\npublic void givenUrl_whenValidatesResponseWithStaticSettings_thenCorrect() {\r\n    get(\"/events?id=390\").then().assertThat().body(matchesJsonSchemaInClasspath\r\n      (\"event_0.json\").using(settings().with().checkedValidation(false)));\r\n}\r\n```","```\r\nJsonSchemaFactory factory = JsonSchemaFactory.newBuilder()\r\n  .setValidationConfiguration(\r\n   ValidationConfiguration.newBuilder()\r\n    .setDefaultVersion(SchemaVersion.DRAFTV3)\r\n      .freeze()).freeze();\r\nJsonSchemaValidator.settings = settings()\r\n  .with().jsonSchemaFactory(factory)\r\n      .and().with().checkedValidation(false);\r\n```","```\r\nJsonSchemaValidator.reset();\r\n```"]