["```\r\npublic class RestTemplateHeaderModifierInterceptor\r\n  implements ClientHttpRequestInterceptor {\r\n\r\n    @Override\r\n    public ClientHttpResponse intercept(\r\n      HttpRequest request, \r\n      byte[] body, \r\n      ClientHttpRequestExecution execution) throws IOException {\r\n\r\n        ClientHttpResponse response = execution.execute(request, body);\r\n        response.getHeaders().add(\"Foo\", \"bar\");\r\n        return response;\r\n    }\r\n}\r\n```","```\r\n@Configuration\r\npublic class RestClientConfig {\r\n\r\n    @Bean\r\n    public RestTemplate restTemplate() {\r\n        RestTemplate restTemplate = new RestTemplate();\r\n\r\n        List<ClientHttpRequestInterceptor> interceptors\r\n          = restTemplate.getInterceptors();\r\n        if (CollectionUtils.isEmpty(interceptors)) {\r\n            interceptors = new ArrayList<>();\r\n        }\r\n        interceptors.add(new RestTemplateHeaderModifierInterceptor());\r\n        restTemplate.setInterceptors(interceptors);\r\n        return restTemplate;\r\n    }\r\n}\r\n```","```\r\nRestTemplate restTemplate \r\n  = new RestTemplate(\r\n    new BufferingClientHttpRequestFactory(\r\n      new SimpleClientHttpRequestFactory()\r\n    )\r\n  );\r\n```","```\r\npublic class RestTemplateItegrationTest {\r\n\r\n    @Autowired\r\n    RestTemplate restTemplate;\r\n\r\n    @Test\r\n    public void givenRestTemplate_whenRequested_thenLogAndModifyResponse() {\r\n        LoginForm loginForm = new LoginForm(\"username\", \"password\");\r\n        HttpEntity<LoginForm> requestEntity\r\n          = new HttpEntity<LoginForm>(loginForm);\r\n        HttpHeaders headers = new HttpHeaders();\r\n        headers.setContentType(MediaType.APPLICATION_JSON);\r\n\r\n        ResponseEntity<String> responseEntity\r\n          = restTemplate.postForEntity(\r\n            \"http://httpbin.org/post\", requestEntity, String.class\r\n          );\r\n\r\n        Assertions.assertEquals(responseEntity.getStatusCode(), HttpStatus.OK);\r\n        Assertions.assertEquals(responseEntity.getHeaders()\r\n                .get(\"Foo\")\r\n                .get(0), \"bar\");\r\n    }\r\n}\r\n```"]