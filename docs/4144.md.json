["```\r\n@Test\r\npublic void intStreamToArray() {\r\n  int[] first50EvenNumbers = IntStream.iterate(0, i -> i + 2)\r\n    .limit(50)\r\n    .toArray();\r\n\r\n  assertThat(first50EvenNumbers).hasSize(50);\r\n  assertThat(first50EvenNumbers[2]).isEqualTo(4);\r\n}\r\n```","```\r\n@Test\r\npublic void intStreamToList() {\r\n  List<Integer> first50IntegerNumbers = IntStream.range(0, 50)\r\n    .boxed()\r\n    .collect(Collectors.toList());\r\n\r\n  assertThat(first50IntegerNumbers).hasSize(50);\r\n  assertThat(first50IntegerNumbers.get(2)).isEqualTo(2);\r\n}\r\n```","```\r\n@Test\r\npublic void intStreamToString() {\r\n  String first3numbers = IntStream.of(0, 1, 2)\r\n    .mapToObj(String::valueOf)\r\n    .collect(Collectors.joining(\", \", \"[\", \"]\"));\r\n\r\n  assertThat(first3numbers).isEqualTo(\"[0, 1, 2]\");\r\n}\r\n```"]