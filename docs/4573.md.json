["```\r\n<dependency>\r\n    <groupId>org.mybatis</groupId>\r\n    <artifactId>mybatis</artifactId>\r\n    <version>3.4.4</version>\r\n</dependency>\r\n```","```\r\nString resource = \"mybatis-config.xml\";\r\nInputStream inputStream Resources.getResourceAsStream(resource);\r\nSQLSessionFactory sqlSessionFactory\r\n  = new SqlSessionFactoryBuilder().build(inputStream);\r\n```","```\r\npublic static SqlSessionFactory buildqlSessionFactory() {\r\n    DataSource dataSource \r\n      = new PooledDataSource(DRIVER, URL, USERNAME, PASSWORD);\r\n\r\n    Environment environment \r\n      = new Environment(\"Development\", new JdbcTransactionFactory(), dataSource);\r\n\r\n    Configuration configuration = new Configuration(environment);\r\n    configuration.addMapper(PersonMapper.class);\r\n    // ...\r\n\r\n    SqlSessionFactoryBuilder builder = new SqlSessionFactoryBuilder();\r\n    return builder.build(configuration);\r\n}\r\n```","```\r\ntry(SqlSession session = sqlSessionFactory.openSession()) {\r\n    // do work\r\n}\r\n```","```\r\npublic interface PersonMapper {\r\n\r\n    @Insert(\"Insert into person(name) values (#{name})\")\r\n    public Integer save(Person person);\r\n\r\n    // ...\r\n\r\n    @Select(\r\n      \"Select personId, name from Person where personId=#{personId}\")\r\n    @Results(value = {\r\n      @Result(property = \"personId\", column = \"personId\"),\r\n      @Result(property=\"name\", column = \"name\"),\r\n      @Result(property = \"addresses\", javaType = List.class,\r\n        column = \"personId\", [[email protected]](/web/20220628121808/https://www.baeldung.com/cdn-cgi/l/email-protection)(select = \"getAddresses\"))\r\n    })\r\n    public Person getPersonById(Integer personId);\r\n\r\n    // ...\r\n}\r\n```","```\r\n    @Insert(\"Insert into person(name) values (#{name})\")\r\n    public Integer save(Person person);\r\n\r\n    @Update(\"Update Person set name= #{name} where personId=#{personId}\")\r\n    public void updatePerson(Person person);\r\n\r\n    @Delete(\"Delete from Person where personId=#{personId}\")\r\n    public void deletePersonById(Integer personId);\r\n\r\n    @Select(\"SELECT person.personId, person.name FROM person \r\n      WHERE person.personId = #{personId}\")\r\n    Person getPerson(Integer personId);\r\n    ```","```\r\n    @Select(\"Select personId, name from Person where personId=#{personId}\")\r\n    @Results(value = {\r\n      @Result(property = \"personId\", column = \"personId\")\r\n        // ...   \r\n    })\r\n    public Person getPersonById(Integer personId);\r\n    ```","```\r\n    @Results(value = {\r\n      @Result(property = \"personId\", column = \"personId\"),\r\n      @Result(property=\"name\", column = \"name\"),\r\n      @Result(property = \"addresses\", javaType =List.class) \r\n        // ... \r\n    })\r\n    public Person getPersonById(Integer personId);\r\n    ```","```\r\n    @Results(value ={\r\n      @Result(property = \"addresses\", javaType = List.class, \r\n        column = \"personId\",\r\n        [[email protected]](/web/20220628121808/https://www.baeldung.com/cdn-cgi/l/email-protection)(select = \"getAddresses\"))\r\n    })\r\n    ```","```\r\n    @Select(\"select addressId, streetAddress, personId from address \r\n      where personId=#{personId}\")\r\n    public Address getAddresses(Integer personId);\r\n    ```","```\r\n    @Select(\"select * from Person\")\r\n    @MapKey(\"personId\")\r\n    Map<Integer, Person> getAllPerson();\r\n    ```","```\r\n    @Insert(\"Insert into address (streetAddress, personId) \r\n      values(#{streetAddress}, #{personId})\")\r\n    @Options(useGeneratedKeys = false, flushCache=true)\r\n    public Integer saveAddress(Address address);\r\n    ```","```\r\n@SelectProvider(type=MyBatisUtil.class, method=\"getPersonByName\")\r\npublic Person getPersonByName(String name);\r\n```","```\r\npublic class MyBatisUtil {\r\n\r\n    // ...\r\n\r\n    public String getPersonByName(String name){\r\n        return new SQL() {{\r\n            SELECT(\"*\");\r\n            FROM(\"person\");\r\n            WHERE(\"name like #{name} || '%'\");\r\n        }}.toString();\r\n    }\r\n}\r\n```","```\r\n@Select(value= \"{CALL getPersonByProc(#{personId,\r\n  mode=IN, jdbcType=INTEGER})}\")\r\n@Options(statementType = StatementType.CALLABLE)\r\npublic Person getPersonByProc(Integer personId);\r\n```"]