["```\r\nprint(\"Hello Baeldung Readers!!\")\r\n```","```\r\n$ python hello.py \r\nHello Baeldung Readers!!\r\n```","```\r\n@Test\r\npublic void givenPythonScript_whenPythonProcessInvoked_thenSuccess() throws Exception {\r\n    ProcessBuilder processBuilder = new ProcessBuilder(\"python\", resolvePythonScriptPath(\"hello.py\"));\r\n    processBuilder.redirectErrorStream(true);\r\n\r\n    Process process = processBuilder.start();\r\n    List<String> results = readProcessOutput(process.getInputStream());\r\n\r\n    assertThat(\"Results should not be empty\", results, is(not(empty())));\r\n    assertThat(\"Results should contain output of script: \", results, hasItem(\r\n      containsString(\"Hello Baeldung Readers!!\")));\r\n\r\n    int exitCode = process.waitFor();\r\n    assertEquals(\"No errors should be detected\", 0, exitCode);\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>org.python</groupId>\r\n    <artifactId>jython</artifactId>\r\n    <version>2.7.2</version>\r\n</dependency>\r\n```","```\r\nScriptEngineManagerUtils.listEngines();\r\n```","```\r\n...\r\nEngine name: jython\r\nVersion: 2.7.2\r\nLanguage: python\r\nShort Names:\r\npython\r\njython \r\n```","```\r\n@Test\r\npublic void givenPythonScriptEngineIsAvailable_whenScriptInvoked_thenOutputDisplayed() throws Exception {\r\n    StringWriter writer = new StringWriter();\r\n    ScriptContext context = new SimpleScriptContext();\r\n    context.setWriter(writer);\r\n\r\n    ScriptEngineManager manager = new ScriptEngineManager();\r\n    ScriptEngine engine = manager.getEngineByName(\"python\");\r\n    engine.eval(new FileReader(resolvePythonScriptPath(\"hello.py\")), context);\r\n    assertEquals(\"Should contain script output: \", \"Hello Baeldung Readers!!\", writer.toString().trim());\r\n}\r\n```","```\r\n@Test\r\npublic void givenPythonInterpreter_whenPrintExecuted_thenOutputDisplayed() {\r\n    try (PythonInterpreter pyInterp = new PythonInterpreter()) {\r\n        StringWriter output = new StringWriter();\r\n        pyInterp.setOut(output);\r\n\r\n        pyInterp.exec(\"print('Hello Baeldung Readers!!')\");\r\n        assertEquals(\"Should contain script output: \", \"Hello Baeldung Readers!!\", output.toString()\r\n          .trim());\r\n    }\r\n}\r\n```","```\r\n@Test\r\npublic void givenPythonInterpreter_whenNumbersAdded_thenOutputDisplayed() {\r\n    try (PythonInterpreter pyInterp = new PythonInterpreter()) {\r\n        pyInterp.exec(\"x = 10+10\");\r\n        PyObject x = pyInterp.get(\"x\");\r\n        assertEquals(\"x: \", 20, x.asInt());\r\n    }\r\n}\r\n```","```\r\ntry (PythonInterpreter pyInterp = new PythonInterpreter()) {\r\n    pyInterp.exec(\"import syds\");\r\n}\r\n```","```\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\nImportError: No module named syds\r\n```","```\r\n<dependency>\r\n    <groupId>org.apache.commons</groupId>\r\n    <artifactId>commons-exec</artifactId>\r\n    <version>1.3</version>\r\n</dependency>\r\n```","```\r\n@Test\r\npublic void givenPythonScript_whenPythonProcessExecuted_thenSuccess() \r\n  throws ExecuteException, IOException {\r\n    String line = \"python \" + resolvePythonScriptPath(\"hello.py\");\r\n    CommandLine cmdLine = CommandLine.parse(line);\r\n\r\n    ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\r\n    PumpStreamHandler streamHandler = new PumpStreamHandler(outputStream);\r\n\r\n    DefaultExecutor executor = new DefaultExecutor();\r\n    executor.setStreamHandler(streamHandler);\r\n\r\n    int exitCode = executor.execute(cmdLine);\r\n    assertEquals(\"No errors should be detected\", 0, exitCode);\r\n    assertEquals(\"Should contain script output: \", \"Hello Baeldung Readers!!\", outputStream.toString()\r\n      .trim());\r\n}\r\n```","```\r\npython -m http.server 9000\r\n```"]