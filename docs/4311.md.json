["```\r\nint x = 5;\r\n```","```\r\nint a = 3, b = 3, c = -2;\r\na = a * c; // Simple assignment operator\r\nb *= c; // Compound assignment operator\r\n```","```\r\nlong x = 1;\r\nlong y = (x+=2);\r\n```","```\r\n// Simple assignment\r\nint x = 5; // x is 5\r\n\r\n// Incrementation\r\nx += 5; // x is 10\r\n\r\n// Decrementation\r\nx -= 2; // x is 8\r\n\r\n// Multiplication\r\nx *= 2; // x is 16\r\n\r\n// Modulus\r\nx %= 3; // x is 1\r\n\r\n// Binary AND\r\nx &= 4; // x is 0\r\n\r\n// Binary exclusive OR\r\nx ^= 4; // x is 4\r\n\r\n// Binary inclusive OR\r\nx |= 8; // x is 12\r\n```","```\r\nint[] numbers = null;\r\n\r\n// Trying Incrementation\r\nnumbers[2] += 5;\r\n```","```\r\nint[] numbers = {0, 1};\r\n\r\n// Trying Incrementation\r\nnumbers[2] += 5;\r\n```","```\r\nint[] numbers = {0, 1};\r\n\r\n// Incrementation\r\nnumbers[1] += 5; // x is now 6\r\n```","```\r\nlong number = 10;\r\nint i = number;\r\ni = i * number; // Does not compile\r\n```","```\r\ni = (int) i * number;\r\n```","```\r\ni *= number;\r\n```"]