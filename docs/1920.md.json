["```\r\n@Getter\r\n@Builder\r\npublic class Person {\r\n    private final String givenName;\r\n    private final String additionalName;\r\n    private final String familyName;\r\n    private final List<String> tags;\r\n}\r\n```","```\r\nPerson person = Person.builder()\r\n  .givenName(\"Aaron\")\r\n  .additionalName(\"A\")\r\n  .familyName(\"Aardvark\")\r\n  .tags(Arrays.asList(\"fictional\",\"incidental\"))\r\n  .build();\r\n```","```\r\n@Singular private final List<String> interests;\r\n```","```\r\nPerson person = Person.builder()\r\n  .givenName(\"Aaron\")\r\n  .additionalName(\"A\")\r\n  .familyName(\"Aardvark\")\r\n  .interest(\"history\")\r\n  .interest(\"sport\")\r\n  .build();\r\n```","```\r\n@Singular private final Set<String> skills;\r\n@Singular private final Map<String, LocalDate> awards;\r\n```","```\r\nPerson person = Person.builder()\r\n  .givenName(\"Aaron\")\r\n  .skill(\"singing\")\r\n  .skill(\"dancing\")\r\n  .build();\r\n```","```\r\nPerson person = Person.builder()\r\n  .givenName(\"Aaron\")\r\n  .award(\"Singer of the Year\", LocalDate.now().minusYears(5))\r\n  .award(\"Best Dancer\", LocalDate.now().minusYears(2))\r\n  .build();\r\n```","```\r\n@Getter\r\n@Builder\r\npublic class Sea {\r\n    @Singular private final List<String> grasses;\r\n    @Singular private final List<String> fish;\r\n}\r\n```","```\r\nCan't singularize this name; please specify the singular explicitly (i.e. @Singular(\"sheep\"))\r\n```","```\r\n@Singular(\"oneFish\") private final List<String> fish;\r\n```","```\r\nSea sea = Sea.builder()\r\n  .grass(\"Dulse\")\r\n  .grass(\"Kelp\")\r\n  .oneFish(\"Cod\")\r\n  .oneFish(\"Mackerel\")\r\n  .build();\r\n```","```\r\nList<String> tags= new ArrayList();\r\ntags.add(\"fictional\");\r\ntags.add(\"incidental\");\r\nPerson person = Person.builder()\r\n  .givenName(\"Aaron\")\r\n  .tags(tags)\r\n  .build();\r\nperson.getTags().clear();\r\nperson.getTags().add(\"non-fictional\");\r\nperson.getTags().add(\"important\");\r\n```"]