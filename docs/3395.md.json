["```\r\nPair<Integer, String> pair = new Pair<>(1, \"One\");\r\nInteger key = pair.getKey();\r\nString value = pair.getValue(); \r\n```","```\r\nAbstractMap.SimpleEntry<Integer, String> entry \r\n  = new AbstractMap.SimpleEntry<>(1, \"one\");\r\nInteger key = entry.getKey();\r\nString value = entry.getValue();\r\n```","```\r\nAbstractMap.SimpleImmutableEntry<Integer, String> entry\r\n  = new AbstractMap.SimpleImmutableEntry<>(1, \"one\");\r\n```","```\r\nImmutablePair<Integer, String> pair = new ImmutablePair<>(2, \"Two\");\r\nInteger key = pair.getKey();\r\nString value = pair.getValue();\r\n```","```\r\nPair<Integer, String> pair = new MutablePair<>(3, \"Three\");\r\npair.setValue(\"New Three\"); \r\n```","```\r\nTuple2<Integer, String> pair = new Tuple2<>(4, \"Four\");\r\nInteger key = pair._1();\r\nString value = pair._2(); \r\n```","```\r\ntuplePair = pair.update2(\"New Four\"); \r\n```","```\r\npublic class CustomPair {\r\n    private String key;\r\n    private String value;\r\n\r\n    // standard getters and setters\r\n}\r\n```","```\r\nprivate Object[] getPair() {\r\n    // ...\r\n    return new Object[] {key, value};\r\n}\r\n```"]