["```\r\nspring.cloud.config.server.native.search-locations=resources/other.properties\r\n```","```\r\nspring.cloud.config.server.native.search-locations=file:///external/path/other.properties\r\n```","```\r\n-Dspring.profiles.active=native\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework</groupId>\r\n    <artifactId>spring-jdbc</artifactId>\r\n</dependency>\r\n```","```\r\nspring.datasource.url=jdbc:mysql://dbhost:3306/springconfig\r\nspring.datasource.username=dbuser\r\nspring.datasource.password=dbpassword\r\nspring.datasource.driver-class-name=com.mysql.jdbc.Driver\r\n```","```\r\n-Dspring.profiles.active=jdbc\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.data</groupId>\r\n    <artifactId>spring-data-redis</artifactId>\r\n</dependency>\r\n```","```\r\nspring.redis.host=localhost\r\nspring.redis.port=6379\r\n```","```\r\nHMSET application sample.property.name1 \"somevalue\" sample.property.name2 \"anothervalue\"\r\n```","```\r\nHGETALL application\r\n{\r\n    \"sample.property.name1\": \"somevalue\",\r\n    \"sample.property.name2\": \"anothervalue\"\r\n}\r\n```","```\r\n-Dspring.profiles.active=redis\r\n```","```\r\nHMSET application-dev sample.property.name1 \"somevalue\" sample.property.name2 \"anothervalue\"\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.cloud</groupId>\r\n    <artifactId>spring-cloud-starter-aws-secrets-manager-config</artifactId>\r\n    <version>2.2.6.RELEASE</version>\r\n</dependency>\r\n```","```\r\naws:\r\n  secretsmanager:\r\n    default-context: application\r\n    prefix: /config\r\n    profile-separator: _\r\n    fail-fast: true\r\n    name: ConfigServerApplication\r\n    enabled: true\r\n```","```\r\n<dependency>\r\n    <groupId>com.amazonaws</groupId>\r\n    <artifactId>aws-java-sdk-s3outposts</artifactId>\r\n    <version>1.12.150</version>\r\n</dependency>\r\n```","```\r\namazon.s3.access-key=key\r\namazon.s3.secret-key=secret\r\n```","```\r\nspring:\r\n  cloud:\r\n    config:\r\n      server:\r\n        awss3:\r\n          region: us-east-1\r\n          bucket: config-bucket\r\n```","```\r\n-Dspring.profiles.active=awss3\r\n```","```\r\npublic class CustomConfigurationRepository implements EnvironmentRepository, Ordered {\r\n    @Override\r\n    public Environment findOne(String application, String profile, String label) {\r\n        // Return a new Environment that is populated from\r\n        // our desired source (DB, NoSQL store, etc)\r\n    }\r\n\r\n    @Override\r\n    public int getOrder() {\r\n        // Define our order relative to other configuration repositories\r\n        return 0;\r\n    }\r\n}\r\n```","```\r\n@Bean\r\npublic CustomConfigurationRepository customConfigurationRepository() {\r\n    return new CustomConfigurationRepository();\r\n}\r\n```","```\r\nspring:\r\n  cloud:\r\n    config:\r\n      server:\r\n        redis:\r\n          order: 2\r\n        jdbc:\r\n          order: 1\r\n```","```\r\n-Dspring.profiles.active=jdbc,redis\r\n```"]