["```\r\n@Service\r\npublic class ProductService {\r\n    private final static List<Product> productRepository = asList(\r\n      new Product(1, \"Product 1\", new Stock(100)),\r\n      new Product(2, \"Product 2\", new Stock(50))\r\n    );\r\n\r\n    public Optional<Product> getProductById(int id) {\r\n        Optional<Product> product = productRepository.stream()\r\n          .filter(p -> p.getId() == id)\r\n          .findFirst();\r\n        String productName = product.map(Product::getName)\r\n          .orElse(null);\r\n\r\n        System.out.printf(\"Thread: %s; bean instance: %s; product id: %s has the name: %s%n\", currentThread().getName(), this, id, productName);\r\n\r\n        return product;\r\n    }\r\n} \r\n```","```\r\nThread: pool-2-thread-1; bean instance: [[email protected]](/web/20220524051348/https://www.baeldung.com/cdn-cgi/l/email-protection); product id: 1 has the name: Product 1\r\nThread: pool-2-thread-2; bean instance: [[email protected]](/web/20220524051348/https://www.baeldung.com/cdn-cgi/l/email-protection); product id: 2 has the name: Product 2\r\n```","```\r\n@Service\r\npublic class ProductService {\r\n    private String productName = null;\r\n\r\n    // ...\r\n\r\n    public Optional getProductById(int id) {\r\n        // ...\r\n\r\n        productName = product.map(Product::getName).orElse(null);\r\n\r\n       // ...\r\n    }\r\n}\r\n```","```\r\nThread: pool-2-thread-2; bean instance: [[email protected]](/web/20220524051348/https://www.baeldung.com/cdn-cgi/l/email-protection); product id: 2 has the name: Product 2\r\nThread: pool-2-thread-1; bean instance: [[email protected]](/web/20220524051348/https://www.baeldung.com/cdn-cgi/l/email-protection); product id: 1 has the name: Product 2\r\n```"]