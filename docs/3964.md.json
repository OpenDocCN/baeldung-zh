["```\r\nList list = new ArrayList(); // raw type\r\n```","```\r\nList<Integer> listIntgrs = new ArrayList<>(); // parameterized type\r\n```","```\r\n/**\r\n * Returns the element at the specified position in this list.\r\n *\r\n * @param index index of the element to return\r\n * @return the element at the specified position in this list\r\n * @throws IndexOutOfBoundsException if the index is out of range\r\n *         (<tt>index < 0 || index >= size()</tt>)\r\n */\r\nE get(int index);\r\n```","```\r\npublic void methodA() {\r\n    List<String> parameterizedList = new ArrayList<>();\r\n    parameterizedList.add(\"Hello Folks\");\r\n    methodB(parameterizedList);\r\n}\r\n\r\npublic void methodB(List rawList) { // raw type!\r\n    rawList.add(1);\r\n}\r\n```","```\r\nNote: RawTypeDemo.java uses unchecked or unsafe operations.\r\nNote: Recompile with -Xlint:unchecked for details.\r\n```","```\r\npublic void methodA() {\r\n    List<String> parameterizedList = new ArrayList<>();\r\n    parameterizedList.add(\"Hello Folks\");\r\n    methodB(parameterizedList);\r\n    String s = parameterizedList.get(1);\r\n}\r\n\r\npublic void methodB(List rawList) {\r\n    rawList.add(1);\r\n}\r\n```","```\r\nException in thread \"main\" java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.String\r\n```"]