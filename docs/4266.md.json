["```\r\nStringBuilder sb = new StringBuilder();\r\nstr.chars().distinct().forEach(c -> sb.append((char) c));\r\n```","```\r\nStringBuilder sb = new StringBuilder();\r\nint idx;\r\nfor (int i = 0; i < str.length(); i++) {\r\n    char c = str.charAt(i);\r\n    idx = str.indexOf(c, i + 1);\r\n    if (idx == -1) {\r\n        sb.append(c);\r\n    }\r\n} \r\n```","```\r\nchar[] chars = str.toCharArray();\r\nStringBuilder sb = new StringBuilder();\r\nboolean repeatedChar;\r\nfor (int i = 0; i < chars.length; i++) {\r\n    repeatedChar = false;\r\n    for (int j = i + 1; j < chars.length; j++) {\r\n        if (chars[i] == chars[j]) {\r\n            repeatedChar = true;\r\n            break;\r\n        }\r\n    }\r\n    if (!repeatedChar) {\r\n        sb.append(chars[i]);\r\n    }\r\n} \r\n```","```\r\nStringBuilder sb = new StringBuilder();\r\nif(!str.isEmpty()) {\r\n    char[] chars = str.toCharArray();\r\n    Arrays.sort(chars);\r\n\r\n    sb.append(chars[0]);\r\n    for (int i = 1; i < chars.length; i++) {\r\n        if (chars[i] != chars[i - 1]) {\r\n            sb.append(chars[i]);\r\n        }\r\n    }\r\n}\r\n```","```\r\nStringBuilder sb = new StringBuilder();\r\nSet<Character> linkedHashSet = new LinkedHashSet<>();\r\n\r\nfor (int i = 0; i < str.length(); i++) {\r\n    linkedHashSet.add(str.charAt(i));\r\n}\r\n\r\nfor (Character c : linkedHashSet) {\r\n    sb.append(c);\r\n} \r\n```"]