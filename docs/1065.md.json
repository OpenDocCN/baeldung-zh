["```\r\n@JsonInclude(Include.NON_NULL)\r\npublic class MyDto { ... }\r\n```","```\r\npublic class MyDto {\r\n\r\n    @JsonInclude(Include.NON_NULL)\r\n    private String stringValue;\r\n\r\n    private int intValue;\r\n\r\n    // standard getters and setters\r\n}\r\n```","```\r\n@Test\r\npublic void givenNullsIgnoredOnClass_whenWritingObjectWithNullField_thenIgnored()\r\n  throws JsonProcessingException {\r\n    ObjectMapper mapper = new ObjectMapper();\r\n    MyDto dtoObject = new MyDto();\r\n\r\n    String dtoAsString = mapper.writeValueAsString(dtoObject);\r\n\r\n    assertThat(dtoAsString, containsString(\"intValue\"));\r\n    assertThat(dtoAsString, not(containsString(\"stringValue\")));\r\n}\r\n```","```\r\nmapper.setSerializationInclusion(Include.NON_NULL);\r\n```","```\r\n@Test\r\npublic void givenNullsIgnoredGlobally_whenWritingObjectWithNullField_thenIgnored() \r\n  throws JsonProcessingException {\r\n    ObjectMapper mapper = new ObjectMapper();\r\n    mapper.setSerializationInclusion(Include.NON_NULL);\r\n    MyDto dtoObject = new MyDto();\r\n\r\n    String dtoAsString = mapper.writeValueAsString(dtoObject);\r\n\r\n    assertThat(dtoAsString, containsString(\"intValue\"));\r\n    assertThat(dtoAsString, containsString(\"booleanValue\"));\r\n    assertThat(dtoAsString, not(containsString(\"stringValue\")));\r\n}\r\n```"]