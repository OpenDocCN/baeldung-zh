["```\r\n<dependency>\r\n    <groupId>org.milyn</groupId>\r\n    <artifactId>milyn-smooks-all</artifactId>\r\n    <version>1.7.0</version>\r\n</dependency>\r\n```","```\r\n<order creation-date=\"2018-01-14\">\r\n    <order-number>771</order-number>\r\n    <order-status>IN_PROGRESS</order-status>\r\n</order>\r\n```","```\r\npublic class Order {\r\n\r\n    private Date creationDate;\r\n    private Long number;\r\n    private Status status;\r\n    // ...\r\n} \r\n```","```\r\npublic enum Status {\r\n    NEW, IN_PROGRESS, FINISHED\r\n}\r\n```","```\r\n<?xml version=\"1.0\"?>\r\n<smooks-resource-list \r\n\r\n  xmlns:jb=\"http://www.milyn.org/xsd/smooks/javabean-1.2.xsd\">\r\n\r\n    <jb:bean beanId=\"order\" \r\n      class=\"com.baeldung.smooks.model.Order\" createOnElement=\"order\">\r\n        <jb:value property=\"number\" data=\"order/order-number\" />\r\n        <jb:value property=\"status\" data=\"order/order-status\" />\r\n        <jb:value property=\"creationDate\" \r\n          data=\"order/@creation-date\" decoder=\"Date\">\r\n            <jb:decodeParam name=\"format\">yyyy-MM-dd</jb:decodeParam>\r\n        </jb:value>\r\n    </jb:bean>\r\n</smooks-resource-list>\r\n```","```\r\npublic Order converOrderXMLToOrderObject(String path) \r\n  throws IOException, SAXException {\r\n\r\n    Smooks smooks = new Smooks(\r\n      this.class.getResourceAsStream(\"/smooks-mapping.xml\"));\r\n    try {\r\n        JavaResult javaResult = new JavaResult();\r\n        smooks.filterSource(new StreamSource(this.class\r\n          .getResourceAsStream(path)), javaResult);\r\n        return (Order) javaResult.getBean(\"order\");\r\n    } finally {\r\n        smooks.close();\r\n    }\r\n}\r\n```","```\r\n@Test\r\npublic void givenOrderXML_whenConvert_thenPOJOsConstructedCorrectly() throws Exception {\r\n    XMLToJavaConverter xmlToJavaOrderConverter = new XMLToJavaConverter();\r\n    Order order = xmlToJavaOrderConverter\r\n      .converOrderXMLToOrderObject(\"/order.xml\");\r\n\r\n    assertThat(order.getNumber(), is(771L));\r\n    assertThat(order.getStatus(), is(Status.IN_PROGRESS));\r\n    assertThat(\r\n      order.getCreationDate(), \r\n      is(new SimpleDateFormat(\"yyyy-MM-dd\").parse(\"2018-01-14\"));\r\n}\r\n```","```\r\n<order creation-date=\"2018-01-14\">\r\n    <order-number>771</order-number>\r\n    <order-status>IN_PROGRESS</order-status>\r\n    <supplier>\r\n        <name>Company X</name>\r\n        <phone>1234567</phone>\r\n    </supplier>\r\n    <order-items>\r\n        <item>\r\n            <quanitiy>1</quanitiy>\r\n            <code>PX1234</code>\r\n            <price>9.99</price>\r\n        </item>\r\n        <item>\r\n            <quanitiy>1</quanitiy>\r\n            <code>RX990</code>\r\n            <price>120.32</price>\r\n        </item>\r\n    </order-items>\r\n</order>\r\n```","```\r\npublic class Order {\r\n    // ..\r\n    private Supplier supplier;\r\n    private List<Item> items;\r\n    // ...\r\n}\r\n```","```\r\npublic class Item {\r\n\r\n    private String code;\r\n    private Double price;\r\n    private Integer quantity;\r\n    // ...\r\n} \r\n```","```\r\npublic class Supplier {\r\n\r\n    private String name;\r\n    private String phoneNumber;\r\n    // ...\r\n}\r\n```","```\r\n<?xml version=\"1.0\"?>\r\n<smooks-resource-list \r\n\r\n  xmlns:jb=\"http://www.milyn.org/xsd/smooks/javabean-1.2.xsd\">\r\n\r\n    <jb:bean beanId=\"order\" \r\n      class=\"com.baeldung.smooks.model.Order\" createOnElement=\"order\">\r\n        <jb:value property=\"number\" data=\"order/order-number\" />\r\n        <jb:value property=\"status\" data=\"order/order-status\" />\r\n        <jb:value property=\"creationDate\" \r\n          data=\"order/@creation-date\" decoder=\"Date\">\r\n            <jb:decodeParam name=\"format\">yyyy-MM-dd</jb:decodeParam>\r\n        </jb:value>\r\n        <jb:wiring property=\"supplier\" beanIdRef=\"supplier\" />\r\n        <jb:wiring property=\"items\" beanIdRef=\"items\" />\r\n    </jb:bean>\r\n\r\n    <jb:bean beanId=\"supplier\" \r\n      class=\"com.baeldung.smooks.model.Supplier\" createOnElement=\"supplier\">\r\n        <jb:value property=\"name\" data=\"name\" />\r\n        <jb:value property=\"phoneNumber\" data=\"phone\" />\r\n    </jb:bean>\r\n\r\n    <jb:bean beanId=\"items\" \r\n      class=\"java.util.ArrayList\" createOnElement=\"order\">\r\n        <jb:wiring beanIdRef=\"item\" />\r\n    </jb:bean>\r\n    <jb:bean beanId=\"item\" \r\n      class=\"com.baeldung.smooks.model.Item\" createOnElement=\"item\">\r\n        <jb:value property=\"code\" data=\"item/code\" />\r\n        <jb:value property=\"price\" decoder=\"Double\" data=\"item/price\" />\r\n        <jb:value property=\"quantity\" decoder=\"Integer\" data=\"item/quantity\" />\r\n    </jb:bean>\r\n\r\n</smooks-resource-list>\r\n```","```\r\nassertThat(\r\n  order.getSupplier(), \r\n  is(new Supplier(\"Company X\", \"1234567\")));\r\nassertThat(order.getItems(), containsInAnyOrder(\r\n  new Item(\"PX1234\", 9.99,1),\r\n  new Item(\"RX990\", 120.32,1)));\r\n```","```\r\nsupplierName=[A-Za-z0-9]*\r\nsupplierPhone=^[0-9\\\\-\\\\+]{9,15}$\r\n```","```\r\n\"max_total\",\"orderItem.quantity * orderItem.price < 200.00\"\r\n```","```\r\n<?xml version=\"1.0\"?>\r\n<smooks-resource-list \r\n\r\n  xmlns:rules=\"http://www.milyn.org/xsd/smooks/rules-1.0.xsd\"\r\n  xmlns:validation=\"http://www.milyn.org/xsd/smooks/validation-1.0.xsd\">\r\n\r\n    <import file=\"smooks-mapping.xml\" />\r\n\r\n    <rules:ruleBases>\r\n        <rules:ruleBase \r\n          name=\"supplierValidation\" \r\n          src=\"supplier.properties\" \r\n          provider=\"org.milyn.rules.regex.RegexProvider\"/>\r\n        <rules:ruleBase \r\n          name=\"itemsValidation\" \r\n          src=\"item-rules.csv\" \r\n          provider=\"org.milyn.rules.mvel.MVELProvider\"/>\r\n    </rules:ruleBases>\r\n\r\n    <validation:rule \r\n      executeOn=\"supplier/name\" \r\n      name=\"supplierValidation.supplierName\" onFail=\"ERROR\"/>\r\n    <validation:rule \r\n      executeOn=\"supplier/phone\" \r\n      name=\"supplierValidation.supplierPhone\" onFail=\"ERROR\"/>\r\n    <validation:rule \r\n      executeOn=\"order-items/item\" \r\n      name=\"itemsValidation.max_total\" onFail=\"ERROR\"/>\r\n\r\n</smooks-resource-list>\r\n```","```\r\npublic ValidationResult validate(String path) \r\n  throws IOException, SAXException {\r\n    Smooks smooks = new Smooks(OrderValidator.class\r\n      .getResourceAsStream(\"/smooks/smooks-validation.xml\"));\r\n    try {\r\n        StringResult xmlResult = new StringResult();\r\n        JavaResult javaResult = new JavaResult();\r\n        ValidationResult validationResult = new ValidationResult();\r\n        smooks.filterSource(new StreamSource(OrderValidator.class\r\n          .getResourceAsStream(path)), xmlResult, javaResult, validationResult);\r\n        return validationResult;\r\n    } finally {\r\n        smooks.close();\r\n    }\r\n} \r\n```","```\r\n@Test\r\npublic void givenIncorrectOrderXML_whenValidate_thenExpectValidationErrors() throws Exception {\r\n    OrderValidator orderValidator = new OrderValidator();\r\n    ValidationResult validationResult = orderValidator\r\n      .validate(\"/smooks/order.xml\");\r\n\r\n    assertThat(validationResult.getErrors(), hasSize(1));\r\n    assertThat(\r\n      validationResult.getErrors().get(0).getFailRuleResult().getRuleName(), \r\n      is(\"supplierPhone\"));\r\n}\r\n```","```\r\nUNA:+.? '\r\nUNH+${order.number}+${order.status}+${order.creationDate?date}'\r\nCTA+${supplier.name}+${supplier.phoneNumber}'\r\n<#list items as item>\r\nLIN+${item.quantity}+${item.code}+${item.price}'\r\n</#list>\r\n```","```\r\nHi,\r\nOrder number #${order.number} created on ${order.creationDate?date} is currently in ${order.status} status.\r\nConsider contacting the supplier \"${supplier.name}\" with phone number: \"${supplier.phoneNumber}\".\r\nOrder items:\r\n<#list items as item>\r\n${item.quantity} X ${item.code} (total price ${item.price * item.quantity})\r\n</#list>\r\n```","```\r\n<?xml version=\"1.0\"?>\r\n<smooks-resource-list \r\n\r\n  xmlns:ftl=\"http://www.milyn.org/xsd/smooks/freemarker-1.1.xsd\">\r\n\r\n    <import file=\"smooks-validation.xml\" />\r\n\r\n    <ftl:freemarker applyOnElement=\"#document\">\r\n        <ftl:template>/path/to/template.ftl</ftl:template>\r\n    </ftl:freemarker>\r\n\r\n</smooks-resource-list>\r\n```","```\r\nSmooks smooks = new Smooks(config);\r\nStringResult stringResult = new StringResult();\r\nsmooks.filterSource(new StreamSource(OrderConverter.class\r\n  .getResourceAsStream(path)), stringResult);\r\nreturn stringResult.toString();\r\n```","```\r\n@Test\r\npublic void givenOrderXML_whenApplyEDITemplate_thenConvertedToEDIFACT()\r\n  throws Exception {\r\n    OrderConverter orderConverter = new OrderConverter();\r\n    String edifact = orderConverter.convertOrderXMLtoEDIFACT(\r\n      \"/smooks/order.xml\");\r\n\r\n   assertThat(edifact,is(EDIFACT_MESSAGE));\r\n}\r\n```"]