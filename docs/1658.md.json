["```\r\n<dependency>\r\n    <groupId>org.springframework.data</groupId>\r\n    <artifactId>spring-data-ldap</artifactId>\r\n    <version>1.0.6.RELEASE</version>\r\n</dependency> \r\n```","```\r\n@Entry(\r\n  base = \"ou=users\", \r\n  objectClasses = { \"person\", \"inetOrgPerson\", \"top\" })\r\npublic class User {\r\n    @Id\r\n    private Name id;\r\n\r\n    private @Attribute(name = \"cn\") String username;\r\n    private @Attribute(name = \"sn\") String password;\r\n\r\n    // standard getters/setters\r\n}\r\n```","```\r\n@Repository\r\npublic interface UserRepository extends LdapRepository<User> {\r\n    User findByUsername(String username);\r\n    User findByUsernameAndPassword(String username, String password);\r\n    List<User> findByUsernameLikeIgnoreCase(String username);\r\n}\r\n```","```\r\n@Configuration\r\n@EnableLdapRepositories(basePackages = \"com.baeldung.ldap.**\")\r\npublic class AppConfig {\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-data-ldap</artifactId>\r\n</dependency>\r\n```","```\r\nspring.ldap.url=ldap://localhost:18889\r\nspring.ldap.base=dc=example,dc=com\r\nspring.ldap.username=uid=admin,ou=system\r\nspring.ldap.password=secret\r\n```","```\r\n@Autowired\r\nprivate LdapTemplate ldapTemplate;\r\n```","```\r\n@Service\r\npublic class UserService {\r\n    @Autowired\r\n    private UserRepository userRepository;\r\n\r\n    // business methods\r\n}\r\n```","```\r\npublic Boolean authenticate(String u, String p) {\r\n    return userRepository.findByUsernameAndPassword(u, p) != null;\r\n}\r\n```","```\r\npublic void create(String username, String password) {\r\n    User newUser = new User(username,digestSHA(password));\r\n    newUser.setId(LdapUtils.emptyLdapName());\r\n    userRepository.save(newUser);\r\n}\r\n```","```\r\npublic void modify(String u, String p) {\r\n    User user = userRepository.findByUsername(u);\r\n    user.setPassword(p);\r\n    userRepository.save(user);\r\n}\r\n```","```\r\npublic List<String> search(String u) {\r\n    List<User> userList = userRepository\r\n      .findByUsernameLikeIgnoreCase(u);\r\n\r\n    if (userList == null) {\r\n        return Collections.emptyList();\r\n    }\r\n\r\n    return userList.stream()\r\n      .map(User::getUsername)\r\n      .collect(Collectors.toList());  \r\n}\r\n```","```\r\n@Test\r\npublic void givenLdapClient_whenCorrectCredentials_thenSuccessfulLogin() {\r\n    Boolean isValid = userService.authenticate(USER3, USER3_PWD);\r\n\r\n    assertEquals(true, isValid);\r\n}\r\n```"]