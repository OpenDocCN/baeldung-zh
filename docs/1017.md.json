["```\r\n@Configuration\r\n@EnableWebSecurity\r\npublic class SecurityConfig {\r\n    ...\r\n}\r\n```","```\r\n@Configuration\r\n@Order(1)\r\npublic static class App1ConfigurationAdapter {\r\n\r\n    @Bean\r\n    public SecurityFilterChain filterChainApp1(HttpSecurity http) throws Exception {\r\n        http.antMatcher(\"/admin*\")\r\n          .authorizeRequests()\r\n          .anyRequest()\r\n          .hasRole(\"ADMIN\")\r\n\r\n          .and()\r\n          .formLogin()\r\n          .loginPage(\"/loginAdmin\")\r\n          .loginProcessingUrl(\"/admin_login\")\r\n          .failureUrl(\"/loginAdmin?error=loginError\")\r\n          .defaultSuccessUrl(\"/adminPage\")\r\n\r\n          .and()\r\n          .logout()\r\n          .logoutUrl(\"/admin_logout\")\r\n          .logoutSuccessUrl(\"/protectedLinks\")\r\n          .deleteCookies(\"JSESSIONID\")\r\n\r\n          .and()\r\n          .exceptionHandling()\r\n          .accessDeniedPage(\"/403\")\r\n\r\n          .and()\r\n          .csrf().disable();\r\n       return http.build();\r\n    }\r\n}\r\n```","```\r\n@Configuration\r\n@Order(2)\r\npublic static class App2ConfigurationAdapter {\r\n\r\n    @Bean \r\n    public SecurityFilterChain filterChainApp2(HttpSecurity http) throws Exception {\r\n        http.antMatcher(\"/user*\")\r\n          .authorizeRequests()\r\n          .anyRequest()\r\n          .hasRole(\"USER\")\r\n\r\n          .and()\r\n          .formLogin()\r\n          .loginPage(\"/loginUser\")\r\n          .loginProcessingUrl(\"/user_login\")\r\n          .failureUrl(\"/loginUser?error=loginError\")\r\n          .defaultSuccessUrl(\"/userPage\")\r\n\r\n          .and()\r\n          .logout()\r\n          .logoutUrl(\"/user_logout\")\r\n          .logoutSuccessUrl(\"/protectedLinks\")\r\n          .deleteCookies(\"JSESSIONID\")\r\n\r\n          .and()\r\n          .exceptionHandling()\r\n          .accessDeniedPage(\"/403\")\r\n\r\n          .and()\r\n          .csrf().disable();\r\n       return http.build();\r\n    }\r\n}\r\n```","```\r\n<p>User login page</p>\r\n<form name=\"f\" action=\"user_login\" method=\"POST\">\r\n    <table>\r\n        <tr>\r\n            <td>User:</td>\r\n            <td><input type=\"text\" name=\"username\" value=\"\"></td>\r\n        </tr>\r\n        <tr>\r\n            <td>Password:</td>\r\n            <td><input type=\"password\" name=\"password\" /></td>\r\n        </tr>\r\n        <tr>\r\n            <td><input name=\"submit\" type=\"submit\" value=\"submit\" /></td>\r\n        </tr>\r\n    </table>\r\n</form>\r\n```","```\r\n@Bean\r\npublic UserDetailsService userDetailsService() throws Exception {\r\n    InMemoryUserDetailsManager manager = new InMemoryUserDetailsManager();\r\n    manager.createUser(User\r\n      .withUsername(\"user\")\r\n      .password(encoder().encode(\"userPass\"))\r\n      .roles(\"USER\")\r\n      .build());\r\n\r\n    manager.createUser(User\r\n      .withUsername(\"admin\")\r\n      .password(encoder().encode(\"adminPass\"))\r\n      .roles(\"ADMIN\")\r\n      .build());\r\n\r\n    return manager;\r\n}\r\n\r\n@Bean\r\npublic static PasswordEncoder encoder() {\r\n    return new BCryptPasswordEncoder();\r\n}\r\n```","```\r\n@Configuration\r\n@Order(1)\r\npublic static class App1ConfigurationAdapter {\r\n\r\n    @Bean\r\n    public UserDetailsService userDetailsServiceApp1() {\r\n         UserDetails user = User.withUsername(\"admin\")\r\n             .password(encoder().encode(\"admin\"))\r\n             .roles(\"ADMIN\")\r\n             .build();\r\n         return new InMemoryUserDetailsManager(user);\r\n    }\r\n}\r\n```"]