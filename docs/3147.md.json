["```\r\n<dependency>\r\n    <groupId>org.igniterealtime.smack</groupId>\r\n    <artifactId>smack-tcp</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.igniterealtime.smack</groupId>\r\n    <artifactId>smack-im</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.igniterealtime.smack</groupId>\r\n    <artifactId>smack-extensions</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.igniterealtime.smack</groupId>\r\n    <artifactId>smack-java7</artifactId>\r\n</dependency>\r\n```","```\r\nXMPPTCPConnectionConfiguration config = XMPPTCPConnectionConfiguration.builder()\r\n  .setUsernameAndPassword(\"baeldung\",\"baeldung\")\r\n  .setXmppDomain(\"jabb3r.org\")\r\n  .setHost(\"jabb3r.org\")\r\n  .build();\r\n```","```\r\nAbstractXMPPConnection connection = new XMPPTCPConnection(config);\r\nconnection.connect(); //Establishes a connection to the server\r\nconnection.login(); //Logs in \r\n```","```\r\nChatManager chatManager = ChatManager.getInstanceFor(connection);\r\nEntityBareJid jid = JidCreate.entityBareFrom(\"[[email protected]](/web/20220523233813/https://www.baeldung.com/cdn-cgi/l/email-protection)\");\r\nChat chat = chatManager.chatWith(jid);\r\n```","```\r\nchat.send(\"Hello!\");\r\n```","```\r\nchatManager.addIncomingListener(new IncomingChatMessageListener() {\r\n  @Override\r\n  public void newIncomingMessage(EntityBareJid from, Message message, Chat chat) {\r\n      System.out.println(\"New message from \" + from + \": \" + message.getBody());\r\n  }\r\n});\r\n```","```\r\nMultiUserChatManager manager = MultiUserChatManager.getInstanceFor(connection);\r\nMultiUserChat muc = manager.getMultiUserChat(jid);\r\nResourcepart room = Resourcepart.from(\"baeldung_room\");\r\nmuc.create(room).makeInstant();\r\n```","```\r\nSet<Jid> owners = JidUtil.jidSetFrom(\r\n  new String[] { \"[[email protected]](/web/20220523233813/https://www.baeldung.com/cdn-cgi/l/email-protection)\", \"[[email protected]](/web/20220523233813/https://www.baeldung.com/cdn-cgi/l/email-protection)\" });\r\n\r\nmuc.create(room)\r\n  .getConfigFormManger()\r\n  .setRoomOwners(owners)\r\n  .submitConfigurationForm();\r\n```","```\r\nRoster roster = Roster.getInstanceFor(connection);\r\n```","```\r\nCollection<RosterEntry> entries = roster.getEntries();\r\nfor (RosterEntry entry : entries) {\r\n    System.out.println(entry);\r\n}\r\n```","```\r\nroster.addRosterListener(new RosterListener() {\r\n    public void entriesAdded(Collection<String> addresses) { // handle new entries }\r\n    public void entriesDeleted(Collection<String> addresses) { // handle deleted entries }\r\n    public void entriesUpdated(Collection<String> addresses) { // handle updated entries }\r\n    public void presenceChanged(Presence presence) { // handle presence change }\r\n});\r\n```","```\r\nStanza presence = new Presence(Presence.Type.subscribe);\r\nconnection.sendStanza(presence);\r\n```","```\r\nStanzaCollector collector\r\n  = connection.createStanzaCollector(StanzaTypeFilter.MESSAGE);\r\nStanza stanza = collector.nextResult();\r\n```","```\r\nconnection.addAsyncStanzaListener(new StanzaListener() {\r\n    public void processStanza(Stanza stanza) \r\n      throws SmackException.NotConnectedException,InterruptedException, \r\n        SmackException.NotLoggedInException {\r\n            // handle stanza\r\n        }\r\n}, StanzaTypeFilter.MESSAGE);\r\n```","```\r\nStanzaFilter messageFilter = StanzaTypeFilter.MESSAGE;\r\nStanzaFilter idFilter = new StanzaIdFilter(\"123456\");\r\n```","```\r\nStanzaFilter fromFilter\r\n  = FromMatchesFilter.create(JidCreate.from(\"[[email protected]](/web/20220523233813/https://www.baeldung.com/cdn-cgi/l/email-protection)\"));\r\nStanzaFilter toFilter\r\n  = ToMatchesFilter.create(JidCreate.from(\"[[email protected]](/web/20220523233813/https://www.baeldung.com/cdn-cgi/l/email-protection)\"));\r\n```","```\r\nStanzaFilter filter\r\n  = new AndFilter(StanzaTypeFilter.Message, FromMatchesFilter.create(\"[[email protected]](/web/20220523233813/https://www.baeldung.com/cdn-cgi/l/email-protection)\"));\r\n```"]