["```\r\nprivate native void aNativeMethod();\r\n```","```\r\npackage com.baeldung.jni;\r\n\r\npublic class HelloWorldJNI {\r\n\r\n    static {\r\n        System.loadLibrary(\"native\");\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        new HelloWorldJNI().sayHello();\r\n    }\r\n\r\n    // Declare a native method sayHello() that receives no arguments and returns void\r\n    private native void sayHello();\r\n}\r\n```","```\r\njavac -h . HelloWorldJNI.java\r\n```","```\r\nJNIEXPORT void JNICALL Java_com_baeldung_jni_HelloWorldJNI_sayHello\r\n  (JNIEnv *, jobject); \r\n```","```\r\nJNIEXPORT void JNICALL Java_com_baeldung_jni_HelloWorldJNI_sayHello\r\n  (JNIEnv* env, jobject thisObject) {\r\n    std::cout << \"Hello from C++ !!\" << std::endl;\r\n} \r\n```","```\r\ng++ -c -fPIC -I${JAVA_HOME}/include -I${JAVA_HOME}/include/linux com_baeldung_jni_HelloWorldJNI.cpp -o com_baeldung_jni_HelloWorldJNI.o\r\n```","```\r\ng++ -c -I%JAVA_HOME%\\include -I%JAVA_HOME%\\include\\win32 com_baeldung_jni_HelloWorldJNI.cpp -o com_baeldung_jni_HelloWorldJNI.o\r\n```","```\r\ng++ -c -fPIC -I${JAVA_HOME}/include -I${JAVA_HOME}/include/darwin com_baeldung_jni_HelloWorldJNI.cpp -o com_baeldung_jni_HelloWorldJNI.o\r\n```","```\r\ng++ -shared -fPIC -o libnative.so com_baeldung_jni_HelloWorldJNI.o -lc\r\n```","```\r\ng++ -shared -o native.dll com_baeldung_jni_HelloWorldJNI.o -Wl,--add-stdcall-alias\r\n```","```\r\ng++ -dynamiclib -o libnative.dylib com_baeldung_jni_HelloWorldJNI.o -lc\r\n```","```\r\njava -cp . -Djava.library.path=/NATIVE_SHARED_LIB_FOLDER com.baeldung.jni.HelloWorldJNI\r\n```","```\r\nHello from C++ !!\r\n```","```\r\nprivate native long sumIntegers(int first, int second);\r\n\r\nprivate native String sayHelloToMe(String name, boolean isFemale);\r\n```","```\r\n...\r\nJNIEXPORT jlong JNICALL Java_com_baeldung_jni_ExampleParametersJNI_sumIntegers \r\n  (JNIEnv* env, jobject thisObject, jint first, jint second) {\r\n    std::cout << \"C++: The numbers received are : \" << first << \" and \" << second << std::endl;\r\n    return (long)first + (long)second;\r\n}\r\nJNIEXPORT jstring JNICALL Java_com_baeldung_jni_ExampleParametersJNI_sayHelloToMe \r\n  (JNIEnv* env, jobject thisObject, jstring name, jboolean isFemale) {\r\n    const char* nameCharPointer = env->GetStringUTFChars(name, NULL);\r\n    std::string title;\r\n    if(isFemale) {\r\n        title = \"Ms. \";\r\n    }\r\n    else {\r\n        title = \"Mr. \";\r\n    }\r\n\r\n    std::string fullName = title + nameCharPointer;\r\n    return env->NewStringUTF(fullName.c_str());\r\n}\r\n...\r\n```","```\r\npackage com.baeldung.jni;\r\n\r\npublic class UserData {\r\n\r\n    public String name;\r\n    public double balance;\r\n\r\n    public String getUserInfo() {\r\n        return \"[name]=\" + name + \", [balance]=\" + balance;\r\n    }\r\n}\r\n```","```\r\n...\r\npublic native UserData createUser(String name, double balance);\r\n\r\npublic native String printUserData(UserData user); \r\n```","```\r\nJNIEXPORT jobject JNICALL Java_com_baeldung_jni_ExampleObjectsJNI_createUser\r\n  (JNIEnv *env, jobject thisObject, jstring name, jdouble balance) {\r\n\r\n    // Create the object of the class UserData\r\n    jclass userDataClass = env->FindClass(\"com/baeldung/jni/UserData\");\r\n    jobject newUserData = env->AllocObject(userDataClass);\r\n\r\n    // Get the UserData fields to be set\r\n    jfieldID nameField = env->GetFieldID(userDataClass , \"name\", \"Ljava/lang/String;\");\r\n    jfieldID balanceField = env->GetFieldID(userDataClass , \"balance\", \"D\");\r\n\r\n    env->SetObjectField(newUserData, nameField, name);\r\n    env->SetDoubleField(newUserData, balanceField, balance);\r\n\r\n    return newUserData;\r\n}\r\n\r\nJNIEXPORT jstring JNICALL Java_com_baeldung_jni_ExampleObjectsJNI_printUserData\r\n  (JNIEnv *env, jobject thisObject, jobject userData) {\r\n\r\n    // Find the id of the Java method to be called\r\n    jclass userDataClass=env->GetObjectClass(userData);\r\n    jmethodID methodId=env->GetMethodID(userDataClass, \"getUserInfo\", \"()Ljava/lang/String;\");\r\n\r\n    jstring result = (jstring)env->CallObjectMethod(userData, methodId);\r\n    return result;\r\n} \r\n```"]