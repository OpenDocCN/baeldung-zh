["```\r\n<parent>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-parent</artifactId>\r\n    <version>2.6.1</version>\r\n    <relativePath/>\r\n</parent>\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-test</artifactId>\r\n    <scope>test</scope>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>org.junit.jupiter</groupId>\r\n    <artifactId>junit-jupiter-api</artifactId>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>org.awaitility</groupId>\r\n    <artifactId>awaitility</artifactId>\r\n    <version>3.1.6</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n```","```\r\n@Component\r\npublic class Counter {\r\n    private AtomicInteger count = new AtomicInteger(0);\r\n\r\n    @Scheduled(fixedDelay = 5)\r\n    public void scheduled() {\r\n        this.count.incrementAndGet();\r\n    }\r\n\r\n    public int getInvocationCount() {\r\n        return this.count.get();\r\n    }\r\n}\r\n```","```\r\n@Configuration\r\n@EnableScheduling\r\n@ComponentScan(\"com.baeldung.scheduled\")\r\npublic class ScheduledConfig {\r\n}\r\n```","```\r\n@SpringJUnitConfig(ScheduledConfig.class)\r\npublic class ScheduledIntegrationTest {\r\n\r\n    @Autowired \r\n    Counter counter;\r\n\r\n    @Test\r\n    public void givenSleepBy100ms_whenGetInvocationCount_thenIsGreaterThanZero() \r\n      throws InterruptedException {\r\n        Thread.sleep(100L);\r\n\r\n        assertThat(counter.getInvocationCount()).isGreaterThan(0);\r\n    }\r\n}\r\n```","```\r\n@SpringJUnitConfig(ScheduledConfig.class)\r\npublic class ScheduledAwaitilityIntegrationTest {\r\n\r\n    @SpyBean \r\n    private Counter counter;\r\n\r\n    @Test\r\n    public void whenWaitOneSecond_thenScheduledIsCalledAtLeastTenTimes() {\r\n        await()\r\n          .atMost(Duration.ONE_SECOND)\r\n          .untilAsserted(() -> verify(counter, atLeast(10)).scheduled());\r\n    }\r\n}\r\n```"]