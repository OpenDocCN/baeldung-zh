["```\r\n<form:input path=\"name\" />\r\n```","```\r\n<form:input type=\"email\" path=\"email\" />\r\n```","```\r\n<form:input type=\"date\" path=\"dateOfBirth\" />\r\n```","```\r\n<form:password path=\"password\" />\r\n```","```\r\n<form:textarea path=\"notes\" rows=\"3\" cols=\"20\"/>\r\n```","```\r\n<form:checkbox path=\"receiveNewsletter\" />\r\n```","```\r\nBird watching: <form:checkbox path=\"hobbies\" value=\"Bird watching\"/>\r\nAstronomy: <form:checkbox path=\"hobbies\" value=\"Astronomy\"/>\r\nSnowboarding: <form:checkbox path=\"hobbies\" value=\"Snowboarding\"/>\r\n```","```\r\nString[] hobbies;\r\n```","```\r\n<form:checkboxes items=\"${favouriteLanguageItem}\" path=\"favouriteLanguage\" />\r\n```","```\r\nList<String> favouriteLanguageItem = new ArrayList<String>();\r\nfavouriteLanguageItem.add(\"Java\");\r\nfavouriteLanguageItem.add(\"C++\");\r\nfavouriteLanguageItem.add(\"Perl\");\r\n```","```\r\nList<String> favouriteLanguage;\r\n```","```\r\nMale: <form:radiobutton path=\"sex\" value=\"M\"/>\r\nFemale: <form:radiobutton path=\"sex\" value=\"F\"/>\r\n```","```\r\nprivate String sex;\r\n```","```\r\n<form:radiobuttons items=\"${jobItem}\" path=\"job\" />\r\n```","```\r\nList<String> jobItem = new ArrayList<String>();\r\njobItem.add(\"Full time\");\r\njobItem.add(\"Part time\");\r\n```","```\r\n<form:select path=\"country\" items=\"${countryItems}\" />\r\n```","```\r\nMap<String, String> countryItems = new LinkedHashMap<String, String>();\r\ncountryItems.put(\"US\", \"United States\");\r\ncountryItems.put(\"IT\", \"Italy\");\r\ncountryItems.put(\"UK\", \"United Kingdom\");\r\ncountryItems.put(\"FR\", \"France\");\r\n```","```\r\n<form:select path=\"book\">\r\n    <form:option value=\"-\" label=\"--Please Select--\"/>\r\n    <form:options items=\"${books}\" />\r\n</form:select>\r\n```","```\r\n<form:select path=\"fruit\" items=\"${fruit}\" multiple=\"true\"/>\r\n```","```\r\nList<String> fruit;\r\n```","```\r\n<form:hidden path=\"id\" value=\"12345\" />\r\n```","```\r\n<form:errors path=\"name\" cssClass=\"error\" />\r\n```","```\r\n<span id=\"name.errors\" class=\"error\">Name is required!</span>\r\n```","```\r\n<form:errors path=\"name\" cssClass=\"error\" element=\"div\" />\r\n```","```\r\n<div id=\"name.errors\" class=\"error\">Name is required!</div>\r\n```","```\r\n<form:errors path=\"*\" />\r\n```","```\r\npublic class PersonValidator implements Validator {\r\n\r\n    @Override\r\n    public boolean supports(Class clazz) {\r\n        return Person.class.isAssignableFrom(clazz);\r\n    }\r\n\r\n    @Override\r\n    public void validate(Object obj, Errors errors) {\r\n        ValidationUtils.rejectIfEmptyOrWhitespace(errors, \"name\", \"required.name\");\r\n    }\r\n}\r\n```","```\r\n<bean class=\"org.springframework.context.support.ResourceBundleMessageSource\" id=\"messageSource\">\r\n     <property name=\"basename\" value=\"messages\" />\r\n</bean>\r\n```","```\r\n@Bean\r\npublic MessageSource messageSource() {\r\n    ResourceBundleMessageSource messageSource = new ResourceBundleMessageSource();\r\n    messageSource.setBasenames(\"messages\");\r\n    return messageSource;\r\n}\r\n```","```\r\nrequired.name = Name is required!\r\n```","```\r\n@RequestMapping(value = \"/addPerson\", method = RequestMethod.POST)\r\npublic String submit(\r\n  @ModelAttribute(\"person\") Person person, \r\n  BindingResult result, \r\n  ModelMap modelMap) {\r\n\r\n    validator.validate(person, result);\r\n\r\n    if (result.hasErrors()) {\r\n        return \"personForm\";\r\n    }\r\n\r\n    modelMap.addAttribute(\"person\", person);\r\n    return \"personView\";\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>org.hibernate</groupId>\r\n    <artifactId>hibernate-validator</artifactId>\r\n    <version>5.1.1.Final</version>\r\n</dependency>\r\n```","```\r\n<mvc:annotation-driven/>\r\n```","```\r\n@EnableWebMvc\r\n@Configuration\r\npublic class ClientWebConfigJava implements WebMvcConfigurer {\r\n    // All web configuration will go here\r\n}\r\n```","```\r\n@RequestMapping(value = \"/addPerson\", method = RequestMethod.POST)\r\npublic String submit(\r\n  @Valid @ModelAttribute(\"person\") Person person, \r\n  BindingResult result, \r\n  ModelMap modelMap) {\r\n\r\n    if(result.hasErrors()) {\r\n        return \"personForm\";\r\n    }\r\n\r\n    modelMap.addAttribute(\"person\", person);\r\n    return \"personView\";\r\n}\r\n```","```\r\n@NotEmpty\r\nprivate String password;\r\n```","```\r\nNotEmpty.person.password = Password is required!\r\n```"]