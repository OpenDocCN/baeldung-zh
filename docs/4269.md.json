["```\r\nint[] integers = new int[] {20, 98, 12, 7, 35};\r\nint min = Arrays.stream(integers)\r\n  .min()\r\n  .getAsInt(); // returns 7\r\n```","```\r\nint max = IntStream.of(20, 98, 12, 7, 35)\r\n  .max()\r\n  .getAsInt(); // returns 98\r\n```","```\r\nint sum = IntStream.of(20, 98, 12, 7, 35).sum(); // returns 172\r\n```","```\r\ndouble avg = IntStream.of(20, 98, 12, 7, 35)\r\n  .average()\r\n  .getAsDouble(); // returns 34.4\r\n```","```\r\nint sum = IntStream.range(1, 10)\r\n  .sum(); // returns 45\r\nint sum = IntStream.rangeClosed(1, 10)\r\n  .sum(); // returns 55\r\n```","```\r\nIntStream.rangeClosed(1, 5)\r\n  .forEach(System.out::println);\r\n```","```\r\nIntStream.rangeClosed(1, 5)\r\n  .parallel()\r\n  .forEach(System.out::println);\r\n```","```\r\nList<Integer> evenInts = IntStream.rangeClosed(1, 10)\r\n  .filter(i -> i % 2 == 0)\r\n  .boxed()\r\n  .collect(Collectors.toList());\r\n```","```\r\n// returns 78\r\nint sum = Arrays.asList(33,45)\r\n  .stream()\r\n  .mapToInt(i -> i)\r\n  .sum();\r\n```"]