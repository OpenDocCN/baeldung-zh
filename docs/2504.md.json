["```\r\n@Lazy\r\n@Configuration\r\n@ComponentScan(basePackages = \"com.baeldung.lazy\")\r\npublic class AppConfig {\r\n\r\n    @Bean\r\n    public Region getRegion(){\r\n        return new Region();\r\n    }\r\n\r\n    @Bean\r\n    public Country getCountry(){\r\n        return new Country();\r\n    }\r\n}\r\n```","```\r\n@Test\r\npublic void givenLazyAnnotation_whenConfigClass_thenLazyAll() {\r\n\r\n    AnnotationConfigApplicationContext ctx\r\n     = new AnnotationConfigApplicationContext();\r\n    ctx.register(AppConfig.class);\r\n    ctx.refresh();\r\n    ctx.getBean(Region.class);\r\n    ctx.getBean(Country.class);\r\n}\r\n```","```\r\nBean factory for ...AnnotationConfigApplicationContext: \r\n...DefaultListableBeanFactory: [...];\r\n// application context started\r\nRegion bean initialized\r\nCountry bean initialized\r\n```","```\r\n@Bean\r\n@Lazy(true)\r\npublic Region getRegion(){\r\n    return new Region();\r\n}\r\n```","```\r\n@Lazy\r\n@Component\r\npublic class City {\r\n    public City() {\r\n        System.out.println(\"City bean initialized\");\r\n    }\r\n}\r\n```","```\r\npublic class Region {\r\n\r\n    @Lazy\r\n    @Autowired\r\n    private City city;\r\n\r\n    public Region() {\r\n        System.out.println(\"Region bean initialized\");\r\n    }\r\n\r\n    public City getCityInstance() {\r\n        return city;\r\n    }\r\n}\r\n```","```\r\n@Test\r\npublic void givenLazyAnnotation_whenAutowire_thenLazyBean() {\r\n    // load up ctx appication context\r\n    Region region = ctx.getBean(Region.class);\r\n    region.getCityInstance();\r\n}\r\n```"]