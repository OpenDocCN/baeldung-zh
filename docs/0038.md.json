["```\r\nString inputString = \"Hello World!\";\r\nbyte[] byteArrray = inputString.getBytes();\r\n```","```\r\n@Test\r\npublic void whenGetBytesWithNamedCharset_thenOK() \r\n  throws UnsupportedEncodingException {\r\n    String inputString = \"Hello World!\";\r\n    String charsetName = \"IBM01140\";\r\n\r\n    byte[] byteArrray = inputString.getBytes(\"IBM01140\");\r\n\r\n    assertArrayEquals(\r\n      new byte[] { -56, -123, -109, -109, -106, 64, -26,\r\n        -106, -103, -109, -124, 90 },\r\n      byteArrray);\r\n}\r\n```","```\r\n@Test\r\npublic void whenGetBytesWithCharset_thenOK() {\r\n    String inputString = \"Hello ਸੰਸਾਰ!\";\r\n    Charset charset = Charset.forName(\"ASCII\");\r\n\r\n    byte[] byteArrray = inputString.getBytes(charset);\r\n\r\n    assertArrayEquals(\r\n      new byte[] { 72, 101, 108, 108, 111, 32, 63, 63, 63,\r\n        63, 63, 33 },\r\n      byteArrray);\r\n}\r\n```","```\r\n@Test\r\npublic void whenGetBytesWithStandardCharset_thenOK() {\r\n    String inputString = \"Hello World!\";\r\n    Charset charset = StandardCharsets.UTF_16;\r\n\r\n    byte[] byteArrray = inputString.getBytes(charset);\r\n\r\n    assertArrayEquals(\r\n      new byte[] { -2, -1, 0, 72, 0, 101, 0, 108, 0, 108, 0,\r\n        111, 0, 32, 0, 87, 0, 111, 0, 114, 0, 108, 0, 100, 0, 33 },\r\n      byteArrray);\r\n}\r\n```","```\r\n@Test\r\npublic void whenEncodeWithCharset_thenOK() {\r\n    String inputString = \"Hello ਸੰਸਾਰ!\";\r\n    Charset charset = StandardCharsets.US_ASCII;\r\n\r\n    byte[] byteArrray = charset.encode(inputString).array();\r\n\r\n    assertArrayEquals(\r\n      new byte[] { 72, 101, 108, 108, 111, 32, 63, 63, 63, 63, 63, 33 },\r\n      byteArrray);\r\n}\r\n```","```\r\n@Test\r\npublic void whenUsingCharsetEncoder_thenOK()\r\n  throws CharacterCodingException {\r\n    String inputString = \"Hello ਸੰਸਾਰ!\";\r\n    CharsetEncoder encoder = StandardCharsets.US_ASCII.newEncoder();\r\n    encoder.onMalformedInput(CodingErrorAction.IGNORE)\r\n      .onUnmappableCharacter(CodingErrorAction.REPLACE)\r\n      .replaceWith(new byte[] { 0 });\r\n\r\n    byte[] byteArrray = encoder.encode(CharBuffer.wrap(inputString))\r\n                          .array();\r\n\r\n    assertArrayEquals(\r\n      new byte[] { 72, 101, 108, 108, 111, 32, 0, 0, 0, 0, 0, 33 },\r\n      byteArrray);\r\n}\r\n```","```\r\n@Test\r\npublic void whenStringConstructorWithDefaultCharset_thenOK() {\r\n    byte[] byteArrray = { 72, 101, 108, 108, 111, 32, 87, 111, 114,\r\n      108, 100, 33 };\r\n\r\n    String string = new String(byteArrray);\r\n\r\n    assertNotNull(string);\r\n}\r\n```","```\r\n@Test\r\npublic void whenStringConstructorWithNamedCharset_thenOK()\r\n    throws UnsupportedEncodingException {\r\n    String charsetName = \"IBM01140\";\r\n    byte[] byteArrray = { -56, -123, -109, -109, -106, 64, -26, -106,\r\n      -103, -109, -124, 90 };\r\n\r\n    String string = new String(byteArrray, charsetName);\r\n\r\n    assertEquals(\"Hello World!\", string);\r\n}\r\n```","```\r\n@Test\r\npublic void whenStringConstructorWithCharSet_thenOK() {\r\n    Charset charset = Charset.forName(\"UTF-8\");\r\n    byte[] byteArrray = { 72, 101, 108, 108, 111, 32, 87, 111, 114,\r\n      108, 100, 33 };\r\n\r\n    String string = new String(byteArrray, charset);\r\n\r\n    assertEquals(\"Hello World!\", string);\r\n}\r\n```","```\r\n@Test\r\npublic void whenStringConstructorWithStandardCharSet_thenOK() {\r\n    Charset charset = StandardCharsets.UTF_16;\r\n\r\n    byte[] byteArrray = { -2, -1, 0, 72, 0, 101, 0, 108, 0, 108, 0,\r\n      111, 0, 32, 0, 87, 0, 111, 0, 114, 0, 108, 0, 100, 0, 33 };\r\n\r\n    String string = new String(byteArrray, charset);\r\n\r\n    assertEquals(\"Hello World!\", string);\r\n}\r\n```","```\r\n@Test\r\npublic void whenDecodeWithCharset_thenOK() {\r\n    byte[] byteArrray = { 72, 101, 108, 108, 111, 32, -10, 111,\r\n      114, 108, -63, 33 };\r\n    Charset charset = StandardCharsets.US_ASCII;\r\n    String string = charset.decode(ByteBuffer.wrap(byteArrray))\r\n                      .toString();\r\n\r\n    assertEquals(\"Hello �orl�!\", string);\r\n}\r\n```","```\r\n@Test\r\npublic void whenUsingCharsetDecoder_thenOK()\r\n  throws CharacterCodingException {\r\n    byte[] byteArrray = { 72, 101, 108, 108, 111, 32, -10, 111, 114,\r\n      108, -63, 33 };\r\n    CharsetDecoder decoder = StandardCharsets.US_ASCII.newDecoder();\r\n\r\n    decoder.onMalformedInput(CodingErrorAction.REPLACE)\r\n      .onUnmappableCharacter(CodingErrorAction.REPLACE)\r\n      .replaceWith(\"?\");\r\n\r\n    String string = decoder.decode(ByteBuffer.wrap(byteArrray))\r\n                      .toString();\r\n\r\n    assertEquals(\"Hello ?orl?!\", string);\r\n}\r\n```","```\r\ndecoder.onMalformedInput(CodingErrorAction.REPORT)\r\n  .onUnmappableCharacter(CodingErrorAction.REPORT)\r\n```"]