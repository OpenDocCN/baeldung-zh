["```\r\n<dependency>\r\n    <groupId>io.katharsis</groupId>\r\n    <artifactId>katharsis-spring</artifactId>\r\n    <version>3.0.2</version>\r\n</dependency>\r\n```","```\r\n@JsonApiResource(type = \"users\")\r\npublic class User {\r\n\r\n    @JsonApiId\r\n    private Long id;\r\n\r\n    private String name;\r\n\r\n    private String email;\r\n}\r\n```","```\r\npublic interface UserRepository extends JpaRepository<User, Long> {}\r\n```","```\r\n@Component\r\npublic class UserResourceRepository implements ResourceRepositoryV2<User, Long> {\r\n\r\n    @Autowired\r\n    private UserRepository userRepository;\r\n\r\n    @Override\r\n    public User findOne(Long id, QuerySpec querySpec) {\r\n        Optional<User> user = userRepository.findById(id); \r\n        return user.isPresent()? user.get() : null;\r\n    }\r\n\r\n    @Override\r\n    public ResourceList<User> findAll(QuerySpec querySpec) {\r\n        return querySpec.apply(userRepository.findAll());\r\n    }\r\n\r\n    @Override\r\n    public ResourceList<User> findAll(Iterable<Long> ids, QuerySpec querySpec) {\r\n        return querySpec.apply(userRepository.findAllById(ids));\r\n    }\r\n\r\n    @Override\r\n    public <S extends User> S save(S entity) {\r\n        return userRepository.save(entity);\r\n    }\r\n\r\n    @Override\r\n    public void delete(Long id) {\r\n        userRepository.deleteById(id);\r\n    }\r\n\r\n    @Override\r\n    public Class<User> getResourceClass() {\r\n        return User.class;\r\n    }\r\n\r\n    @Override\r\n    public <S extends User> S create(S entity) {\r\n        return save(entity);\r\n    }\r\n}\r\n```","```\r\n@Import(KatharsisConfigV3.class)\r\n```","```\r\nkatharsis.domainName=http://localhost:8080\r\nkatharsis.pathPrefix=/\r\n```","```\r\n@JsonApiResource(type = \"roles\")\r\npublic class Role {\r\n\r\n    @JsonApiId\r\n    private Long id;\r\n\r\n    private String name;\r\n\r\n    @JsonApiRelation\r\n    private Set<User> users;\r\n}\r\n```","```\r\n@JsonApiRelation(serialize=SerializeType.EAGER)\r\nprivate Set<Role> roles;\r\n```","```\r\n@Component\r\npublic class RoleResourceRepository implements ResourceRepositoryV2<Role, Long> {\r\n\r\n    @Autowired\r\n    private RoleRepository roleRepository;\r\n\r\n    @Override\r\n    public Role findOne(Long id, QuerySpec querySpec) {\r\n        Optional<Role> role = roleRepository.findById(id); \r\n        return role.isPresent()? role.get() : null;\r\n    }\r\n\r\n    @Override\r\n    public ResourceList<Role> findAll(QuerySpec querySpec) {\r\n        return querySpec.apply(roleRepository.findAll());\r\n    }\r\n\r\n    @Override\r\n    public ResourceList<Role> findAll(Iterable<Long> ids, QuerySpec querySpec) {\r\n        return querySpec.apply(roleRepository.findAllById(ids));\r\n    }\r\n\r\n    @Override\r\n    public <S extends Role> S save(S entity) {\r\n        return roleRepository.save(entity);\r\n    }\r\n\r\n    @Override\r\n    public void delete(Long id) {\r\n        roleRepository.deleteById(id);\r\n    }\r\n\r\n    @Override\r\n    public Class<Role> getResourceClass() {\r\n        return Role.class;\r\n    }\r\n\r\n    @Override\r\n    public <S extends Role> S create(S entity) {\r\n        return save(entity);\r\n    }\r\n}\r\n```","```\r\n@Component\r\npublic class UserToRoleRelationshipRepository implements RelationshipRepositoryV2<User, Long, Role, Long> {\r\n\r\n    @Autowired\r\n    private UserRepository userRepository;\r\n\r\n    @Autowired\r\n    private RoleRepository roleRepository;\r\n\r\n    @Override\r\n    public void setRelation(User User, Long roleId, String fieldName) {}\r\n\r\n    @Override\r\n    public void setRelations(User user, Iterable<Long> roleIds, String fieldName) {\r\n        Set<Role> roles = new HashSet<Role>();\r\n        roles.addAll(roleRepository.findAllById(roleIds));\r\n        user.setRoles(roles);\r\n        userRepository.save(user);\r\n    }\r\n\r\n    @Override\r\n    public void addRelations(User user, Iterable<Long> roleIds, String fieldName) {\r\n        Set<Role> roles = user.getRoles();\r\n        roles.addAll(roleRepository.findAllById(roleIds));\r\n        user.setRoles(roles);\r\n        userRepository.save(user);\r\n    }\r\n\r\n    @Override\r\n    public void removeRelations(User user, Iterable<Long> roleIds, String fieldName) {\r\n        Set<Role> roles = user.getRoles();\r\n        roles.removeAll(roleRepository.findAllById(roleIds));\r\n        user.setRoles(roles);\r\n        userRepository.save(user);\r\n    }\r\n\r\n    @Override\r\n    public Role findOneTarget(Long sourceId, String fieldName, QuerySpec querySpec) {\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public ResourceList<Role> findManyTargets(Long sourceId, String fieldName, QuerySpec querySpec) {\r\n        final Optional<User> userOptional = userRepository.findById(sourceId);\r\n        User user = userOptional.isPresent() ? userOptional.get() : new User();\r\n        return  querySpec.apply(user.getRoles());\r\n    }\r\n\r\n    @Override\r\n    public Class<User> getSourceResourceClass() {\r\n        return User.class;\r\n    }\r\n\r\n    @Override\r\n    public Class<Role> getTargetResourceClass() {\r\n        return Role.class;\r\n    }\r\n}\r\n```","```\r\n{\r\n    \"data\":{\r\n        \"type\":\"users\",\r\n        \"id\":\"2\",\r\n        \"attributes\":{\r\n            \"email\":\"[[emailÂ protected]](/web/20221208143841/https://www.baeldung.com/cdn-cgi/l/email-protection)\",\r\n            \"username\":\"tom\"\r\n        },\r\n        \"relationships\":{\r\n            \"roles\":{\r\n                \"links\":{\r\n                    \"self\":\"http://localhost:8080/users/2/relationships/roles\",\r\n                    \"related\":\"http://localhost:8080/users/2/roles\"\r\n                }\r\n            }\r\n        },\r\n        \"links\":{\r\n            \"self\":\"http://localhost:8080/users/2\"\r\n        }\r\n    },\r\n    \"included\":[\r\n        {\r\n            \"type\":\"roles\",\r\n            \"id\":\"1\",\r\n            \"attributes\":{\r\n                \"name\":\"ROLE_USER\"\r\n            },\r\n            \"relationships\":{\r\n                \"users\":{\r\n                    \"links\":{\r\n                        \"self\":\"http://localhost:8080/roles/1/relationships/users\",\r\n                        \"related\":\"http://localhost:8080/roles/1/users\"\r\n                    }\r\n                }\r\n            },\r\n            \"links\":{\r\n                \"self\":\"http://localhost:8080/roles/1\"\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","```\r\n{\r\n    \"data\":[\r\n        {\r\n            \"type\":\"roles\",\r\n            \"id\":\"1\",\r\n            \"attributes\":{\r\n                \"name\":\"ROLE_USER\"\r\n            },\r\n            \"relationships\":{\r\n                \"users\":{\r\n                    \"links\":{\r\n                        \"self\":\"http://localhost:8080/roles/1/relationships/users\",\r\n                        \"related\":\"http://localhost:8080/roles/1/users\"\r\n                    }\r\n                }\r\n            },\r\n            \"links\":{\r\n                \"self\":\"http://localhost:8080/roles/1\"\r\n            }\r\n        },\r\n        {\r\n            \"type\":\"roles\",\r\n            \"id\":\"2\",\r\n            \"attributes\":{\r\n                \"name\":\"ROLE_ADMIN\"\r\n            },\r\n            \"relationships\":{\r\n                \"users\":{\r\n                    \"links\":{\r\n                        \"self\":\"http://localhost:8080/roles/2/relationships/users\",\r\n                        \"related\":\"http://localhost:8080/roles/2/users\"\r\n                    }\r\n                }\r\n            },\r\n            \"links\":{\r\n                \"self\":\"http://localhost:8080/roles/2\"\r\n            }\r\n        }\r\n    ],\r\n    \"included\":[\r\n\r\n    ]\r\n}\r\n```"]