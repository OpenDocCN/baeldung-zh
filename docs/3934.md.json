["```\r\npublic class PropertiesLoader {\r\n\r\n    public static Properties loadProperties(String resourceFileName) throws IOException {\r\n        Properties configuration = new Properties();\r\n        InputStream inputStream = PropertiesLoader.class\r\n          .getClassLoader()\r\n          .getResourceAsStream(resourceFileName);\r\n        configuration.load(inputStream);\r\n        inputStream.close();\r\n        return configuration;\r\n    }\r\n}\r\n```","```\r\nString property = configuration.getProperty(key);\r\n```","```\r\n@Component\r\npublic class Initializer {\r\n\r\n    private String someInitialValue;\r\n    private String anotherManagedValue;\r\n\r\n    public Initializer(\r\n      @Value(\"someInitialValue\") String someInitialValue,\r\n      @Value(\"anotherValue\") String anotherManagedValue) {\r\n\r\n        this.someInitialValue = someInitialValue;\r\n        this.anotherManagedValue = anotherManagedValue;\r\n    }\r\n\r\n    public ClassNotManagedBySpring initClass() {\r\n        return new ClassNotManagedBySpring(\r\n          this.someInitialValue, this.anotherManagedValue);\r\n    }\r\n}\r\n```","```\r\nClassNotManagedBySpring classNotManagedBySpring = initializer.initClass();\r\n```"]