["```\r\nāăąēîïĩíĝġńñšŝśûůŷ\r\n```","```\r\naaaeiiiiggnnsssuuy\r\n```","```\r\nassertFalse(Normalizer.isNormalized(\"āăąēîïĩíĝġńñšŝśûůŷ\", Normalizer.Form.NFKD));\r\n```","```\r\nprivate static String normalize(String input) {\r\n    return input == null ? null : Normalizer.normalize(input, Normalizer.Form.NFKD);\r\n}\r\n```","```\r\nstatic String removeAccents(String input) {\r\n    return normalize(input).replaceAll(\"\\\\p{M}\", \"\");\r\n}\r\n```","```\r\n@Test\r\nvoid givenStringWithDecomposableUnicodeCharacters_whenRemoveAccents_thenReturnASCIIString() {\r\n    assertEquals(\"aaaeiiiiggnnsssuuy\", StringNormalizer.removeAccents(\"āăąēîïĩíĝġńñšŝśûůŷ\"));\r\n}\r\n```","```\r\n@Test\r\nvoid givenStringWithNondecomposableUnicodeCharacters_whenRemoveAccents_thenReturnOriginalString() {\r\n    assertEquals(\"łđħœ\", StringNormalizer.removeAccents(\"łđħœ\"));\r\n}\r\n```","```\r\n@Test\r\nvoid givenStringWithDecomposableUnicodeCharacters_whenUnicodeValueOfNormalizedString_thenReturnUnicodeValue() {\r\n    assertEquals(\"\\\\u0066 \\\\u0069\", StringNormalizer.unicodeValueOfNormalizedString(\"ﬁ\"));\r\n    assertEquals(\"\\\\u0061 \\\\u0304\", StringNormalizer.unicodeValueOfNormalizedString(\"ā\"));\r\n    assertEquals(\"\\\\u0069 \\\\u0308\", StringNormalizer.unicodeValueOfNormalizedString(\"ï\"));\r\n    assertEquals(\"\\\\u006e \\\\u0301\", StringNormalizer.unicodeValueOfNormalizedString(\"ń\"));\r\n}\r\n```","```\r\nCollator collator = Collator.getInstance();\r\ncollator.setDecomposition(2);\r\ncollator.setStrength(0);\r\nassertEquals(0, collator.compare(\"a\", \"a\"));\r\nassertEquals(0, collator.compare(\"ä\", \"a\"));\r\nassertEquals(0, collator.compare(\"A\", \"a\"));\r\nassertEquals(1, collator.compare(\"b\", \"a\"));\r\n```","```\r\ncollator.setStrength(1);\r\nassertEquals(1, collator.compare(\"ä\", \"a\"));\r\nassertEquals(1, collator.compare(\"b\", \"a\"));\r\nassertEquals(0, collator.compare(\"A\", \"a\"));\r\nassertEquals(0, collator.compare(\"a\", \"a\"));\r\n```","```\r\ncollator.setStrength(2);\r\nassertEquals(1, collator.compare(\"A\", \"a\"));\r\nassertEquals(1, collator.compare(\"ä\", \"a\"));\r\nassertEquals(1, collator.compare(\"b\", \"a\"));\r\nassertEquals(0, collator.compare(\"a\", \"a\"));\r\nassertEquals(0, collator.compare(valueOf(toChars(0x0001)), valueOf(toChars(0x0002))));\r\n```","```\r\ncollator.setStrength(3);\r\nassertEquals(1, collator.compare(\"A\", \"a\"));\r\nassertEquals(1, collator.compare(\"ä\", \"a\"));\r\nassertEquals(1, collator.compare(\"b\", \"a\"));\r\nassertEquals(-1, collator.compare(valueOf(toChars(0x0001)), valueOf(toChars(0x0002))));\r\nassertEquals(0, collator.compare(\"a\", \"a\")));\r\n```","```\r\ncollator.setStrength(0);\r\nassertEquals(1, collator.compare(\"ł\", \"l\"));\r\nassertEquals(1, collator.compare(\"ø\", \"o\")); \r\n```","```\r\nstatic String removeAccentsWithApacheCommons(String input) {\r\n    return StringUtils.stripAccents(input);\r\n}\r\n```","```\r\n@Test\r\nvoid givenStringWithDecomposableUnicodeCharacters_whenRemoveAccentsWithApacheCommons_thenReturnASCIIString() {\r\n    assertEquals(\"aaaeiiiiggnnsssuuy\", StringNormalizer.removeAccentsWithApacheCommons(\"āăąēîïĩíĝġńñšŝśûůŷ\"));\r\n}\r\n```","```\r\n@Test \r\nvoid givenStringWithNondecomposableUnicodeCharacters_whenRemoveAccentsWithApacheCommons_thenReturnModifiedString() {\r\n    assertEquals(\"lđħœ\", StringNormalizer.removeAccentsWithApacheCommons(\"łđħœ\"));\r\n}\r\n```"]