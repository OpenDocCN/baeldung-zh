["```\r\npublic void authWithHttpServletRequest(HttpServletRequest request, String username, String password) {\r\n    try {\r\n        request.login(username, password);\r\n    } catch (ServletException e) {\r\n        LOGGER.error(\"Error while login \", e);\r\n    }\r\n}\r\n```","```\r\npublic void authWithAuthManager(HttpServletRequest request, String username, String password) {\r\n    UsernamePasswordAuthenticationToken authToken = new UsernamePasswordAuthenticationToken(username, password);\r\n    authToken.setDetails(new WebAuthenticationDetails(request));\r\n\r\n    Authentication authentication = authenticationManager.authenticate(authToken);\r\n\r\n    SecurityContextHolder.getContext().setAuthentication(authentication);\r\n}\r\n```","```\r\npublic void authWithoutPassword(User user){\r\n\r\n    List<Privilege> privileges = user.getRoles().stream().map(Role::getPrivileges)\r\n      .flatMap(Collection::stream).distinct().collect(Collectors.toList());\r\n    List<GrantedAuthority> authorities = privileges.stream()\r\n        .map(p -> new SimpleGrantedAuthority(p.getName()))\r\n        .collect(Collectors.toList());\r\n\r\n    Authentication authentication = new UsernamePasswordAuthenticationToken(user, null, authorities);\r\n    SecurityContextHolder.getContext().setAuthentication(authentication);\r\n}\r\n```"]