["```\r\n@Pointcut(\"execution(* com.baeldung.ArticleService.getArticleList(..))\")\r\npublic void articleListPointcut(){ }\r\n```","```\r\n@Before(\"articleListPointcut()\")\r\npublic void beforeAdvice(JoinPoint joinPoint) {\r\n    log.info(\r\n      \"Method {} executed with {} arguments\",\r\n      joinPoint.getStaticPart().getSignature(),\r\n      joinPoint.getArgs()\r\n    );\r\n}\r\n```","```\r\n@AfterThrowing(\r\n  pointcut = \"articleListPointcut()\",\r\n  throwing = \"e\"\r\n)\r\npublic void logExceptions(JoinPoint jp, Exception e) {\r\n    log.error(e.getMessage(), e);\r\n}\r\n```","```\r\n@Around(\"articleListPointcut()\")\r\npublic Object aroundAdvice(ProceedingJoinPoint pjp) {\r\n    Object articles = cache.get(pjp.getArgs());\r\n    if (articles == null) {\r\n        articles = pjp.proceed(pjp.getArgs());\r\n    }\r\n    return articles;\r\n}\r\n```","```\r\n@Around(\"articleListPointcut()\")\r\npublic Object aroundAdvice(ProceedingJoinPoint pjp) {\r\n    try {\r\n        return pjp.proceed(pjp.getArgs());\r\n    } catch (Throwable) {\r\n        log.error(e.getMessage(), e);\r\n        log.info(\"Retrying operation\");\r\n        return pjp.proceed(pjp.getArgs());\r\n    }\r\n}\r\n```"]