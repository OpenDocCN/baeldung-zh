["```\r\n@Entity\r\npublic class Post {\r\n    @Id\r\n    private Integer id;\r\n    private String title;\r\n    private String content;\r\n    @OneToMany(mappedBy = \"post\")\r\n    private List comments;\r\n\r\n    // additional properties\r\n    // standard constructors, getters, and setters\r\n}\r\n\r\n@Entity\r\npublic class Comment {\r\n    @Id\r\n    private Integer id;\r\n    private Integer year;\r\n    private boolean approved;\r\n    private String content;\r\n    @ManyToOne\r\n    private Post post;\r\n\r\n    // additional properties\r\n    // standard constructors, getters, and setters\r\n}\r\n```","```\r\n@Repository\r\npublic interface CommentRepository extends JpaRepository<Comment, Integer> {\r\n    // query methods\r\n}\r\n```","```\r\n@Query(\"SELECT c.year, COUNT(c.year) FROM Comment AS c GROUP BY c.year ORDER BY c.year DESC\")\r\nList<Object[]> countTotalCommentsByYear();\r\n```","```\r\n@Query(\"SELECT new com.baeldung.aggregation.model.custom.CommentCount(c.year, COUNT(c.year)) \"\r\n  + \"FROM Comment AS c GROUP BY c.year ORDER BY c.year DESC\")\r\nList<CommentCount> countTotalCommentsByYearClass();\r\n```","```\r\npackage com.baeldung.aggregation.model.custom;\r\n\r\npublic class CommentCount {\r\n    private Integer year;\r\n    private Long total;\r\n\r\n    public CommentCount(Integer year, Long total) {\r\n        this.year = year;\r\n        this.total = total;\r\n    }\r\n    // getters and setters\r\n}\r\n```","```\r\npublic interface ICommentCount {\r\n    Integer getYearComment();\r\n    Long getTotalComment();\r\n}\r\n```","```\r\n@Query(\"SELECT c.year AS yearComment, COUNT(c.year) AS totalComment \"\r\n  + \"FROM Comment AS c GROUP BY c.year ORDER BY c.year DESC\")\r\nList<ICommentCount> countTotalCommentsByYearInterface();\r\n```","```\r\n@Query(value = \"SELECT c.year AS yearComment, COUNT(c.*) AS totalComment \"\r\n  + \"FROM comment AS c GROUP BY c.year ORDER BY c.year DESC\", nativeQuery = true)\r\nList<ICommentCount> countTotalCommentsByYearNative();\r\n```"]