["```\r\nimplementation(\"com.google.guava:guava\") {\r\n    version {\r\n        require(\"10.0\")\r\n        prefer(\"28.1-jre\")\r\n        because(\"Uses APIs introduced in 10.0\\. Tested with 28.1-jre\")\r\n    }\r\n}\r\n```","```\r\ndependencies {\r\n    implementation(\"com.google.guava:guava:16.0\")\r\n}\r\n```","```\r\nimplementation(\"com.google.guava:guava\") {\r\n    version {\r\n        strictly(\"[10.0, 28[\")\r\n        prefer(\"28.1-jre\")\r\n        reject(\"27.0\")\r\n        because(\"\"\"\r\n            Uses APIs introduced in 10.0 but removed in 29\\. Tested with 28.1-jre.\r\n            Known issues with 27.0\r\n        \"\"\")\r\n    }\r\n}\r\n```","```\r\nplugins {\r\n    `java-platform`\r\n}\r\n```","```\r\ndependencies {\r\n    constraints {\r\n        api(\"org.apache.httpcomponents:fluent-hc:4.5.10\")\r\n        api(\"org.apache.httpcomponents:httpclient:4.5.10\")\r\n    }\r\n}\r\n```","```\r\nplugins {\r\n    `java-library`\r\n}\r\n\r\ndependencies {\r\n    api(platform(project(\":httpclient-platform\")))\r\n    implementation(\"org.apache.httpcomponents:fluent-hc\")\r\n}\r\n```","```\r\nplugins {\r\n    `java-library`\r\n    `java-test-fixtures`\r\n}\r\n```","```\r\ndependencies {\r\n    testFixturesApi(\"org.junit.jupiter:junit-jupiter-api:5.8.1\")\r\n    testFixturesImplementation(\"org.junit.jupiter:junit-jupiter-engine:5.8.1\")\r\n}\r\n```","```\r\npublic interface FibonacciSequenceGeneratorFixture {\r\n\r\n    FibonacciSequenceGenerator provide();\r\n\r\n    @Test\r\n    default void whenSequenceIndexIsNegative_thenThrows() {\r\n        FibonacciSequenceGenerator generator = provide();\r\n        assertThrows(IllegalArgumentException.class, () -> generator.generate(-1));\r\n    }\r\n\r\n    @Test\r\n    default void whenGivenIndex_thenGeneratesFibonacciNumber() {\r\n        FibonacciSequenceGenerator generator = provide();\r\n        int[] sequence = { 0, 1, 1, 2, 3, 5, 8 };\r\n        for (int i = 0; i < sequence.length; i++) {\r\n            assertEquals(sequence[i], generator.generate(i));\r\n        }\r\n    }\r\n}\r\n```","```\r\ndependencies {\r\n    api(project(\":fibonacci-spi\"))\r\n\r\n    testImplementation(testFixtures(project(\":fibonacci-spi\")))\r\n    testImplementation(\"org.junit.jupiter:junit-jupiter-api:5.8.1\")\r\n    testRuntimeOnly(\"org.junit.jupiter:junit-jupiter-engine:5.8.1\")\r\n}\r\n```","```\r\nclass RecursiveFibonacciUnitTest implements FibonacciSequenceGeneratorFixture {\r\n    @Override\r\n    public FibonacciSequenceGenerator provide() {\r\n        return new RecursiveFibonacci();\r\n    }\r\n}\r\n```","```\r\nplugins {\r\n    `java-library`\r\n    `maven-publish`\r\n}\r\n```","```\r\npublishing {\r\n    publications {\r\n        register(\"mavenJava\", MavenPublication::class) {\r\n            from(components[\"java\"])\r\n        }\r\n    }\r\n}\r\n```","```\r\n./gradlew publishToMavenLocal\r\n```","```\r\nls ~/.m2/repository/com/baeldung/gradle-6/1.0.0/\r\ngradle-6-1.0.0.jar\tgradle-6-1.0.0.module\tgradle-6-1.0.0.pom\r\n```","```\r\nval copyExtraLibs by tasks.registering(Copy::class) {\r\n    from(extralibs)\r\n    into(extraLibsDir)\r\n}\r\n```","```\r\nsourceCompatibility = JavaVersion.VERSION_13\r\ntargetCompatibility = JavaVersion.VERSION_13\r\n```","```\r\ntasks.compileJava {\r\n    options.compilerArgs.add(\"--enable-preview\")\r\n}\r\ntasks.test {\r\n    jvmArgs.add(\"--enable-preview\")\r\n}\r\ntasks.javadoc {\r\n    val javadocOptions = options as CoreJavadocOptions\r\n    javadocOptions.addStringOption(\"source\", \"13\")\r\n    javadocOptions.addBooleanOption(\"-enable-preview\", true)\r\n}\r\n```"]