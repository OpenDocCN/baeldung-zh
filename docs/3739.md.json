["```\r\nMutableIntIntMap mutableIntIntMap = IntIntMaps.mutable.empty();\r\n```","```\r\nImmutableIntIntMap immutableIntIntMap = IntIntMaps.immutable.empty();\r\n```","```\r\nmutableIntIntMap.addToValue(1, 1);\r\n```","```\r\nMutableObjectDoubleMap dObject = ObjectDoubleMaps.mutable.empty();\r\n```","```\r\ndObject.addToValue(\"price\", 150.5);\r\ndObject.addToValue(\"quality\", 4.4);\r\ndObject.addToValue(\"stability\", 0.8);\r\n```","```\r\nIntLongHashMap intLongHashMap = new IntLongHashMap();\r\nintLongHashMap.put(25, 1L);\r\nintLongHashMap.put(150, Long.MAX_VALUE);\r\nintLongHashMap.put(1, 0L);\r\n\r\nintLongHashMap.get(150);\r\n```","```\r\nIntObjectOpenHashMap<BigDecimal>\r\nObjectIntOpenHashMap<LocalDate> \r\n```","```\r\nInt2BooleanMap int2BooleanMap = new Int2BooleanOpenHashMap();\r\n```","```\r\nint2BooleanMap.put(1, true);\r\nint2BooleanMap.put(7, false);\r\nint2BooleanMap.put(4, true);\r\n```","```\r\nboolean value = int2BooleanMap.get(1);\r\n```","```\r\nInt2FloatMap map = new Int2FloatMap();\r\n//Add keys here\r\nfor(Int2FloatMap.Entry e : Fastutil.fastIterable(map)) {\r\n    //e will be reused on each iteration, so it will be only one object\r\n} \r\n```","```\r\nInt2FloatMap map = new Int2FloatMap();\r\n//Add keys here\r\nInt2FloatMaps.fastForEach(map , e ->  {\r\n    // e is also reused across iterations\r\n}); \r\n```","```\r\nInt2FloatMap map = new Int2FloatMap();\r\n//Add keys here\r\nmap.forEach((key,value) -> {\r\n    // use each key/value entry   \r\n}); \r\n```"]