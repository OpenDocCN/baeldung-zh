["```\r\npublic class Country implements Externalizable {\r\n\r\n    private static final long serialVersionUID = 1L;\r\n\r\n    private String name;\r\n    private int code;\r\n\r\n    // getters, setters\r\n\r\n    @Override\r\n    public void writeExternal(ObjectOutput out) throws IOException {\r\n        out.writeUTF(name);\r\n        out.writeInt(code);\r\n    }\r\n\r\n    @Override\r\n    public void readExternal(ObjectInput in) \r\n      throws IOException, ClassNotFoundException {\r\n        this.name = in.readUTF();\r\n        this.code = in.readInt();\r\n    }\r\n}\r\n```","```\r\n@Test\r\npublic void whenSerializing_thenUseExternalizable() \r\n  throws IOException, ClassNotFoundException {\r\n\r\n    Country c = new Country();\r\n    c.setCode(374);\r\n    c.setName(\"Armenia\");\r\n\r\n    FileOutputStream fileOutputStream\r\n     = new FileOutputStream(OUTPUT_FILE);\r\n    ObjectOutputStream objectOutputStream\r\n     = new ObjectOutputStream(fileOutputStream);\r\n    c.writeExternal(objectOutputStream);\r\n\r\n    objectOutputStream.flush();\r\n    objectOutputStream.close();\r\n    fileOutputStream.close();\r\n\r\n    FileInputStream fileInputStream\r\n     = new FileInputStream(OUTPUT_FILE);\r\n    ObjectInputStream objectInputStream\r\n     = new ObjectInputStream(fileInputStream);\r\n\r\n    Country c2 = new Country();\r\n    c2.readExternal(objectInputStream);\r\n\r\n    objectInputStream.close();\r\n    fileInputStream.close();\r\n\r\n    assertTrue(c2.getCode() == c.getCode());\r\n    assertTrue(c2.getName().equals(c.getName()));\r\n}\r\n```","```\r\nCountry{name='Armenia', code=374}\r\n```","```\r\npublic class Region extends Country implements Externalizable {\r\n\r\n    private static final long serialVersionUID = 1L;\r\n\r\n    private String climate;\r\n    private Double population;\r\n\r\n    // getters, setters\r\n\r\n    @Override\r\n    public void writeExternal(ObjectOutput out) throws IOException {\r\n        super.writeExternal(out);\r\n        out.writeUTF(climate);\r\n    }\r\n\r\n    @Override\r\n    public void readExternal(ObjectInput in) \r\n      throws IOException, ClassNotFoundException {\r\n\r\n        super.readExternal(in);\r\n        this.climate = in.readUTF();\r\n    }\r\n}\r\n```","```\r\nRegion r = new Region();\r\nr.setCode(374);\r\nr.setName(\"Armenia\");\r\nr.setClimate(\"Mediterranean\");\r\nr.setPopulation(120.000);\r\n```","```\r\nRegion{\r\n  country='Country{\r\n    name='Armenia',\r\n    code=374}'\r\n  climate='Mediterranean', \r\n  population=null\r\n}\r\n```"]