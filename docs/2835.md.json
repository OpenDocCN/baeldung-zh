["```\r\nopenapi: 3.0.1\r\ninfo:\r\n  version: \"1.0\"\r\n  title: PetStore\r\npaths:\r\n  /pets:\r\n    post:\r\n      #.. post described here\r\ncomponents:\r\n  schemas:\r\n    Pet:\r\n      type: object\r\n      required:\r\n        - id\r\n        - name\r\n      properties:\r\n        id:\r\n          type: integer\r\n          format: int64\r\n        name:\r\n          type: string\r\n          x-constraints: \"Capitalized(required = true)\"\r\n        tag:\r\n          type: string\r\n```","```\r\n/pets:\r\n    # post defined here\r\n    get: \r\n      tags: \r\n        - pet \r\n      summary: Finds Pets by name \r\n      description: 'Find pets by name' \r\n      operationId: findPetsByTags \r\n      parameters: \r\n        - <em>name: name</em> \r\n          in: query \r\n          schema:\r\n            type: string \r\n          description: Tags to filter by \r\n          required: true \r\n          x-constraints: \"Capitalized(required = true)\" \r\n      responses: \r\n        '200':\r\n          description: default response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/Pet'\r\n        '400': \r\n          description: Invalid tag value\r\n```","```\r\n@Documented\r\n@Constraint(validatedBy = {Capitalized.class})\r\n@Target({ElementType.PARAMETER, ElementType.FIELD, ElementType.METHOD})\r\n@Retention(RetentionPolicy.RUNTIME)\r\npublic @interface Capitalized{\r\n    String message() default \"Name should be capitalized.\";\r\n    boolean required() default true;\r\n    // default annotation methods\r\n}\r\n```","```\r\npublic class CapitalizedValidator implements ConstraintValidator<Capitalized, String> {\r\n\r\n    @Override\r\n    public boolean isValid(String nameField, ConstraintValidatorContext context) {\r\n        // validation code here\r\n    }\r\n}\r\n```","```\r\n<plugin>  \r\n  //... \r\n  <executions>\r\n    <execution>\r\n      <configuration\r\n        //...\r\n        <templateDirectory>\r\n          ${project.basedir}/src/main/resources/openapi/templates\r\n        </templateDirectory>\r\n        //...\r\n      </configuration>\r\n    </execution>\r\n  </executions>        \r\n  //...\r\n</plugin> \r\n```","```\r\n{{{ vendorExtensions.x-constraints }}}\r\n```","```\r\n{{#required}}@Capitalized(required=\"{{{pattern}}}\") {{/required}}\r\n```","```\r\n{{#imports}}import {{import}}; {{/imports}} import \r\ncom.baeldung.openapi.petstore.validator.CapitalizedValidator; \r\nimport com.baeldung.openapi.petstore.validator.Capitalized;\r\n```","```\r\n{{#imports}}import {{import}}; {{/imports}} import \r\ncom.baeldung.openapi.petstore.validator.Capitalized;\r\n```","```\r\npublic class Pet {\r\n    @JsonProperty(\"id\")\r\n    private Long id = null;\r\n\r\n    @JsonProperty(\"name\")\r\n    private String name = null;\r\n    // other parameters\r\n    @Schema(required = true, description = \"\")\r\n    @<code class=\"language-java\">Capitalized public String getName() { return name; } // default getters and setter }\r\n```","```\r\ndefault ResponseEntity<List<Pet>> findPetsByTags(\r\n    @Capitalized(required = true)\r\n    @ApiParam(value = \"Tags to filter by\") \r\n    @Valid @RequestParam(value = \"name\", required = false) String name) {\r\n\r\n    // default generated code here \r\n    return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\r\n}\r\n```","```\r\ncurl -X 'POST' \\\r\n  'http://localhost:8080/pet' \\\r\n  -H 'accept: application/json' \\\r\n  -H 'Content-Type: application/json' \\\r\n  -d '{\r\n  \"id\": 1,\r\n  \"name\": \"rockie\"\r\n}'\r\n```","```\r\ncurl -I http://localhost:8080/pets/name=\"rockie\"\r\n```"]