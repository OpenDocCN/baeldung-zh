["```\r\n<dependency>\r\n    <groupId>org.springframework</groupId>\r\n    <artifactId>spring-context</artifactId>\r\n    <version>5.1.4.RELEASE</version>\r\n</dependency>\r\n\r\n<dependency>\r\n    <groupId>com.google.inject</groupId>\r\n    <artifactId>guice</artifactId>\r\n    <version>4.2.2</version>\r\n</dependency>\r\n```","```\r\n@Component\r\npublic class UserService {\r\n    @Autowired\r\n    private AccountService accountService;\r\n}\r\n```","```\r\n@Component\r\npublic class AccountServiceImpl implements AccountService {\r\n}\r\n```","```\r\n@Configuration\r\n@ComponentScan(\"com.baeldung.di.spring\")\r\npublic class SpringMainConfig {\r\n}\r\n```","```\r\nApplicationContext context = new AnnotationConfigApplicationContext(SpringMainConfig.class);\r\n```","```\r\nUserService userService = context.getBean(UserService.class);\r\nassertNotNull(userService.getAccountService());\r\n```","```\r\npublic class GuiceUserService {\r\n    @Inject\r\n    private AccountService accountService;\r\n}\r\n```","```\r\npublic class GuiceModule extends AbstractModule {\r\n    @Override\r\n    protected void configure() {\r\n        bind(AccountService.class).to(AccountServiceImpl.class);\r\n    }\r\n}\r\n```","```\r\nInjector injector = Guice.createInjector(new GuiceModule());\r\n```","```\r\nGuiceUserService guiceUserService = injector.getInstance(GuiceUserService.class);\r\nassertNotNull(guiceUserService.getAccountService());\r\n```","```\r\n@Bean \r\npublic BookService bookServiceGenerator() {\r\n    return new BookServiceImpl();\r\n}\r\n```","```\r\nBookService bookService = context.getBean(BookService.class);\r\nassertNotNull(bookService);\r\n```","```\r\n@Provides\r\npublic BookService bookServiceGenerator() {\r\n    return new BookServiceImpl();\r\n}\r\n```","```\r\nBookService bookService = injector.getInstance(BookService.class);\r\nassertNotNull(bookService);\r\n```","```\r\n@Configuration\r\n@Import({SpringBeansConfig.class})\r\n@ComponentScan(\"com.baeldung.di.spring\")\r\npublic class SpringMainConfig {\r\n    @Bean\r\n    public BookService bookServiceGenerator() {\r\n        return new BookServiceImpl();\r\n    }\r\n}\r\n```","```\r\n@Configuration\r\npublic class SpringBeansConfig {\r\n    @Bean\r\n    public AudioBookService bookServiceGenerator() {\r\n        return new AudioBookServiceImpl();\r\n    }\r\n}\r\n```","```\r\nBookService bookService = context.getBean(BookService.class);\r\nassertNotNull(bookService); \r\nAudioBookService audioBookService = context.getBean(AudioBookService.class);\r\nassertNotNull(audioBookService);\r\n```","```\r\norg.springframework.beans.factory.NoSuchBeanDefinitionException:\r\nNo qualifying bean of type 'AudioBookService' available\r\n```","```\r\npublic class Person {\r\n}\r\n```","```\r\nbind(Person.class).toConstructor(Person.class.getConstructor());\r\nbind(Person.class).toProvider(new Provider<Person>() {\r\n    public Person get() {\r\n        Person p = new Person();\r\n        return p;\r\n    }\r\n});\r\n```","```\r\nPerson person = injector.getInstance(Person.class);\r\nassertNotNull(person);\r\n```","```\r\ncom.google.inject.CreationException: A binding to Person was already configured at GuiceModule.configure()\r\n```","```\r\n@Component\r\npublic class BookServiceImpl implements BookService {\r\n    @Autowired\r\n    private AuthorService authorService;\r\n}\r\n```","```\r\npublic class AuthorServiceImpl implements AuthorService {\r\n}\r\n```","```\r\nBookService bookService = context.getBean(BookService.class);\r\nassertNotNull(bookService);\r\n```","```\r\norg.springframework.beans.factory.NoSuchBeanDefinitionException: \r\nNo qualifying bean of type 'AuthorService' available\r\n```","```\r\npublic class BookServiceImpl implements BookService {\r\n    @Autowired\r\n    private Optional<AuthorService> authorService;\r\n}\r\n```","```\r\n@Component\r\npublic class BookServiceImpl implements BookService {\r\n    @Autowired(required = false)\r\n    private AuthorService authorService;\r\n}\r\n```","```\r\npublic class FooProcessor {\r\n    @Inject\r\n    private Foo foo;\r\n}\r\n```","```\r\nbind(Foo.class).toProvider(new Provider<Foo>() {\r\n    public Foo get() {\r\n        return null;\r\n    }\r\n});\r\n```","```\r\nFooProcessor fooProcessor = injector.getInstance(FooProcessor.class);\r\nassertNotNull(fooProcessor);\r\n```","```\r\ncom.google.inject.ProvisionException:\r\nnull returned by binding at GuiceModule.configure(..)\r\nbut the 1st parameter of FooProcessor.[...] is not @Nullable\r\n```","```\r\npublic class FooProcessor {\r\n    @Inject\r\n    private Optional<Foo> foo;\r\n}\r\n```","```\r\npublic class FooProcessor {\r\n    @Inject\r\n    @Nullable\r\n    private Foo foo;\r\n}\r\n```","```\r\n@Component\r\npublic class SpringPersonService {\r\n\r\n    private PersonDao personDao;\r\n\r\n    @Autowired\r\n    public SpringPersonService(PersonDao personDao) {\r\n        this.personDao = personDao;\r\n    }\r\n}\r\n```","```\r\nSpringPersonService personService = context.getBean(SpringPersonService.class);\r\nassertNotNull(personService);\r\n```","```\r\npublic class GuicePersonService {\r\n\r\n    private PersonDao personDao;\r\n\r\n    @Inject\r\n    public GuicePersonService(PersonDao personDao) {\r\n        this.personDao = personDao;\r\n    }\r\n}\r\n```","```\r\nGuicePersonService personService = injector.getInstance(GuicePersonService.class);\r\nassertNotNull(personService);\r\n```","```\r\n@Component\r\npublic class SpringPersonService {\r\n\r\n    private PersonDao personDao;\r\n\r\n    @Autowired\r\n    public void setPersonDao(PersonDao personDao) {\r\n        this.personDao = personDao;\r\n    }\r\n}\r\n```","```\r\nSpringPersonService personService = context.getBean(SpringPersonService.class);\r\nassertNotNull(personService);\r\nassertNotNull(personService.getPersonDao());\r\n```","```\r\npublic class GuicePersonService {\r\n\r\n    private PersonDao personDao;\r\n\r\n    @Inject\r\n    public void setPersonDao(PersonDao personDao) {\r\n        this.personDao = personDao;\r\n    }\r\n}\r\n```","```\r\nGuicePersonService personService = injector.getInstance(GuicePersonService.class);\r\nassertNotNull(personService);\r\nassertNotNull(personService.getPersonDao());\r\n```"]