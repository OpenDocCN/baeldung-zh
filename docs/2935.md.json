["```\r\n<dependency>\r\n    <groupId>io.ebean</groupId>\r\n    <artifactId>ebean</artifactId>\r\n    <version>11.22.4</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>com.h2database</groupId>\r\n    <artifactId>h2</artifactId>\r\n    <version>1.4.196</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>ch.qos.logback</groupId>\r\n    <artifactId>logback-classic</artifactId>\r\n    <version>1.2.6</version>\r\n</dependency>\r\n```","```\r\n<plugin>\r\n    <groupId>io.ebean</groupId>\r\n    <artifactId>ebean-maven-plugin</artifactId>\r\n    <version>11.11.2</version>\r\n    <executions>\r\n        <execution>\r\n            <id>main</id>\r\n            <phase>process-classes</phase>\r\n            <configuration>\r\n                <transformArgs>debug=1</transformArgs>\r\n            </configuration>\r\n            <goals>\r\n                <goal>enhance</goal>\r\n            </goals>\r\n        </execution>\r\n    </executions>\r\n</plugin>\r\n```","```\r\nentity-packages: com.baeldung.ebean.model\r\ntransactional-packages: com.baeldung.ebean.app\r\n```","```\r\n<logger name=\"io.ebean.DDL\" level=\"TRACE\"/>\r\n<logger name=\"io.ebean.SQL\" level=\"TRACE\"/>\r\n<logger name=\"io.ebean.TXN\" level=\"TRACE\"/>\r\n```","```\r\nebean.db.ddl.generate=true\r\nebean.db.ddl.run=true\r\n\r\ndatasource.db.username=sa\r\ndatasource.db.password=\r\ndatasource.db.databaseUrl=jdbc:h2:mem:customer\r\ndatasource.db.databaseDriver=org.h2.Driver\r\n```","```\r\nServerConfig cfg = new ServerConfig();\r\n\r\nProperties properties = new Properties();\r\nproperties.put(\"ebean.db.ddl.generate\", \"true\");\r\nproperties.put(\"ebean.db.ddl.run\", \"true\");\r\nproperties.put(\"datasource.db.username\", \"sa\");\r\nproperties.put(\"datasource.db.password\", \"\");\r\nproperties.put(\"datasource.db.databaseUrl\",\"jdbc:h2:mem:app2\";\r\nproperties.put(\"datasource.db.databaseDriver\", \"org.h2.Driver\");\r\n\r\ncfg.loadFromProperties(properties);\r\nEbeanServer server = EbeanServerFactory.create(cfg);\r\n```","```\r\nEbeanServer server = Ebean.getDefaultServer();\r\n```","```\r\ncfg.setDefaultServer(true);\r\n```","```\r\n@MappedSuperclass\r\npublic abstract class BaseModel {\r\n\r\n    @Id\r\n    protected long id;\r\n\r\n    @Version\r\n    protected long version;\r\n\r\n    @WhenCreated\r\n    protected Instant createdOn;\r\n\r\n    @WhenModified\r\n    protected Instant modifiedOn;\r\n\r\n    // getters and setters\r\n}\r\n```","```\r\n@Entity\r\npublic class Customer extends BaseModel {\r\n\r\n    public Customer(String name, Address address) {\r\n        super();\r\n        this.name = name;\r\n        this.address = address;\r\n    }\r\n\r\n    private String name;\r\n\r\n    @OneToOne(cascade = CascadeType.ALL)\r\n    Address address;\r\n\r\n    // getters and setters\r\n} \r\n```","```\r\n@Entity\r\npublic class Address extends BaseModel{\r\n\r\n    public Address(String addressLine1, String addressLine2, String city) {\r\n        super();\r\n        this.addressLine1 = addressLine1;\r\n        this.addressLine2 = addressLine2;\r\n        this.city = city;\r\n    }\r\n\r\n    private String addressLine1;\r\n    private String addressLine2;\r\n    private String city;\r\n\r\n    // getters and setters\r\n}\r\n```","```\r\nAddress a1 = new Address(\"5, Wide Street\", null, \"New York\");\r\nCustomer c1 = new Customer(\"John Wide\", a1);\r\n\r\nEbeanServer server = Ebean.getDefaultServer();\r\nserver.save(c1);\r\n\r\nc1.setName(\"Jane Wide\");\r\nc1.setAddress(null);\r\nserver.save(c1);\r\n\r\nCustomer foundC1 = Ebean.find(Customer.class, c1.getId());\r\n\r\nEbean.delete(foundC1);\r\n```","```\r\nCustomer customer = Ebean.find(Customer.class)\r\n            .select(\"name\")\r\n            .fetch(\"address\", \"city\")\r\n            .where()\r\n            .eq(\"city\", \"San Jose\")\r\n            .findOne();\r\n```","```\r\n@Transactional\r\npublic static void insertAndDeleteInsideTransaction() {\r\n    Customer c1 = getCustomer();\r\n    EbeanServer server = Ebean.getDefaultServer();\r\n    server.save(c1);\r\n    Customer foundC1 = server.find(Customer.class, c1.getId());\r\n    server.delete(foundC1);\r\n}\r\n```","```\r\ncompile io.ebean:ebean-maven-plugin:enhance\r\n```"]