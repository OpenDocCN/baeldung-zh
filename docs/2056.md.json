["```\r\n@Controller\r\npublic class ResponseBodyEmitterController {\r\n\r\n    private ExecutorService executor \r\n      = Executors.newCachedThreadPool();\r\n\r\n    @GetMapping(\"/rbe\")\r\n    public ResponseEntity<ResponseBodyEmitter> handleRbe() {\r\n        ResponseBodyEmitter emitter = new ResponseBodyEmitter();\r\n        executor.execute(() -> {\r\n            try {\r\n                emitter.send(\r\n                  \"/rbe\" + \" @ \" + new Date(), MediaType.TEXT_PLAIN);\r\n                emitter.complete();\r\n            } catch (Exception ex) {\r\n                emitter.completeWithError(ex);\r\n            }\r\n        });\r\n        return new ResponseEntity(emitter, HttpStatus.OK);\r\n    }\r\n}\r\n```","```\r\nvar xhr = function(url) {\r\n    return new Promise(function(resolve, reject) {\r\n        var xmhr = new XMLHttpRequest();\r\n        //...\r\n        xmhr.open(\"GET\", url, true);\r\n        xmhr.send();\r\n       //...\r\n    });\r\n};\r\n\r\nxhr('http://localhost:8080/javamvcasync/rbe')\r\n  .then(function(success){ //... }); \r\n```","```\r\n@Controller\r\npublic class SseEmitterController {\r\n    private ExecutorService nonBlockingService = Executors\r\n      .newCachedThreadPool();\r\n\r\n    @GetMapping(\"/sse\")\r\n    public SseEmitter handleSse() {\r\n         SseEmitter emitter = new SseEmitter();\r\n         nonBlockingService.execute(() -> {\r\n             try {\r\n                 emitter.send(\"/sse\" + \" @ \" + new Date());\r\n                 // we could send more events\r\n                 emitter.complete();\r\n             } catch (Exception ex) {\r\n                 emitter.completeWithError(ex);\r\n             }\r\n         });\r\n         return emitter;\r\n    }   \r\n} \r\n```","```\r\nvar sse = new EventSource('http://localhost:8080/javamvcasync/sse');\r\nsse.onmessage = function (evt) {\r\n    var el = document.getElementById('sse');\r\n    el.appendChild(document.createTextNode(evt.data));\r\n    el.appendChild(document.createElement('br'));\r\n};\r\n```","```\r\n@Controller\r\npublic class StreamingResponseBodyController {\r\n\r\n    @GetMapping(\"/srb\")\r\n    public ResponseEntity<StreamingResponseBody> handleRbe() {\r\n        StreamingResponseBody stream = out -> {\r\n            String msg = \"/srb\" + \" @ \" + new Date();\r\n            out.write(msg.getBytes());\r\n        };\r\n        return new ResponseEntity(stream, HttpStatus.OK);\r\n    }\r\n} \r\n```","```\r\nvar xhr = function(url) {\r\n    return new Promise(function(resolve, reject) {\r\n        var xmhr = new XMLHttpRequest();\r\n        //...\r\n        xmhr.open(\"GET\", url, true);\r\n        xmhr.send();\r\n        //...\r\n    });\r\n};\r\n\r\nxhr('http://localhost:8080/javamvcasync/srb')\r\n  .then(function(success){ //... }); \r\n```"]