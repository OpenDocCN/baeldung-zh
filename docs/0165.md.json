["```\r\nList<String> list = Arrays.asList(new String[]{\"foo\", \"bar\"});\r\n```","```\r\n@Test\r\npublic void givenArraysAsList_thenInitialiseList() {\r\n    List<String> list = Arrays.asList(\"foo\", \"bar\");\r\n\r\n    assertTrue(list.contains(\"foo\"));\r\n}\r\n```","```\r\n@Test(expected = UnsupportedOperationException.class)\r\npublic void givenArraysAsList_whenAdd_thenUnsupportedException() {\r\n    List<String> list = Arrays.asList(\"foo\", \"bar\");\r\n\r\n    list.add(\"baz\");\r\n}\r\n```","```\r\n@Test\r\npublic void givenArraysAsList_whenCreated_thenShareReference(){\r\n    String[] array = {\"foo\", \"bar\"};\r\n    List<String> list = Arrays.asList(array);\r\n    array[0] = \"baz\";\r\n\r\n    assertEquals(\"baz\", list.get(0));\r\n}\r\n```","```\r\n@Test\r\npublic void givenStream_thenInitializeList(){\r\n    List<String> list = Stream.of(\"foo\", \"bar\")\r\n      .collect(Collectors.toList());\r\n\r\n    assertTrue(list.contains(\"foo\"));\r\n}\r\n```","```\r\nList<String> list = List.of(\"foo\", \"bar\", \"baz\");\r\nSet<String> set = Set.of(\"foo\", \"bar\", \"baz\");\r\n```","```\r\n@Test\r\npublic void givenAnonymousInnerClass_thenInitialiseList() {\r\n    List<String> cities = new ArrayList() {{\r\n        add(\"New York\");\r\n        add(\"Rio\");\r\n        add(\"Tokyo\");\r\n    }};\r\n\r\n    assertTrue(cities.contains(\"New York\"));\r\n}\r\n```"]