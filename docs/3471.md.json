["```\r\n@Test\r\npublic void whenExecutedFromAnotherProgram_thenSourceProgramOutput3() throws IOException {\r\n\r\n    Process process = Runtime.getRuntime()\r\n      .exec(\"javac -cp src src\\\\main\\\\java\\\\com\\\\baeldung\\\\java9\\\\process\\\\OutputStreamExample.java\");\r\n    process = Runtime.getRuntime() \r\n      .exec(\"java -cp src/main/java com.baeldung.java9.process.OutputStreamExample\");\r\n    BufferedReader output = new BufferedReader(new InputStreamReader(process.getInputStream()));\r\n    int value = Integer.parseInt(output.readLine());\r\n\r\n    assertEquals(3, value);\r\n}\r\n```","```\r\nProcessBuilder builder = new ProcessBuilder(\"notepad.exe\");\r\nProcess process = builder.start();\r\n```","```\r\nlong pid = /* PID to kill */;\r\nOptional<ProcessHandle> optionalProcessHandle = ProcessHandle.of(pid);\r\noptionalProcessHandle.ifPresent(processHandle -> processHandle.destroy()); \r\n```","```\r\nProcessBuilder builder = new ProcessBuilder(\"notepad.exe\");\r\nProcess process = builder.start();\r\nprocess.destroy();\r\nif (process.isAlive()) {\r\n    process.destroyForcibly();\r\n}\r\n```","```\r\nProcessBuilder builder = new ProcessBuilder(\"notepad.exe\");\r\nProcess process = builder.start();\r\nassertThat(process.waitFor() >= 0); \r\n```","```\r\nProcessBuilder builder = new ProcessBuilder(\"notepad.exe\");\r\nProcess process = builder.start();\r\nassertFalse(process.waitFor(1, TimeUnit.SECONDS));\r\n```","```\r\n@Test\r\npublic void \r\n  givenSubProcess_whenCurrentThreadWillNotWaitIndefinitelyforSubProcessToEnd_thenProcessExitValueReturnsGrt0() \r\n  throws IOException {\r\n    ProcessBuilder builder = new ProcessBuilder(\"notepad.exe\");\r\n    Process process = builder.start();\r\n    assertThat(process.exitValue() >= 0);\r\n}\r\n```","```\r\nProcessBuilder builder = new ProcessBuilder(\"notepad.exe\");\r\nProcess process = builder.start();\r\nThread.sleep(10000);\r\nprocess.destroy();\r\nassertTrue(process.isAlive());\r\n```","```\r\n@Test\r\npublic void givenSubProcess_whenEncounterError_thenErrorStreamNotNull() throws IOException {\r\n    Process process = Runtime.getRuntime().exec(\r\n      \"javac -cp src src\\\\main\\\\java\\\\com\\\\baeldung\\\\java9\\\\process\\\\ProcessCompilationError.java\");\r\n    BufferedReader error = new BufferedReader(new InputStreamReader(process.getErrorStream()));\r\n    String errorString = error.readLine();\r\n    assertNotNull(errorString);\r\n}\r\n```","```\r\n@Test\r\npublic void givenSourceProgram_whenReadingInputStream_thenFirstLineEquals3() throws IOException {\r\n    Process process = Runtime.getRuntime().exec(\r\n      \"javac -cp src src\\\\main\\\\java\\\\com\\\\baeldung\\\\java9\\\\process\\\\OutputStreamExample.java\");\r\n    process = Runtime.getRuntime()\r\n      .exec(\"java -cp  src/main/java com.baeldung.java9.process.OutputStreamExample\");\r\n    BufferedReader output = new BufferedReader(new InputStreamReader(process.getInputStream()));\r\n    int value = Integer.parseInt(output.readLine());\r\n\r\n    assertEquals(3, value);\r\n}\r\n```","```\r\nWriter w = new OutputStreamWriter(process.getOutputStream(), \"UTF-8\");\r\nw.write(\"send to child\\n\");\r\n```","```\r\n@Test\r\npublic void givenRunningProcesses_whenFilterOnProcessIdRange_thenGetSelectedProcessPid() {\r\n    assertThat(((int) ProcessHandle.allProcesses()\r\n      .filter(ph -> (ph.pid() > 10000 && ph.pid() < 50000))\r\n      .count()) > 0);\r\n}\r\n```"]