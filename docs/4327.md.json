["```\r\n<dependency>\r\n    <groupId>org.hamcrest</groupId>\r\n    <artifactId>java-hamcrest</artifactId>\r\n    <version>2.0.0.0</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n```","```\r\n@Test\r\npublic void whenTwoStringsAreEqual_thenCorrect() {\r\n    String first = \"hello\";\r\n    String second = \"Hello\";\r\n\r\n    assertThat(first, equalToIgnoringCase(second));\r\n}\r\n```","```\r\n@Test\r\npublic void whenTwoStringsAreEqualWithWhiteSpace_thenCorrect() {\r\n    String first = \"hello\";\r\n    String second = \"   Hello   \";\r\n\r\n    assertThat(first, equalToIgnoringWhiteSpace(second));\r\n}\r\n```","```\r\n@Test\r\npublic void whenStringIsBlank_thenCorrect() {\r\n    String first = \"  \";\r\n    String second = null;\r\n\r\n    assertThat(first, blankString());\r\n    assertThat(first, blankOrNullString());\r\n    assertThat(second, blankOrNullString());\r\n}\r\n```","```\r\n@Test\r\npublic void whenStringIsEmpty_thenCorrect() {\r\n    String first = \"\";\r\n    String second = null;\r\n\r\n    assertThat(first, emptyString());\r\n    assertThat(first, emptyOrNullString());\r\n    assertThat(second, emptyOrNullString());\r\n}\r\n```","```\r\n@Test\r\npublic void whenStringMatchPattern_thenCorrect() {\r\n    String first = \"hello\";\r\n\r\n    assertThat(first, matchesPattern(\"[a-z]+\"));\r\n}\r\n```","```\r\n@Test\r\npublic void whenVerifyStringContains_thenCorrect() {\r\n    String first = \"hello\";\r\n\r\n    assertThat(first, containsString(\"lo\"));\r\n    assertThat(first, containsStringIgnoringCase(\"EL\"));\r\n}\r\n```","```\r\n@Test\r\npublic void whenVerifyStringContainsInOrder_thenCorrect() {\r\n    String first = \"hello\";\r\n\r\n    assertThat(first, stringContainsInOrder(\"e\",\"l\",\"o\"));\r\n}\r\n```","```\r\n@Test\r\npublic void whenVerifyStringStartsWith_thenCorrect() {\r\n    String first = \"hello\";\r\n\r\n    assertThat(first, startsWith(\"he\"));\r\n    assertThat(first, startsWithIgnoringCase(\"HEL\"));\r\n}\r\n```","```\r\n@Test\r\npublic void whenVerifyStringEndsWith_thenCorrect() {\r\n    String first = \"hello\";\r\n\r\n    assertThat(first, endsWith(\"lo\"));\r\n    assertThat(first, endsWithIgnoringCase(\"LO\"));\r\n}\r\n```"]