["```\r\n@Test\r\npublic void whenSendPostRequest_thenCorrect() \r\n  throws IOException {\r\n    RequestBody formBody = new FormBody.Builder()\r\n      .add(\"username\", \"test\")\r\n      .add(\"password\", \"test\")\r\n      .build();\r\n\r\n    Request request = new Request.Builder()\r\n      .url(BASE_URL + \"/users\")\r\n      .post(formBody)\r\n      .build();\r\n\r\n    Call call = client.newCall(request);\r\n    Response response = call.execute();\r\n\r\n    assertThat(response.code(), equalTo(200));\r\n}\r\n```","```\r\n@Test\r\npublic void whenSendPostRequestWithAuthorization_thenCorrect() \r\n  throws IOException {\r\n    String postBody = \"test post\";\r\n\r\n    Request request = new Request.Builder()\r\n      .url(URL_SECURED_BY_BASIC_AUTHENTICATION)\r\n      .addHeader(\"Authorization\", Credentials.basic(\"username\", \"password\"))\r\n      .post(RequestBody.create(\r\n        MediaType.parse(\"text/x-markdown), postBody))\r\n      .build();\r\n\r\n    Call call = client.newCall(request);\r\n    Response response = call.execute();\r\n\r\n    assertThat(response.code(), equalTo(200));\r\n}\r\n```","```\r\n@Test\r\npublic void whenPostJson_thenCorrect() throws IOException {\r\n    String json = \"{\\\"id\\\":1,\\\"name\\\":\\\"John\\\"}\";\r\n\r\n    RequestBody body = RequestBody.create(\r\n      MediaType.parse(\"application/json\"), json);\r\n\r\n    Request request = new Request.Builder()\r\n      .url(BASE_URL + \"/users/detail\")\r\n      .post(body)\r\n      .build();\r\n\r\n    Call call = client.newCall(request);\r\n    Response response = call.execute();\r\n\r\n    assertThat(response.code(), equalTo(200));\r\n}\r\n```","```\r\n@Test\r\npublic void whenSendMultipartRequest_thenCorrect() \r\n  throws IOException {\t\r\n    RequestBody requestBody = new MultipartBody.Builder()\r\n      .setType(MultipartBody.FORM)\r\n      .addFormDataPart(\"username\", \"test\")\r\n      .addFormDataPart(\"password\", \"test\")\r\n      .addFormDataPart(\"file\", \"file.txt\",\r\n        RequestBody.create(MediaType.parse(\"application/octet-stream\"), \r\n          new File(\"src/test/resources/test.txt\")))\r\n      .build();\r\n\r\n    Request request = new Request.Builder()\r\n      .url(BASE_URL + \"/users/multipart\")\r\n      .post(requestBody)\r\n      .build();\r\n\r\n    Call call = client.newCall(request);\r\n    Response response = call.execute();\r\n\r\n    assertThat(response.code(), equalTo(200));\r\n} \r\n```","```\r\n@Test\r\npublic void whenPostJsonWithoutCharset_thenCharsetIsUtf8() throws IOException {\r\n    final String json = \"{\\\"id\\\":1,\\\"name\\\":\\\"John\\\"}\";\r\n\r\n    final RequestBody body = RequestBody.create(\r\n        MediaType.parse(\"application/json\"), json);\r\n\r\n    String charset = body.contentType().charset().displayName();\r\n\r\n    assertThat(charset, equalTo(\"UTF-8\"));\r\n}\r\n```","```\r\n@Test\r\npublic void whenPostJsonWithUtf16Charset_thenCharsetIsUtf16() throws IOException {\r\n    final String json = \"{\\\"id\\\":1,\\\"name\\\":\\\"John\\\"}\";\r\n\r\n    final RequestBody body = RequestBody.create(\r\n        MediaType.parse(\"application/json; charset=utf-16\"), json);\r\n\r\n    String charset = body.contentType().charset().displayName();\r\n\r\n    assertThat(charset, equalTo(\"UTF-16\"));\r\n}\r\n```"]