["```\r\n@RestController\r\npublic class DateTimeController {\r\n\r\n    @PostMapping(\"/date\")\r\n    public void date(@RequestParam(\"date\") Date date) {\r\n        // ...\r\n    }\r\n\r\n    @PostMapping(\"/localdate\")\r\n    public void localDate(@RequestParam(\"localDate\") LocalDate localDate) {\r\n        // ...\r\n    }\r\n\r\n    @PostMapping(\"/localdatetime\")\r\n    public void dateTime(@RequestParam(\"localDateTime\") LocalDateTime localDateTime) {\r\n        // ...\r\n    }\r\n}\r\n```","```\r\nFailed to convert value of type 'java.lang.String' to required type 'java.time.LocalDate'; \r\n  nested exception is org.springframework.core.convert.ConversionFailedException.\r\n```","```\r\n@RestController\r\npublic class DateTimeController {\r\n\r\n    @PostMapping(\"/date\")\r\n    public void date(@RequestParam(\"date\") \r\n      @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) Date date) {\r\n        // ...\r\n    }\r\n\r\n    @PostMapping(\"/local-date\")\r\n    public void localDate(@RequestParam(\"localDate\") \r\n      @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate localDate) {\r\n        // ...\r\n    }\r\n\r\n    @PostMapping(\"/local-date-time\")\r\n    public void dateTime(@RequestParam(\"localDateTime\") \r\n      @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME) LocalDateTime localDateTime) {\r\n        // ...\r\n    }\r\n}\r\n```","```\r\n@PostMapping(\"/date\")\r\npublic void date(@RequestParam(\"date\") \r\n  @DateTimeFormat(pattern = \"dd.MM.yyyy\") Date date) {\r\n    // ...\r\n}\r\n```","```\r\n@Configuration\r\npublic class DateTimeConfig extends WebMvcConfigurationSupport {\r\n\r\n    @Bean\r\n    @Override\r\n    public FormattingConversionService mvcConversionService() {\r\n        DefaultFormattingConversionService conversionService = new DefaultFormattingConversionService(false);\r\n\r\n        DateTimeFormatterRegistrar dateTimeRegistrar = new DateTimeFormatterRegistrar();\r\n        dateTimeRegistrar.setDateFormatter(DateTimeFormatter.ofPattern(\"dd.MM.yyyy\"));\r\n        dateTimeRegistrar.setDateTimeFormatter(DateTimeFormatter.ofPattern(\"dd.MM.yyyy HH:mm:ss\"));\r\n        dateTimeRegistrar.registerFormatters(conversionService);\r\n\r\n        DateFormatterRegistrar dateRegistrar = new DateFormatterRegistrar();\r\n        dateRegistrar.setFormatter(new DateFormatter(\"dd.MM.yyyy\"));\r\n        dateRegistrar.registerFormatters(conversionService);\r\n\r\n        return conversionService;\r\n    }\r\n}\r\n```","```\r\nspring.mvc.format.date=yyyy-MM-dd\r\nspring.mvc.format.date-time=yyyy-MM-dd HH:mm:ss\r\nspring.mvc.format.time=HH:mm:ss\r\n```","```\r\nspring.mvc.format.date-time=iso\r\n```","```\r\nspring.mvc.format.date-time=yyyy-MM-dd HH:mm:ss\r\n```"]