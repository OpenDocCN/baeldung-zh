["```\r\npublic void \r\n  givenListContainsDuplicates_whenRemovingDuplicatesWithPlainJava_thenCorrect() {\r\n    List<Integer> listWithDuplicates = Lists.newArrayList(5, 0, 3, 1, 2, 3, 0, 0);\r\n    List<Integer> listWithoutDuplicates = new ArrayList<>(\r\n      new HashSet<>(listWithDuplicates));\r\n\r\n    assertThat(listWithoutDuplicates, hasSize(5));\r\n    assertThat(listWithoutDuplicates, containsInAnyOrder(5, 0, 3, 1, 2));\r\n}\r\n```","```\r\npublic void \r\n  givenListContainsDuplicates_whenRemovingDuplicatesPreservingOrderWithPlainJava_thenCorrect() {\r\n    List<Integer> listWithDuplicates = Lists.newArrayList(5, 0, 3, 1, 2, 3, 0, 0);\r\n    List<Integer> listWithoutDuplicates = new ArrayList<>(\r\n      new LinkedHashSet<>(listWithDuplicates));\r\n\r\n    assertThat(listWithoutDuplicates, hasSize(5));\r\n    assertThat(listWithoutDuplicates, containsInRelativeOrder(5, 0, 3, 1, 2));\r\n}\r\n```","```\r\npublic void \r\n  givenListContainsDuplicates_whenRemovingDuplicatesWithGuava_thenCorrect() {\r\n    List<Integer> listWithDuplicates = Lists.newArrayList(5, 0, 3, 1, 2, 3, 0, 0);\r\n    List<Integer> listWithoutDuplicates \r\n      = Lists.newArrayList(Sets.newHashSet(listWithDuplicates));\r\n\r\n    assertThat(listWithoutDuplicates, hasSize(5));\r\n    assertThat(listWithoutDuplicates, containsInAnyOrder(5, 0, 3, 1, 2));\r\n}\r\n```","```\r\npublic void \r\n  givenListContainsDuplicates_whenRemovingDuplicatesPreservingOrderWithGuava_thenCorrect() {\r\n    List<Integer> listWithDuplicates = Lists.newArrayList(5, 0, 3, 1, 2, 3, 0, 0);\r\n    List<Integer> listWithoutDuplicates \r\n      = Lists.newArrayList(Sets.newLinkedHashSet(listWithDuplicates));\r\n\r\n    assertThat(listWithoutDuplicates, hasSize(5));\r\n    assertThat(listWithoutDuplicates, containsInRelativeOrder(5, 0, 3, 1, 2));\r\n}\r\n```","```\r\npublic void \r\n  givenListContainsDuplicates_whenRemovingDuplicatesWithJava8_thenCorrect() {\r\n    List<Integer> listWithDuplicates = Lists.newArrayList(5, 0, 3, 1, 2, 3, 0, 0);\r\n    List<Integer> listWithoutDuplicates = listWithDuplicates.stream()\r\n     .distinct()\r\n     .collect(Collectors.toList());\r\n\r\n    assertThat(listWithoutDuplicates, hasSize(5));\r\n    assertThat(listWithoutDuplicates, containsInAnyOrder(5, 0, 3, 1, 2));\r\n}\r\n```"]