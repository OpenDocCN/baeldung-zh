["```\r\n<dependency>\r\n    <groupId>com.google.dagger</groupId>\r\n    <artifactId>dagger</artifactId>\r\n    <version>2.16</version>\r\n</dependency>\r\n```","```\r\n<plugin>\r\n    <groupId>org.apache.maven.plugins</groupId>\r\n    <artifactId>maven-compiler-plugin</artifactId>\r\n    <version>3.6.1</version>\r\n    <configuration>\r\n         <annotationProcessorPaths>\r\n              <path>\r\n                  <groupId>com.google.dagger</groupId>\r\n                  <artifactId>dagger-compiler</artifactId>\r\n                  <version>2.16</version>\r\n              </path>\r\n         </annotationProcessorPaths>\r\n    </configuration>\r\n</plugin>\r\n```","```\r\ncompile 'com.google.dagger:dagger:2.16'\r\nannotationProcessor 'com.google.dagger:dagger-compiler:2.16'\r\n```","```\r\npublic class Car {\r\n\r\n    private Engine engine;\r\n    private Brand brand;\r\n\r\n    @Inject\r\n    public Car(Engine engine, Brand brand) {\r\n        this.engine = engine;\r\n        this.brand = brand;\r\n    }\r\n\r\n    // getters and setters\r\n\r\n}\r\n```","```\r\n@Module\r\npublic class VehiclesModule {\r\n}\r\n```","```\r\n@Module\r\npublic class VehiclesModule {\r\n    @Provides\r\n    public Engine provideEngine() {\r\n        return new Engine();\r\n    }\r\n\r\n    @Provides\r\n    @Singleton\r\n    public Brand provideBrand() { \r\n        return new Brand(\"Baeldung\"); \r\n    }\r\n}\r\n```","```\r\n@Singleton\r\n@Component(modules = VehiclesModule.class)\r\npublic interface VehiclesComponent {\r\n    Car buildCar();\r\n}\r\n```","```\r\n@Test\r\npublic void givenGeneratedComponent_whenBuildingCar_thenDependenciesInjected() {\r\n    VehiclesComponent component = DaggerVehiclesComponent.create();\r\n\r\n    Car carOne = component.buildCar();\r\n    Car carTwo = component.buildCar();\r\n\r\n    Assert.assertNotNull(carOne);\r\n    Assert.assertNotNull(carTwo);\r\n    Assert.assertNotNull(carOne.getEngine());\r\n    Assert.assertNotNull(carTwo.getEngine());\r\n    Assert.assertNotNull(carOne.getBrand());\r\n    Assert.assertNotNull(carTwo.getBrand());\r\n    Assert.assertNotEquals(carOne.getEngine(), carTwo.getEngine());\r\n    Assert.assertEquals(carOne.getBrand(), carTwo.getBrand());\r\n}\r\n```"]