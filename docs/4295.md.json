["```\r\n<dependency>\r\n    <groupId>org.jukito</groupId>\r\n    <artifactId>jukito</artifactId>\r\n    <version>1.5</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n```","```\r\npublic interface Calculator {\r\n    public double add(double a, double b);\r\n}\r\n```","```\r\npublic class SimpleCalculator implements Calculator {\r\n\r\n    @Override\r\n    public double add(double a, double b) {\r\n        return a + b;\r\n    }\r\n}\r\n```","```\r\npublic class ScientificCalculator extends SimpleCalculator {\r\n}\r\n```","```\r\n@RunWith(JukitoRunner.class)\r\npublic class CalculatorTest {\r\n\r\n    public static class Module extends JukitoModule {\r\n\r\n        @Override\r\n        protected void configureTest() {\r\n            bindMany(Calculator.class, SimpleCalculator.class, \r\n              ScientificCalculator.class);\r\n        }\r\n    }\r\n\r\n    @Test\r\n    public void givenTwoNumbers_WhenAdd_ThenSumBoth(@All Calculator calc) {\r\n        double result = calc.add(1, 1);\r\n\r\n        assertEquals(2, result, .1);\r\n    }\r\n}\r\n```","```\r\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0\r\n```","```\r\npublic static class AdditionTest {\r\n    int a;\r\n    int b;\r\n    int expected;\r\n\r\n    // standard constructors/getters\r\n}\r\n```","```\r\nbindManyInstances(AdditionTest.class, \r\n  new AdditionTest(1, 1, 2), \r\n  new AdditionTest(10, 10, 20), \r\n  new AdditionTest(18, 24, 42));\r\n```","```\r\n@Test\r\npublic void givenTwoNumbers_WhenAdd_ThenSumBoth(\r\n  @All Calculator calc, \r\n  @All AdditionTest addTest) {\r\n\r\n    double result = calc.add(addTest.a, addTest.b);\r\n\r\n    assertEquals(addTest.expected, result, .1);\r\n}\r\n```","```\r\nTests run: 8, Failures: 0, Errors: 0, Skipped: 0\r\n```","```\r\nbindManyNamedInstances(Integer.class, \"even\", 2, 4, 6);\r\nbindManyNamedInstances(Integer.class, \"odd\", 1, 3, 5);\r\n```","```\r\n@Test\r\npublic void givenEvenNumbers_whenPrint_thenOutput(@All(\"even\") Integer i) {\r\n    System.out.println(\"even \" + i);\r\n}\r\n\r\n@Test\r\npublic void givenOddNumbers_whenPrint_thenOutput(@All(\"odd\") Integer i) {\r\n    System.out.println(\"odd \" + i);\r\n}\r\n```"]