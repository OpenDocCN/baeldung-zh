["```\r\n<dependency>\r\n    <groupId>org.javalite</groupId>\r\n    <artifactId>activeweb</artifactId>\r\n    <version>1.15</version>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>mysql</groupId>\r\n    <artifactId>mysql-connector-java</artifactId>\r\n    <version>5.1.45</version>\r\n</dependency>\r\n```","```\r\n<plugin>\r\n    <groupId>org.javalite</groupId>\r\n    <artifactId>activejdbc-instrumentation</artifactId>\r\n    <version>1.4.13</version>\r\n    <executions>\r\n        <execution>\r\n            <phase>process-classes</phase>\r\n            <goals>\r\n                <goal>instrument</goal>\r\n            </goals>\r\n        </execution>\r\n    </executions>\r\n</plugin>\r\n```","```\r\npublic class Product {}\r\n```","```\r\nCREATE TABLE PRODUCTS (\r\n    id int(11) DEFAULT NULL auto_increment PRIMARY KEY,\r\n    name VARCHAR(128)\r\n);\r\n```","```\r\npublic class Product extends Model {}\r\n```","```\r\nProduct p = new Product();\r\np.set(\"name\",\"Bread\");\r\np.saveIt();\r\n```","```\r\nList<Product> products = Product.findAll();\r\n```","```\r\n...\r\n[INFO] --- activejdbc-instrumentation:1.4.11:instrument (default) @ javalite ---\r\n**************************** START INSTRUMENTATION ****************************\r\nDirectory: ...\\tutorials\\java-lite\\target\\classes\r\nInstrumented class: .../tutorials/java-lite/target/classes/app/models/Product.class\r\n**************************** END INSTRUMENTATION ****************************\r\n...\r\n```","```\r\n@Test\r\npublic void givenSavedProduct_WhenFindFirst_ThenSavedProductIsReturned() {\r\n\r\n    Base.open(\r\n      \"com.mysql.jdbc.Driver\",\r\n      \"jdbc:mysql://localhost/dbname\",\r\n      \"user\",\r\n      \"password\");\r\n\r\n    Product toSaveProduct = new Product();\r\n    toSaveProduct.set(\"name\", \"Bread\");\r\n    toSaveProduct.saveIt();\r\n\r\n    Product savedProduct = Product.findFirst(\"name = ?\", \"Bread\");\r\n\r\n    assertEquals(\r\n      toSaveProduct.get(\"name\"), \r\n      savedProduct.get(\"name\"));\r\n}\r\n```","```\r\n@RESTful\r\npublic class ProductsController extends AppController {\r\n\r\n    public void index() {\r\n        // ...\r\n    }\r\n\r\n}\r\n```","```\r\nhttp://<host>:<port>/products\r\n```","```\r\n@RESTful\r\npublic class ProductsController extends AppController {\r\n\r\n    public void index() {\r\n        // code to get all products\r\n    }\r\n\r\n    public void create() {\r\n        // code to create a new product\r\n    }\r\n\r\n    public void update() {\r\n        // code to update an existing product\r\n    }\r\n\r\n    public void show() {\r\n        // code to find one product\r\n    }\r\n\r\n    public void destroy() {\r\n        // code to remove an existing product \r\n    }\r\n}\r\n```","```\r\nsrc\r\n |----main\r\n       |----java.app\r\n       |     |----config\r\n       |     |----controllers\r\n       |     |----models\r\n       |----resources\r\n       |----webapp\r\n             |----WEB-INF\r\n             |----views\r\n```","```\r\npublic class DbConfig extends AbstractDBConfig {\r\n    @Override\r\n    public void init(AppContext appContext) {\r\n        this.configFile(\"/database.properties\");\r\n    }\r\n}\r\n```","```\r\ndevelopment.driver=com.mysql.jdbc.Driver\r\ndevelopment.username=user\r\ndevelopment.password=password\r\ndevelopment.url=jdbc:mysql://localhost/dbname\r\n```","```\r\npublic class AppControllerConfig extends AbstractControllerConfig {\r\n\r\n    @Override\r\n    public void init(AppContext appContext) {\r\n        add(new DBConnectionFilter()).to(ProductsController.class);\r\n    }\r\n}\r\n```","```\r\npublic class AppBootstrap extends Bootstrap {\r\n    public void init(AppContext context) {}\r\n}\r\n```","```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<web-app xmlns=...>\r\n\r\n    <filter>\r\n        <filter-name>dispatcher</filter-name>\r\n        <filter-class>org.javalite.activeweb.RequestDispatcher</filter-class>\r\n        <init-param>\r\n            <param-name>exclusions</param-name>\r\n            <param-value>css,images,js,ico</param-value>\r\n        </init-param>\r\n        <init-param>\r\n            <param-name>encoding</param-name>\r\n            <param-value>UTF-8</param-value>\r\n        </init-param>\r\n    </filter>\r\n\r\n    <filter-mapping>\r\n        <filter-name>dispatcher</filter-name>\r\n        <url-pattern>/*</url-pattern>\r\n    </filter-mapping>\r\n\r\n</web-app>\r\n```","```\r\n@RESTful\r\npublic class ProductsController extends AppController {\r\n\r\n    private ObjectMapper mapper = new ObjectMapper();    \r\n\r\n    public void index() {\r\n        List<Product> products = Product.findAll();\r\n        // ...\r\n    }\r\n\r\n    public void create() {\r\n        Map payload = mapper.readValue(getRequestString(), Map.class);\r\n        Product p = new Product();\r\n        p.fromMap(payload);\r\n        p.saveIt();\r\n        // ...\r\n    }\r\n\r\n    public void update() {\r\n        Map payload = mapper.readValue(getRequestString(), Map.class);\r\n        String id = getId();\r\n        Product p = Product.findById(id);\r\n        p.fromMap(payload);\r\n        p.saveIt();\r\n        // ...\r\n    }\r\n\r\n    public void show() {\r\n        String id = getId();\r\n        Product p = Product.findById(id);\r\n        // ...\r\n    }\r\n\r\n    public void destroy() {\r\n        String id = getId();\r\n        Product p = Product.findById(id);\r\n        p.delete();\r\n        // ...\r\n    }\r\n}\r\n```","```\r\n{\r\n    \"id\" : ${product.id},\r\n    \"name\" : \"${product.name}\"\r\n}\r\n```","```\r\n[<@render partial=\"product\" collection=products/>]\r\n```","```\r\n@RESTful\r\npublic class ProductsController extends AppController {\r\n\r\n    public void index() {\r\n        List<Product> products = Product.findAll();\r\n        view(\"products\", products);\r\n        render();\r\n    }\r\n\r\n    public void show() {\r\n        String id = getId();\r\n        Product p = Product.findById(id);\r\n        view(\"product\", p);\r\n        render(\"_product\");\r\n    }\r\n}\r\n```","```\r\n{\r\n    \"message\" : \"${message}\",\r\n    \"code\" : ${code}\r\n}\r\n```","```\r\nview(\"message\", \"There was an error.\", \"code\", 200);\r\nrender(\"message\");\r\n```","```\r\n@RESTful\r\npublic class ProductsController extends AppController {\r\n\r\n    private ObjectMapper mapper = new ObjectMapper();\r\n\r\n    public void index() {\r\n        view(\"products\", Product.findAll());\r\n        render().contentType(\"application/json\");\r\n    }\r\n\r\n    public void create() {\r\n        Map payload = mapper.readValue(getRequestString(), Map.class);\r\n        Product p = new Product();\r\n        p.fromMap(payload);\r\n        p.saveIt();\r\n        view(\"message\", \"Successfully saved product id \" + p.get(\"id\"), \"code\", 200);\r\n        render(\"message\");\r\n    }\r\n\r\n    public void update() {\r\n        Map payload = mapper.readValue(getRequestString(), Map.class);\r\n        String id = getId();\r\n        Product p = Product.findById(id);\r\n        if (p == null) {\r\n            view(\"message\", \"Product id \" + id + \" not found.\", \"code\", 200);\r\n            render(\"message\");\r\n            return;\r\n        }\r\n        p.fromMap(payload);\r\n        p.saveIt();\r\n        view(\"message\", \"Successfully updated product id \" + id, \"code\", 200);\r\n        render(\"message\");\r\n    }\r\n\r\n    public void show() {\r\n        String id = getId();\r\n        Product p = Product.findById(id);\r\n        if (p == null) {\r\n            view(\"message\", \"Product id \" + id + \" not found.\", \"code\", 200);\r\n            render(\"message\");\r\n            return;\r\n        }\r\n        view(\"product\", p);\r\n        render(\"_product\");\r\n    }\r\n\r\n    public void destroy() {\r\n        String id = getId();\r\n        Product p = Product.findById(id);\r\n        if (p == null) {\r\n            view(\"message\", \"Product id \" + id + \" not found.\", \"code\", 200);\r\n            render(\"message\");\r\n            return;\r\n        }\r\n        p.delete();\r\n        view(\"message\", \"Successfully deleted product id \" + id, \"code\", 200);\r\n        render(\"message\");\r\n    }\r\n\r\n    @Override\r\n    protected String getContentType() {\r\n        return \"application/json\";\r\n    }\r\n\r\n    @Override\r\n    protected String getLayout() {\r\n        return null;\r\n    }\r\n}\r\n```","```\r\n<plugin>\r\n    <groupId>org.eclipse.jetty</groupId>\r\n    <artifactId>jetty-maven-plugin</artifactId>\r\n    <version>9.4.8.v20171121</version>\r\n</plugin>\r\n```","```\r\nmvn jetty:run\r\n```","```\r\n$ curl -X POST http://localhost:8080/products \r\n  -H 'content-type: application/json' \r\n  -d '{\"name\":\"Water\"}'\r\n{\r\n    \"message\" : \"Successfully saved product id 1\",\r\n    \"code\" : 200\r\n}\r\n```","```\r\n$ curl -X POST http://localhost:8080/products \r\n  -H 'content-type: application/json' \r\n  -d '{\"name\":\"Bread\"}'\r\n{\r\n    \"message\" : \"Successfully saved product id 2\",\r\n    \"code\" : 200\r\n}\r\n```","```\r\n$ curl -X GET http://localhost:8080/products\r\n[\r\n    {\r\n        \"id\" : 1,\r\n        \"name\" : \"Water\"\r\n    },\r\n    {\r\n        \"id\" : 2,\r\n        \"name\" : \"Bread\"\r\n    }\r\n]\r\n```","```\r\n$ curl -X PUT http://localhost:8080/products/1 \r\n  -H 'content-type: application/json' \r\n  -d '{\"name\":\"Juice\"}'\r\n{\r\n    \"message\" : \"Successfully updated product id 1\",\r\n    \"code\" : 200\r\n}\r\n```","```\r\n$ curl -X GET http://localhost:8080/products/1\r\n{\r\n    \"id\" : 1,\r\n    \"name\" : \"Juice\"\r\n}\r\n```","```\r\n$ curl -X DELETE http://localhost:8080/products/2\r\n{\r\n    \"message\" : \"Successfully deleted product id 2\",\r\n    \"code\" : 200\r\n}\r\n```"]