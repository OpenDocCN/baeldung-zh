["```\r\nValidatorFactory validatorFactory = Validation.byDefaultProvider()\r\n  .configure()\r\n  .messageInterpolator(new ParameterMessageInterpolator())\r\n  .buildValidatorFactory(); \r\n```","```\r\nValidator validator = validatorFactory.usingContext()\r\n  .messageInterpolator(new ParameterMessageInterpolator())\r\n  .getValidator(); \r\n```","```\r\npublic class Person {\r\n\r\n    @Size(min = 10, max = 100, message = \"Name should be between {min} and {max} characters\")\r\n    private String name;\r\n\r\n    @Min(value = 18, message = \"Age should not be less than {value}\")\r\n    private int age;\r\n\r\n    @Email(message = \"Email address should be in a correct format: ${validatedValue}\")\r\n    private String email;\r\n\r\n    // standard getters and setters\r\n} \r\n```","```\r\nValidator validator = validatorFactory.getValidator(); \r\n```","```\r\n@Test\r\npublic void givenNameLengthLessThanMin_whenValidate_thenValidationFails() {\r\n    Person person = new Person();\r\n    person.setName(\"John Doe\");\r\n    person.setAge(18);\r\n\r\n    Set<ConstraintViolation<Person>> violations = validator.validate(person);\r\n\r\n    assertEquals(1, violations.size());\r\n\r\n    ConstraintViolation<Person> violation = violations.iterator().next();\r\n\r\n    assertEquals(\"Name should be between 10 and 100 characters\", violation.getMessage());\r\n}\r\n```","```\r\nName should be between 10 and 100 characters \r\n```","```\r\n@Test\r\npublic void givenAgeIsLessThanMin_whenValidate_thenValidationFails() {\r\n    Person person = new Person();\r\n    person.setName(\"John Stephaner Doe\");\r\n    person.setAge(16);\r\n\r\n    Set<ConstraintViolation<Person>> violations = validator.validate(person);\r\n\r\n    assertEquals(1, violations.size());\r\n\r\n    ConstraintViolation<Person> violation = violations.iterator().next();\r\n\r\n    assertEquals(\"Age should not be less than 18\", violation.getMessage());\r\n}\r\n```","```\r\nAge should not be less than 18 \r\n```","```\r\n@Test\r\npublic void givenEmailIsMalformed_whenValidate_thenValidationFails() {\r\n    Person person = new Person();\r\n    person.setName(\"John Stephaner Doe\");\r\n    person.setAge(18);\r\n    person.setEmail(\"johndoe.dev\");\r\n\r\n    Set<ConstraintViolation<Person>> violations = validator.validate(person);\r\n\r\n    assertEquals(1, violations.size());\r\n\r\n    ConstraintViolation<Person> violation = violations.iterator().next();\r\n\r\n    assertEquals(\"Email address should be in a correct format: ${validatedValue}\", violation.getMessage());\r\n}\r\n```"]