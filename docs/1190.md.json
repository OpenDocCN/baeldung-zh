["```\r\npublic interface CabBookingService {\r\n    Booking bookRide(String pickUpLocation) throws BookingException;\r\n}\r\n```","```\r\npublic class Booking implements Serializable {\r\n    private String bookingCode;\r\n\r\n    @Override public String toString() {\r\n        return format(\"Ride confirmed: code '%s'.\", bookingCode);\r\n    }\r\n\r\n    // standard getters/setters and a constructor\r\n}\r\n```","```\r\npublic class BookingException extends Exception {\r\n    public BookingException(String message) {\r\n        super(message);\r\n    }\r\n}\r\n```","```\r\n<groupId>com.baeldung</groupId>\r\n<artifactId>api</artifactId>\r\n<version>1.0-SNAPSHOT</version>\r\n```","```\r\n<parent>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-parent</artifactId>\r\n    <version>2.6.1</version>\r\n</parent>\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>com.baeldung</groupId>\r\n    <artifactId>api</artifactId>\r\n    <version>1.0-SNAPSHOT</version>\r\n</dependency>\r\n```","```\r\npublic class CabBookingServiceImpl implements CabBookingService {\r\n\r\n    @Override public Booking bookPickUp(String pickUpLocation) throws BookingException {\r\n        if (random() < 0.3) throw new BookingException(\"Cab unavailable\");\r\n        return new Booking(randomUUID().toString());\r\n    }\r\n}\r\n```","```\r\n@Configuration\r\n@ComponentScan\r\n@EnableAutoConfiguration\r\npublic class Server {\r\n\r\n    @Bean(name = \"/booking\") HttpInvokerServiceExporter accountService() {\r\n        HttpInvokerServiceExporter exporter = new HttpInvokerServiceExporter();\r\n        exporter.setService( new CabBookingServiceImpl() );\r\n        exporter.setServiceInterface( CabBookingService.class );\r\n        return exporter;\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(Server.class, args);\r\n    }\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n    <exclusions>\r\n        <exclusion>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-tomcat</artifactId>\r\n        </exclusion>\r\n    </exclusions>\r\n</dependency>\r\n```","```\r\n@Configuration\r\npublic class Client {\r\n\r\n    @Bean\r\n    public HttpInvokerProxyFactoryBean invoker() {\r\n        HttpInvokerProxyFactoryBean invoker = new HttpInvokerProxyFactoryBean();\r\n        invoker.setServiceUrl(\"http://localhost:8080/booking\");\r\n        invoker.setServiceInterface(CabBookingService.class);\r\n        return invoker;\r\n    }\r\n\r\n    public static void main(String[] args) throws BookingException {\r\n        CabBookingService service = SpringApplication\r\n          .run(Client.class, args)\r\n          .getBean(CabBookingService.class);\r\n        out.println(service.bookRide(\"13 Seagate Blvd, Key Largo, FL 33037\"));\r\n    }\r\n}\r\n```"]