["```\r\npublic class Counter {\r\n    int counter; \r\n\r\n    public void increment() {\r\n        counter++;\r\n    }\r\n}\r\n```","```\r\npublic class SafeCounterWithLock {\r\n    private volatile int counter;\r\n\r\n    public synchronized void increment() {\r\n        counter++;\r\n    }\r\n}\r\n```","```\r\npublic class SafeCounterWithoutLock {\r\n    private final AtomicInteger counter = new AtomicInteger(0);\r\n\r\n    public int getValue() {\r\n        return counter.get();\r\n    }\r\n    public void increment() {\r\n        while(true) {\r\n            int existingValue = getValue();\r\n            int newValue = existingValue + 1;\r\n            if(counter.compareAndSet(existingValue, newValue)) {\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}\r\n```"]