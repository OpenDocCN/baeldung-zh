["```\r\nprivate static final String MESSAGE_QUEUE = \"pizza-message-queue\";\r\n\r\n@Bean\r\npublic Queue queue() {\r\n    return new Queue(MESSAGE_QUEUE);\r\n}\r\n```","```\r\npublic class Publisher {\r\n\r\n    private RabbitTemplate rabbitTemplate;\r\n    private String queue;\r\n\r\n    public Publisher(RabbitTemplate rabbitTemplate, String queue) {\r\n        this.rabbitTemplate = rabbitTemplate;\r\n        this.queue = queue;\r\n    }\r\n\r\n    @PostConstruct\r\n    public void postMessages() {\r\n        rabbitTemplate.convertAndSend(queue, \"1 Pepperoni\");\r\n        rabbitTemplate.convertAndSend(queue, \"3 Margarita\");\r\n        rabbitTemplate.convertAndSend(queue, \"1 Ham and Pineapple (yuck)\");\r\n    }\r\n}\r\n```","```\r\npublic class Consumer {\r\n    public void receiveOrder(String message) {\r\n        System.out.printf(\"Order received: %s%n\", message);\r\n    }\r\n}\r\n```","```\r\n@Bean\r\npublic SimpleMessageListenerContainer container(ConnectionFactory connectionFactory, MessageListenerAdapter listenerAdapter) {\r\n    SimpleMessageListenerContainer container = new SimpleMessageListenerContainer();\r\n    container.setConnectionFactory(connectionFactory);\r\n    container.setQueueNames(MESSAGE_QUEUE);\r\n    container.setMessageListener(listenerAdapter);\r\n    return container;\r\n}\r\n\r\n@Bean\r\npublic MessageListenerAdapter listenerAdapter(Consumer consumer) {\r\n    return new MessageListenerAdapter(consumer, \"receiveOrder\");\r\n}\r\n```","```\r\nprivate static final String PUB_SUB_TOPIC = \"notification-topic\";\r\nprivate static final String PUB_SUB_EMAIL_QUEUE = \"email-queue\";\r\nprivate static final String PUB_SUB_TEXT_QUEUE = \"text-queue\";\r\n\r\n@Bean\r\npublic Queue emailQueue() {\r\n    return new Queue(PUB_SUB_EMAIL_QUEUE);\r\n}\r\n\r\n@Bean\r\npublic Queue textQueue() {\r\n    return new Queue(PUB_SUB_TEXT_QUEUE);\r\n}\r\n\r\n@Bean\r\npublic TopicExchange exchange() {\r\n    return new TopicExchange(PUB_SUB_TOPIC);\r\n}\r\n\r\n@Bean\r\npublic Binding emailBinding(Queue emailQueue, TopicExchange exchange) {\r\n    return BindingBuilder.bind(emailQueue).to(exchange).with(\"notification\");\r\n}\r\n\r\n@Bean\r\npublic Binding textBinding(Queue textQueue, TopicExchange exchange) {\r\n    return BindingBuilder.bind(textQueue).to(exchange).with(\"notification\");\r\n}\r\n```","```\r\nrabbitTemplate.convertAndSend(topic, \"notification\", \"New Deal on T-Shirts: 95% off!\");\r\nrabbitTemplate.convertAndSend(topic, \"notification\", \"2 for 1 on all Jeans!\");\r\n```"]