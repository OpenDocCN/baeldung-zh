["```\r\n<dependency>\r\n    <groupId>com.tngtech.archunit</groupId>\r\n    <artifactId>archunit-junit4</artifactId>\r\n    <version>0.14.1</version>\r\n    <scope>test</scope>\r\n</dependency> \r\n```","```\r\n<dependency>\r\n    <groupId>com.tngtech.archunit</groupId>\r\n    <artifactId>archunit-junit5</artifactId>\r\n    <version>0.14.1</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n```","```\r\nJavaClasses jc = new ClassFileImporter()\r\n  .importPackages(\"com.baeldung.archunit.smurfs\");\r\n```","```\r\nArchRule r1 = classes()\r\n  .that().resideInAPackage(\"..presentation..\")\r\n  .should().onlyDependOnClassesThat()\r\n  .resideInAPackage(\"..service..\");\r\nr1.check(jc);\r\n```","```\r\njava.lang.AssertionError: Architecture Violation [Priority: MEDIUM] - \r\n  Rule 'classes that reside in a package '..presentation..' should only \r\n  depend on classes that reside in a package '..service..'' was violated (6 times):\r\n... error list omitted \r\n```","```\r\nArchRule r1 = classes()\r\n  .that().resideInAPackage(\"..presentation..\")\r\n  .should().onlyDependOnClassesThat()\r\n  .resideInAPackage(\"..service..\", \"java..\", \"javax..\", \"org.springframework..\"); \r\n```","```\r\nArchRule r1 = noClasses()\r\n  .that().resideInAPackage(\"..presentation..\")\r\n  .should().dependOnClassesThat()\r\n  .resideInAPackage(\"..persistence..\"); \r\n```","```\r\nLayeredArchitecture arch = layeredArchitecture()\r\n   // Define layers\r\n  .layer(\"Presentation\").definedBy(\"..presentation..\")\r\n  .layer(\"Service\").definedBy(\"..service..\")\r\n  .layer(\"Persistence\").definedBy(\"..persistence..\")\r\n  // Add constraints\r\n  .whereLayer(\"Presentation\").mayNotBeAccessedByAnyLayer()\r\n  .whereLayer(\"Service\").mayOnlyBeAccessedByLayers(\"Presentation\")\r\n  .whereLayer(\"Persistence\").mayOnlyBeAccessedByLayers(\"Service\");\r\narch.check(jc);\r\n```"]