["```\r\npublic class User {\r\n\r\n    private String id;\r\n    private String name;\r\n    private String password;\r\n    private List<Role> roles;\r\n\r\n    public User(String name, String password, List<Role> roles) {\r\n        this.name = Objects.requireNonNull(name);\r\n        this.password = this.encrypt(password);\r\n        this.roles = Objects.requireNonNull(roles);\r\n    }\r\n\r\n    // Getters and Setters\r\n\r\n   String encrypt(String password) {\r\n       // encryption logic\r\n   }\r\n}\r\n```","```\r\npublic class Role {\r\n\r\n    private String id;\r\n    private String name;\r\n\r\n    // Constructors, getters and setters\r\n}\r\n```","```\r\npublic class UserDTO {\r\n    private String name;\r\n    private List<String> roles;\r\n\r\n    // standard getters and setters\r\n}\r\n```","```\r\npublic class UserCreationDTO {\r\n\r\n    private String name;\r\n    private String password;\r\n    private List<String> roles;\r\n\r\n    // standard getters and setters\r\n}\r\n```","```\r\n@RestController\r\n@RequestMapping(\"/users\")\r\nclass UserController {\r\n\r\n    private UserService userService;\r\n    private RoleService roleService;\r\n    private Mapper mapper;\r\n\r\n    // Constructor\r\n\r\n    @GetMapping\r\n    @ResponseBody\r\n    public List<UserDTO> getUsers() {\r\n        return userService.getAll()\r\n          .stream()\r\n          .map(mapper::toDto)\r\n          .collect(toList());\r\n    }\r\n\r\n    @PostMapping\r\n    @ResponseBody\r\n    public UserIdDTO create(@RequestBody UserCreationDTO userDTO) {\r\n        User user = mapper.toUser(userDTO);\r\n\r\n        userDTO.getRoles()\r\n          .stream()\r\n          .map(role -> roleService.getOrCreate(role))\r\n          .forEach(user::addRole);\r\n\r\n        userService.save(user);\r\n\r\n        return new UserIdDTO(user.getId());\r\n    }\r\n\r\n} \r\n```","```\r\n@Component\r\nclass Mapper {\r\n    public UserDTO toDto(User user) {\r\n        String name = user.getName();\r\n        List<String> roles = user\r\n          .getRoles()\r\n          .stream()\r\n          .map(Role::getName)\r\n          .collect(toList());\r\n\r\n        return new UserDTO(name, roles);\r\n    }\r\n\r\n    public User toUser(UserCreationDTO userDTO) {\r\n        return new User(userDTO.getName(), userDTO.getPassword(), new ArrayList<>());\r\n    }\r\n}\r\n```"]