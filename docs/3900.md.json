["```\r\n<dependency>\r\n    <groupId>org.apache.bval</groupId>\r\n    <artifactId>bval-jsr</artifactId>\r\n    <version>1.1.2</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>javax.validation</groupId>\r\n    <artifactId>validation-api</artifactId>\r\n    <version>1.1.0.Final</version>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>org.apache.bval</groupId>\r\n    <artifactId>bval-extras</artifactId>\r\n    <version>1.1.2</version>\r\n</dependency>\r\n```","```\r\npublic class User {\r\n\r\n    @NotNull\r\n    private String email;\r\n\r\n    private String password;\r\n\r\n    @Size(min=1, max=20)\r\n    private String name;\r\n\r\n    @Min(18)\r\n    private int age;\r\n\r\n    // standard constructor, getters, setters\r\n}\r\n```","```\r\nValidatorFactory validatorFactory \r\n  = Validation.byProvider(ApacheValidationProvider.class)\r\n  .configure().buildValidatorFactory();\r\n```","```\r\nValidator validator = validatorFactory.getValidator();\r\n```","```\r\n@Test\r\npublic void givenUser_whenValidate_thenValidationViolations() {\r\n    User user\r\n      = new User(\"[[email protected]](/web/20220524020626/https://www.baeldung.com/cdn-cgi/l/email-protection)\", \"pass\", \"nameTooLong_______________\", 15);\r\n\r\n    Set<ConstraintViolation<User>> violations = validator.validate(user);\r\n    assertTrue(\"no violations\", violations.size() > 0);\r\n}\r\n```","```\r\n@Test\r\npublic void givenInvalidAge_whenValidateProperty_thenConstraintViolation() {\r\n    User user = new User(\"[[email protected]](/web/20220524020626/https://www.baeldung.com/cdn-cgi/l/email-protection)\", \"pass\", \"Ana\", 12);\r\n\r\n    Set<ConstraintViolation<User>> propertyViolations\r\n      = validator.validateProperty(user, \"age\");\r\n\r\n    assertEquals(\"size is not 1\", 1, propertyViolations.size());\r\n}\r\n```","```\r\n@Test\r\npublic void givenValidAge_whenValidateValue_thenNoConstraintViolation() {\r\n    User user = new User(\"[[email protected]](/web/20220524020626/https://www.baeldung.com/cdn-cgi/l/email-protection)\", \"pass\", \"Ana\", 18);\r\n\r\n    Set<ConstraintViolation<User>> valueViolations\r\n      = validator.validateValue(User.class, \"age\", 20);\r\n\r\n    assertEquals(\"size is not 0\", 0, valueViolations.size());\r\n}\r\n```","```\r\nif (validatorFactory != null) {\r\n    validatorFactory.close();\r\n}\r\n```","```\r\npublic class User {\r\n\r\n    @NotNull\r\n    @Email\r\n    private String email;\r\n\r\n    @NotEmpty\r\n    private String password;\r\n\r\n    @Size(min=1, max=20)\r\n    private String name;\r\n\r\n    @Min(18)\r\n    private int age;\r\n\r\n    @Visa\r\n    private String cardNumber = \"\";\r\n\r\n    @IBAN\r\n    private String iban = \"\";\r\n\r\n    @InetAddress\r\n    private String website = \"\";\r\n\r\n    @Directory\r\n    private File mainDirectory = new File(\".\");\r\n\r\n    // standard constructor, getters, setters\r\n}\r\n```","```\r\n@Test\r\npublic void whenValidateNonJSR_thenCorrect() {\r\n    User user = new User(\"[[email protected]](/web/20220524020626/https://www.baeldung.com/cdn-cgi/l/email-protection)\", \"pass\", \"Ana\", 20);\r\n    user.setCardNumber(\"1234\");\r\n    user.setIban(\"1234\");\r\n    user.setWebsite(\"10.0.2.50\");\r\n    user.setMainDirectory(new File(\".\"));\r\n\r\n    Set<ConstraintViolation<User>> violations \r\n      = validator.validateProperty(user,\"iban\");\r\n\r\n    assertEquals(\"size is not 1\", 1, violations.size());\r\n\r\n    violations = validator.validateProperty(user,\"website\");\r\n\r\n    assertEquals(\"size is not 0\", 0, violations.size());\r\n\r\n    violations = validator.validateProperty(user, \"mainDirectory\");\r\n\r\n    assertEquals(\"size is not 0\", 0, violations.size());\r\n}\r\n```","```\r\n@Constraint(validatedBy = { PasswordValidator.class })\r\n@Target({METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER })\r\n@Retention(RetentionPolicy.RUNTIME)\r\npublic @interface Password {\r\n    String message() default \"Invalid password\";\r\n\r\n    Class<?>[] groups() default {};\r\n\r\n    Class<? extends Payload>[] payload() default {};\r\n\r\n    int length() default 6;\r\n\r\n    int nonAlpha() default 1;\r\n}\r\n```","```\r\npublic class PasswordValidator \r\n  implements ConstraintValidator<Password, String> {\r\n\r\n    private int length;\r\n    private int nonAlpha;\r\n\r\n    @Override\r\n    public void initialize(Password password) {\r\n        this.length = password.length();\r\n        this.nonAlpha = password.nonAlpha();\r\n    }\r\n\r\n    @Override\r\n    public boolean isValid(String value, ConstraintValidatorContext ctx) {\r\n        if (value.length() < length) {\r\n            return false;\r\n        }\r\n        int nonAlphaNr = 0;\r\n        for (int i = 0; i < value.length(); i++) {\r\n            if (!Character.isLetterOrDigit(value.charAt(i))) {\r\n                nonAlphaNr++;\r\n            }\r\n        }\r\n        if (nonAlphaNr < nonAlpha) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n```","```\r\n@Password(length = 8)\r\nprivate String password;\r\n```","```\r\n@Test\r\npublic void givenValidPassword_whenValidatePassword_thenNoConstraintViolation() {\r\n    User user = new User(\"[[email protected]](/web/20220524020626/https://www.baeldung.com/cdn-cgi/l/email-protection)\", \"password\", \"Ana\", 20);\r\n    Set<ConstraintViolation<User>> violations \r\n      = validator.validateProperty(user, \"password\");\r\n\r\n    assertEquals(\r\n      \"message incorrect\",\r\n      \"Invalid password\", \r\n      violations.iterator().next().getMessage());\r\n}\r\n```","```\r\n@Test\r\npublic void givenValidPassword_whenValidatePassword_thenNoConstraintViolation() {\r\n    User user = new User(\"[[email protected]](/web/20220524020626/https://www.baeldung.com/cdn-cgi/l/email-protection)\", \"password#\", \"Ana\", 20);\r\n\r\n    Set<ConstraintViolation<User>> violations \r\n      = validator.validateProperty(user, \"password\");\r\n    assertEquals(\"size is not 0\", 0, violations.size());\r\n}\r\n```"]