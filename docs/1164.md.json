["```\r\n<dependency>\r\n    <groupId>ch.qos.logback</groupId>\r\n    <artifactId>logback-core</artifactId>\r\n    <version>1.2.6</version>\r\n</dependency>\r\n\r\n<dependency>\r\n    <groupId>org.slf4j</groupId>\r\n    <artifactId>slf4j-api</artifactId>\r\n    <version>1.7.30</version>\r\n    <scope>test</scope>\r\n</dependency> \r\n```","```\r\n<dependency>\r\n    <groupId>ch.qos.logback</groupId>\r\n    <artifactId>logback-classic</artifactId>\r\n    <version>1.2.6</version>\r\n</dependency> \r\n```","```\r\n<configuration>\r\n  <appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\">\r\n    <encoder>\r\n      <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>\r\n    </encoder>\r\n  </appender>\r\n\r\n  <root level=\"debug\">\r\n    <appender-ref ref=\"STDOUT\" />\r\n  </root>\r\n</configuration>\r\n```","```\r\npublic class Example {\r\n\r\n    private static final Logger logger \r\n      = LoggerFactory.getLogger(Example.class);\r\n\r\n    public static void main(String[] args) {\r\n        logger.info(\"Example log from {}\", Example.class.getSimpleName());\r\n    }\r\n}\r\n```","```\r\n20:34:22.136 [main] INFO Example - Example log from Example\r\n```","```\r\nprivate static final Logger logger \r\n  = LoggerFactory.getLogger(Example.class); \r\n```","```\r\nlogger.info(\"Example log from {}\", Example.class.getSimpleName()); \r\n```","```\r\nch.qos.logback.classic.Logger parentLogger = \r\n  (ch.qos.logback.classic.Logger) LoggerFactory.getLogger(\"com.baeldung.logback\");\r\n\r\nparentLogger.setLevel(Level.INFO);\r\n\r\nLogger childlogger = \r\n  (ch.qos.logback.classic.Logger)LoggerFactory.getLogger(\"com.baeldung.logback.tests\");\r\n\r\nparentLogger.warn(\"This message is logged because WARN > INFO.\");\r\nparentLogger.debug(\"This message is not logged because DEBUG < INFO.\");\r\nchildlogger.info(\"INFO == INFO\");\r\nchildlogger.debug(\"DEBUG < INFO\"); \r\n```","```\r\n20:31:29.586 [main] WARN com.baeldung.logback - This message is logged because WARN > INFO.\r\n20:31:29.594 [main] INFO com.baeldung.logback.tests - INFO == INFO\r\n```","```\r\nch.qos.logback.classic.Logger logger = \r\n  (ch.qos.logback.classic.Logger)LoggerFactory.getLogger(\"com.baeldung.logback\");\r\nlogger.debug(\"Hi there!\");\r\n\r\nLogger rootLogger = \r\n  (ch.qos.logback.classic.Logger)LoggerFactory.getLogger(org.slf4j.Logger.ROOT_LOGGER_NAME);\r\nlogger.debug(\"This message is logged because DEBUG == DEBUG.\");\r\n\r\nrootLogger.setLevel(Level.ERROR);\r\n\r\nlogger.warn(\"This message is not logged because WARN < ERROR.\");\r\nlogger.error(\"This is logged.\"); \r\n```","```\r\n20:44:44.241 [main] DEBUG com.baeldung.logback - Hi there!\r\n20:44:44.243 [main] DEBUG com.baeldung.logback - This message is logged because DEBUG == DEBUG.\r\n20:44:44.243 [main] ERROR com.baeldung.logback - This is logged. \r\n```","```\r\nlog.debug(\"Current count is \" + count); \r\n```","```\r\nlog.debug(\"Current count is {}\", count); \r\n```","```\r\nString message = \"This is a String\";\r\nInteger zero = 0;\r\n\r\ntry {\r\n    logger.debug(\"Logging message: {}\", message);\r\n    logger.debug(\"Going to divide {} by {}\", 42, zero);\r\n    int result = 42 / zero;\r\n} catch (Exception e) {\r\n    logger.error(\"Error dividing {} by {} \", 42, zero, e);\r\n} \r\n```","```\r\n21:32:10.311 [main] DEBUG com.baeldung.logback.LogbackTests - Logging message: This is a String\r\n21:32:10.316 [main] DEBUG com.baeldung.logback.LogbackTests - Going to divide 42 by 0\r\n21:32:10.316 [main] ERROR com.baeldung.logback.LogbackTests - Error dividing 42 by 0\r\njava.lang.ArithmeticException: / by zero\r\n  at com.baeldung.logback.LogbackTests.givenParameters_ValuesLogged(LogbackTests.java:64)\r\n... \r\n```","```\r\n<appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\">\r\n    <encoder>\r\n        <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>\r\n    </encoder>\r\n</appender>\r\n```","```\r\n<root level=\"debug\">\r\n    <appender-ref ref=\"STDOUT\" />\r\n</root>\r\n```","```\r\n<configuration debug=\"true\">\r\n  ...\r\n</configuration>\r\n```","```\r\n23:54:23,040 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback-test.xml] \r\n  at [file:/Users/egoebelbecker/ideaProjects/logback-guide/out/test/resources/logback-test.xml]\r\n23:54:23,230 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender \r\n  of type [ch.qos.logback.core.ConsoleAppender]\r\n23:54:23,236 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [STDOUT]\r\n23:54:23,247 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type \r\n  [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property\r\n23:54:23,308 |-INFO in ch.qos.logback.classic.joran.action.RootLoggerAction - Setting level of ROOT logger to DEBUG\r\n23:54:23,309 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[ROOT]\r\n23:54:23,310 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - End of configuration.\r\n23:54:23,313 |-INFO in [[emailÂ protected]](/web/20220929130816/https://www.baeldung.com/cdn-cgi/l/email-protection) - Registering current configuration \r\n  as safe fallback point\r\n```","```\r\n<configuration>\r\n    <statusListener class=\"ch.qos.logback.core.status.OnConsoleStatusListener\" />  \r\n    ...\r\n</configuration>\r\n```","```\r\n<configuration scan=\"true\">\r\n  ...\r\n</configuration>\r\n```","```\r\n<configuration scan=\"true\" scanPeriod=\"15 seconds\">\r\n  ...\r\n</configuration>\r\n```","```\r\n<configuration>\r\n    <appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\">\r\n        <encoder>\r\n            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>\r\n        </encoder>\r\n    </appender>\r\n    <logger name=\"com.baeldung.logback\" level=\"INFO\" /> \r\n    <logger name=\"com.baeldung.logback.tests\" level=\"WARN\" /> \r\n    <root level=\"debug\">\r\n        <appender-ref ref=\"STDOUT\" />\r\n    </root>\r\n</configuration>\r\n```","```\r\nLogger foobar = \r\n  (ch.qos.logback.classic.Logger) LoggerFactory.getLogger(\"com.baeldung.foobar\");\r\nLogger logger = \r\n  (ch.qos.logback.classic.Logger) LoggerFactory.getLogger(\"com.baeldung.logback\");\r\nLogger testslogger = \r\n  (ch.qos.logback.classic.Logger) LoggerFactory.getLogger(\"com.baeldung.logback.tests\");\r\n\r\nfoobar.debug(\"This is logged from foobar\");\r\nlogger.debug(\"This is not logged from logger\");\r\nlogger.info(\"This is logged from logger\");\r\ntestslogger.info(\"This is not logged from tests\");\r\ntestslogger.warn(\"This is logged from tests\"); \r\n```","```\r\n00:29:51.787 [main] DEBUG com.baeldung.foobar - This is logged from foobar\r\n00:29:51.789 [main] INFO com.baeldung.logback - This is logged from logger\r\n00:29:51.789 [main] WARN com.baeldung.logback.tests - This is logged from tests \r\n```","```\r\n<property name=\"LOG_DIR\" value=\"/var/log/application\" />\r\n<appender name=\"FILE\" class=\"ch.qos.logback.core.FileAppender\">\r\n    <file>${LOG_DIR}/tests.log</file>\r\n    <append>true</append>\r\n    <encoder>\r\n        <pattern>%-4relative [%thread] %-5level %logger{35} - %msg%n</pattern>\r\n    </encoder>\r\n</appender>\r\n```","```\r\n$ java -DLOG_DIR=/var/log/application com.baeldung.logback.LogbackTests\r\n```","```\r\n<configuration debug=\"true\">\r\n    <appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\">\r\n        <!-- encoders are assigned the type\r\n             ch.qos.logback.classic.encoder.PatternLayoutEncoder by default -->\r\n        <encoder>\r\n            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>\r\n        </encoder>\r\n    </appender>\r\n\r\n    <appender name=\"FILE\" class=\"ch.qos.logback.core.FileAppender\">\r\n        <file>tests.log</file>\r\n        <append>true</append>\r\n        <encoder>\r\n            <pattern>%-4relative [%thread] %-5level %logger{35} - %msg%n</pattern>\r\n        </encoder>\r\n    </appender>\r\n\r\n    <logger name=\"com.baeldung.logback\" level=\"INFO\" /> \r\n    <logger name=\"com.baeldung.logback.tests\" level=\"WARN\"> \r\n        <appender-ref ref=\"FILE\" /> \r\n    </logger> \r\n\r\n    <root level=\"debug\">\r\n        <appender-ref ref=\"STDOUT\" />\r\n    </root>\r\n</configuration>\r\n```","```\r\n<logger name=\"com.baeldung.logback.tests\" level=\"WARN\" additivity=\"false\" > \r\n    <appender-ref ref=\"FILE\" /> \r\n</logger> \r\n\r\n<root level=\"debug\">\r\n    <appender-ref ref=\"STDOUT\" />\r\n</root> \r\n```","```\r\n<property name=\"LOG_FILE\" value=\"LogFile\" />\r\n<appender name=\"FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\r\n    <file>${LOG_FILE}.log</file>\r\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\r\n        <!-- daily rollover -->\r\n        <fileNamePattern>${LOG_FILE}.%d{yyyy-MM-dd}.gz</fileNamePattern>\r\n\r\n        <!-- keep 30 days' worth of history capped at 3GB total size -->\r\n        <maxHistory>30</maxHistory>\r\n        <totalSizeCap>3GB</totalSizeCap>\r\n    </rollingPolicy>\r\n    <encoder>\r\n        <pattern>%-4relative [%thread] %-5level %logger{35} - %msg%n</pattern>\r\n    </encoder>\r\n</appender> \r\n```","```\r\n<property name=\"LOG_FILE\" value=\"LogFile\" />\r\n<property name=\"LOG_DIR\" value=\"/var/logs/application\" />\r\n<appender name=\"FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\r\n    <file>${LOG_DIR}/${LOG_FILE}.log</file> \r\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\r\n        <fileNamePattern>${LOG_DIR}/%d{yyyy/MM}/${LOG_FILE}.gz</fileNamePattern>\r\n        <totalSizeCap>3GB</totalSizeCap>\r\n    </rollingPolicy>\r\n```","```\r\n<encoder>\r\n    <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>\r\n</encoder> \r\n```","```\r\n21:32:10.311 [main] DEBUG com.baeldung.logback.LogbackTests - Logging message: This is a String\r\n```"]