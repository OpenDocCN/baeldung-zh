["```\r\nimport java.net.*;\r\n```","```\r\nCookieManager cm = new CookieManager();\r\nCookieHandler.setDefault(cm);\r\n```","```\r\nCookieManager cm=new CookieManager();\r\ncm.setCookiePolicy(CookiePolicy.ACCEPT_ALL);\r\n```","```\r\npublic class ProxyAcceptCookiePolicy implements CookiePolicy {\r\n    private String acceptedProxy;\r\n\r\n    public boolean shouldAccept(URI uri, HttpCookie cookie) {\r\n        String host = InetAddress.getByName(uri.getHost())\r\n          .getCanonicalHostName();\r\n        if (HttpCookie.domainMatches(acceptedProxy, host)) {\r\n            return true;\r\n        }\r\n\r\n        return CookiePolicy.ACCEPT_ORIGINAL_SERVER\r\n          .shouldAccept(uri, cookie);\r\n    }\r\n\r\n    // standard constructors\r\n}\r\n```","```\r\nCookieManager cm = new CookieManager();\r\ncm.setCookiePolicy(new ProxyAcceptCookiePolicy(\"baeldung.com\"));\r\nCookieHandler.setDefault(cm);\r\n```","```\r\npublic class PersistentCookieStore implements CookieStore, Runnable {\r\n    private CookieStore store;\r\n\r\n    public PersistentCookieStore() {\r\n        store = new CookieManager().getCookieStore();\r\n        // deserialize cookies into store\r\n        Runtime.getRuntime().addShutdownHook(new Thread(this));\r\n    }\r\n\r\n    @Override\r\n    public void run() {\r\n        // serialize cookies to persistent storage\r\n    }\r\n\r\n    @Override\r\n    public void add(URI uri, HttpCookie cookie) {\r\n        store.add(uri, cookie);\r\n\r\n    }\r\n\r\n    // delegate all implementations to store object like above\r\n}\r\n```"]