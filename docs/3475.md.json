["```\r\n<dependency>\r\n    <groupId>javax.servlet</groupId>\r\n    <artifactId>javax.servlet-api</artifactId>\r\n    <version>4.0.1</version>\r\n</dependency>\r\n```","```\r\n<web-app \r\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n  xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee \r\n  http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd\"\r\n  version=\"2.5\">\r\n    <listener>\r\n        <listener-class>com.baeldung.servlets3.web.listeners.RequestListener</listener-class>\r\n    </listener>\r\n    <servlet>\r\n        <servlet-name>uppercaseServlet</servlet-name>\r\n        <servlet-class>com.baeldung.servlets3.web.servlets.UppercaseServlet</servlet-class>\r\n    </servlet>\r\n    <servlet-mapping>\r\n        <servlet-name>uppercaseServlet</servlet-name>\r\n        <url-pattern>/uppercase</url-pattern>\r\n    </servlet-mapping>\r\n    <filter>\r\n        <filter-name>emptyParamFilter</filter-name>\r\n        <filter-class>com.baeldung.servlets3.web.filters.EmptyParamFilter</filter-class>\r\n    </filter>\r\n    <filter-mapping>\r\n        <filter-name>emptyParamFilter</filter-name>\r\n        <url-pattern>/uppercase</url-pattern>\r\n    </filter-mapping>\r\n</web-app>\r\n```","```\r\n@WebServlet(urlPatterns = \"/uppercase\", name = \"uppercaseServlet\")\r\npublic class UppercaseServlet extends HttpServlet {\r\n    public void doGet(HttpServletRequest request, HttpServletResponse response) \r\n      throws IOException {\r\n        String inputString = request.getParameter(\"input\").toUpperCase();\r\n\r\n        PrintWriter out = response.getWriter();\r\n        out.println(inputString);\r\n    }\r\n}\r\n```","```\r\n@WebFilter(urlPatterns = \"/uppercase\")\r\npublic class EmptyParamFilter implements Filter {\r\n    @Override\r\n    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse,\r\n      FilterChain filterChain) throws IOException, ServletException {\r\n        String inputString = servletRequest.getParameter(\"input\");\r\n\r\n        if (inputString != null && inputString.matches(\"[A-Za-z0-9]+\")) {\r\n            filterChain.doFilter(servletRequest, servletResponse);\r\n        } else {\r\n            servletResponse.getWriter().println(\"Missing input parameter\");\r\n        }\r\n    }\r\n\r\n    // implementations for other methods\r\n}\r\n```","```\r\n@WebListener\r\npublic class RequestListener implements ServletRequestListener {\r\n    @Override\r\n    public void requestDestroyed(ServletRequestEvent event) {\r\n        HttpServletRequest request = (HttpServletRequest)event.getServletRequest();\r\n        if (!request.getServletPath().equals(\"/counter\")) {\r\n            ServletContext context = event.getServletContext();\r\n            context.setAttribute(\"counter\", (int) context.getAttribute(\"counter\") + 1);\r\n        }\r\n    }\r\n\r\n    // implementations for other methods\r\n}\r\n```","```\r\ncurl http://localhost:8080/spring-mvc-java/uppercase?input=texttouppercase\r\n\r\nTEXTTOUPPERCASE\r\n```","```\r\ncurl http://localhost:8080/spring-mvc-java/uppercase\r\n\r\nMissing input parameter\r\n```","```\r\ncurl http://localhost:8080/spring-mvc-java/counter\r\n\r\nRequest counter: 2\r\n```"]