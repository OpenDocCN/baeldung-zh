["```\r\n@Component\r\npublic class BeanA {\r\n\r\n    @Autowired\r\n    private BeanB dependency;\r\n    ...\r\n}\r\n```","```\r\nError creating bean with name 'beanA': Injection of autowired dependencies failed; \r\nnested exception is org.springframework.beans.factory.BeanCreationException: \r\nCould not autowire field: private com.baeldung.web.BeanB cpm.baeldung.web.BeanA.dependency; \r\nnested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: \r\nNo qualifying bean of type [com.baeldung.web.BeanB] found for dependency: \r\nexpected at least 1 bean which qualifies as autowire candidate for this dependency. \r\nDependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\r\n```","```\r\n@Component\r\npublic class BeanB1 implements IBeanB { ... }\r\n@Component\r\npublic class BeanB2 implements IBeanB { ... }\r\n\r\n@Component\r\npublic class BeanA {\r\n\r\n    @Autowired\r\n    private IBeanB dependency;\r\n    ...\r\n}\r\n```","```\r\nError creating bean with name 'beanA': Injection of autowired dependencies failed; \r\nnested exception is org.springframework.beans.factory.BeanCreationException: \r\nCould not autowire field: private com.baeldung.web.IBeanB com.baeldung.web.BeanA.b; \r\nnested exception is org.springframework.beans.factory.NoUniqueBeanDefinitionException: \r\nNo qualifying bean of type [com.baeldung.web.IBeanB] is defined: \r\nexpected single matching bean but found 2: beanB1,beanB2\r\n```","```\r\n@Component\r\npublic class BeanA {\r\n\r\n    public BeanA() {\r\n        super();\r\n        throw new NullPointerException();\r\n    }\r\n    ...\r\n}\r\n```","```\r\nError creating bean with name 'beanA' defined in file [...BeanA.class]: \r\nInstantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: \r\nCould not instantiate bean class [com.baeldung.web.BeanA]: \r\nConstructor threw exception; \r\nnested exception is java.lang.NullPointerException\r\n```","```\r\n@Component\r\npublic abstract class BeanA implements IBeanA { ... }\r\n```","```\r\n<bean id=\"beanA\" class=\"com.baeldung.web.BeanA\" />\r\n```","```\r\norg.springframework.beans.factory.BeanCreationException: \r\nError creating bean with name 'beanA' defined in class path resource [beansInXml.xml]: \r\nInstantiation of bean failed; \r\nnested exception is org.springframework.beans.BeanInstantiationException: \r\nCould not instantiate bean class [com.baeldung.web.BeanA]: \r\nIs it an abstract class?; \r\nnested exception is java.lang.InstantiationException\r\n```","```\r\n@Component\r\npublic class BeanA implements IBeanA {\r\n\r\n    public BeanA(final String name) {\r\n        super();\r\n        System.out.println(name);\r\n    }\r\n}\r\n```","```\r\nError creating bean with name 'beanA' defined in file [...BeanA.class]: Instantiation of bean failed; \r\nnested exception is org.springframework.beans.BeanInstantiationException: \r\nCould not instantiate bean class [com.baeldung.web.BeanA]: \r\nNo default constructor found; \r\nnested exception is java.lang.NoSuchMethodException: com.baeldung.web.BeanA.<init>()\r\n```","```\r\n@Component\r\npublic class BeanA {\r\n    private IBeanB dependency;\r\n    ...\r\n}\r\n@Component\r\npublic class BeanB implements IBeanB { ... }\r\n```","```\r\n<bean id=\"beanA\" class=\"com.baeldung.web.BeanA\">\r\n    <property name=\"beanB\" ref=\"beanB\" />\r\n</bean>\r\n```","```\r\n@Component\r\npublic class BeanA {\r\n    private IBeanB dependency;\r\n\r\n    public void setDependency(final IBeanB dependency) {\r\n        this.dependency = dependency;\r\n    }\r\n}\r\n```","```\r\n<bean id=\"beanZ\" class=\"com.baeldung.web.BeanZ\" />\r\n```","```\r\nnested exception is org.springframework.beans.factory.BeanCreationException: \r\n...\r\nnested exception is org.springframework.beans.factory.CannotLoadBeanClassException: \r\nCannot find class [com.baeldung.web.BeanZ] for bean with name 'beanZ' \r\ndefined in class path resource [beansInXml.xml]; \r\nnested exception is java.lang.ClassNotFoundException: com.baeldung.web.BeanZ\r\n```","```\r\n@Component\r\npublic class BeanA implements IBeanA {\r\n    private IBeanB beanB;\r\n\r\n    @Autowired\r\n    public BeanA(final IBeanB beanB) {\r\n        super();\r\n        this.beanB = beanB;\r\n    }\r\n}\r\n@Component\r\npublic class BeanB implements IBeanB {\r\n    final IBeanA beanA;\r\n\r\n    @Autowired\r\n    public BeanB(final IBeanA beanA) {\r\n        super();\r\n        this.beanA = beanA;\r\n    }\r\n}\r\n```","```\r\norg.springframework.beans.factory.BeanCurrentlyInCreationException: \r\nError creating bean with name 'beanA': \r\nRequested bean is currently in creation: Is there an unresolvable circular reference?\r\n```","```\r\norg.springframework.beans.factory.UnsatisfiedDependencyException: \r\nError creating bean with name 'beanA' defined in file [...BeanA.class]: \r\nUnsatisfied dependency expressed through constructor argument with index 0 \r\nof type [com.baeldung.web.IBeanB]: : \r\nError creating bean with name 'beanB' defined in file [...BeanB.class]: \r\nUnsatisfied dependency expressed through constructor argument with index 0 \r\nof type [com.baeldung.web.IBeanA]: : \r\nError creating bean with name 'beanA': Requested bean is currently in creation: \r\nIs there an unresolvable circular reference?; \r\nnested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: \r\nError creating bean with name 'beanA': \r\nRequested bean is currently in creation: \r\nIs there an unresolvable circular reference?; \r\nnested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: \r\nError creating bean with name 'beanB' defined in file [...BeanB.class]: \r\nUnsatisfied dependency expressed through constructor argument with index 0 \r\nof type [com.baeldung.web.IBeanA]: : \r\nError creating bean with name 'beanA': \r\nRequested bean is currently in creation: \r\nIs there an unresolvable circular reference?; \r\nnested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: \r\nError creating bean with name 'beanA': \r\nRequested bean is currently in creation: Is there an unresolvable circular reference?\r\n```","```\r\npublic abstract class BeanA implements IBeanA {\r\n   ...\r\n}\r\n```","```\r\n<bean id=\"beanA\" abstract=\"true\" class=\"com.baeldung.web.BeanA\" />\r\n```","```\r\n@Configuration\r\npublic class Config {\r\n    @Autowired\r\n    BeanFactory beanFactory;\r\n\r\n    @Bean\r\n    public BeanB beanB() {\r\n        beanFactory.getBean(\"beanA\");\r\n        return new BeanB();\r\n    }\r\n}\r\n```","```\r\norg.springframework.beans.factory.BeanIsAbstractException: \r\nError creating bean with name 'beanA': Bean definition is abstract\r\n```","```\r\norg.springframework.beans.factory.BeanCreationException: \r\nError creating bean with name 'beanB' defined in class path resource \r\n[org/baeldung/spring/config/WebConfig.class]: Instantiation of bean failed; \r\nnested exception is org.springframework.beans.factory.BeanDefinitionStoreException: \r\nFactory method \r\n[public com.baeldung.web.BeanB com.baeldung.spring.config.WebConfig.beanB()] threw exception; \r\nnested exception is org.springframework.beans.factory.BeanIsAbstractException: \r\nError creating bean with name 'beanA': Bean definition is abstract\r\n```"]