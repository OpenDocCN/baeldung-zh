["```\r\n@Entity\r\npublic class User {\r\n\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.AUTO)\r\n    private Long id;\r\n\r\n    @Column(nullable = false, unique = true)\r\n    private String username;\r\n\r\n    private String password;\r\n\r\n    // standard getters and setters\r\n}\r\n```","```\r\npublic interface UserRepository extends JpaRepository<User, Long> {\r\n\r\n    User findByUsername(String username);\r\n}\r\n```","```\r\n@Service\r\npublic class MyUserDetailsService implements UserDetailsService {\r\n\r\n    @Autowired\r\n    private UserRepository userRepository;\r\n\r\n    @Override\r\n    public UserDetails loadUserByUsername(String username) {\r\n        User user = userRepository.findByUsername(username);\r\n        if (user == null) {\r\n            throw new UsernameNotFoundException(username);\r\n        }\r\n        return new MyUserPrincipal(user);\r\n    }\r\n}\r\n```","```\r\npublic class MyUserPrincipal implements UserDetails {\r\n    private User user;\r\n\r\n    public MyUserPrincipal(User user) {\r\n        this.user = user;\r\n    }\r\n    //...\r\n}\r\n```","```\r\n<bean id=\"myUserDetailsService\" \r\n  class=\"org.baeldung.security.MyUserDetailsService\"/>\r\n\r\n<security:authentication-manager>\r\n    <security:authentication-provider \r\n      user-service-ref=\"myUserDetailsService\" >\r\n        <security:password-encoder ref=\"passwordEncoder\">\r\n        </security:password-encoder>\r\n    </security:authentication-provider>\r\n</security:authentication-manager>\r\n\r\n<bean id=\"passwordEncoder\" \r\n  class=\"org.springframework.security\r\n  .crypto.bcrypt.BCryptPasswordEncoder\">\r\n    <constructor-arg value=\"11\"/>\r\n</bean>\r\n```"]