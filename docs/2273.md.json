["```\r\nUsername,Id,First name,Last name\r\ndoe1,7173,John,Doe\r\nsmith3,3722,Dana,Smith\r\njohn22,5490,John,Wang\r\n```","```\r\nResultSet resultSet = stmt.executeQuery(\"SELECT * FROM words\");\r\n```","```\r\n<dependency>\r\n    <groupId>org.json</groupId>\r\n    <artifactId>json</artifactId>\r\n    <version>20220320</version>\r\n</dependency> \r\n```","```\r\nResultSetMetaData md = resultSet.getMetaData();\r\nint numCols = md.getColumnCount();\r\nList<String> colNames = IntStream.range(0, numCols)\r\n  .mapToObj(i -> {\r\n      try {\r\n          return md.getColumnName(i + 1);\r\n      } catch (SQLException e) {\r\n          e.printStackTrace();\r\n          return \"?\";\r\n      }\r\n  })\r\n  .collect(Collectors.toList());\r\n\r\nJSONArray result = new JSONArray();\r\nwhile (resultSet.next()) {\r\n    JSONObject row = new JSONObject();\r\n    colNames.forEach(cn -> {\r\n        try {\r\n            row.put(cn, resultSet.getObject(cn));\r\n        } catch (JSONException | SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n    });\r\n    result.add(row);\r\n}\r\n```","```\r\n[\r\n   {\r\n      \"Username\":\"doe1\",\r\n      \"First name\":\"John\",\r\n      \"Id\":\"7173\",\r\n      \"Last name\":\"Doe\"\r\n   },\r\n   {\r\n      \"Username\":\"smith3\",\r\n      \"First name\":\"Dana\",\r\n      \"Id\":\"3722\",\r\n      \"Last name\":\"Smith\"\r\n   },\r\n   {\r\n      \"Username\":\"john22\",\r\n      \"First name\":\"John\",\r\n      \"Id\":\"5490\",\r\n      \"Last name\":\"Wang\"\r\n   }\r\n]\r\n```","```\r\n<dependency>\r\n    <groupId>org.jooq</groupId>\r\n    <artifactId>jooq</artifactId>\r\n    <version>3.11.11</version>\r\n</dependency>\r\n```","```\r\nJSONObject result = new JSONObject(DSL.using(dbConnection)\r\n  .fetch(resultSet)\r\n  .formatJSON());\r\n```","```\r\n{\r\n   \"records\":[\r\n      [\r\n         \"doe1\",\r\n         \"7173\",\r\n         \"John\",\r\n         \"Doe\"\r\n      ],\r\n      [\r\n         \"smith3\",\r\n         \"3722\",\r\n         \"Dana\",\r\n         \"Smith\"\r\n      ],\r\n      [\r\n         \"john22\",\r\n         \"5490\",\r\n         \"John\",\r\n         \"Wang\"\r\n      ]\r\n   ],\r\n   \"fields\":[\r\n      {\r\n         \"schema\":\"PUBLIC\",\r\n         \"name\":\"Username\",\r\n         \"type\":\"VARCHAR\",\r\n         \"table\":\"WORDS\"\r\n      },\r\n      {\r\n         \"schema\":\"PUBLIC\",\r\n         \"name\":\"Id\",\r\n         \"type\":\"VARCHAR\",\r\n         \"table\":\"WORDS\"\r\n      },\r\n      {\r\n         \"schema\":\"PUBLIC\",\r\n         \"name\":\"First name\",\r\n         \"type\":\"VARCHAR\",\r\n         \"table\":\"WORDS\"\r\n      },\r\n      {\r\n         \"schema\":\"PUBLIC\",\r\n         \"name\":\"Last name\",\r\n         \"type\":\"VARCHAR\",\r\n         \"table\":\"WORDS\"\r\n      }\r\n   ]\r\n}\r\n```","```\r\nList json = DSL.using(dbConnection)\r\n  .fetch(resultSet)\r\n  .map(new RecordMapper() {\r\n      @Override\r\n      public JSONObject map(Record r) {\r\n          JSONObject obj = new JSONObject();\r\n          colNames.forEach(cn -> obj.put(cn, r.get(cn)));\r\n          return obj;\r\n      }\r\n  });\r\nreturn new JSONArray(json); \r\n```","```\r\n[\r\n   {\r\n      \"Username\":\"doe1\",\r\n      \"First name\":\"John\",\r\n      \"Id\":\"7173\",\r\n      \"Last name\":\"Doe\"\r\n   },\r\n   {\r\n      \"Username\":\"smith3\",\r\n      \"First name\":\"Dana\",\r\n      \"Id\":\"3722\",\r\n      \"Last name\":\"Smith\"\r\n   },\r\n   {\r\n      \"Username\":\"john22\",\r\n      \"First name\":\"John\",\r\n      \"Id\":\"5490\",\r\n      \"Last name\":\"Wang\"\r\n   }\r\n]\r\n```"]