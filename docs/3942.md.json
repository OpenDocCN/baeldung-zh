["```\r\n@Plugin(name = \"ListAppender\", \r\n  category = Core.CATEGORY_NAME, \r\n  elementType = Appender.ELEMENT_TYPE)\r\npublic class ListAppender extends AbstractAppender {\r\n\r\n    private List<LogEvent> logList;\r\n\r\n    protected ListAppender(String name, Filter filter) {\r\n        super(name, filter, null);\r\n        logList = Collections.synchronizedList(new ArrayList<>());\r\n    }\r\n\r\n    @PluginFactory\r\n    public static ListAppender createAppender(\r\n      @PluginAttribute(\"name\") String name, @PluginElement(\"Filter\") final Filter filter) {\r\n        return new ListAppender(name, filter);\r\n    }\r\n\r\n    @Override\r\n    public void append(LogEvent event) {\r\n        if (event.getLevel().isLessSpecificThan(Level.WARN)) {\r\n            error(\"Unable to log less than WARN level.\");\r\n            return;\r\n        }\r\n        logList.add(event);\r\n    }\r\n}\r\n```","```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<Configuration xmlns:xi=\"http://www.w3.org/2001/XInclude\"\r\n    packages=\"com.baeldung\" status=\"WARN\">\r\n    <Appenders>\r\n        <ListAppender name=\"ListAppender\">\r\n            <BurstFilter level=\"INFO\" rate=\"16\" maxBurst=\"100\"/>\r\n        </MapAppender>\r\n    </Appenders>\r\n    <Loggers\r\n        <Root level=\"DEBUG\">\r\n            <AppenderRef ref=\"ConsoleAppender\" />\r\n            <AppenderRef ref=\"ListAppender\" />\r\n        </Root>\r\n    </Loggers>\r\n</Configuration>\r\n```","```\r\n<Kafka2 name=\"KafkaLogger\" ip =\"127.0.0.1\" port=\"9010\" topic=\"log\" partition=\"p-1\">\r\n    <PatternLayout pattern=\"%pid%style{%message}{red}%n\" />\r\n</Kafka2>\r\n```","```\r\n@Plugin(name = \"Kafka2\", category = Core.CATEGORY_NAME)\r\npublic class KafkaAppender extends AbstractAppender {\r\n\r\n    public static class Builder implements org.apache.logging.log4j.core.util.Builder<KafkaAppender> {\r\n\r\n        @PluginBuilderAttribute(\"name\")\r\n        @Required\r\n        private String name;\r\n\r\n        @PluginBuilderAttribute(\"ip\")\r\n        private String ipAddress;\r\n\r\n        // ... additional properties\r\n\r\n        // ... getters and setters\r\n\r\n        @Override\r\n        public KafkaAppender build() {\r\n            return new KafkaAppender(\r\n              getName(), getFilter(), getLayout(), true, new KafkaBroker(ipAddress, port, topic, partition));\r\n        }\r\n    }\r\n\r\n    private KafkaBroker broker;\r\n\r\n    private KafkaAppender(String name, Filter filter, Layout<? extends Serializable> layout, \r\n      boolean ignoreExceptions, KafkaBroker broker) {\r\n        super(name, filter, layout, ignoreExceptions);\r\n        this.broker = broker;\r\n    }\r\n\r\n    @Override\r\n    public void append(LogEvent event) {\r\n        connectAndSendToKafka(broker, event);\r\n    }\r\n}\r\n```","```\r\n@Plugin(name = \"RollingFile\", category = Core.CATEGORY_NAME, elementType = Appender.ELEMENT_TYPE)\r\npublic class RollingFileAppender extends AbstractAppender {\r\n\r\n    public RollingFileAppender(String name, Filter filter, Layout<? extends Serializable> layout) {\r\n        super(name, filter, layout);\r\n    }\r\n    @Override\r\n    public void append(LogEvent event) {\r\n    }\r\n}\r\n```","```\r\n<Configuration status=\"debug\" name=\"baeldung\" packages=\"\">\r\n    <Appenders>\r\n        <Console name=\"stdout\" target=\"SYSTEM_OUT\">\r\n            <PatternLayout pattern=\"%d{yyyy-MM-dd HH:mm:ss} %p %m%n\"/>\r\n        </Console>\r\n    </Appenders>\r\n</Configuration>\r\n```","```\r\n@Plugin(name = \"DockerPatternConverter\", category = PatternConverter.CATEGORY)\r\n@ConverterKeys({\"docker\", \"container\"})\r\npublic class DockerPatternConverter extends LogEventPatternConverter {\r\n\r\n    private DockerPatternConverter(String[] options) {\r\n        super(\"Docker\", \"docker\");\r\n    }\r\n\r\n    public static DockerPatternConverter newInstance(String[] options) {\r\n        return new DockerPatternConverter(options);\r\n    }\r\n\r\n    @Override\r\n    public void format(LogEvent event, StringBuilder toAppendTo) {\r\n        toAppendTo.append(dockerContainer());\r\n    }\r\n\r\n    private String dockerContainer() {\r\n        return \"container-1\";\r\n    }\r\n}\r\n```","```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<Configuration xmlns:xi=\"http://www.w3.org/2001/XInclude\" packages=\"com.baeldung\" status=\"WARN\">\r\n    <Appenders>\r\n        <xi:include href=\"log4j2-includes/console-appender_pattern-layout_colored.xml\" />\r\n        <Console name=\"DockerConsoleLogger\" target=\"SYSTEM_OUT\">\r\n            <PatternLayout pattern=\"%pid %docker %container\" />\r\n        </Console>\r\n    </Appenders>\r\n    <Loggers>\r\n        <Logger name=\"com.baeldung.logging.log4j2.plugins\" level=\"INFO\">\r\n            <AppenderRef ref=\"DockerConsoleLogger\" />\r\n        </Logger>\r\n    </Loggers>\r\n</Configuration>\r\n```","```\r\n<RollingFile name=\"Rolling-File\" fileName=\"${filename}\" \r\n  filePattern=\"target/rolling1/test1-$${date:MM-dd-yyyy}.%i.log.gz\">\r\n    <PatternLayout>\r\n        <pattern>%d %p %c{1.} [%t] %m%n</pattern>\r\n    </PatternLayout>\r\n    <SizeBasedTriggeringPolicy size=\"500\" />\r\n</RollingFile>\r\n```","```\r\n@Plugin(name = \"kafka\", category = StrLookup.CATEGORY)\r\npublic class KafkaLookup implements StrLookup {\r\n\r\n    @Override\r\n    public String lookup(String key) {\r\n        return getFromKafka(key);\r\n    }\r\n\r\n    @Override\r\n    public String lookup(LogEvent event, String key) {\r\n        return getFromKafka(key);\r\n    }\r\n\r\n    private String getFromKafka(String topicName) {\r\n        return \"topic1-p1\";\r\n    }\r\n}\r\n```","```\r\n<RollingFile name=\"Rolling-File\" fileName=\"${filename}\" \r\n  filePattern=\"target/rolling1/test1-$${kafka:topic-1}.%i.log.gz\">\r\n    <PatternLayout>\r\n        <pattern>%d %p %c{1.} [%t] %m%n</pattern>\r\n    </PatternLayout>\r\n    <SizeBasedTriggeringPolicy size=\"500\" />\r\n</RollingFile>\r\n```"]