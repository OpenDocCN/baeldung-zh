["```\r\n@Before\r\npublic void setUpHeadlessMode() {\r\n    System.setProperty(\"java.awt.headless\", \"true\");\r\n} \r\n```","```\r\n@Test\r\npublic void whenSetUpSuccessful_thenHeadlessIsTrue() {\r\n    assertThat(GraphicsEnvironment.isHeadless()).isTrue();\r\n} \r\n```","```\r\n@Test\r\npublic void whenHeadlessMode_thenImagesWork() {\r\n    boolean result = false;\r\n    try (InputStream inStream = HeadlessModeUnitTest.class.getResourceAsStream(IN_FILE); \r\n      FileOutputStream outStream = new FileOutputStream(OUT_FILE)) {\r\n        BufferedImage inputImage = ImageIO.read(inStream);\r\n        result = ImageIO.write(inputImage, FORMAT, outStream);\r\n    }\r\n\r\n    assertThat(result).isTrue();\r\n}\r\n```","```\r\n@Test\r\npublic void whenHeadless_thenFontsWork() {\r\n    GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();\r\n    String fonts[] = ge.getAvailableFontFamilyNames();\r\n\r\n    assertThat(fonts).isNotEmpty();\r\n\r\n    Font font = new Font(fonts[0], Font.BOLD, 14);\r\n    FontMetrics fm = (new Canvas()).getFontMetrics(font);\r\n\r\n    assertThat(fm.getHeight()).isGreaterThan(0);\r\n    assertThat(fm.getAscent()).isGreaterThan(0);\r\n    assertThat(fm.getDescent()).isGreaterThan(0);\r\n}\r\n```","```\r\nException in thread \"main\" java.awt.HeadlessException\r\n\tat java.awt.GraphicsEnvironment.checkHeadless(GraphicsEnvironment.java:204)\r\n\tat java.awt.Window.<init>(Window.java:536)\r\n\tat java.awt.Frame.<init>(Frame.java:420)\r\n```","```\r\n@Test\r\npublic void whenHeadlessmode_thenFrameThrowsHeadlessException() {\r\n    assertThatExceptionOfType(HeadlessException.class).isThrownBy(() -> {\r\n        Frame frame = new Frame();\r\n        frame.setVisible(true);\r\n        frame.setSize(120, 120);\r\n    });\r\n} \r\n```","```\r\npublic void FlexibleApp() {\r\n    if (GraphicsEnvironment.isHeadless()) {\r\n        System.out.println(\"Hello World\");\r\n    } else {\r\n        JOptionPane.showMessageDialog(null, \"Hello World\");\r\n    }\r\n}\r\n```"]