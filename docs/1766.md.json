["```\r\nMessageDigest md = MessageDigest.getInstance(\"SHA-1\");\r\nbyte[] hashedPassword = md.digest(\"password\".getBytes());\r\n```","```\r\nKeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());\r\nchar[] keyStorePassword = \"changeit\".toCharArray();\r\ntry(InputStream keyStoreData = new FileInputStream(\"keystore.jks\")){\r\n    keyStore.load(keyStoreData, keyStorePassword);\r\n}\r\n```","```\r\nKeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType());\r\n// Load the trust-store from filesystem as before\r\n```","```\r\n-Djavax.net.ssl.trustStore=truststore.jks \r\n-Djavax.net.ssl.keyStore=keystore.jks\r\n```","```\r\nLoginContext loginContext = new LoginContext(\"Sample\", new SampleCallbackHandler());\r\nloginContext.login();\r\n```","```\r\nSample {\r\n  com.sun.security.auth.module.JndiLoginModule required;\r\n};\r\n```","```\r\nSocketFactory factory = SSLSocketFactory.getDefault();\r\ntry (Socket connection = factory.createSocket(host, port)) {\r\n    BufferedReader input = new BufferedReader(\r\n      new InputStreamReader(connection.getInputStream()));\r\n    return input.readLine();\r\n}\r\n```","```\r\nSecurityManager securityManager = System.getSecurityManager();\r\nif (securityManager != null) {\r\n    securityManager.checkPermission(\r\n      new FilePermission(\"/var/logs\", \"read\"));\r\n}\r\n```","```\r\ngrant {\r\n  permission \r\n    java.security.FilePermission\r\n      <<ALL FILES>>, \"read\";\r\n};\r\n```","```\r\n-Djava.security.manager -Djava.security.policy=/path/to/sample.policy\r\n```","```\r\nXMLSignatureFactory xmlSignatureFactory = XMLSignatureFactory.getInstance(\"DOM\");\r\nDocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();\r\ndocumentBuilderFactory.setNamespaceAware(true);\r\n\r\nDocument document = documentBuilderFactory\r\n  .newDocumentBuilder().parse(new FileInputStream(\"data.xml\"));\r\n\r\nDOMSignContext domSignContext = new DOMSignContext(\r\n  keyEntry.getPrivateKey(), document.getDocumentElement());\r\n\r\nXMLSignature xmlSignature = xmlSignatureFactory.newXMLSignature(signedInfo, keyInfo);\r\nxmlSignature.sign(domSignContext);\r\n```"]