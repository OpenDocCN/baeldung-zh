["```\r\npublic class Person {\r\n    private String name;\r\n\r\n    // standard constructor, getters and setters\r\n}\r\n```","```\r\n@Bean\r\n@Scope(\"singleton\")\r\npublic Person personSingleton() {\r\n    return new Person();\r\n}\r\n```","```\r\n@Scope(value = ConfigurableBeanFactory.SCOPE_SINGLETON)\r\n```","```\r\nprivate static final String NAME = \"John Smith\";\r\n\r\n@Test\r\npublic void givenSingletonScope_whenSetName_thenEqualNames() {\r\n    ApplicationContext applicationContext = \r\n      new ClassPathXmlApplicationContext(\"scopes.xml\");\r\n\r\n    Person personSingletonA = (Person) applicationContext.getBean(\"personSingleton\");\r\n    Person personSingletonB = (Person) applicationContext.getBean(\"personSingleton\");\r\n\r\n    personSingletonA.setName(NAME);\r\n    Assert.assertEquals(NAME, personSingletonB.getName());\r\n\r\n    ((AbstractApplicationContext) applicationContext).close();\r\n}\r\n```","```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<beans \r\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n    xsi:schemaLocation=\"http://www.springframework.org/schema/beans \r\n    http://www.springframework.org/schema/beans/spring-beans.xsd\">\r\n\r\n    <bean id=\"personSingleton\" class=\"org.baeldung.scopes.Person\" scope=\"singleton\"/>    \r\n</beans>\r\n```","```\r\n@Bean\r\n@Scope(\"prototype\")\r\npublic Person personPrototype() {\r\n    return new Person();\r\n}\r\n```","```\r\n@Scope(value = ConfigurableBeanFactory.SCOPE_PROTOTYPE)\r\n```","```\r\nprivate static final String NAME = \"John Smith\";\r\nprivate static final String NAME_OTHER = \"Anna Jones\";\r\n\r\n@Test\r\npublic void givenPrototypeScope_whenSetNames_thenDifferentNames() {\r\n    ApplicationContext applicationContext = \r\n      new ClassPathXmlApplicationContext(\"scopes.xml\");\r\n\r\n    Person personPrototypeA = (Person) applicationContext.getBean(\"personPrototype\");\r\n    Person personPrototypeB = (Person) applicationContext.getBean(\"personPrototype\");\r\n\r\n    personPrototypeA.setName(NAME);\r\n    personPrototypeB.setName(NAME_OTHER);\r\n\r\n    Assert.assertEquals(NAME, personPrototypeA.getName());\r\n    Assert.assertEquals(NAME_OTHER, personPrototypeB.getName());\r\n\r\n    ((AbstractApplicationContext) applicationContext).close();\r\n} \r\n```","```\r\n<bean id=\"personPrototype\" class=\"org.baeldung.scopes.Person\" scope=\"prototype\"/>\r\n```","```\r\npublic class HelloMessageGenerator {\r\n    private String message;\r\n\r\n    // standard getter and setter\r\n}\r\n```","```\r\n@Bean\r\n@Scope(value = WebApplicationContext.SCOPE_REQUEST, proxyMode = ScopedProxyMode.TARGET_CLASS)\r\npublic HelloMessageGenerator requestScopedBean() {\r\n    return new HelloMessageGenerator();\r\n}\r\n```","```\r\n@Bean\r\n@RequestScope\r\npublic HelloMessageGenerator requestScopedBean() {\r\n    return new HelloMessageGenerator();\r\n}\r\n```","```\r\n@Controller\r\npublic class ScopesController {\r\n    @Resource(name = \"requestScopedBean\")\r\n    HelloMessageGenerator requestScopedBean;\r\n\r\n    @RequestMapping(\"/scopes/request\")\r\n    public String getRequestScopeMessage(final Model model) {\r\n        model.addAttribute(\"previousMessage\", requestScopedBean.getMessage());\r\n        requestScopedBean.setMessage(\"Good morning!\");\r\n        model.addAttribute(\"currentMessage\", requestScopedBean.getMessage());\r\n        return \"scopesExample\";\r\n    }\r\n}\r\n```","```\r\n@Bean\r\n@Scope(value = WebApplicationContext.SCOPE_SESSION, proxyMode = ScopedProxyMode.TARGET_CLASS)\r\npublic HelloMessageGenerator sessionScopedBean() {\r\n    return new HelloMessageGenerator();\r\n}\r\n```","```\r\n@Bean\r\n@SessionScope\r\npublic HelloMessageGenerator sessionScopedBean() {\r\n    return new HelloMessageGenerator();\r\n}\r\n```","```\r\n@Controller\r\npublic class ScopesController {\r\n    @Resource(name = \"sessionScopedBean\")\r\n    HelloMessageGenerator sessionScopedBean;\r\n\r\n    @RequestMapping(\"/scopes/session\")\r\n    public String getSessionScopeMessage(final Model model) {\r\n        model.addAttribute(\"previousMessage\", sessionScopedBean.getMessage());\r\n        sessionScopedBean.setMessage(\"Good afternoon!\");\r\n        model.addAttribute(\"currentMessage\", sessionScopedBean.getMessage());\r\n        return \"scopesExample\";\r\n    }\r\n}\r\n```","```\r\n@Bean\r\n@Scope(\r\n  value = WebApplicationContext.SCOPE_APPLICATION, proxyMode = ScopedProxyMode.TARGET_CLASS)\r\npublic HelloMessageGenerator applicationScopedBean() {\r\n    return new HelloMessageGenerator();\r\n}\r\n```","```\r\n@Bean\r\n@ApplicationScope\r\npublic HelloMessageGenerator applicationScopedBean() {\r\n    return new HelloMessageGenerator();\r\n}\r\n```","```\r\n@Controller\r\npublic class ScopesController {\r\n    @Resource(name = \"applicationScopedBean\")\r\n    HelloMessageGenerator applicationScopedBean;\r\n\r\n    @RequestMapping(\"/scopes/application\")\r\n    public String getApplicationScopeMessage(final Model model) {\r\n        model.addAttribute(\"previousMessage\", applicationScopedBean.getMessage());\r\n        applicationScopedBean.setMessage(\"Good afternoon!\");\r\n        model.addAttribute(\"currentMessage\", applicationScopedBean.getMessage());\r\n        return \"scopesExample\";\r\n    }\r\n}\r\n```","```\r\n@Bean\r\n@Scope(scopeName = \"websocket\", proxyMode = ScopedProxyMode.TARGET_CLASS)\r\npublic HelloMessageGenerator websocketScopedBean() {\r\n    return new HelloMessageGenerator();\r\n}\r\n```"]