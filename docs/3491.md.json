["```\r\nList<Optional<String>> listOfOptionals = Arrays.asList(\r\n  Optional.empty(), Optional.of(\"foo\"), Optional.empty(), Optional.of(\"bar\"));\r\n```","```\r\nList<String> filteredList = listOfOptionals.stream()\r\n  .filter(Optional::isPresent)\r\n  .map(Optional::get)\r\n  .collect(Collectors.toList());\r\n```","```\r\nList<String> filteredList = listOfOptionals.stream()\r\n  .flatMap(o -> o.isPresent() ? Stream.of(o.get()) : Stream.empty())\r\n  .collect(Collectors.toList());\r\n```","```\r\nList<String> filteredList = listOfOptionals.stream()\r\n  .flatMap(o -> o.map(Stream::of).orElseGet(Stream::empty))\r\n  .collect(Collectors.toList());\r\n```","```\r\nList<String> filteredList = listOfOptionals.stream()\r\n  .flatMap(Optional::stream)\r\n  .collect(Collectors.toList());\r\n```"]