["```\r\npublic class CustomUserDetails extends User {\r\n\r\n    private final String firstName;\r\n    private final String lastName;\r\n    private final String email;\r\n\r\n    private CustomUserDetails(Builder builder) {\r\n        super(builder.username, builder.password, builder.authorities);\r\n        this.firstName = builder.firstName;\r\n        this.lastName = builder.lastName;\r\n        this.email = builder.email;\r\n    }\r\n\r\n    // omitting getters and static Builder class\r\n}\r\n```","```\r\n@Service\r\npublic class CustomUserDetailsService implements UserDetailsService {\r\n\r\n    private final PasswordEncoder passwordEncoder;\r\n    private final Map<String, CustomUserDetails> userRegistry = new HashMap<>();\r\n\r\n    // omitting constructor\r\n\r\n    @PostConstruct\r\n    public void init() {\r\n        userRegistry.put(\"user\", new CustomUserDetails.Builder().withFirstName(\"Mark\")\r\n          .withLastName(\"Johnson\")\r\n          .withEmail(\"[[email protected]](/web/20220923120147/https://www.baeldung.com/cdn-cgi/l/email-protection)\")\r\n          .withUsername(\"user\")\r\n          .withPassword(passwordEncoder.encode(\"password\"))\r\n          .withAuthorities(Collections.singletonList(new SimpleGrantedAuthority(\"ROLE_USER\")))\r\n          .build());\r\n        userRegistry.put(\"admin\", new CustomUserDetails.Builder().withFirstName(\"James\")\r\n          .withLastName(\"Davis\")\r\n          .withEmail(\"[[email protected]](/web/20220923120147/https://www.baeldung.com/cdn-cgi/l/email-protection)\")\r\n          .withUsername(\"admin\")\r\n          .withPassword(passwordEncoder.encode(\"password\"))\r\n          .withAuthorities(Collections.singletonList(new SimpleGrantedAuthority(\"ROLE_ADMIN\")))\r\n          .build());\r\n    }\r\n\r\n    @Override\r\n    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\r\n        CustomUserDetails userDetails = userRegistry.get(username);\r\n        if (userDetails == null) {\r\n            throw new UsernameNotFoundException(username);\r\n        }\r\n        return userDetails;\r\n    }\r\n}\r\n```","```\r\n@Configuration\r\n@EnableWebSecurity\r\npublic class SecurityConfiguration extends WebSecurityConfigurerAdapter {\r\n\r\n    private final UserDetailsService userDetailsService;\r\n\r\n    // omitting constructor\r\n\r\n    @Override\r\n    protected void configure(HttpSecurity http) throws Exception {\r\n        http.userDetailsService(userDetailsService)\r\n            .authorizeRequests()\r\n            .anyRequest()\r\n            .authenticated()\r\n            .and()\r\n            .formLogin()\r\n            .loginPage(\"/login\")\r\n            .permitAll()\r\n            .successForwardUrl(\"/index\")\r\n            .and()\r\n            .logout()\r\n            .permitAll()\r\n            .logoutRequestMatcher(new AntPathRequestMatcher(\"/logout\"))\r\n            .logoutSuccessUrl(\"/login\");\r\n    }\r\n}\r\n```","```\r\n<!DOCTYPE html>\r\n<html xmlns:sec=\"http://www.thymeleaf.org/extras/spring-security\">\r\n<head>\r\n<title>Welcome to Spring Security Thymeleaf tutorial</title>\r\n</head>\r\n<body>\r\n    <h2>Welcome</h2>\r\n    <p>Spring Security Thymeleaf tutorial</p>\r\n    <div sec:authorize=\"hasRole('USER')\">Text visible to user.</div>\r\n    <div sec:authorize=\"hasRole('ADMIN')\">Text visible to admin.</div>\r\n    <div sec:authorize=\"isAuthenticated()\">Text visible only to authenticated users.</div>\r\n    Authenticated username:\r\n    <div sec:authentication=\"name\"></div>\r\n    Authenticated user's firstName:\r\n    <div sec:authentication=\"principal.firstName\"></div>\r\n    Authenticated user's lastName:\r\n    <div sec:authentication=\"principal.lastName\"></div>\r\n    Authenticated user's email:\r\n    <div sec:authentication=\"principal.lastName\"></div>\r\n    Authenticated user roles:\r\n    <div sec:authentication=\"principal.authorities\"></div>\r\n</body>\r\n</html>\r\n```","```\r\n<div th:text=\"${#authentication.principal.firstName}\"></div>\r\n```"]