["```\r\n<dependency>\r\n    <groupId>org.takes</groupId>\r\n    <artifactId>takes</artifactId>\r\n    <version>1.19</version>\r\n</dependency>\r\n```","```\r\npublic class TakesHelloWorld implements Take {\r\n    @Override\r\n    public Response act(Request req) {\r\n        return new RsText(\"Hello, world!\");\r\n    }\r\n}\r\n```","```\r\npublic class TakesApp {\r\n    public static void main(String... args) {\r\n        new FtBasic(new TakesHelloWorld()).start(Exit.NEVER);\r\n    }\r\n}\r\n```","```\r\nnew FtBasic(new TakesHelloWorld(), 6060).start(Exit.NEVER);\r\n```","```\r\nmvn clean package\r\n```","```\r\njavac -cp \"takes.jar:.\" com.baeldung.takes.*\r\n```","```\r\njava -cp \"takes.jar:.\" com.baeldung.takes.TakesApp --port=6060\r\n```","```\r\n<profiles>\r\n    <profile>\r\n        <id>reload</id>\r\n        <build>\r\n            <plugins>\r\n                <plugin>\r\n                    <groupId>org.codehaus.mojo</groupId>\r\n                    <artifactId>exec-maven-plugin</artifactId>\r\n                    <version>3.0.0</version>\r\n                    <executions>\r\n                        <execution>\r\n                            <id>start-server</id>\r\n                            <phase>pre-integration-test</phase>\r\n                            <goals>\r\n                                <goal>java</goal>\r\n                            </goals>\r\n                        </execution>\r\n                    </executions>\r\n                    <configuration>\r\n                        <mainClass>com.baeldung.takes.TakesApp</mainClass>\r\n                        <cleanupDaemonThreads>false</cleanupDaemonThreads>\r\n                        <arguments>\r\n                            <argument>--port=${port}</argument>\r\n                        </arguments>\r\n                   </configuration>\r\n                </plugin>\r\n            </plugins>\r\n        </build>\r\n    </profile>\r\n</profiles>\r\n```","```\r\nmvn clean integration-test -Preload -Dport=6060\r\n```","```\r\npublic static void main(String... args) {\r\n    new FtBasic(\r\n        new TkFork(\r\n            new FkRegex(\"/\", new TakesHelloWorld()),\r\n            new FkRegex(\"/contact\", new TakesContact())\r\n        ), 6060\r\n    ).start(Exit.NEVER);\r\n}\r\n```","```\r\npublic class TakesHelloWorld implements Take { \r\n    @Override\r\n    public Response act(Request req) throws IOException {\r\n        String requestMethod = new RqMethod.Base(req).method(); \r\n        return new RsText(\"Hello, world!\"); \r\n    }\r\n}\r\n```","```\r\nIterable<String> requestHeaders = new RqHeaders.Base(req).head();\r\n```","```\r\nString body = new RqPrint(req).printBody();\r\n```","```\r\nString username = new RqFormSmart(req).single(\"username\");\r\n```","```\r\nResponse resp = new RsWithStatus(200);\r\n```","```\r\nassertEquals(\"[HTTP/1.1 200 OK], \", resp.head().toString());\r\n```","```\r\nResponse resp = new RsWithType(new RsEmpty(), \"text/html\");\r\n```","```\r\npublic class TakesContact implements Take {\r\n    @Override\r\n    public Response act(Request req) throws IOException {\r\n        return new RsWithStatus(\r\n          new RsWithType(\r\n            new RsWithBody(\"Contact us at https://www.baeldung.com\"), \r\n            \"text/html\"), 200);\r\n    }\r\n}\r\n```","```\r\n@Override \r\npublic Response act(Request req) { \r\n    JsonStructure json = Json.createObjectBuilder() \r\n      .add(\"id\", rs.getInt(\"id\")) \r\n      .add(\"user\", rs.getString(\"user\")) \r\n      .build(); \r\n    return new RsJson(json); \r\n}\r\n```","```\r\npublic static void main(String... args) throws IOException, SQLException {\r\n    new FtBasic(\r\n        new TkFallback(\r\n          new TkFork(\r\n            new FkRegex(\"/\", new TakesHelloWorld()),\r\n            // ...\r\n            ),\r\n            new FbStatus(404, new RsText(\"Page Not Found\"))), 6060\r\n     ).start(Exit.NEVER);\r\n}\r\n```","```\r\nnew TkFallback(\r\n    new TkFork(\r\n      // ...\r\n      ),\r\n    new FbChain(\r\n      new FbStatus(404, new RsText(\"Page Not Found\")),\r\n      new FbStatus(405, new RsText(\"Method Not Allowed\"))\r\n      )\r\n    ), 6060\r\n).start(Exit.NEVER);\r\n```","```\r\nnew FbChain(\r\n    new FbStatus(404, new RsText(\"Page Not Found\")),\r\n    new FbStatus(405, new RsText(\"Method Not Allowed\")),\r\n    new Fallback() {\r\n        @Override\r\n        public Opt<Response> route(RqFallback req) {\r\n          return new Opt.Single<Response>(new RsText(req.throwable().getMessage()));\r\n        }\r\n    }\r\n)\r\n```","```\r\n<dependency>\r\n    <groupId>org.apache.velocity</groupId>\r\n    <artifactId>velocity-engine-core</artifactId>\r\n    <version>2.2</version>\r\n</dependency>\r\n```","```\r\npublic class TakesIndex implements Take {\r\n    @Override\r\n    public Response act(Request req) throws IOException {\r\n        return new RsHtml(\r\n            new RsVelocity(\"${username}\", new RsVelocity.Pair(\"username\", \"Baeldung\")));\r\n        );\r\n    }\r\n}\r\n```","```\r\nnew RsVelocity(this.getClass().getResource(\"/templates/index.vm\"), \r\n    new RsVelocity.Pair(\"username\", username))\r\n);\r\n```","```\r\nString resp = new RsPrint(new TakesContact().act(new RqFake())).printBody();\r\nassertEquals(\"Contact us at https://www.baeldung.com\", resp); \r\n```","```\r\nnew FtRemote(new TakesContact()).exec(\r\n    new FtRemote.Script() {\r\n        @Override\r\n        public void exec(URI home) throws IOException {\r\n            HttpClient client = HttpClientBuilder.create().build();    \r\n            HttpResponse response = client.execute(new HttpGet(home));\r\n            int statusCode = response.getStatusLine().getStatusCode();\r\n            HttpEntity entity = response.getEntity();\r\n            String result = EntityUtils.toString(entity);\r\n\r\n            assertEquals(200, statusCode);\r\n            assertEquals(\"Contact us at https://www.baeldung.com\", result);\r\n        }\r\n    });\r\n```"]