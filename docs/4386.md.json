["```\r\n<dependency>\r\n    <groupId>io.netty</groupId>\r\n    <artifactId>netty-all</artifactId>\r\n    <version>4.1.24.Final</version>\r\n</dependency>\r\n```","```\r\nEmbeddedChannel channel = new EmbeddedChannel(\r\n  new HttpMessageHandler(), new CalculatorOperationHandler());\r\n```","```\r\nchannel.pipeline()\r\n  .addFirst(new HttpMessageHandler())\r\n  .addLast(new CalculatorOperationHandler());\r\n```","```\r\nDefaultChannelConfig channelConfig = (DefaultChannelConfig) channel\r\n  .config();\r\nchannelConfig.setConnectTimeoutMillis(500);\r\n```","```\r\nObject lastOutboundMessage = channel.readOutbound();\r\nQueue<Object> allOutboundMessages = channel.outboundMessages();\r\n```","```\r\nchannel.writeInbound(httpRequest)\r\n```","```\r\nEmbeddedChannel channel = new EmbeddedChannel(\r\n  new HttpMessageHandler(), new CalculatorOperationHandler());\r\n```","```\r\nFullHttpRequest httpRequest = new DefaultFullHttpRequest(\r\n  HttpVersion.HTTP_1_1, HttpMethod.GET, \"/calculate?a=10&b;=5\");\r\nhttpRequest.headers().add(\"Operator\", \"Add\");\r\n\r\nassertThat(channel.writeInbound(httpRequest)).isTrue();\r\nlong inboundChannelResponse = channel.readInbound();\r\nassertThat(inboundChannelResponse).isEqualTo(15);\r\n```","```\r\nassertThat(channel.outboundMessages().size()).isEqualTo(1);\r\n```","```\r\nFullHttpResponse httpResponse = channel.readOutbound();\r\nString httpResponseContent = httpResponse.content()\r\n  .toString(Charset.defaultCharset());\r\nassertThat(httpResponseContent).isEqualTo(\"15\");\r\n```","```\r\nassertThatThrownBy(() -> {\r\n    channel.pipeline().fireChannelRead(wrongHttpRequest);\r\n    channel.checkException();\r\n}).isInstanceOf(UnsupportedOperationException.class)\r\n  .hasMessage(\"HTTP method not supported\");\r\n```"]