["```\r\ngit clone https://github.com/$USERNAME/baeldung-ci-cd-process.git\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n</dependency>\r\n\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-actuator</artifactId>\r\n</dependency>\r\n```","```\r\n<plugin>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-maven-plugin</artifactId>\r\n</plugin>\r\n```","```\r\n@SpringBootApplication\r\npublic class CiCdApplication {\r\n\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(CiCdApplication.class, args);\r\n    }\r\n}\r\n```","```\r\ngit add .\r\ngit commit -m 'Initialize application'\r\ngit push\r\n```","```\r\nmvn -N io.takari:maven:0.7.7:wrapper\r\n```","```\r\nlanguage: java\r\njdk:\r\n  - openjdk11\r\nscript:\r\n  - ./mvnw clean install\r\n```","```\r\n<profile>\r\n    <id>deploy-docker</id>\r\n    <properties>\r\n        <maven.deploy.skip>true</maven.deploy.skip>\r\n    </properties>\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>com.google.cloud.tools</groupId>\r\n                <artifactId>jib-maven-plugin</artifactId>\r\n                <version>2.2.0</version>\r\n                <configuration>\r\n                    <to>\r\n                        <image>${DockerHubUsername}/baeldung-ci-cd-process</image>\r\n                        <tags>\r\n                            <tag>${project.version}</tag>\r\n                            <tag>latest</tag>\r\n                        </tags>\r\n                    </to>\r\n                </configuration>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n</profile>\r\n```","```\r\nbefore_install:\r\n  - echo \"$DOCKER_PASSWORD\" | docker login -u \"$DOCKER_USERNAME\" --password-stdin\r\n  - docker pull openjdk:11-jre-slim-sid\r\n\r\nscript:\r\n  - ./mvnw clean install\r\n  - ./mvnw deploy jib:build -P deploy-docker\r\n```","```\r\ndocker run -p 8080:8080 -t $DOCKER_USERNAME/baeldung-ci-cd-process\r\n```","```\r\n<plugin>\r\n    <groupId>org.jacoco</groupId>\r\n    <artifactId>jacoco-maven-plugin</artifactId>\r\n    <version>0.8.5</version>\r\n    <executions>\r\n        <execution>\r\n            <id>default-prepare-agent</id>\r\n            <goals>\r\n                <goal>prepare-agent</goal>\r\n            </goals>\r\n        </execution>\r\n        <execution>\r\n            <id>report</id>\r\n            <phase>test</phase>\r\n            <goals>\r\n                <goal>report</goal>\r\n            </goals>\r\n        </execution>\r\n    </executions>\r\n</plugin>\r\n```","```\r\nscript:\r\n  - ./mvnw clean org.jacoco:jacoco-maven-plugin:prepare-agent install\r\n  - ./mvnw deploy jib:build -P deploy-docker\r\n\r\nafter_success:\r\n  - bash <(curl -s https://codecov.io/bash)\r\n```","```\r\n@SpringBootTest\r\nclass CiCdApplicationIntegrationTest {\r\n\r\n    @Test\r\n    public void contextLoads() {\r\n\r\n    }\r\n}\r\n```","```\r\n<profile>\r\n    <id>deploy-heroku</id>\r\n    <properties>\r\n        <maven.deploy.skip>true</maven.deploy.skip>\r\n    </properties>\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>com.heroku.sdk</groupId>\r\n                <artifactId>heroku-maven-plugin</artifactId>\r\n                <version>3.0.2</version>\r\n                <configuration>\r\n                    <appName>spring-boot-ci-cd</appName>\r\n                    <processTypes>\r\n                        <web>java $JAVA_OPTS -jar -Dserver.port=$PORT target/${project.build.finalName}.jar</web>\r\n                    </processTypes>\r\n                </configuration>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n</profile>\r\n```","```\r\nscript:\r\n  - ./mvnw clean install\r\n  - ./mvnw heroku:deploy jib:build -P deploy-heroku,deploy-docker\r\n```"]