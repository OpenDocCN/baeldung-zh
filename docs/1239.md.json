["```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-data-jpa</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-data-jdbc</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>mysql</groupId>\r\n    <artifactId>mysql-connector-java</artifactId>\r\n</dependency> \r\n```","```\r\nspring.datasource.url=jdbc:mysql://localhost:3306/baeldung\r\nspring.datasource.username=baeldung\r\nspring.datasource.password=baeldung\r\n```","```\r\n@Entity\r\npublic class Car {\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n    @Column\r\n    private long id;\r\n\r\n    @Column\r\n    private String model;\r\n\r\n    @Column\r\n    private Integer year;\r\n\r\n   // standard getters and setters\r\n}\r\n```","```\r\nCREATE PROCEDURE FIND_CARS_AFTER_YEAR(IN year_in INT)\r\nBEGIN \r\n    SELECT * FROM car WHERE year >= year_in ORDER BY year;\r\nEND\r\n```","```\r\nCREATE PROCEDURE GET_TOTAL_CARS_BY_MODEL(IN model_in VARCHAR(50), OUT count_out INT)\r\nBEGIN\r\n    SELECT COUNT(*) into count_out from car WHERE model = model_in;\r\nEND\r\n```","```\r\n@Repository\r\npublic interface CarRepository extends JpaRepository<Car, Integer> {\r\n    // ...\r\n} \r\n```","```\r\n@Procedure\r\nint GET_TOTAL_CARS_BY_MODEL(String model); \r\n```","```\r\n@Procedure(\"GET_TOTAL_CARS_BY_MODEL\")\r\nint getTotalCarsByModel(String model); \r\n```","```\r\n@Procedure(procedureName = \"GET_TOTAL_CARS_BY_MODEL\")\r\nint getTotalCarsByModelProcedureName(String model); \r\n```","```\r\n@Procedure(value = \"GET_TOTAL_CARS_BY_MODEL\")\r\nint getTotalCarsByModelValue(String model); \r\n```","```\r\n@Entity\r\n@NamedStoredProcedureQuery(name = \"Car.getTotalCardsbyModelEntity\", \r\n  procedureName = \"GET_TOTAL_CARS_BY_MODEL\", parameters = {\r\n    @StoredProcedureParameter(mode = ParameterMode.IN, name = \"model_in\", type = String.class),\r\n    @StoredProcedureParameter(mode = ParameterMode.OUT, name = \"count_out\", type = Integer.class)})\r\npublic class Car {\r\n    // class definition\r\n}\r\n```","```\r\n@Procedure(name = \"Car.getTotalCardsbyModelEntity\")\r\nint getTotalCarsByModelEntiy(@Param(\"model_in\") String model); \r\n```","```\r\n@Query(value = \"CALL FIND_CARS_AFTER_YEAR(:year_in);\", nativeQuery = true)\r\nList<Car> findCarsAfterYear(@Param(\"year_in\") Integer year_in);\r\n```"]