["```\r\n<dependency>\r\n    <groupId>net.serenity-bdd</groupId>\r\n    <artifactId>serenity-core</artifactId>\r\n    <version>1.2.5-rc.11</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>net.serenity-bdd</groupId>\r\n    <artifactId>serenity-junit</artifactId>\r\n    <version>1.2.5-rc.11</version>\r\n</dependency>\r\n```","```\r\n<plugin>\r\n    <groupId>net.serenity-bdd.maven.plugins</groupId>\r\n    <artifactId>serenity-maven-plugin</artifactId>\r\n    <version>1.2.5-rc.6</version>\r\n    <executions>\r\n        <execution>\r\n            <id>serenity-reports</id>\r\n            <phase>post-integration-test</phase>\r\n            <goals>\r\n                <goal>aggregate</goal>\r\n            </goals>\r\n        </execution>\r\n    </executions>\r\n</plugin>\r\n```","```\r\n<plugin>\r\n    <groupId>org.apache.maven.plugins</groupId>\r\n    <artifactId>maven-surefire-plugin</artifactId>\r\n    <version>2.20</version>\r\n    <configuration>\r\n        <testFailureIgnore>true</testFailureIgnore>\r\n    </configuration>\r\n</plugin>\r\n```","```\r\n@RunWith(SerenityRunner.class)\r\npublic class MemberStatusIntegrationTest {\r\n\r\n    @Steps \r\n    private MemberStatusSteps memberSteps;\r\n\r\n    @Test\r\n    public void membersShouldStartWithBronzeStatus() {\r\n        memberSteps.aClientJoinsTheMemberProgram();\r\n        memberSteps.theMemberShouldHaveAStatusOf(Bronze);\r\n    }\r\n}\r\n```","```\r\npublic class MemberStatusSteps {\r\n\r\n    private Member member;\r\n\r\n    @Step(\"Given a member has {0} points\")\r\n    public void aMemberHasPointsOf(int points) {\r\n        member = Member.withInitialPoints(points);\r\n    }\r\n\r\n    @Step(\"Then the member grade should be {0}\")\r\n    public void theMemberShouldHaveAStatusOf(MemberGrade grade) {\r\n        assertThat(member.getGrade(), equalTo(grade));\r\n    }\r\n}\r\n```","```\r\n@Pending\r\n@Step(\"When the member exchange {}\")\r\npublic void aMemberExchangeA(Commodity commodity){\r\n    //TODO\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>net.serenity-bdd</groupId>\r\n    <artifactId>serenity-jbehave</artifactId>\r\n    <version>1.24.0</version>\r\n</dependency>\r\n```","```\r\nScenario: Github user's profile should have a login payload same as username\r\n\r\nGiven github user profile api\r\nWhen I look for eugenp via the api\r\nThen github's response contains a 'login' payload same as eugenp\r\n```","```\r\npublic class GithubRestUserAPISteps {\r\n\r\n    private String api;\r\n    private GitHubUser resource;\r\n\r\n    @Step(\"Given the github REST API for user profile\")\r\n    public void withUserProfileAPIEndpoint() {\r\n        api = \"https://api.github.com/users/%s\";\r\n    }\r\n\r\n    @Step(\"When looking for {0} via the api\")\r\n    public void getProfileOfUser(String username) throws IOException {\r\n        HttpResponse httpResponse = getGithubUserProfile(api, username);\r\n        resource = retrieveResourceFromResponse(httpResponse, GitHubUser.class);\r\n    }\r\n\r\n    @Step(\"Then there should be a login field with value {0} in payload of user {0}\")\r\n    public void profilePayloadShouldContainLoginValue(String username) {\r\n        assertThat(username, Matchers.is(resource.getLogin()));\r\n    }\r\n\r\n}\r\n```","```\r\npublic class GithubUserProfilePayloadStepDefinitions {\r\n\r\n    @Steps\r\n    GithubRestUserAPISteps userAPISteps;\r\n\r\n    @Given(\"github user profile api\")\r\n    public void givenGithubUserProfileApi() {\r\n        userAPISteps.withUserProfileAPIEndpoint();\r\n    }\r\n\r\n    @When(\"looking for $user via the api\")\r\n    public void whenLookingForProfileOf(String user) throws IOException {\r\n        userAPISteps.getProfileOfUser(user);\r\n    }\r\n\r\n    @Then(\"github's response contains a 'login' payload same as $user\")\r\n    public void thenGithubsResponseContainsAloginPayloadSameAs(String user) {\r\n        userAPISteps.profilePayloadShouldContainLoginValue(user);\r\n    }\r\n}\r\n```","```\r\nimport net.serenitybdd.jbehave.SerenityStory;\r\n\r\npublic class GithubUserProfilePayload extends SerenityStory {}\r\n```","```\r\n<dependency>\r\n    <groupId>net.serenity-bdd</groupId>\r\n    <artifactId>serenity-rest-assured</artifactId>\r\n    <version>1.2.5-rc.11</version>\r\n</dependency>\r\n```","```\r\nimport static net.serenitybdd.rest.SerenityRest.rest;\r\nimport static net.serenitybdd.rest.SerenityRest.then;\r\n\r\npublic class GithubRestAssuredUserAPISteps {\r\n\r\n    private String api;\r\n\r\n    @Step(\"Given the github REST API for user profile\")\r\n    public void withUserProfileAPIEndpoint() {\r\n        api = \"https://api.github.com/users/{username}\";\r\n    }\r\n\r\n    @Step(\"When looking for {0} via the api\")\r\n    public void getProfileOfUser(String username) throws IOException {\r\n        rest().get(api, username);\r\n    }\r\n\r\n    @Step(\"Then there should be a login field with value {0} in payload of user {0}\")\r\n    public void profilePayloadShouldContainLoginValue(String username) {\r\n        then().body(\"login\", Matchers.equalTo(username));\r\n    }\r\n\r\n}\r\n```","```\r\npublic class GithubUserProfilePayloadStepDefinitions {\r\n\r\n    @Steps\r\n    GithubRestAssuredUserAPISteps userAPISteps;\r\n\r\n    //...\r\n\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>net.serenity-bdd</groupId>\r\n    <artifactId>serenity-jira-requirements-provider</artifactId>\r\n    <version>1.1.3-rc.5</version>\r\n</dependency>\r\n```","```\r\nMeta:\r\n@issue #BDDTEST-1\r\n```","```\r\njira.url=<jira-url>\r\njira.project=<jira-project>\r\njira.username=<jira-username>\r\njira.password=<jira-password>\r\n```"]