["```\r\n<dependency> \r\n    <groupId>com.google.code.gson</groupId> \r\n    <artifactId>gson</artifactId> \r\n    <version>2.8.5</version> \r\n</dependency>\r\n```","```\r\npublic class PrimitiveBundle {\r\n    public byte byteValue;\r\n    public short shortValue;\r\n    public int intValue;\r\n    public long longValue;\r\n    public float floatValue;\r\n    public double doubleValue;\r\n    public boolean booleanValue;\r\n    public char charValue;\r\n}\r\n```","```\r\nPrimitiveBundle primitiveBundle = new PrimitiveBundle();\r\nprimitiveBundle.byteValue = (byte) 0x00001111;\r\nprimitiveBundle.shortValue = (short) 3;\r\nprimitiveBundle.intValue = 3;\r\nprimitiveBundle.longValue = 3;\r\nprimitiveBundle.floatValue = 3.5f;\r\nprimitiveBundle.doubleValue = 3.5;\r\nprimitiveBundle.booleanValue = true;\r\nprimitiveBundle.charValue = 'a';\r\n```","```\r\nGson gson = new Gson();\r\nString json = gson.toJson(primitiveBundle);\r\n```","```\r\n{  \r\n   \"byteValue\":17,\r\n   \"shortValue\":3,\r\n   \"intValue\":3,\r\n   \"longValue\":3,\r\n   \"floatValue\":3.5,\r\n   \"doubleValue\":3.5,\r\n   \"booleanValue\":true,\r\n   \"charValue\":\"a\"\r\n}\r\n```","```\r\npublic class InfinityValuesExample {\r\n    public float negativeInfinity;\r\n    public float positiveInfinity;\r\n}\r\n```","```\r\nInfinityValuesExample model = new InfinityValuesExample();\r\nmodel.negativeInfinity = Float.NEGATIVE_INFINITY;\r\nmodel.positiveInfinity = Float.POSITIVE_INFINITY;\r\n\r\nGson gson = new Gson();\r\ngson.toJson(model);\r\n```","```\r\nGson gson = new Gson();\r\nPrimitiveBundle model = gson.fromJson(json, PrimitiveBundle.class);\r\n```","```\r\nassertEquals(17, model.byteValue);\r\nassertEquals(3, model.shortValue);\r\nassertEquals(3, model.intValue);\r\nassertEquals(3, model.longValue);\r\nassertEquals(3.5, model.floatValue, 0.0001);\r\nassertEquals(3.5, model.doubleValue, 0.0001);\r\nassertTrue(model.booleanValue);\r\nassertEquals('a', model.charValue); \r\n```","```\r\nString json = \"{\\\"byteValue\\\": \\\"15\\\", \\\"shortValue\\\": \\\"15\\\", \"\r\n  + \"\\\"intValue\\\": \\\"15\\\", \\\"longValue\\\": \\\"15\\\", \\\"floatValue\\\": \\\"15.0\\\"\"\r\n  + \", \\\"doubleValue\\\": \\\"15.0\\\"}\";\r\n\r\nGson gson = new Gson();\r\nPrimitiveBundleInitialized model = gson.fromJson(json, PrimitiveBundleInitialized.class); \r\n```","```\r\nassertEquals(15, model.byteValue);\r\nassertEquals(15, model.shortValue);\r\nassertEquals(15, model.intValue);\r\nassertEquals(15, model.longValue);\r\nassertEquals(15, model.floatValue, 0.0001);\r\nassertEquals(15, model.doubleValue, 0.0001);\r\n```","```\r\nString json = \"{\\\"byteValue\\\": \\\"\\\", \\\"shortValue\\\": \\\"\\\", \"\r\n  + \"\\\"intValue\\\": \\\"\\\", \\\"longValue\\\": \\\"\\\", \\\"floatValue\\\": \\\"\\\"\"\r\n  + \", \\\"doubleValue\\\": \\\"\\\"}\";\r\n\r\nGson gson = new Gson();\r\ngson.fromJson(json, PrimitiveBundleInitialized.class);\r\n```","```\r\npublic class PrimitiveBundleInitialized {\r\n    public byte byteValue = (byte) 1;\r\n    public short shortValue = (short) 1;\r\n    public int intValue = 1;\r\n    public long longValue = 1L;\r\n    public float floatValue = 1.0f;\r\n    public double doubleValue = 1;\r\n}\r\n```","```\r\nString json = \"{\\\"byteValue\\\": null, \\\"shortValue\\\": null, \"\r\n  + \"\\\"intValue\\\": null, \\\"longValue\\\": null, \\\"floatValue\\\": null\"\r\n  + \", \\\"doubleValue\\\": null}\";\r\n\r\nGson gson = new Gson();\r\nPrimitiveBundleInitialized model = gson.fromJson(json, PrimitiveBundleInitialized.class);\r\n\r\nassertEquals(1, model.byteValue);\r\nassertEquals(1, model.shortValue);\r\nassertEquals(1, model.intValue);\r\nassertEquals(1, model.longValue);\r\nassertEquals(1, model.floatValue, 0.0001);\r\nassertEquals(1, model.doubleValue, 0.0001);\r\n```","```\r\n{\"value\": 300}\r\n```","```\r\nclass ByteExample {\r\n    public byte value;\r\n}\r\n```","```\r\n{\"value\": 2.3}\r\n```","```\r\n{\"value\": 1}\r\n```","```\r\nclass BooleanExample {\r\n    public boolean value;\r\n}\r\n```","```\r\n{\"value\": \"\\u00AE\"}\r\n```"]