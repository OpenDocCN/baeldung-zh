["```\r\ndef jan_1_2019 = new Date(\"01/01/2019\")\r\nuse (TimeCategory) {\r\n    assert jan_1_2019 + 10.seconds == new Date(\"01/01/2019 00:00:10\")\r\n    assert jan_1_2019 + 20.minutes == new Date(\"01/01/2019 00:20:00\")\r\n    assert jan_1_2019 - 1.day == new Date(\"12/31/2018\")\r\n    assert jan_1_2019 - 2.months == new Date(\"11/01/2018\")\r\n}\r\n```","```\r\nSimpleDateFormat sdf = new SimpleDateFormat(\"dd/MM/yyyy\")\r\nuse (TimeCategory) {\r\n    assert sdf.format(5.days.from.now) == sdf.format(new Date() + 5.days)\r\n\r\n    sdf = new SimpleDateFormat(\"dd/MM/yyyy hh:mm:ss\")\r\n    assert sdf.format(10.minutes.from.now) == sdf.format(new Date() + 10.minutes)\r\n    assert sdf.format(2.hours.ago) == sdf.format(new Date() - 2.hours)\r\n}\r\n```","```\r\ndef baeldungArticlesText = \"\"\"\r\n<articles>\r\n    <article core-java=\"true\">\r\n        <title>An Intro to the Java Debug Interface (JDI)</title>\r\n        <desc>A quick and practical overview of Java Debug Interface.</desc>\r\n    </article>\r\n    <article core-java=\"false\">\r\n        <title>A Quick Guide to Working with Web Services in Groovy</title>\r\n        <desc>Learn how to work with Web Services in Groovy.</desc>\r\n    </article>\r\n</articles>\r\n\"\"\"\r\n\r\ndef baeldungArticlesDom = DOMBuilder.newInstance().parseText(baeldungArticlesText)\r\ndef root = baeldungArticlesDom.documentElement\r\n```","```\r\nuse (DOMCategory) {\r\n    assert root.article.size() == 2\r\n\r\n    def articles = root.article\r\n    assert articles[0].title.text() == \"An Intro to the Java Debug Interface (JDI)\"\r\n    assert articles[1].desc.text() == \"Learn how to work with Web Services in Groovy.\"\r\n}\r\n```","```\r\nuse (DOMCategory) {\r\n    def articleNode3 = root.appendNode(new QName(\"article\"), [\"core-java\": \"false\"])\r\n    articleNode3.appendNode(\"title\", \"Metaprogramming in Groovy\")\r\n    articleNode3.appendNode(\"desc\", \"Explore the concept of metaprogramming in Groovy\")\r\n\r\n    assert root.article.size() == 3\r\n    assert root.article[2].title.text() == \"Metaprogramming in Groovy\"\r\n}\r\n```","```\r\nclass BaeldungCategory {\r\n    public static String capitalize(String self) {\r\n        String capitalizedStr = self;\r\n        if (self.size() > 0) {\r\n            capitalizedStr = self.substring(0, 1).toUpperCase() + self.substring(1);\r\n        }\r\n        return capitalizedStr\r\n    }\r\n}\r\n```","```\r\nuse (BaeldungCategory) {\r\n    assert \"norman\".capitalize() == \"Norman\"\r\n}\r\n```","```\r\npublic static double toThePower(Number self, Number exponent) {\r\n    return Math.pow(self, exponent);\r\n}\r\n```","```\r\nuse (BaeldungCategory) {\r\n    assert 50.toThePower(2) == 2500\r\n    assert 2.4.toThePower(4) == 33.1776\r\n}\r\n```","```\r\n@Category(Number)\r\nclass NumberCategory {\r\n    public Number cube() {\r\n        return this*this*this\r\n    }\r\n\r\n    public int divideWithRoundUp(BigDecimal divisor, boolean isRoundUp) {\r\n        def mathRound = isRoundUp ? BigDecimal.ROUND_UP : BigDecimal.ROUND_DOWN\r\n        return (int)new BigDecimal(this).divide(divisor, 0, mathRound)\r\n    }\r\n}\r\n```","```\r\nuse (NumberCategory) {\r\n    assert 3.cube() == 27\r\n    assert 25.divideWithRoundUp(6, true) == 5\r\n    assert 120.23.divideWithRoundUp(6.1, true) == 20\r\n    assert 150.9.divideWithRoundUp(12.1, false) == 12\r\n}\r\n```"]