["```\r\nclass LongRunningAction implements Runnable {\r\n    private String threadName;\r\n    private Phaser ph;\r\n\r\n    LongRunningAction(String threadName, Phaser ph) {\r\n        this.threadName = threadName;\r\n        this.ph = ph;\r\n        ph.register();\r\n    }\r\n\r\n    @Override\r\n    public void run() {\r\n        ph.arriveAndAwaitAdvance();\r\n        try {\r\n            Thread.sleep(20);\r\n        } catch (InterruptedException e) {\r\n            e.printStackTrace();\r\n        }\r\n        ph.arriveAndDeregister();\r\n    }\r\n}\r\n```","```\r\nExecutorService executorService = Executors.newCachedThreadPool();\r\nPhaser ph = new Phaser(1);\r\n\r\nassertEquals(0, ph.getPhase());\r\n```","```\r\nexecutorService.submit(new LongRunningAction(\"thread-1\", ph));\r\nexecutorService.submit(new LongRunningAction(\"thread-2\", ph));\r\nexecutorService.submit(new LongRunningAction(\"thread-3\", ph));\r\n\r\nph.arriveAndAwaitAdvance();\r\n\r\nassertEquals(1, ph.getPhase());\r\n```","```\r\nexecutorService.submit(new LongRunningAction(\"thread-4\", ph));\r\nexecutorService.submit(new LongRunningAction(\"thread-5\", ph));\r\nph.arriveAndAwaitAdvance();\r\n\r\nassertEquals(2, ph.getPhase());\r\n\r\nph.arriveAndDeregister();\r\n```","```\r\nThis is phase 0\r\nThis is phase 0\r\nThis is phase 0\r\nThread thread-2 before long running action\r\nThread thread-1 before long running action\r\nThread thread-3 before long running action\r\nThis is phase 1\r\nThis is phase 1\r\nThread thread-4 before long running action\r\nThread thread-5 before long running action\r\n```"]