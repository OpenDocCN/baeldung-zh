["```\r\nint[] listOutputSorted = IntStream.of(-3, 10, -4, 1, 3)\r\n  .sorted()\r\n  .toArray();\r\n```","```\r\nList<Optional<Customer>> customers = Arrays.asList(\r\n    Optional.of(new Customer(\"John P.\", 15)),\r\n    Optional.of(new Customer(\"Sarah M.\", 78)),\r\n    Optional.empty(),\r\n    Optional.of(new Customer(\"Mary T.\", 20)),\r\n    Optional.empty(),\r\n    Optional.of(new Customer(\"Florian G.\", 89)),\r\n    Optional.empty()\r\n);\r\n\r\nlong numberOf65PlusCustomers = customers\r\n  .stream()\r\n  .flatMap(c -> c\r\n    .map(Stream::of)\r\n    .orElseGet(Stream::empty))\r\n  .mapToInt(Customer::getAge)\r\n  .filter(c -> c > 65)\r\n  .count();\r\n```"]