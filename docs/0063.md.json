["```\r\npublic class Coffee {\r\n\r\n    private String name;\r\n    private String brand;\r\n    private LocalDateTime date;\r\n\r\n   //getters and setters\r\n}\r\n```","```\r\n@GetMapping(\"/coffee\")\r\npublic Coffee getCoffee(\r\n        @RequestParam(required = false) String brand,\r\n        @RequestParam(required = false) String name) {\r\n    return new Coffee()\r\n      .setBrand(brand)\r\n      .setDate(FIXED_DATE)\r\n      .setName(name);\r\n}\r\n```","```\r\n{\r\n  \"name\": null,\r\n  \"brand\": \"Lavazza\",\r\n  \"date\": \"2020-11-16T10:21:35.974\"\r\n}\r\n```","```\r\n{\r\n  \"brand\": \"Lavazza\",\r\n  \"date\": \"04-11-2020 10:34\"\r\n}\r\n```","```\r\nspring.jackson.<category_name>.<feature_name>=true,false\r\n```","```\r\nspring.jackson.serialization.write-dates-as-timestamps=false\r\n```","```\r\nspring.jackson.default-property-inclusion=always, non_null, non_absent, non_default, non_empty \r\n```","```\r\n{\r\n  \"brand\": \"Lavazza\",\r\n  \"date\": \"2020-11-16T10:35:34.593\"\r\n}\r\n```","```\r\n@Configuration\r\n@PropertySource(\"classpath:coffee.properties\")\r\npublic class CoffeeRegisterModuleConfig {\r\n\r\n    @Bean\r\n    public Module javaTimeModule() {\r\n        JavaTimeModule module = new JavaTimeModule();\r\n        module.addSerializer(LOCAL_DATETIME_SERIALIZER);\r\n        return module;\r\n    }\r\n} \r\n```","```\r\nspring.jackson.default-property-inclusion=non_null\r\n```","```\r\n{\r\n  \"brand\": \"Lavazza\",\r\n  \"date\": \"16-11-2020 10:43\"\r\n}\r\n```","```\r\n@Bean\r\npublic Jackson2ObjectMapperBuilderCustomizer jsonCustomizer() {\r\n    return builder -> builder.serializationInclusion(JsonInclude.Include.NON_NULL)\r\n      .serializers(LOCAL_DATETIME_SERIALIZER);\r\n}\r\n```","```\r\n@Bean\r\n@Primary\r\npublic ObjectMapper objectMapper() {\r\n    JavaTimeModule module = new JavaTimeModule();\r\n    module.addSerializer(LOCAL_DATETIME_SERIALIZER);\r\n    return new ObjectMapper()\r\n      .setSerializationInclusion(JsonInclude.Include.NON_NULL)\r\n      .registerModule(module);\r\n}\r\n```","```\r\n@Bean\r\npublic Jackson2ObjectMapperBuilder jackson2ObjectMapperBuilder() {\r\n    return new Jackson2ObjectMapperBuilder().serializers(LOCAL_DATETIME_SERIALIZER)\r\n      .serializationInclusion(JsonInclude.Include.NON_NULL);\r\n}\r\n```","```\r\n@Bean\r\npublic MappingJackson2HttpMessageConverter mappingJackson2HttpMessageConverter() {\r\n    Jackson2ObjectMapperBuilder builder = new Jackson2ObjectMapperBuilder().serializers(LOCAL_DATETIME_SERIALIZER)\r\n      .serializationInclusion(JsonInclude.Include.NON_NULL);\r\n    return new MappingJackson2HttpMessageConverter(builder.build());\r\n}\r\n```","```\r\n@Test\r\npublic void whenGetCoffee_thenSerializedWithDateAndNonNull() {\r\n    String formattedDate = DateTimeFormatter.ofPattern(CoffeeConstants.dateTimeFormat).format(FIXED_DATE);\r\n    String brand = \"Lavazza\";\r\n    String url = \"/coffee?brand=\" + brand;\r\n\r\n    String response = restTemplate.getForObject(url, String.class);\r\n\r\n    assertThat(response).isEqualTo(\"{\\\"brand\\\":\\\"\" + brand + \"\\\",\\\"date\\\":\\\"\" + formattedDate + \"\\\"}\");\r\n}\r\n```"]