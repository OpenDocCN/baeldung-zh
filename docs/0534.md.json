["```\r\npublic class Main { \r\n\r\n    public static void main(String[] args) {\r\n        long lengthyColors = List.of(\"Red\", \"Green\", \"Blue\")\r\n          .stream().filter(c -> c.length() > 3).count();\r\n    }\r\n}\r\n```","```\r\njavap -c -p Main\r\n// truncated\r\n// class names are simplified for the sake of brevity \r\n// for instance, Stream is actually java/util/stream/Stream\r\n0: ldc               #7             // String Red\r\n2: ldc               #9             // String Green\r\n4: ldc               #11            // String Blue\r\n6: invokestatic      #13            // InterfaceMethod List.of:(LObject;LObject;)LList;\r\n9: invokeinterface   #19,  1        // InterfaceMethod List.stream:()LStream;\r\n14: invokedynamic    #23,  0        // InvokeDynamic #0:test:()LPredicate;\r\n19: invokeinterface  #27,  2        // InterfaceMethod Stream.filter:(LPredicate;)LStream;\r\n24: invokeinterface  #33,  1        // InterfaceMethod Stream.count:()J\r\n29: lstore_1\r\n30: return\r\n```","```\r\nprivate static boolean lambda$main$0(java.lang.String);\r\n    Code:\r\n       0: aload_0\r\n       1: invokevirtual #37                 // Method java/lang/String.length:()I\r\n       4: iconst_3\r\n       5: if_icmple     12\r\n       8: iconst_1\r\n       9: goto          13\r\n      12: iconst_0\r\n      13: ireturn\r\n```","```\r\nc -> c.length() > 3\r\n```","```\r\n14: invokedynamic #23,  0  // InvokeDynamic #0:test:()Ljava/util/function/Predicate;\r\n```","```\r\njavap -c -p -v Main\r\n// truncated\r\n// added new lines for brevity\r\nBootstrapMethods:\r\n  0: #55 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:\r\n    (Ljava/lang/invoke/MethodHandles$Lookup;\r\n     Ljava/lang/String;\r\n     Ljava/lang/invoke/MethodType;\r\n     Ljava/lang/invoke/MethodType;\r\n     Ljava/lang/invoke/MethodHandle;\r\n     Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\r\n    Method arguments:\r\n      #62 (Ljava/lang/Object;)Z\r\n      #64 REF_invokeStatic Main.lambda$main$0:(Ljava/lang/String;)Z\r\n      #67 (Ljava/lang/String;)Z\r\n```","```\r\npublic record Color(String name, int code) {}\r\n```","```\r\npublic final boolean equals(java.lang.Object);\r\n    Code:\r\n       0: aload_0\r\n       1: aload_1\r\n       2: invokedynamic #27,  0  // InvokeDynamic #0:equals:(LColor;Ljava/lang/Object;)Z\r\n       7: ireturn\r\n```","```\r\nBootstrapMethods:\r\n  0: #42 REF_invokeStatic java/lang/runtime/ObjectMethods.bootstrap:\r\n    (Ljava/lang/invoke/MethodHandles$Lookup;\r\n     Ljava/lang/String;\r\n     Ljava/lang/invoke/TypeDescriptor;\r\n     Ljava/lang/Class;\r\n     Ljava/lang/String;\r\n     [Ljava/lang/invoke/MethodHandle;)Ljava/lang/Object;\r\n    Method arguments:\r\n      #8 Color\r\n      #49 name;code\r\n      #51 REF_getField Color.name:Ljava/lang/String;\r\n      #52 REF_getField Color.code:I\r\n```","```\r\n\"random-\" + ThreadLocalRandom.current().nextInt();\r\n```","```\r\n0: invokestatic  #7          // Method ThreadLocalRandom.current:()LThreadLocalRandom;\r\n3: invokevirtual #13         // Method ThreadLocalRandom.nextInt:()I\r\n6: invokedynamic #17,  0     // InvokeDynamic #0:makeConcatWithConstants:(I)LString;\r\n```","```\r\nBootstrapMethods:\r\n  0: #30 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:\r\n    (Ljava/lang/invoke/MethodHandles$Lookup;\r\n     Ljava/lang/String;\r\n     Ljava/lang/invoke/MethodType;\r\n     Ljava/lang/String;\r\n     [Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\r\n    Method arguments:\r\n      #36 random-\\u0001\r\n```"]