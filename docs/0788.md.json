["```\r\nMap<String, Integer> items = new HashMap<>();\r\n// insert\r\nitems.put(\"158-865-A\", 56);\r\n// find\r\nInteger count = items.get(\"158-865-A\");\r\n```","```\r\nMap<Coordinate, Color> pixels = new HashMap<>();\r\nCoordinate coord = new Coordinate(1, 2);\r\npixels.put(coord, Color.CYAN);\r\n// read the color\r\nColor color = pixels.get(new Coordinate(1, 2));\r\n```","```\r\npublic class Coordinate {\r\n    private final int x;\r\n    private final int y;\r\n    private int hashCode;\r\n\r\n    public Coordinate(int x, int y) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.hashCode = Objects.hash(x, y);\r\n    }\r\n\r\n    public int getX() {\r\n        return x;\r\n    }\r\n\r\n    public int getY() {\r\n        return y;\r\n    }\r\n\r\n    @Override\r\n    public boolean equals(Object o) {\r\n        if (this == o)\r\n            return true;\r\n        if (o == null || getClass() != o.getClass())\r\n            return false;\r\n        Coordinate that = (Coordinate) o;\r\n        return x == that.x && y == that.y;\r\n    }\r\n\r\n    @Override\r\n    public int hashCode() {\r\n        return this.hashCode;\r\n    }\r\n} \r\n```","```\r\n@RequiredArgsConstructor\r\n@Getter\r\n// no calculation in the constructor, but\r\n// since Lombok 1.18.16, we can cache the hash code\r\n@EqualsAndHashCode(cacheStrategy = CacheStrategy.LAZY)\r\npublic class Coordinate {\r\n    private final int x;\r\n    private final int y;\r\n} \r\n```","```\r\npublic class Coordinate {\r\n\r\n    ...\r\n\r\n    @Override\r\n    public int hashCode() {\r\n        return 1; // return same hash value for all instances\r\n    }\r\n}\r\n```","```\r\nMap<Coordinate, Color> pixels = new HashMap<>();\r\nCoordinate coord = new Coordinate(1, 2); // x=1, y=2\r\npixels.put(coord, Color.CYAN);\r\ncoord.setX(3); // x=3, y=2\r\n```","```\r\nColor color = pixels.get(coord);\r\n```","```\r\npixels.put(coord, Color.CYAN);\r\n```"]