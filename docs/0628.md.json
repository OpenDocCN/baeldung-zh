["```\r\ndocker pull microsoft/azure-cosmosdb-emulator\r\n```","```\r\nset containerName=azure-cosmosdb-emulator\r\nset hostDirectory=%LOCALAPPDATA%\\azure-cosmosdb-emulator.hostd\r\nmd %hostDirectory% 2>nul\r\ndocker run --name %containerName% --memory 2GB --mount \"type=bind,source=%hostDirectory%,destination=C:\\CosmosDB.Emulator\\bind-mount\" -P --interactive --tty microsoft/azure-cosmosdb-emulator\r\n```","```\r\n<dependency> \r\n    <groupId>com.microsoft.azure</groupId> \r\n    <artifactId>spring-data-cosmosdb</artifactId> \r\n    <version>2.3.0</version> \r\n</dependency> \r\n```","```\r\nazure.cosmosdb.uri=cosmodb-uri\r\nazure.cosmosdb.key=cosmodb-primary-key\r\nazure.cosmosdb.secondaryKey=cosmodb-secondary-key\r\nazure.cosmosdb.database=cosmodb-name \r\n```","```\r\n@Configuration\r\n@EnableCosmosRepositories(basePackages = \"com.baeldung.spring.data.cosmosdb.repository\")\r\npublic class AzureCosmosDbConfiguration extends AbstractCosmosConfiguration {\r\n\r\n    @Value(\"${azure.cosmosdb.uri}\")\r\n    private String uri;\r\n\r\n    @Value(\"${azure.cosmosdb.key}\")\r\n    private String key;\r\n\r\n    @Value(\"${azure.cosmosdb.database}\")\r\n    private String dbName;\r\n\r\n    private CosmosKeyCredential cosmosKeyCredential;\r\n\r\n    @Bean\r\n    public CosmosDBConfig getConfig() {\r\n        this.cosmosKeyCredential = new CosmosKeyCredential(key);\r\n        CosmosDBConfig cosmosdbConfig = CosmosDBConfig.builder(uri, this.cosmosKeyCredential, dbName)\r\n            .build();\r\n        return cosmosdbConfig;\r\n    }\r\n}\r\n```","```\r\n@Document(collection = \"products\")\r\npublic class Product {\r\n\r\n    @Id\r\n    private String productid;\r\n\r\n    private String productName;\r\n\r\n    private double price;\r\n\r\n    @PartitionKey\r\n    private String productCategory;\r\n}\r\n```","```\r\n@Repository\r\npublic interface ProductRepository extends CosmosRepository<Product, String> {\r\n    List findByProductName(String productName);\r\n\r\n}\r\n```","```\r\n@SpringBootTest\r\npublic class AzureCosmosDbApplicationManualTest {\r\n\r\n    @Autowired\r\n    ProductRepository productRepository;\r\n\r\n    @Test\r\n    public void givenProductIsCreated_whenCallFindById_thenProductIsFound() {\r\n        Product product = new Product();\r\n        product.setProductid(\"1001\");\r\n        product.setProductCategory(\"Shirt\");\r\n        product.setPrice(110.0);\r\n        product.setProductName(\"Blue Shirt\");\r\n\r\n        productRepository.save(product);\r\n        Product retrievedProduct = productRepository.findById(\"1001\", new PartitionKey(\"Shirt\"))\r\n            .orElse(null);\r\n        Assert.notNull(retrievedProduct, \"Retrieved Product is Null\");\r\n    }\r\n\r\n}\r\n```"]