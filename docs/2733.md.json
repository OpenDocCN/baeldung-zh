["```\r\n@Retention(RetentionPolicy.RUNTIME)\r\npublic @interface FirstAnnotation {\r\n}\r\n```","```\r\n@Retention(RetentionPolicy.RUNTIME)\r\npublic @interface SecondAnnotation {\r\n}\r\n```","```\r\n@Retention(RetentionPolicy.SOURCE)\r\npublic @interface ThirdAnnotation {\r\n}\r\n```","```\r\npublic class ClassWithAnnotations {\r\n\r\n    @FirstAnnotation\r\n    @SecondAnnotation\r\n    @ThirdAnnotation\r\n    private String classMember;\r\n}\r\n```","```\r\n@Test\r\npublic void whenCallingGetDeclaredAnnotations_thenOnlyRuntimeAnnotationsAreAvailable() throws NoSuchFieldException {\r\n    Field classMemberField = ClassWithAnnotations.class.getDeclaredField(\"classMember\");\r\n    Annotation[] annotations = classMemberField.getDeclaredAnnotations();\r\n    assertThat(annotations).hasSize(2);\r\n}\r\n```","```\r\n@Test\r\npublic void whenCallingIsAnnotationPresent_thenOnlyRuntimeAnnotationsAreAvailable() throws NoSuchFieldException {\r\n    Field classMemberField = ClassWithAnnotations.class.getDeclaredField(\"classMember\");\r\n    assertThat(classMemberField.isAnnotationPresent(FirstAnnotation.class)).isTrue();\r\n    assertThat(classMemberField.isAnnotationPresent(SecondAnnotation.class)).isTrue();\r\n    assertThat(classMemberField.isAnnotationPresent(ThirdAnnotation.class)).isFalse();\r\n}\r\n```","```\r\n@Test\r\npublic void whenCallingGetDeclaredAnnotationsOrGetAnnotations_thenSameAnnotationsAreReturned() throws NoSuchFieldException {\r\n    Field classMemberField = ClassWithAnnotations.class.getDeclaredField(\"classMember\");\r\n    Annotation[] declaredAnnotations = classMemberField.getDeclaredAnnotations();\r\n    Annotation[] annotations = classMemberField.getAnnotations();\r\n    assertThat(declaredAnnotations).containsExactly(annotations);\r\n}\r\n```","```\r\n@Override\r\npublic Annotation[] getAnnotations() {\r\n    return getDeclaredAnnotations();\r\n}\r\n```"]