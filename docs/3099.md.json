["```\r\n<dependency>\r\n    <groupId>org.apache.kafka</groupId>\r\n    <artifactId>kafka-clients</artifactId>\r\n    <version>2.8.0</version>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>org.testcontainers</groupId>\r\n    <artifactId>kafka</artifactId>\r\n    <version>1.15.3</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>org.testcontainers</groupId>\r\n    <artifactId>junit-jupiter</artifactId>\r\n    <version>1.15.3</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n```","```\r\nProperties properties = new Properties();\r\nproperties.put(\r\n  AdminClientConfig.BOOTSTRAP_SERVERS_CONFIG, KAFKA_CONTAINER.getBootstrapServers()\r\n);\r\n```","```\r\nAdmin admin = Admin.create(properties)\r\n```","```\r\n@Test\r\nvoid givenTopicName_whenCreateNewTopic_thenTopicIsCreated() throws Exception {\r\n    kafkaTopicApplication.createTopic(\"test-topic\");\r\n\r\n    String topicCommand = \"/usr/bin/kafka-topics --bootstrap-server=localhost:9092 --list\";\r\n    String stdout = KAFKA_CONTAINER.execInContainer(\"/bin/sh\", \"-c\", topicCommand)\r\n      .getStdout();\r\n\r\n    assertThat(stdout).contains(\"test-topic\");\r\n}\r\n```","```\r\ntry (Admin admin = Admin.create(properties)) {\r\n    int partitions = 1;\r\n    short replicationFactor = 1;\r\n    NewTopic newTopic = new NewTopic(topicName, partitions, replicationFactor);\r\n\r\n    CreateTopicsResult result = admin.createTopics(\r\n      Collections.singleton(newTopic)\r\n    );\r\n\r\n    KafkaFuture<Void> future = result.values().get(topicName);\r\n    future.get();\r\n}\r\n```","```\r\nCreateTopicsOptions topicOptions = new CreateTopicsOptions()\r\n  .validateOnly(true)\r\n  .retryOnQuotaViolation(false);\r\n\r\nCreateTopicsResult result = admin.createTopics(\r\n  Collections.singleton(newTopic), topicOptions\r\n);\r\n```","```\r\n// Create a compacted topic with 'lz4' compression codec\r\nMap<String, String> newTopicConfig = new HashMap<>();\r\nnewTopicConfig.put(TopicConfig.CLEANUP_POLICY_CONFIG, TopicConfig.CLEANUP_POLICY_COMPACT);\r\nnewTopicConfig.put(TopicConfig.COMPRESSION_TYPE_CONFIG, \"lz4\");\r\n\r\nNewTopic newTopic = new NewTopic(topicName, partitions, replicationFactor)\r\n  .configs(newTopicConfig);\r\n```"]