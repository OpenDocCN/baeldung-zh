["```\r\n<dependency>\r\n    <groupId>org.springframework.data</groupId>\r\n    <artifactId>spring-data-mongodb</artifactId>\r\n    <version>3.0.3.RELEASE</version>\r\n</dependency>\r\n```","```\r\n@Document\r\npublic class Action {\r\n    @Id\r\n    private String id;\r\n\r\n    private String description;\r\n    private ZonedDateTime time;\r\n\r\n    // constructor, getters and setters \r\n}\r\n```","```\r\npublic interface ActionRepository extends MongoRepository<Action, String> { }\r\n```","```\r\n@Test\r\npublic void givenSavedAction_TimeIsRetrievedCorrectly() {\r\n    String id = \"testId\";\r\n    ZonedDateTime now = ZonedDateTime.now(ZoneOffset.UTC);\r\n\r\n    actionRepository.save(new Action(id, \"click-action\", now));\r\n    Action savedAction = actionRepository.findById(id).get();\r\n\r\n    Assert.assertEquals(now.withNano(0), savedAction.getTime().withNano(0)); \r\n}\r\n```","```\r\norg.bson.codecs.configuration.CodecConfigurationException:\r\n  Can't find a codec for class java.time.ZonedDateTime\r\n```","```\r\npublic class ZonedDateTimeReadConverter implements Converter<Date, ZonedDateTime> {\r\n    @Override\r\n    public ZonedDateTime convert(Date date) {\r\n        return date.toInstant().atZone(ZoneOffset.UTC);\r\n    }\r\n}\r\n```","```\r\npublic class ZonedDateTimeWriteConverter implements Converter<ZonedDateTime, Date> {\r\n    @Override\r\n    public Date convert(ZonedDateTime zonedDateTime) {\r\n        return Date.from(zonedDateTime.toInstant());\r\n    }\r\n}\r\n```","```\r\nAction{id='testId', description='click', time=2018-11-08T08:03:11.257Z}\r\n```"]