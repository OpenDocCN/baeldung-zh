["```\r\nDB db = DBMaker.memoryDB().make();\r\n```","```\r\nString welcomeMessageKey = \"Welcome Message\";\r\nString welcomeMessageString = \"Hello Baeldung!\";\r\n\r\nHTreeMap myMap = db.hashMap(\"myMap\").createOrOpen();\r\nmyMap.put(welcomeMessageKey, welcomeMessageString);\r\n```","```\r\nString welcomeMessageFromDB = (String) myMap.get(welcomeMessageKey);\r\nassertEquals(welcomeMessageString, welcomeMessageFromDB);\r\n```","```\r\ndb.close();\r\n```","```\r\nDB db = DBMaker.fileDB(\"file.db\").make();\r\n```","```\r\nDB db = DBMaker.memoryDB().make();\r\n```","```\r\nNavigableSet<String> set = db\r\n  .treeSet(\"mySet\")\r\n  .serializer(Serializer.STRING)\r\n  .createOrOpen();\r\n```","```\r\nset.add(\"Baeldung\");\r\nset.add(\"is awesome\");\r\n```","```\r\nassertEquals(2, set.size());\r\n```","```\r\nset.add(\"Baeldung\");\r\n\r\nassertEquals(2, set.size());\r\n```","```\r\nDB db = DBMaker.memoryDB().transactionEnable().make();\r\n```","```\r\nNavigableSet<String> set = db\r\n  .treeSet(\"mySet\")\r\n  .serializer(Serializer.STRING)\r\n  .createOrOpen();\r\n\r\nset.add(\"One\");\r\nset.add(\"Two\");\r\n\r\ndb.commit();\r\n\r\nassertEquals(2, set.size());\r\n```","```\r\nset.add(\"Three\");\r\n\r\nassertEquals(3, set.size());\r\n```","```\r\ndb.rollback();\r\n\r\nassertEquals(2, set.size());\r\n```","```\r\nHTreeMap<String, Long> map = db.hashMap(\"indentification_name\")\r\n  .keySerializer(Serializer.STRING)\r\n  .valueSerializer(Serializer.LONG)\r\n  .create();\r\n```","```\r\nDB db = DBMaker.memoryDB().make();\r\n\r\nHTreeMap<String, String> hTreeMap = db\r\n  .hashMap(\"myTreeMap\")\r\n  .keySerializer(Serializer.STRING)\r\n  .valueSerializer(Serializer.STRING)\r\n  .create();\r\n```","```\r\nhTreeMap.put(\"key1\", \"value1\");\r\nhTreeMap.put(\"key2\", \"value2\");\r\n\r\nassertEquals(2, hTreeMap.size());\r\n```","```\r\nhTreeMap.put(\"key1\", \"value3\");\r\n\r\nassertEquals(2, hTreeMap.size());\r\nassertEquals(\"value3\", hTreeMap.get(\"key1\"));\r\n```","```\r\nString VOLUME_LOCATION = \"sortedTableMapVol.db\";\r\n\r\nVolume vol = MappedFileVol.FACTORY.makeVolume(VOLUME_LOCATION, false);\r\n\r\nSortedTableMap.Sink<Integer, String> sink =\r\n  SortedTableMap.create(\r\n    vol,\r\n    Serializer.INTEGER,\r\n    Serializer.STRING)\r\n    .createFromSink();\r\n```","```\r\nfor(int i = 0; i < 100; i++){\r\n  sink.put(i, \"Value \" + Integer.toString(i));\r\n}\r\n\r\nsink.create();\r\n```","```\r\nVolume openVol = MappedFileVol.FACTORY.makeVolume(VOLUME_LOCATION, true);\r\n\r\nSortedTableMap<Integer, String> sortedTableMap = SortedTableMap\r\n  .open(\r\n    openVol,\r\n    Serializer.INTEGER,\r\n    Serializer.STRING);\r\n\r\nassertEquals(100, sortedTableMap.size());\r\n```","```\r\nDB db = DBMaker.heapDB().make();\r\n```","```\r\nDB db = DBMaker.memoryDB().make();\r\n```","```\r\nDB db = DBMaker.memoryDirectDB().make();\r\n```"]