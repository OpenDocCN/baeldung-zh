["```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-actuator</artifactId>\r\n    <version>2.5.1</version>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n    <version>2.5.1</version>\r\n</dependency>\r\n```","```\r\n{\"_links\":{\"self\":{\"href\":\"http://localhost:8080/actuator\",\"templated\":false},\r\n\"health\":{\"href\":\"http://localhost:8080/actuator/health\",\"templated\":false},\r\n\"info\":{\"href\":\"http://localhost:8080/actuator/info\",\"templated\":false}}}\r\n```","```\r\nmanagement.endpoints.web.exposure.include=*\r\n```","```\r\n{\"_links\":{\"self\":{\"href\":\"http://localhost:8080/actuator\",\"templated\":false},\r\n\"beans\":{\"href\":\"http://localhost:8080/actuator/beans\",\"templated\":false},\r\n\"caches\":{\"href\":\"http://localhost:8080/actuator/caches\",\"templated\":false},\r\n\"health\":{\"href\":\"http://localhost:8080/actuator/health\",\"templated\":false},\r\n\"info\":{\"href\":\"http://localhost:8080/actuator/info\",\"templated\":false},\r\n\"conditions\":{\"href\":\"http://localhost:8080/actuator/conditions\",\"templated\":false},\r\n\"configprops\":{\"href\":\"http://localhost:8080/actuator/configprops\",\"templated\":false},\r\n\"env\":{\"href\":\"http://localhost:8080/actuator/env\",\"templated\":false},\r\n\"loggers\":{\"href\":\"http://localhost:8080/actuator/loggers\",\"templated\":false},\r\n\"heapdump\":{\"href\":\"http://localhost:8080/actuator/heapdump\",\"templated\":false},\r\n\"threaddump\":{\"href\":\"http://localhost:8080/actuator/threaddump\",\"templated\":false},\r\n\"metrics\":{\"href\":\"http://localhost:8080/actuator/metrics\",\"templated\":false},\r\n\"scheduledtasks\":{\"href\":\"http://localhost:8080/actuator/scheduledtasks\",\"templated\":false},\r\n\"mappings\":{\"href\":\"http://localhost:8080/actuator/mappings\",\"templated\":false}}}\r\n```","```\r\nmanagement.endpoints.web.exposure.include=beans, loggers\r\n```","```\r\nmanagement.endpoints.web.exposure.include=*\r\nmanagement.endpoints.web.exposure.exclude=threaddump\r\n```","```\r\nmanagement.endpoints.enabled-by-default=false\r\n```","```\r\nmanagement.endpoint.health.enabled=true\r\nmanagement.endpoints.web.exposure.include=health\r\n```","```\r\nmanagement.endpoint.shutdown.enabled=true\r\n```","```\r\ncurl -X POST http://localhost:8080/actuator/shutdown\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-security</artifactId>\r\n    <version>2.5.1</version>\r\n</dependency>\r\n```","```\r\n@SpringBootApplication(exclude = { \r\n    SecurityAutoConfiguration.class, \r\n    ManagementWebSecurityAutoConfiguration.class \r\n})\r\n```","```\r\n@Override\r\nprotected void configure(AuthenticationManagerBuilder auth) throws Exception {\r\n    PasswordEncoder encoder = PasswordEncoderFactories.createDelegatingPasswordEncoder();\r\n    auth\r\n      .inMemoryAuthentication()\r\n      .withUser(\"user\")\r\n      .password(encoder.encode(\"password\"))\r\n      .roles(\"USER\")\r\n      .and()\r\n      .withUser(\"admin\")\r\n      .password(encoder.encode(\"admin\"))\r\n      .roles(\"USER\", \"ADMIN\");\r\n}\r\n```","```\r\nhttp.requestMatcher(EndpointRequest.toAnyEndpoint())\r\n  .authorizeRequests((requests) -> requests.anyRequest().hasRole(\"ADMIN\"));\r\n```"]