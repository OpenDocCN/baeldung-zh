["```\r\npublic class Person {\r\n    private String lastName;\r\n    private String firstName;\r\n    private LocalDate dateOfBirth;\r\n\r\n    // standard constructors, getters, setters\r\n}\r\n```","```\r\npublic class PersonService {\r\n\r\n    public String getFullName(Person person){\r\n        return person.getLastName()+\" \"+person.getFirstName();\r\n    }\r\n\r\n    public int getAge(Person person){\r\n        Period p = Period.between(person.getDateOfBirth(), LocalDate.now());\r\n        return p.getYears();\r\n    }\r\n}\r\n```","```\r\n@Configuration\r\n@EnableAspectJAutoProxy\r\n@Aspect\r\npublic class AopConfiguration {\r\n\r\n    @Pointcut(\r\n      \"execution(public String com.baeldung.performancemonitor.PersonService.getFullName(..))\"\r\n    )\r\n    public void monitor() { }\r\n\r\n    @Bean\r\n    public PerformanceMonitorInterceptor performanceMonitorInterceptor() {\r\n        return new PerformanceMonitorInterceptor(true);\r\n    }\r\n\r\n    @Bean\r\n    public Advisor performanceMonitorAdvisor() {\r\n        AspectJExpressionPointcut pointcut = new AspectJExpressionPointcut();\r\n        pointcut.setExpression(\"com.baeldung.performancemonitor.AopConfiguration.monitor()\");\r\n        return new DefaultPointcutAdvisor(pointcut, performanceMonitorInterceptor());\r\n    }\r\n\r\n    @Bean\r\n    public Person person(){\r\n        return new Person(\"John\",\"Smith\", LocalDate.of(1980, Month.JANUARY, 12));\r\n    }\r\n\r\n    @Bean\r\n    public PersonService personService(){\r\n        return new PersonService();\r\n    }\r\n}\r\n```","```\r\nlog4j.logger.org.springframework.aop.interceptor.PerformanceMonitorInterceptor=TRACE, stdout\r\n```","```\r\n2017-01-08 19:19:25 TRACE \r\n  PersonService:66 - StopWatch \r\n  'com.baeldung.performancemonitor.PersonService.getFullName': \r\n  running time (millis) = 10\r\n```","```\r\npublic class MyPerformanceMonitorInterceptor extends AbstractMonitoringInterceptor {\r\n\r\n    public MyPerformanceMonitorInterceptor() {\r\n    }\r\n\r\n    public MyPerformanceMonitorInterceptor(boolean useDynamicLogger) {\r\n            setUseDynamicLogger(useDynamicLogger);\r\n    }\r\n\r\n    @Override\r\n    protected Object invokeUnderTrace(MethodInvocation invocation, Log log) \r\n      throws Throwable {\r\n        String name = createInvocationTraceName(invocation);\r\n        long start = System.currentTimeMillis();\r\n        log.info(\"Method \" + name + \" execution started at:\" + new Date());\r\n        try {\r\n            return invocation.proceed();\r\n        }\r\n        finally {\r\n            long end = System.currentTimeMillis();\r\n            long time = end - start;\r\n            log.info(\"Method \"+name+\" execution lasted:\"+time+\" ms\");\r\n            log.info(\"Method \"+name+\" execution ended at:\"+new Date());\r\n\r\n            if (time > 10){\r\n                log.warn(\"Method execution longer than 10 ms!\");\r\n            }            \r\n        }\r\n    }\r\n}\r\n```","```\r\n@Pointcut(\"execution(public int com.baeldung.performancemonitor.PersonService.getAge(..))\")\r\npublic void myMonitor() { }\r\n\r\n@Bean\r\npublic MyPerformanceMonitorInterceptor myPerformanceMonitorInterceptor() {\r\n    return new MyPerformanceMonitorInterceptor(true);\r\n}\r\n\r\n@Bean\r\npublic Advisor myPerformanceMonitorAdvisor() {\r\n    AspectJExpressionPointcut pointcut = new AspectJExpressionPointcut();\r\n    pointcut.setExpression(\"com.baeldung.performancemonitor.AopConfiguration.myMonitor()\");\r\n    return new DefaultPointcutAdvisor(pointcut, myPerformanceMonitorInterceptor());\r\n}\r\n```","```\r\nlog4j.logger.com.baeldung.performancemonitor.MyPerformanceMonitorInterceptor=INFO, stdout\r\n```","```\r\n2017-01-08 19:19:25 INFO PersonService:26 - \r\n  Method com.baeldung.performancemonitor.PersonService.getAge \r\n  execution started at:Sun Jan 08 19:19:25 EET 2017\r\n2017-01-08 19:19:25 INFO PersonService:33 - \r\n  Method com.baeldung.performancemonitor.PersonService.getAge execution lasted:50 ms\r\n2017-01-08 19:19:25 INFO PersonService:34 - \r\n  Method com.baeldung.performancemonitor.PersonService.getAge \r\n  execution ended at:Sun Jan 08 19:19:25 EET 2017\r\n2017-01-08 19:19:25 WARN PersonService:37 - \r\n  Method execution longer than 10 ms!\r\n```"]