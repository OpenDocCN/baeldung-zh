["```\r\npublic class Book {\r\n\r\n    private String name;\r\n    private String author;\r\n    private String text;\r\n\r\n    //constructor, getters and setters\r\n}\r\n```","```\r\npublic class Book {\r\n\r\n    private String name;\r\n    private String author;\r\n    private String text;\r\n\r\n    //constructor, getters and setters\r\n\r\n    // methods that directly relate to the book properties\r\n    public String replaceWordInText(String word, String replacementWord){\r\n        return text.replaceAll(word, replacementWord);\r\n    }\r\n\r\n    public boolean isWordInText(String word){\r\n        return text.contains(word);\r\n    }\r\n}\r\n```","```\r\npublic class Book {\r\n    //...\r\n\r\n    void printTextToConsole(){\r\n        // our code for formatting and printing the text\r\n    }\r\n}\r\n```","```\r\npublic class BookPrinter {\r\n\r\n    // methods for outputting text\r\n    void printTextToConsole(String text){\r\n        //our code for formatting and printing the text\r\n    }\r\n\r\n    void printTextToAnotherMedium(String text){\r\n        // code for writing to any other location..\r\n    }\r\n}\r\n```","```\r\npublic class Guitar {\r\n\r\n    private String make;\r\n    private String model;\r\n    private int volume;\r\n\r\n    //Constructors, getters & setters\r\n}\r\n```","```\r\npublic class SuperCoolGuitarWithFlames extends Guitar {\r\n\r\n    private String flameColor;\r\n\r\n    //constructor, getters + setters\r\n}\r\n```","```\r\npublic interface Car {\r\n\r\n    void turnOnEngine();\r\n    void accelerate();\r\n}\r\n```","```\r\npublic class MotorCar implements Car {\r\n\r\n    private Engine engine;\r\n\r\n    //Constructors, getters + setters\r\n\r\n    public void turnOnEngine() {\r\n        //turn on the engine!\r\n        engine.on();\r\n    }\r\n\r\n    public void accelerate() {\r\n        //move forward!\r\n        engine.powerOn(1000);\r\n    }\r\n}\r\n```","```\r\npublic class ElectricCar implements Car {\r\n\r\n    public void turnOnEngine() {\r\n        throw new AssertionError(\"I don't have an engine!\");\r\n    }\r\n\r\n    public void accelerate() {\r\n        //this acceleration is crazy!\r\n    }\r\n}\r\n```","```\r\npublic interface BearKeeper {\r\n    void washTheBear();\r\n    void feedTheBear();\r\n    void petTheBear();\r\n}\r\n```","```\r\npublic interface BearCleaner {\r\n    void washTheBear();\r\n}\r\n\r\npublic interface BearFeeder {\r\n    void feedTheBear();\r\n}\r\n\r\npublic interface BearPetter {\r\n    void petTheBear();\r\n}\r\n```","```\r\npublic class BearCarer implements BearCleaner, BearFeeder {\r\n\r\n    public void washTheBear() {\r\n        //I think we missed a spot...\r\n    }\r\n\r\n    public void feedTheBear() {\r\n        //Tuna Tuesdays...\r\n    }\r\n}\r\n```","```\r\npublic class CrazyPerson implements BearPetter {\r\n\r\n    public void petTheBear() {\r\n        //Good luck with that!\r\n    }\r\n}\r\n```","```\r\npublic class Windows98Machine {}\r\n```","```\r\npublic class Windows98Machine {\r\n\r\n    private final StandardKeyboard keyboard;\r\n    private final Monitor monitor;\r\n\r\n    public Windows98Machine() {\r\n        monitor = new Monitor();\r\n        keyboard = new StandardKeyboard();\r\n    }\r\n\r\n}\r\n```","```\r\npublic interface Keyboard { }\r\n```","```\r\npublic class Windows98Machine{\r\n\r\n    private final Keyboard keyboard;\r\n    private final Monitor monitor;\r\n\r\n    public Windows98Machine(Keyboard keyboard, Monitor monitor) {\r\n        this.keyboard = keyboard;\r\n        this.monitor = monitor;\r\n    }\r\n}\r\n```","```\r\npublic class StandardKeyboard implements Keyboard { }\r\n```"]