["```\r\nhttp://localhost:8082/spring-boot-rest/auth/foos\r\n```","```\r\nhttp://localhost:8082/spring-boot-rest/auth/foos\r\n```","```\r\n{\r\n    \"name\": \"Transformers\"\r\n}\r\n```","```\r\npm.test(\"success status\", () => pm.response.to.be.success );\r\npm.test(\"name is correct\", () => \r\n  pm.expect(pm.response.json().name).to.equal(\"Transformers\"));\r\npm.test(\"id was assigned\", () => \r\n  pm.expect(pm.response.json().id).to.be.not.null );\r\n```","```\r\npm.variables.set(\"id\", pm.response.json().id);\r\n```","```\r\nhttp://localhost:8082/spring-boot-rest/auth/foos/{{id}}\r\n```","```\r\npm.test(\"success status\", () => pm.response.to.be.success );\r\npm.test(\"name is correct\", () => \r\n  pm.expect(pm.response.json().name).to.equal(\"Transformers\"));\r\npm.test(\"id is correct\", () => \r\n  pm.expect(pm.response.json().id).to.equal(pm.variables.get(\"id\")) );\r\n```","```\r\nhttp://localhost:8082/spring-boot-rest/auth/foos/{{id}}\r\n```","```\r\npm.test(\"success status\", () => pm.response.to.be.success );\r\n```","```\r\npm.test(\"status is 500\", () => pm.response.to.have.status(500) );\r\npm.test(\"no value present\", () => \r\n  pm.expect(pm.response.json().cause).to.equal(\"No value present\"));\r\n```"]