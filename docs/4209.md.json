["```\r\n\"aa\"\r\n\"ababab\"\r\n\"barrybarrybarry\"\r\n```","```\r\n\"aba\"\r\n\"cbacbac\"\r\n\"carlosxcarlosy\"\r\n```","```\r\npublic static boolean containsOnlySubstrings(String string) {\r\n\r\n    if (string.length() < 2) {\r\n        return false;\r\n    }\r\n\r\n    StringBuilder substr = new StringBuilder();\r\n    for (int i = 0; i < string.length() / 2; i++) {\r\n        substr.append(string.charAt(i));\r\n\r\n        String clearedFromSubstrings \r\n          = string.replaceAll(substr.toString(), \"\");\r\n\r\n        if (clearedFromSubstrings.length() == 0) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n```","```\r\nString validString = \"aa\";\r\nString validStringTwo = \"ababab\";\r\nString validStringThree = \"baeldungbaeldung\";\r\n\r\nString invalidString = \"aca\";\r\nString invalidStringTwo = \"ababa\";\r\nString invalidStringThree = \"baeldungnonrepeatedbaeldung\";\r\n```","```\r\nassertTrue(containsOnlySubstrings(validString));\r\nassertTrue(containsOnlySubstrings(validStringTwo));\r\nassertTrue(containsOnlySubstrings(validStringThree));\r\n\r\nassertFalse(containsOnlySubstrings(invalidString));\r\nassertFalse(containsOnlySubstrings(invalidStringTwo));\r\nassertFalse(containsOnlySubstrings(invalidStringThree));\r\n```","```\r\npublic static boolean containsOnlySubstringsEfficient(String string) {\r\n    return ((string + string).indexOf(string, 1) != string.length());\r\n}\r\n```"]