["```\r\nint reversedNumber = 0;\r\nint numberToReverse = Math.abs(number);\r\n\r\nwhile (numberToReverse > 0) {\r\n    int mod = numberToReverse % 10;\r\n    reversedNumber = reversedNumber * 10 + mod;\r\n    numberToReverse /= 10;\r\n}\r\n\r\nreturn number < 0 ? reversedNumber * -1 : reversedNumber;\r\n```","```\r\nint reversedNumber = 0;\r\nint numberToReverse = Math.abs(number);\r\n\r\nfor (; numberToReverse > 0; numberToReverse /= 10) {\r\n    int mod = numberToReverse % 10;\r\n    reversedNumber = reversedNumber * 10 + mod;\r\n}\r\n\r\nreturn number < 0 ? reversedNumber * -1 : reversedNumber;\r\n```","```\r\nint reverseNumberRecWrapper(int number) {\r\n    int output = reverseNumberRec(Math.abs(number), 0);\r\n    return number < 0 ? output * -1 : output;\r\n}\r\n```","```\r\nint reverseNumberRec(int numberToReverse, int recursiveReversedNumber) {\r\n\r\n    if (numberToReverse > 0) {\r\n        int mod = numberToReverse % 10;\r\n        recursiveReversedNumber = recursiveReversedNumber * 10 + mod;\r\n        numberToReverse /= 10;\r\n        return reverseNumberRec(numberToReverse, recursiveReversedNumber);\r\n    }\r\n\r\n    return recursiveReversedNumber;\r\n}\r\n```"]