["```\r\n<book>\r\n    <title>Book1</title>\r\n    <published>1979-10-21T03:31:12</published>\r\n</book>\r\n```","```\r\n@XmlRootElement(name = \"book\")\r\npublic class Book {\r\n\r\n    @XmlElement(name = \"title\", required = true)\r\n    private String title;\r\n\r\n    @XmlElement(name = \"published\", required = true)\r\n    private XMLGregorianCalendar published;\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"[title: \" + title + \"; published: \" + published.toString() + \"]\";\r\n    }\r\n\r\n}\r\n```","```\r\npublic static Book unmarshalDates(InputStream inputFile) \r\n  throws JAXBException {\r\n    JAXBContext jaxbContext = JAXBContext.newInstance(Book.class);\r\n    Unmarshaller jaxbUnmarshaller = jaxbContext.createUnmarshaller();\r\n    return (Book) jaxbUnmarshaller.unmarshal(inputFile);\r\n}\r\n```","```\r\n[title: Book1; published: 1979-11-28T02:31:32]\r\n```","```\r\npublic class DateAdapter extends XmlAdapter<String, Date> {\r\n\r\n    private static final String CUSTOM_FORMAT_STRING = \"yyyy-MM-dd HH:mm:ss\";\r\n\r\n    @Override\r\n    public String marshal(Date v) {\r\n        return new SimpleDateFormat(CUSTOM_FORMAT_STRING).format(v);\r\n    }\r\n\r\n    @Override\r\n    public Date unmarshal(String v) throws ParseException {\r\n        return new SimpleDateFormat(CUSTOM_FORMAT_STRING).parse(v);\r\n    }\r\n\r\n}\r\n```","```\r\n@XmlRootElement(name = \"book\")\r\npublic class BookDateAdapter {\r\n\r\n    // same as before\r\n\r\n    @XmlElement(name = \"published\", required = true)\r\n    @XmlJavaTypeAdapter(DateAdapter.class)\r\n    private Date published;\r\n\r\n    // same as before\r\n\r\n}\r\n```","```\r\n[title: Book1; published: Wed Nov 28 02:31:32 EET 1979]\r\n```","```\r\npublic class LocalDateTimeAdapter extends XmlAdapter<String, LocalDateTime> {\r\n\r\n    private DateTimeFormatter dateFormat = DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\");\r\n\r\n    @Override\r\n    public String marshal(LocalDateTime dateTime) {\r\n        return dateTime.format(dateFormat);\r\n    }\r\n\r\n    @Override\r\n    public LocalDateTime unmarshal(String dateTime) {\r\n        return LocalDateTime.parse(dateTime, dateFormat);\r\n    }\r\n\r\n}\r\n```","```\r\n@XmlRootElement(name = \"book\")\r\npublic class BookLocalDateTimeAdapter {\r\n\r\n    // same as before\r\n\r\n    @XmlElement(name = \"published\", required = true)\r\n    @XmlJavaTypeAdapter(LocalDateTimeAdapter.class)\r\n    private LocalDateTime published;\r\n\r\n    // same as before\r\n\r\n}\r\n```","```\r\n[title: Book1; published: 1979-11-28T02:31:32]\r\n```"]