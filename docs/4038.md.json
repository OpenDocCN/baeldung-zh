["```\r\n<dependency>\r\n    <groupId>org.powermock</groupId>\r\n    <artifactId>powermock-module-junit4</artifactId>\r\n    <version>1.7.3</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.powermock</groupId>\r\n    <artifactId>powermock-api-mockito2</artifactId>\r\n    <version>1.7.3</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n```","```\r\npublic int getLuckyNumber(String name) {\r\n    saveIntoDatabase(name);\r\n    if (name == null) {\r\n        return getDefaultLuckyNumber();\r\n    }\r\n    return getComputedLuckyNumber(name.length());\r\n}\r\n```","```\r\nLuckyNumberGenerator mock = spy(new LuckyNumberGenerator());\r\n\r\nwhen(mock, \"getDefaultLuckyNumber\").thenReturn(300); \r\n```","```\r\nLuckyNumberGenerator mock = spy(new LuckyNumberGenerator());\r\n\r\ndoReturn(1).when(mock, \"getComputedLuckyNumber\", ArgumentMatchers.anyInt()); \r\n```","```\r\nLuckyNumberGenerator mock = spy(new LuckyNumberGenerator());\r\nint result = mock.getLuckyNumber(\"Tyranosorous\");\r\n\r\nverifyPrivate(mock).invoke(\"saveIntoDatabase\", ArgumentMatchers.anyString()); \r\n```"]