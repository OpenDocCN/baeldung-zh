["```\r\n@Entity\r\npublic class VerificationToken {\r\n\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.AUTO)\r\n    private Long id;\r\n\r\n    private String token;\r\n\r\n    @OneToOne(targetEntity = User.class, fetch = FetchType.EAGER)\r\n    @JoinColumn(nullable = false, name = \"user_id\", \r\n      foreignKey = @ForeignKey(name=\"FK_VERIFY_USER\"))\r\n    private User user;\r\n\r\n    private Date expiryDate;\r\n    ...\r\n}\r\n```","```\r\npublic interface VerificationTokenRepository\r\n  extends JpaRepository<VerificationToken, Long> {\r\n\r\n    void deleteByExpiryDateLessThan(Date now);\r\n}\r\n```","```\r\nselect \r\n    *\r\nfrom \r\n    VerificationToken verification \r\nwhere \r\n    verification.expiryDate < ?\r\n\r\nselect \r\n    * \r\nfrom\r\n    user_account user \r\nwhere\r\n    user.id=?\r\n\r\ndelete from \r\n    VerificationToken\r\nwhere\r\n    id=? \r\n```","```\r\npublic interface VerificationTokenRepository\r\n  extends JpaRepository<VerificationToken, Long> {\r\n\r\n    @Modifying\r\n    @Query(\"delete from VerificationToken t where t.expiryDate <= ?1\")\r\n    void deleteAllExpiredSince(Date now);\r\n}\r\n```","```\r\ndelete from\r\n    VerificationToken\r\nwhere\r\n    expiryDate <= ? \r\n```","```\r\n@Configuration\r\n@EnableScheduling\r\npublic class SpringTaskConfig {\r\n    //\r\n} \r\n```","```\r\n@Service\r\n@Transactional\r\npublic class TokensPurgeTask {\r\n\r\n    @Autowired\r\n    private VerificationTokenRepository tokenRepository;\r\n\r\n    @Scheduled(cron = \"${purge.cron.expression}\")\r\n    public void purgeExpired() {\r\n        Date now = Date.from(Instant.now());\r\n        tokenRepository.deleteAllExpiredSince(now);\r\n    }\r\n}\r\n```","```\r\n#    5am every day\r\npurge.cron.expression=0 0 5 * * ?\r\n```"]