["```\r\npublic static void demoSuppressedException(String filePath) throws IOException {\r\n    FileInputStream fileIn = null;\r\n    try {\r\n        fileIn = new FileInputStream(filePath);\r\n    } catch (FileNotFoundException e) {\r\n        throw new IOException(e);\r\n    } finally {\r\n        fileIn.close();\r\n    }\r\n}\r\n```","```\r\n@Test(expected = NullPointerException.class)\r\npublic void givenNonExistentFileName_whenAttemptFileOpen_thenNullPointerException() throws IOException {\r\n    demoSuppressedException(\"/non-existent-path/non-existent-file.txt\");\r\n}\r\n```","```\r\npublic static void demoAddSuppressedException(String filePath) throws IOException {\r\n    Throwable firstException = null;\r\n    FileInputStream fileIn = null;\r\n    try {\r\n        fileIn = new FileInputStream(filePath);\r\n    } catch (IOException e) {\r\n        firstException = e;\r\n    } finally {\r\n        try {\r\n            fileIn.close();\r\n        } catch (NullPointerException npe) {\r\n            if (firstException != null) {\r\n                npe.addSuppressed(firstException);\r\n            }\r\n            throw npe;\r\n        }\r\n    }\r\n}\r\n```","```\r\ntry {\r\n    demoAddSuppressedException(\"/non-existent-path/non-existent-file.txt\");\r\n} catch (Exception e) {\r\n    assertThat(e, instanceOf(NullPointerException.class));\r\n    assertEquals(1, e.getSuppressed().length);\r\n    assertThat(e.getSuppressed()[0], instanceOf(FileNotFoundException.class));\r\n}\r\n```","```\r\npublic class ExceptionalResource implements AutoCloseable {\r\n\r\n    public void processSomething() {\r\n        throw new IllegalArgumentException(\"Thrown from processSomething()\");\r\n    }\r\n\r\n    @Override\r\n    public void close() throws Exception {\r\n        throw new NullPointerException(\"Thrown from close()\");\r\n    }\r\n}\r\n```","```\r\npublic static void demoExceptionalResource() throws Exception {\r\n    try (ExceptionalResource exceptionalResource = new ExceptionalResource()) {\r\n        exceptionalResource.processSomething();\r\n    }\r\n}\r\n```","```\r\ntry {\r\n    demoExceptionalResource();\r\n} catch (Exception e) {\r\n    assertThat(e, instanceOf(IllegalArgumentException.class));\r\n    assertEquals(\"Thrown from processSomething()\", e.getMessage());\r\n    assertEquals(1, e.getSuppressed().length);\r\n    assertThat(e.getSuppressed()[0], instanceOf(NullPointerException.class));\r\n    assertEquals(\"Thrown from close()\", e.getSuppressed()[0].getMessage());\r\n}\r\n```"]