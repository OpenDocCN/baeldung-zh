["```\r\n<properties>\r\n    <jee.version>7.0</jee.version>\r\n    <mysql.version>11.2.0.4</mysql.version>\r\n    <hibernate.version>5.1.38</hibernate.version>\r\n</properties>\r\n<dependencies>\r\n    <dependency>\r\n        <groupId>javax</groupId>\r\n        <artifactId>javaee-api</artifactId>\r\n        <version>${jee.version}</version>\r\n        <scope>provided</scope>\r\n    </dependency>\r\n    <dependency>\r\n        <groupId>org.hibernate</groupId>\r\n        <artifactId>hibernate-core</artifactId>\r\n        <version>${hibernate.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n        <groupId>mysql</groupId>\r\n        <artifactId>mysql-connector-java</artifactId>\r\n        <version>${mysql.version}</version>\r\n    </dependency>\r\n</dependencies>\r\n```","```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<persistence \r\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n    xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence\r\n    http://java.sun.com/xml/ns/persistence/persistence_2_1.xsd\"\r\n    version=\"2.1\">\r\n\r\n    <persistence-unit name=\"jpa-db\">\r\n        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>\r\n        <class>com.baeldung.jpa.model.Car</class>\r\n        <properties>\r\n            <property name=\"javax.persistence.jdbc.driver\" \r\n              value=\"com.mysql.jdbc.Driver\" />\r\n            <property name=\"javax.persistence.jdbc.url\" \r\n              value=\"jdbc:mysql://127.0.0.1:3306/baeldung\" />\r\n            <property name=\"javax.persistence.jdbc.user\" \r\n              value=\"baeldung\" />\r\n            <property name=\"javax.persistence.jdbc.password\" \r\n              value=\"YourPassword\" />\r\n            <property name=\"hibernate.dialect\" \r\n              value=\"org.hibernate.dialect.MySQLDialect\" />\r\n            <property name=\"hibernate.show_sql\" value=\"true\" />\r\n        </properties>\r\n    </persistence-unit>\r\n\r\n</persistence>\r\n```","```\r\n<jta-data-source>java:jboss/datasources/JpaStoredProcedure</jta-data-source>\r\n```","```\r\nCREATE TABLE `car` (\r\n  `ID` int(10) NOT NULL AUTO_INCREMENT,\r\n  `MODEL` varchar(50) NOT NULL,\r\n  `YEAR` int(4) NOT NULL,\r\n  PRIMARY KEY (`ID`)\r\n) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;\r\n```","```\r\nDELIMITER $$\r\nCREATE DEFINER=`root`@`localhost` PROCEDURE `FIND_CAR_BY_YEAR`(in p_year int)\r\nbegin\r\nSELECT ID, MODEL, YEAR\r\n    FROM CAR\r\n    WHERE YEAR = p_year;\r\nend\r\n$$\r\nDELIMITER ;\r\n```","```\r\n@Entity\r\n@Table(name = \"CAR\")\r\n@NamedStoredProcedureQueries({\r\n  @NamedStoredProcedureQuery(\r\n    name = \"findByYearProcedure\", \r\n    procedureName = \"FIND_CAR_BY_YEAR\", \r\n    resultClasses = { Car.class }, \r\n    parameters = { \r\n        @StoredProcedureParameter(\r\n          name = \"p_year\", \r\n          type = Integer.class, \r\n          mode = ParameterMode.IN) }) \r\n})\r\npublic class Car {\r\n\r\n    private long id;\r\n    private String model;\r\n    private Integer year;\r\n\r\n    public Car(String model, Integer year) {\r\n        this.model = model;\r\n        this.year = year;\r\n    }\r\n\r\n    public Car() {\r\n    }\r\n\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n    @Column(name = \"ID\", unique = true, nullable = false, scale = 0)\r\n    public long getId() {\r\n        return id;\r\n    }\r\n\r\n    @Column(name = \"MODEL\")\r\n    public String getModel() {\r\n        return model;\r\n    }\r\n\r\n    @Column(name = \"YEAR\")\r\n    public Integer getYear() {\r\n        return year;\r\n    }\r\n\r\n    // standard setter methods\r\n}\r\n```","```\r\npublic class StoredProcedureTest {\r\n\r\n    private static EntityManagerFactory factory = null;\r\n    private static EntityManager entityManager = null;\r\n\r\n    @BeforeClass\r\n    public static void init() {\r\n        factory = Persistence.createEntityManagerFactory(\"jpa-db\");\r\n        entityManager = factory.createEntityManager();\r\n    }\r\n\r\n    @Test\r\n    public void findCarsByYearWithNamedStored() {\r\n        StoredProcedureQuery findByYearProcedure = \r\n          entityManager.createNamedStoredProcedureQuery(\"findByYearProcedure\");\r\n\r\n        StoredProcedureQuery storedProcedure = \r\n          findByYearProcedure.setParameter(\"p_year\", 2015);\r\n\r\n        storedProcedure.getResultList()\r\n          .forEach(c -> Assert.assertEquals(new Integer(2015), ((Car) c).getYear())); \r\n    }\r\n\r\n    @Test\r\n    public void findCarsByYearNoNamedStored() {\r\n        StoredProcedureQuery storedProcedure = \r\n          entityManager\r\n            .createStoredProcedureQuery(\"FIND_CAR_BY_YEAR\",Car.class)\r\n            .registerStoredProcedureParameter(1, Integer.class, ParameterMode.IN)\r\n            .setParameter(1, 2015);\r\n\r\n        storedProcedure.getResultList()\r\n          .forEach(c -> Assert.assertEquals(new Integer(2015), ((Car) c).getYear()));\r\n    }\r\n\r\n} \r\n```"]