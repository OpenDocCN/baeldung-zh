["```\r\nlogging.level.org.springframework.web.client.RestTemplate=DEBUG\r\n```","```\r\no.s.w.c.RestTemplate - HTTP POST http://localhost:8082/spring-rest/persons\r\no.s.w.c.RestTemplate - Accept=[text/plain, application/json, application/*+json, */*]\r\no.s.w.c.RestTemplate - Writing [my request body] with org.springframework.http.converter.StringHttpMessageConverter\r\no.s.w.c.RestTemplate - Response 200 OK\r\n```","```\r\n<dependency>\r\n    <groupId>org.apache.httpcomponents</groupId>\r\n    <artifactId>httpclient</artifactId>\r\n    <version>4.5.12</version>\r\n</dependency>\r\n```","```\r\nRestTemplate restTemplate = new RestTemplate();\r\nrestTemplate.setRequestFactory(new HttpComponentsClientHttpRequestFactory());\r\n```","```\r\nlogging.level.org.apache.http=DEBUG\r\nlogging.level.httpclient.wire=DEBUG\r\n```","```\r\n o.a.http.headers - http-outgoing-0 >> POST /spring-rest/persons HTTP/1.1\r\n    o.a.http.headers - http-outgoing-0 >> Accept: text/plain, application/json, application/*+json, */*\r\n// ... more request headers\r\n    o.a.http.headers - http-outgoing-0 >> User-Agent: Apache-HttpClient/4.5.9 (Java/1.8.0_171)\r\n    o.a.http.headers - http-outgoing-0 >> Accept-Encoding: gzip,deflate\r\norg.apache.http.wire - http-outgoing-0 >> \"POST /spring-rest/persons HTTP/1.1[\\r][\\n]\"\r\norg.apache.http.wire - http-outgoing-0 >> \"Accept: text/plain, application/json, application/*+json, */*[\\r][\\n]\"\r\norg.apache.http.wire - http-outgoing-0 >> \"Content-Type: text/plain;charset=ISO-8859-1[\\r][\\n]\"\r\n// ... more request headers\r\norg.apache.http.wire - http-outgoing-0 >> \"[\\r][\\n]\"\r\norg.apache.http.wire - http-outgoing-0 >> \"my request body\"\r\norg.apache.http.wire - http-outgoing-0 << \"HTTP/1.1 200 [\\r][\\n]\"\r\norg.apache.http.wire - http-outgoing-0 << \"Content-Type: application/json[\\r][\\n]\"\r\n// ... more response headers\r\norg.apache.http.wire - http-outgoing-0 << \"Connection: keep-alive[\\r][\\n]\"\r\norg.apache.http.wire - http-outgoing-0 << \"[\\r][\\n]\"\r\norg.apache.http.wire - http-outgoing-0 << \"21[\\r][\\n]\"\r\norg.apache.http.wire - http-outgoing-0 << \"[\"Lucie\",\"Jackie\",\"Danesh\",\"Tao\"][\\r][\\n]\" \r\n```","```\r\npublic class LoggingInterceptor implements ClientHttpRequestInterceptor {\r\n\r\n    static Logger LOGGER = LoggerFactory.getLogger(LoggingInterceptor.class);\r\n\r\n    @Override\r\n    public ClientHttpResponse intercept(\r\n      HttpRequest req, byte[] reqBody, ClientHttpRequestExecution ex) throws IOException {\r\n        LOGGER.debug(\"Request body: {}\", new String(reqBody, StandardCharsets.UTF_8));\r\n        ClientHttpResponse response = ex.execute(req, reqBody);\r\n        InputStreamReader isr = new InputStreamReader(\r\n          response.getBody(), StandardCharsets.UTF_8);\r\n        String body = new BufferedReader(isr).lines()\r\n            .collect(Collectors.joining(\"\\n\"));\r\n        LOGGER.debug(\"Response body: {}\", body);\r\n        return response;\r\n    }\r\n}\r\n```","```\r\nClientHttpRequestFactory factory = \r\n        new BufferingClientHttpRequestFactory(new SimpleClientHttpRequestFactory());\r\n        RestTemplate restTemplate = new RestTemplate(factory);\r\n```","```\r\nList<ClientHttpRequestInterceptor> interceptors = restTemplate.getInterceptors();\r\nif (CollectionUtils.isEmpty(interceptors)) {\r\n    interceptors = new ArrayList<>();\r\n}\r\ninterceptors.add(new LoggingInterceptor());\r\nrestTemplate.setInterceptors(interceptors); \r\n```","```\r\nc.b.r.l.LoggingInterceptor - Request body: my request body\r\nc.b.r.l.LoggingInterceptor - Response body: [\"Lucie\",\"Jackie\",\"Danesh\",\"Tao\"]\r\n```","```\r\nRestTemplate restTemplate = null;\r\nif (LOGGER.isDebugEnabled()) {\r\n    ClientHttpRequestFactory factory \r\n    = new BufferingClientHttpRequestFactory(new SimpleClientHttpRequestFactory());\r\n    restTemplate = new RestTemplate(factory);\r\n} else {\r\n    restTemplate = new RestTemplate();\r\n}\r\n```","```\r\nif (LOGGER.isDebugEnabled()) {\r\n    InputStreamReader isr = new InputStreamReader(response.getBody(), StandardCharsets.UTF_8);\r\n    String body = new BufferedReader(isr)\r\n        .lines()\r\n        .collect(Collectors.joining(\"\\n\"));\r\n    LOGGER.debug(\"Response body: {}\", body);\r\n}\r\n```"]