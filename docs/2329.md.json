["```\r\nint a = 10;\r\nint b = 15;\r\nassertFalse(a == b);\r\n\r\nint c = 10;\r\nassertTrue(a == c);\r\n\r\nint d = a;\r\nassertTrue(a == d);\r\n```","```\r\nint e = null; // compilation error\r\nassertFalse(a == null); // compilation error\r\nassertFalse(10 == null); // compilation error\r\n```","```\r\npublic class Person {\r\n    private String name;\r\n    private int age;\r\n\r\n    // constructor, getters, setters...\r\n}\r\n```","```\r\nPerson a = new Person(\"Bob\", 20);\r\nPerson b = new Person(\"Mike\", 40);\r\nassertFalse(a == b);\r\n\r\nPerson c = new Person(\"Bob\", 20);\r\nassertFalse(a == c);\r\n\r\nPerson d = a;\r\nassertTrue(a == d);\r\n```","```\r\nint a = 10;\r\nInteger b = a;\r\n\r\nassertTrue(b.equals(10));\r\n```","```\r\npublic class Person {\r\n    // other fields and methods omitted\r\n\r\n    @Override\r\n    public boolean equals(Object o) {\r\n        if (this == o) \r\n            return true;\r\n        if (o == null || getClass() != o.getClass()) \r\n            return false;\r\n        Person person = (Person) o;\r\n        return age == person.age && Objects.equals(name, person.name);\r\n    }\r\n}\r\n```","```\r\nPerson a = new Person(\"Bob\", 20);\r\nPerson b = new Person(\"Mike\", 40);\r\nassertFalse(a.equals(b));\r\n\r\nPerson c = new Person(\"Bob\", 20);\r\nassertTrue(a.equals(c));\r\n\r\nPerson d = a;\r\nassertTrue(a.equals(d));\r\n```","```\r\nPerson a = new Person(\"Bob\", 20);\r\nPerson e = null;\r\nassertFalse(a.equals(e));\r\nassertThrows(NullPointerException.class, () -> e.equals(a));\r\n```","```\r\nassertFalse(e != null && e.equals(a));\r\n```","```\r\nassertFalse(Objects.equals(e, a));\r\nassertTrue(Objects.equals(null, e));\r\n```"]