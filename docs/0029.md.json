["```\r\nimport java.net.*;\r\n```","```\r\nimport java.io.*;\r\n```","```\r\npublic class GreetServer {\r\n    private ServerSocket serverSocket;\r\n    private Socket clientSocket;\r\n    private PrintWriter out;\r\n    private BufferedReader in;\r\n\r\n    public void start(int port) {\r\n        serverSocket = new ServerSocket(port);\r\n        clientSocket = serverSocket.accept();\r\n        out = new PrintWriter(clientSocket.getOutputStream(), true);\r\n        in = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));\r\n        String greeting = in.readLine();\r\n            if (\"hello server\".equals(greeting)) {\r\n                out.println(\"hello client\");\r\n            }\r\n            else {\r\n                out.println(\"unrecognised greeting\");\r\n            }\r\n    }\r\n\r\n    public void stop() {\r\n        in.close();\r\n        out.close();\r\n        clientSocket.close();\r\n        serverSocket.close();\r\n    }\r\n    public static void main(String[] args) {\r\n        GreetServer server=new GreetServer();\r\n        server.start(6666);\r\n    }\r\n}\r\n```","```\r\npublic class GreetClient {\r\n    private Socket clientSocket;\r\n    private PrintWriter out;\r\n    private BufferedReader in;\r\n\r\n    public void startConnection(String ip, int port) {\r\n        clientSocket = new Socket(ip, port);\r\n        out = new PrintWriter(clientSocket.getOutputStream(), true);\r\n        in = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));\r\n    }\r\n\r\n    public String sendMessage(String msg) {\r\n        out.println(msg);\r\n        String resp = in.readLine();\r\n        return resp;\r\n    }\r\n\r\n    public void stopConnection() {\r\n        in.close();\r\n        out.close();\r\n        clientSocket.close();\r\n    }\r\n}\r\n```","```\r\n@Test\r\npublic void givenGreetingClient_whenServerRespondsWhenStarted_thenCorrect() {\r\n    GreetClient client = new GreetClient();\r\n    client.startConnection(\"127.0.0.1\", 6666);\r\n    String response = client.sendMessage(\"hello server\");\r\n    assertEquals(\"hello client\", response);\r\n}\r\n```","```\r\nServerSocket serverSocket = new ServerSocket(6666);\r\n```","```\r\nSocket clientSocket = serverSocket.accept();\r\n```","```\r\nPrintWriter out = new PrintWriter(clientSocket.getOutputStream(), true);\r\nBufferedReader in = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));\r\n```","```\r\nSocket clientSocket = new Socket(\"127.0.0.1\", 6666);\r\n```","```\r\nPrintWriter out = new PrintWriter(clientSocket.getOutputStream(), true);\r\nBufferedReader in = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));\r\n```","```\r\npublic class EchoServer {\r\n    public void start(int port) {\r\n        serverSocket = new ServerSocket(port);\r\n        clientSocket = serverSocket.accept();\r\n        out = new PrintWriter(clientSocket.getOutputStream(), true);\r\n        in = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));\r\n\r\n        String inputLine;\r\n        while ((inputLine = in.readLine()) != null) {\r\n        if (\".\".equals(inputLine)) {\r\n            out.println(\"good bye\");\r\n            break;\r\n         }\r\n         out.println(inputLine);\r\n    }\r\n}\r\n```","```\r\n@Before\r\npublic void setup() {\r\n    client = new EchoClient();\r\n    client.startConnection(\"127.0.0.1\", 4444);\r\n}\r\n```","```\r\n@After\r\npublic void tearDown() {\r\n    client.stopConnection();\r\n}\r\n```","```\r\n@Test\r\npublic void givenClient_whenServerEchosMessage_thenCorrect() {\r\n    String resp1 = client.sendMessage(\"hello\");\r\n    String resp2 = client.sendMessage(\"world\");\r\n    String resp3 = client.sendMessage(\"!\");\r\n    String resp4 = client.sendMessage(\".\");\r\n\r\n    assertEquals(\"hello\", resp1);\r\n    assertEquals(\"world\", resp2);\r\n    assertEquals(\"!\", resp3);\r\n    assertEquals(\"good bye\", resp4);\r\n}\r\n```","```\r\npublic class EchoMultiServer {\r\n    private ServerSocket serverSocket;\r\n\r\n    public void start(int port) {\r\n        serverSocket = new ServerSocket(port);\r\n        while (true)\r\n            new EchoClientHandler(serverSocket.accept()).start();\r\n    }\r\n\r\n    public void stop() {\r\n        serverSocket.close();\r\n    }\r\n\r\n    private static class EchoClientHandler extends Thread {\r\n        private Socket clientSocket;\r\n        private PrintWriter out;\r\n        private BufferedReader in;\r\n\r\n        public EchoClientHandler(Socket socket) {\r\n            this.clientSocket = socket;\r\n        }\r\n\r\n        public void run() {\r\n            out = new PrintWriter(clientSocket.getOutputStream(), true);\r\n            in = new BufferedReader(\r\n              new InputStreamReader(clientSocket.getInputStream()));\r\n\r\n            String inputLine;\r\n            while ((inputLine = in.readLine()) != null) {\r\n                if (\".\".equals(inputLine)) {\r\n                    out.println(\"bye\");\r\n                    break;\r\n                }\r\n                out.println(inputLine);\r\n            }\r\n\r\n            in.close();\r\n            out.close();\r\n            clientSocket.close();\r\n    }\r\n}\r\n```","```\r\n@Test\r\npublic void givenClient1_whenServerResponds_thenCorrect() {\r\n    EchoClient client1 = new EchoClient();\r\n    client1.startConnection(\"127.0.0.1\", 5555);\r\n    String msg1 = client1.sendMessage(\"hello\");\r\n    String msg2 = client1.sendMessage(\"world\");\r\n    String terminate = client1.sendMessage(\".\");\r\n\r\n    assertEquals(msg1, \"hello\");\r\n    assertEquals(msg2, \"world\");\r\n    assertEquals(terminate, \"bye\");\r\n}\r\n\r\n@Test\r\npublic void givenClient2_whenServerResponds_thenCorrect() {\r\n    EchoClient client2 = new EchoClient();\r\n    client2.startConnection(\"127.0.0.1\", 5555);\r\n    String msg1 = client2.sendMessage(\"hello\");\r\n    String msg2 = client2.sendMessage(\"world\");\r\n    String terminate = client2.sendMessage(\".\");\r\n\r\n    assertEquals(msg1, \"hello\");\r\n    assertEquals(msg2, \"world\");\r\n    assertEquals(terminate, \"bye\");\r\n}\r\n```"]