["```\r\npublic class Car {\r\n    int wheels;\r\n    String model;\r\n    void start() {\r\n        // Check essential parts\r\n    }\r\n}\r\n```","```\r\npublic class ArmoredCar extends Car {\r\n    int bulletProofWindows;\r\n    void remoteStartCar() {\r\n\t// this vehicle can be started by using a remote control\r\n    }\r\n}\r\n```","```\r\npublic class ArmoredCar extends Car {\r\n    public String registerModel() {\r\n        return model;\r\n    }\r\n}\r\n```","```\r\npublic interface Floatable {\r\n    void floatOnWater();\r\n}\r\n```","```\r\npublic interface Flyable {\r\n    void fly();\r\n}\r\n```","```\r\npublic class ArmoredCar extends Car implements Floatable, Flyable{\r\n    public void floatOnWater() {\r\n        System.out.println(\"I can float!\");\r\n    }\r\n\r\n    public void fly() {\r\n        System.out.println(\"I can fly!\");\r\n    }\r\n}\r\n```","```\r\npublic interface Floatable {\r\n    default void repair() {\r\n    \tSystem.out.println(\"Repairing Floatable object\");\t\r\n    }\r\n}\r\n```","```\r\npublic interface Flyable {\r\n    default void repair() {\r\n    \tSystem.out.println(\"Repairing Flyable object\");\t\r\n    }\r\n}\r\n```","```\r\npublic class ArmoredCar extends Car implements Floatable, Flyable {\r\n    // this won't compile\r\n}\r\n```","```\r\npublic interface Floatable {\r\n    int duration = 10;\r\n}\r\n```","```\r\npublic interface Flyable {\r\n    int duration = 20;\r\n}\r\n```","```\r\npublic class ArmoredCar extends Car implements Floatable, Flyable {\r\n\r\n    public void aMethod() {\r\n    \tSystem.out.println(duration); // won't compile\r\n    \tSystem.out.println(Floatable.duration); // outputs 10\r\n    \tSystem.out.println(Flyable.duration); // outputs 20\r\n    }\r\n}\r\n```","```\r\npublic interface Floatable {\r\n    void floatOnWater();\r\n}\r\n```","```\r\ninterface interface Flyable {\r\n    void fly();\r\n}\r\n```","```\r\npublic interface SpaceTraveller extends Floatable, Flyable {\r\n    void remoteControl();\r\n}\r\n```","```\r\npublic class Employee {\r\n    private String name;\r\n    private Car car;\r\n\r\n    // standard constructor\r\n}\r\n```","```\r\nEmployee e1 = new Employee(\"Shreya\", new ArmoredCar());\r\nEmployee e2 = new Employee(\"Paul\", new SpaceCar());\r\nEmployee e3 = new Employee(\"Pavni\", new BMW());\r\n```","```\r\npublic class ArmoredCar extends Car {\r\n    private String model;\r\n    public String getAValue() {\r\n    \treturn super.model;   // returns value of model defined in base class Car\r\n    \t// return this.model;   // will return value of model defined in ArmoredCar\r\n    \t// return model;   // will return value of model defined in ArmoredCar\r\n    }\r\n}\r\n```","```\r\npublic class Car {\r\n    public static String msg() {\r\n        return \"Car\";\r\n    }\r\n}\r\n```","```\r\npublic class ArmoredCar extends Car {\r\n    public static String msg() {\r\n        return super.msg(); // this won't compile.\r\n    }\r\n}\r\n```","```\r\nreturn Car.msg();\r\n```","```\r\npublic class Car {\r\n    public static String msg() {\r\n        return \"Car\";\r\n    }\r\n}\r\n```","```\r\npublic class ArmoredCar extends Car {\r\n    public static String msg() {\r\n        return \"ArmoredCar\";\r\n    }\r\n}\r\n```","```\r\nCar first = new ArmoredCar();\r\nArmoredCar second = new ArmoredCar();\r\n```"]