["```\r\nWebClient webClient = WebClient.create(\"http://localhost:8080\");\r\n```","```\r\npublic Mono<User> getUser(int id) {\r\n    LOG.info(String.format(\"Calling getUser(%d)\", id));\r\n\r\n    return webClient.get()\r\n        .uri(\"/user/{id}\", id)\r\n        .retrieve()\r\n        .bodyToMono(User.class);\r\n}\r\n```","```\r\npublic Flux fetchUsers(List userIds) {\r\n    return Flux.fromIterable(userIds)\r\n        .flatMap(this::getUser);\r\n}\r\n```","```\r\npublic Mono<User> getOtherUser(int id) {\r\n    return webClient.get()\r\n        .uri(\"/otheruser/{id}\", id)\r\n        .retrieve()\r\n        .bodyToMono(User.class);\r\n}\r\n```","```\r\npublic Flux fetchUserAndOtherUser(int id) {\r\n    return Flux.merge(getUser(id), getOtherUser(id));\r\n}\r\n```","```\r\npublic Mono fetchUserAndItem(int userId, int itemId) {\r\n    Mono user = getUser(userId);\r\n    Mono item = getItem(itemId);\r\n\r\n    return Mono.zip(user, item, UserWithItem::new);\r\n}\r\n```","```\r\n@Test\r\npublic void givenClient_whenFetchingUsers_thenExecutionTimeIsLessThanDouble() {\r\n\r\n    int requestsNumber = 5;\r\n    int singleRequestTime = 1000;\r\n\r\n    for (int i = 1; i <= requestsNumber; i++) {\r\n        stubFor(get(urlEqualTo(\"/user/\" + i)).willReturn(aResponse().withFixedDelay(singleRequestTime)\r\n            .withStatus(200)\r\n            .withHeader(\"Content-Type\", \"application/json\")\r\n            .withBody(String.format(\"{ \\\"id\\\": %d }\", i))));\r\n    }\r\n\r\n    List<Integer> userIds = IntStream.rangeClosed(1, requestsNumber)\r\n        .boxed()\r\n        .collect(Collectors.toList());\r\n\r\n    Client client = new Client(\"http://localhost:8089\");\r\n\r\n    long start = System.currentTimeMillis();\r\n    List<User> users = client.fetchUsers(userIds).collectList().block();\r\n    long end = System.currentTimeMillis();\r\n\r\n    long totalExecutionTime = end - start;\r\n\r\n    assertEquals(\"Unexpected number of users\", requestsNumber, users.size());\r\n    assertTrue(\"Execution time is too big\", 2 * singleRequestTime > totalExecutionTime);\r\n}\r\n```"]