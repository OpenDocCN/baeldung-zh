["```\r\nDouble valueOne = Double.valueOf(1.0012);\r\nDouble valueTwo = Double.valueOf(1.0012);\r\n\r\nint hashCode1 = valueOne.hashCode();\r\nint hashCode2 = valueTwo.hashCode();\r\n\r\nassertEquals(hashCode1, hashCode2);\r\n```","```\r\nDouble value = null;\r\nvalue.hashCode();\r\n```","```\r\nString stringOne = \"test\";\r\nString stringTwo = \"test\";\r\nint hashCode1 = Objects.hashCode(stringOne);\r\nint hashCode2 = Objects.hashCode(stringTwo);\r\n\r\nassertEquals(hashCode1, hashCode2);\r\n```","```\r\nString nullString = null;\r\nint hashCode = Objects.hashCode(nullString);\r\nassertEquals(0, hashCode);\r\n```","```\r\nString strOne = \"one\";\r\nString strTwo = \"two\";\r\nString strOne2 = \"one\";\r\nString strTwo2 = \"two\";\r\n\r\nint hashCode1 = Objects.hash(strOne, strTwo);\r\nint hashCode2 = Objects.hash(strOne2, strTwo2);\r\n\r\nassertEquals(hashCode1, hashCode2);\r\n```","```\r\nString testString = \"test string\";\r\nint hashCode1 = Objects.hash(testString);\r\nint hashCode2 = Objects.hashCode(testString);\r\n\r\nassertNotEquals(hashCode1, hashCode2);\r\n```","```\r\npublic class Player {\r\n    private String firstName;\r\n    private String lastName;\r\n    private String position;\r\n\r\n    // Standard getters/setters\r\n}\r\n```","```\r\n@Override\r\npublic int hashCode() {\r\n    int result = 17;\r\n    result = 31 * result + firstName != null ? firstName.hashCode() : 0;\r\n    result = 31 * result + lastName != null ? lastName.hashCode() : 0;\r\n    result = 31 * result + position != null ? position.hashCode() : 0;\r\n    return result;\r\n}\r\n```","```\r\nPlayer player = new Player(\"Eduardo\", \"Rodriguez\", \"Pitcher\");\r\nPlayer indenticalPlayer = new Player(\"Eduardo\", \"Rodriguez\", \"Pitcher\");\r\n\r\nint hashCode1 = player.hashCode();\r\nint hashCode2 = player.hashCode();\r\nint hashCode3 = indenticalPlayer.hashCode();\r\n\r\nassertEquals(hashCode1, hashCode2);\r\nassertEquals(hashCode1, hashCode3);\r\n```","```\r\nint result = 17;\r\nresult = 31 * result + Objects.hashCode(firstName);\r\nresult = 31 * result + Objects.hashCode(lastName);\r\nresult = 31 * result + Objects.hashCode(position);\r\nreturn result;\r\n```","```\r\nreturn Objects.hash(firstName, lastName, position);\r\n```","```\r\n@Test\r\npublic void whenCallingHashCodeAndArraysHashCode_thenSameHashCodeReturned() {\r\n    Player player = new Player(\"Bobby\", \"Dalbec\", \"First Base\");\r\n    int hashcode1 = player.hashCode();\r\n    String[] playerInfo = {\"Bobby\", \"Dalbec\", \"First Base\"};\r\n    int hashcode2 = Arrays.hashCode(playerInfo);\r\n\r\n    assertEquals(hashcode1, hashcode2);\r\n}\r\n```"]