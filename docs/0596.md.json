["```\r\nkeycloak:\r\n  server:\r\n    contextPath: /auth\r\n    adminUser:\r\n      username: bael-admin\r\n      password: pass\r\n    realmImportFile: customer-realm.json\r\n```","```\r\nkeycloak.auth-server-url=http://localhost:8083/auth\r\nkeycloak.realm=baeldung\r\nkeycloak.resource=customerClient\r\nkeycloak.public-client=true\r\nkeycloak.principal-attribute=preferred_username\r\n```","```\r\n@GetMapping(path = \"/users\")\r\npublic String getUserInfo(Model model) {\r\n\r\n    KeycloakAuthenticationToken authentication = \r\n      (KeycloakAuthenticationToken) SecurityContextHolder.getContext().getAuthentication();\r\n\r\n    Principal principal = (Principal) authentication.getPrincipal();\r\n\r\n    String userIdByToken = \"\";\r\n\r\n    if (principal instanceof KeycloakPrincipal) {\r\n        KeycloakPrincipal<KeycloakSecurityContext> kPrincipal = (KeycloakPrincipal<KeycloakSecurityContext>) principal;\r\n        IDToken token = kPrincipal.getKeycloakSecurityContext().getIdToken();\r\n        userIdByToken = token.getSubject();\r\n    }\r\n\r\n    model.addAttribute(\"userIDByToken\", userIdByToken);\r\n    return \"userInfo\";\r\n} \r\n```","```\r\n@GetMapping(path = \"/users\")\r\npublic String getUserInfo(Model model) {\r\n\r\n    KeycloakAuthenticationToken authentication = \r\n      (KeycloakAuthenticationToken) SecurityContextHolder.getContext().getAuthentication();\r\n\r\n    Principal principal = (Principal) authentication.getPrincipal();\r\n\r\n    String userIdByMapper = \"\";\r\n\r\n    if (principal instanceof KeycloakPrincipal) {\r\n        KeycloakPrincipal<KeycloakSecurityContext> kPrincipal = (KeycloakPrincipal<KeycloakSecurityContext>) principal;\r\n        IDToken token = kPrincipal.getKeycloakSecurityContext().getIdToken();\r\n        userIdByMapper = token.getOtherClaims().get(\"user_id\").toString();\r\n    }\r\n\r\n    model.addAttribute(\"userIDByMapper\", userIdByMapper);\r\n    return \"userInfo\";\r\n} \r\n```","```\r\n<div id=\"container\">\r\n    <h1>\r\n\tUser ID By Token: <span th:text=\"${userIDByToken}\">--userID--</span>.\r\n    </h1>\r\n    <h1>\r\n        User ID By Mapper: <span th:text=\"${userIDByMapper}\">--userID--</span>.\r\n    </h1>\r\n</div>\r\n```"]