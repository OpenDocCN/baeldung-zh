["```\r\nKeyPairGenerator generator = KeyPairGenerator.getInstance(\"RSA\");\r\ngenerator.initialize(2048);\r\nKeyPair pair = generator.generateKeyPair();\r\n```","```\r\nPrivateKey privateKey = pair.getPrivate();\r\nPublicKey publicKey = pair.getPublic();\r\n```","```\r\ntry (FileOutputStream fos = new FileOutputStream(\"public.key\")) {\r\n    fos.write(publicKey.getEncoded());\r\n}\r\n```","```\r\nFile publicKeyFile = new File(\"public.key\");\r\nbyte[] publicKeyBytes = Files.readAllBytes(publicKeyFile.toPath());\r\n```","```\r\nKeyFactory keyFactory = KeyFactory.getInstance(\"RSA\");\r\nEncodedKeySpec publicKeySpec = new X509EncodedKeySpec(publicKeyBytes);\r\nkeyFactory.generatePublic(publicKeySpec);\r\n```","```\r\nString secretMessage = \"Baeldung secret message\";\r\n```","```\r\nCipher encryptCipher = Cipher.getInstance(\"RSA\");\r\nencryptCipher.init(Cipher.ENCRYPT_MODE, publicKey);\r\n```","```\r\nbyte[] secretMessageBytes = secretMessage.getBytes(StandardCharsets.UTF_8);)\r\nbyte[] encryptedMessageBytes = encryptCipher.doFinal(secretMessageBytes);\r\n```","```\r\nString encodedMessage = Base64.getEncoder().encodeToString(encryptedMessageBytes);\r\n```","```\r\nCipher decryptCipher = Cipher.getInstance(\"RSA\");\r\ndecryptCipher.init(Cipher.DECRYPT_MODE, privateKey);\r\n```","```\r\nbyte[] decryptedMessageBytes = decryptCipher.doFinal(encryptedMessageBytes);\r\nString decryptedMessage = new String(decryptedMessageBytes, StandardCharsets.UTF_8);\r\n```","```\r\nassertEquals(secretMessage, decryptedMessage);\r\n```","```\r\nPath tempFile = Files.createTempFile(\"temp\", \"txt\");\r\nFiles.writeString(tempFile, \"some secret message\");\r\n```","```\r\nbyte[] fileBytes = Files.readAllBytes(tempFile);\r\n```","```\r\nCipher encryptCipher = Cipher.getInstance(\"RSA\");\r\nencryptCipher.init(Cipher.ENCRYPT_MODE, publicKey);\r\nbyte[] encryptedFileBytes = encryptCipher.doFinal(fileBytes);\r\n```","```\r\ntry (FileOutputStream stream = new FileOutputStream(tempFile.toFile())) {\r\n    stream.write(encryptedFileBytes);\r\n}\r\n```","```\r\nbyte[] encryptedFileBytes = Files.readAllBytes(tempFile);\r\nCipher decryptCipher = Cipher.getInstance(\"RSA\");\r\ndecryptCipher.init(Cipher.DECRYPT_MODE, privateKey);\r\nbyte[] decryptedFileBytes = decryptCipher.doFinal(encryptedFileBytes);\r\ntry (FileOutputStream stream = new FileOutputStream(tempFile.toFile())) {\r\n    stream.write(decryptedFileBytes);\r\n}\r\n```","```\r\nString fileContent = Files.readString(tempFile);\r\nAssertions.assertEquals(\"some secret message\", fileContent);\r\n```"]