["```\r\nfinal String b = \"B\";\r\nswitch (args[0]) {\r\n    case \"A\" -> System.out.println(\"Parameter is A\");\r\n    case b -> System.out.println(\"Parameter is b\");\r\n    default -> System.out.println(\"Parameter is unknown\");\r\n};\r\n```","```\r\nif (o instanceof String s) {\r\n    System.out.printf(\"Object is a string %s\", s);\r\n} else if (o instanceof Number n) {\r\n    System.out.printf(\"Object is a number %n\", n);\r\n}\r\n```","```\r\njava --enable-preview --source 17 PatternMatching.java\r\n```","```\r\nstatic double getDoubleUsingIf(Object o) {\r\n    double result;\r\n    if (o instanceof Integer) {\r\n        result = ((Integer) o).doubleValue();\r\n    } else if (o instanceof Float) {\r\n        result = ((Float) o).doubleValue();\r\n    } else if (o instanceof String) {\r\n        result = Double.parseDouble(((String) o));\r\n    } else {\r\n        result = 0d;\r\n    }\r\n    return result;\r\n}\r\n```","```\r\nstatic double getDoubleUsingSwitch(Object o) {\r\n    return switch (o) {\r\n        case Integer i -> i.doubleValue();\r\n        case Float f -> f.doubleValue();\r\n        case String s -> Double.parseDouble(s);\r\n        default -> 0d;\r\n    };\r\n}\r\n```","```\r\nstatic double getDoubleValueUsingIf(Object o) {\r\n    return switch (o) {\r\n        case String s -> {\r\n            if (s.length() > 0) {\r\n                yield Double.parseDouble(s);\r\n            } else {\r\n                yield 0d;\r\n            }\r\n        }\r\n        default -> 0d;\r\n    };\r\n}\r\n```","```\r\nstatic double getDoubleValueUsingGuardedPatterns(Object o) {\r\n    return switch (o) {\r\n        case String s && s.length() > 0 -> Double.parseDouble(s);\r\n        default -> 0d;\r\n    };\r\n}\r\n```","```\r\nstatic double getDoubleValueUsingParenthesizedPatterns(Object o) {\r\n    return switch (o) {\r\n        case String s && s.length() > 0 && !(s.contains(\"#\") || s.contains(\"@\")) -> Double.parseDouble(s);\r\n        default -> 0d;\r\n    };\r\n}\r\n```","```\r\nstatic double getDoubleUsingSwitch(Object o) {\r\n    return switch (o) {\r\n        case String s -> Double.parseDouble(s);\r\n    };\r\n}\r\n```","```\r\n[ERROR] Failed to execute goal ... on project core-java-17: Compilation failure\r\n[ERROR] /D:/Projects/.../HandlingNullValuesUnitTest.java:[10,16] the switch expression does not cover all possible input values\r\n```","```\r\nstatic double getDoubleUsingSwitch(Object o) {\r\n    return switch (o) {\r\n        case CharSequence c -> Double.parseDouble(c.toString());\r\n        case String s -> Double.parseDouble(s);\r\n        default -> 0d;\r\n    };\r\n}\r\n```","```\r\n[ERROR] Failed to execute goal ... on project core-java-17: Compilation failure\r\n[ERROR] /D:/Projects/.../HandlingNullValuesUnitTest.java:[12,18] this case label is dominated by a preceding case label\r\n```","```\r\nstatic double getDoubleUsingSwitch(Object o) {\r\n    return switch (o) {\r\n        case String s -> Double.parseDouble(s);\r\n        case null -> 0d;\r\n        default -> 0d;\r\n    };\r\n}\r\n```","```\r\nstatic double getDoubleUsingSwitchTotalType(Object o) {\r\n    return switch (o) {\r\n        case String s -> Double.parseDouble(s);\r\n        case Object ob -> 0d;\r\n    };\r\n}\r\n```","```\r\n[ERROR] Failed to execute goal ... on project core-java-17: Compilation failure\r\n[ERROR] /D:/Projects/.../HandlingNullValuesUnitTest.java:[14,13] switch has both a total pattern and a default label\r\n```"]