["```\r\nMockito.mockitoSession()\r\n  .initMocks(this)\r\n  .strictness(Strictness.STRICT_STUBS)\r\n  .startMocking(); \r\n```","```\r\n@Test\r\npublic void givenUnusedStub_whenInvokingGetThenThrowUnnecessaryStubbingException() {\r\n    when(mockList.add(\"one\")).thenReturn(true); // this won't get called\r\n    when(mockList.get(anyInt())).thenReturn(\"hello\");\r\n    assertEquals(\"List should contain hello\", \"hello\", mockList.get(1));\r\n}\r\n```","```\r\norg.mockito.exceptions.misusing.UnnecessaryStubbingException: \r\nUnnecessary stubbings detected.\r\nClean & maintainable test code requires zero unnecessary code.\r\nFollowing stubbings are unnecessary (click to navigate to relevant line of code):\r\n  1\\. -> at com.baeldung.mockito.misusing.MockitoUnecessaryStubUnitTest.givenUnusedStub_whenInvokingGetThenThrowUnnecessaryStubbingException(MockitoUnecessaryStubUnitTest.java:37)\r\nPlease remove unnecessary stubbings or use 'lenient' strictness. More info: javadoc for UnnecessaryStubbingException class.\r\n```","```\r\n@Test\r\npublic void givenLenientdStub_whenInvokingGetThenThrowUnnecessaryStubbingException() {\r\n    lenient().when(mockList.add(\"one\")).thenReturn(true);\r\n    when(mockList.get(anyInt())).thenReturn(\"hello\");\r\n    assertEquals(\"List should contain hello\", \"hello\", mockList.get(1));\r\n}\r\n```"]