["```\r\nDefaultHttpClient httpClient = new DefaultHttpClient();\r\n\r\nint timeout = 5; // seconds\r\nHttpParams httpParams = httpClient.getParams();\r\nhttpParams.setParameter(\r\n  CoreConnectionPNames.CONNECTION_TIMEOUT, timeout * 1000);\r\nhttpParams.setParameter(\r\n  CoreConnectionPNames.SO_TIMEOUT, timeout * 1000);\r\nhttpParams.setParameter(\r\n  ClientPNames.CONN_MANAGER_TIMEOUT, new Long(timeout * 1000));\r\n```","```\r\nDefaultHttpClient httpClient = new DefaultHttpClient();\r\n\r\nint timeout = 5; // seconds\r\nHttpParams httpParams = httpClient.getParams();\r\nHttpConnectionParams.setConnectionTimeout(\r\n  httpParams, timeout * 1000); // http.connection.timeout\r\nHttpConnectionParams.setSoTimeout(\r\n  httpParams, timeout * 1000); // http.socket.timeout\r\n```","```\r\nint timeout = 5;\r\nRequestConfig config = RequestConfig.custom()\r\n  .setConnectTimeout(timeout * 1000)\r\n  .setConnectionRequestTimeout(timeout * 1000)\r\n  .setSocketTimeout(timeout * 1000).build();\r\nCloseableHttpClient client = \r\n  HttpClientBuilder.create().setDefaultRequestConfig(config).build();\r\n```","```\r\nHttpGet getMethod = new HttpGet(\"http://host:8080/path\");\r\nHttpResponse response = httpClient.execute(getMethod);\r\nSystem.out.println(\r\n  \"HTTP Status of response: \" + response.getStatusLine().getStatusCode());\r\n```","```\r\nHttpGet getMethod = new HttpGet(\r\n  \"http://localhost:8080/httpclient-simple/api/bars/1\");\r\n\r\nint hardTimeout = 5; // seconds\r\nTimerTask task = new TimerTask() {\r\n    @Override\r\n    public void run() {\r\n        if (getMethod != null) {\r\n            getMethod.abort();\r\n        }\r\n    }\r\n};\r\nnew Timer(true).schedule(task, hardTimeout * 1000);\r\n\r\nHttpResponse response = httpClient.execute(getMethod);\r\nSystem.out.println(\r\n  \"HTTP Status of response: \" + response.getStatusLine().getStatusCode());\r\n```","```\r\nint timeout = 3;\r\nRequestConfig config = RequestConfig.custom().\r\n  setConnectTimeout(timeout * 1000).\r\n  setConnectionRequestTimeout(timeout * 1000).\r\n  setSocketTimeout(timeout * 1000).build();\r\nCloseableHttpClient client = HttpClientBuilder.create()\r\n  .setDefaultRequestConfig(config).build();\r\n\r\nHttpGet request = new HttpGet(\"http://www.google.com:81\");\r\nresponse = client.execute(request);\r\n```","```\r\nDEBUG o.a.h.i.c.HttpClientConnectionOperator - Connecting to www.google.com/173.194.34.212:81\r\nDEBUG o.a.h.i.c.HttpClientConnectionOperator - \r\n Connect to www.google.com/173.194.34.212:81 timed out. Connection will be retried using another IP address\r\n\r\nDEBUG o.a.h.i.c.HttpClientConnectionOperator - Connecting to www.google.com/173.194.34.208:81\r\nDEBUG o.a.h.i.c.HttpClientConnectionOperator - \r\n Connect to www.google.com/173.194.34.208:81 timed out. Connection will be retried using another IP address\r\n\r\nDEBUG o.a.h.i.c.HttpClientConnectionOperator - Connecting to www.google.com/173.194.34.209:81\r\nDEBUG o.a.h.i.c.HttpClientConnectionOperator - \r\n Connect to www.google.com/173.194.34.209:81 timed out. Connection will be retried using another IP address\r\n//...\r\n```"]