["```\r\npublic class Car {\r\n\r\n    private String licensePlate;\r\n    private String driverName;\r\n    private String driverLicense;\r\n\r\n    public String getDetails() {\r\n        return \"Car [licensePlate=\" + licensePlate + \", driverName=\" + driverName\r\n          + \", driverLicense=\" + driverLicense + \"]\";\r\n    }\r\n\r\n    // getters and setters\r\n}\r\n```","```\r\npublic class Car {\r\n\r\n    private String licensePlate;\r\n\r\n    private Driver driver = new Driver();\r\n\r\n    public String getDetails() {\r\n        return \"Car [licensePlate=\" + licensePlate + \", driverName=\" + driver.getDriverName()\r\n          + \", driverLicense=\" + driver.getDriverLicense() + \"]\";\r\n    }\r\n\r\n    //getters and setters\r\n}\r\n```","```\r\npublic class EmployeeService {\r\n\r\n    public void save(Employee emp) {\r\n    }\r\n\r\n    public void delete(Employee emp) {\r\n    }\r\n\r\n    public void sendEmail(List<Integer> ids, String message) {\r\n    }\r\n}\r\n```","```\r\npublic class EmployeeService implements IEmpService {\r\n\r\n    @Override\r\n    public void save(Employee emp) {\r\n    }\r\n\r\n    @Override\r\n    public void delete(Employee emp) {\r\n    }\r\n\r\n    public void sendEmail(List<Integer> ids, String message) {\r\n    }\r\n}\r\n```","```\r\npublic class Employee {\r\n\r\n    private String name;\r\n\r\n    private int age;\r\n\r\n    private int experienceInMonths;\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public int getAge() {\r\n        return age;\r\n    }\r\n\r\n    public int getExperienceInMonths() {\r\n        return experienceInMonths;\r\n    }\r\n}\r\n```","```\r\npublic class Employee extends Person {\r\n\r\n    private int experienceInMonths;\r\n\r\n    public int getExperienceInMonths() {\r\n        return experienceInMonths;\r\n    }\r\n}\r\n```","```\r\npublic class Test {\r\n    public static void main(String[] args) {\r\n        for (int i = 0; i < args.length; i++) {\r\n            System.out.println(args[i]);\r\n        }\r\n    }\r\n}\r\n```","```\r\npublic class Test {\r\n\r\n    public static void main(String[] args) {\r\n        printArgs(args);\r\n    }\r\n\r\n    private static void printArgs(String[] args) {\r\n        for (int i = 0; i < args.length; i++) {\r\n            System.out.println(args[i]);\r\n        }\r\n    }\r\n}\r\n```","```\r\npublic class Test {\r\n\r\n    public static void main(String[] args) {\r\n        System.out.println(\"Number of Arguments passed =\" + args.length);\r\n    }\r\n}\r\n```","```\r\npublic class Test {\r\n\r\n    public static void main(String[] args) {\r\n        final String prefix = \"Number of Arguments passed =\";\r\n        System.out.println(prefix + args.length);\r\n    }\r\n}\r\n```","```\r\npublic class MathUtil {\r\n\r\n    public double circumference(double radius) {\r\n        return 2 * 3.14 * radius;\r\n    }\r\n}\r\n```","```\r\npublic class MathUtil {\r\n\r\n    private static final double PI = 3.14;\r\n\r\n    public double circumference(double radius) {\r\n        return 2 * PI * radius;\r\n    }\r\n}\r\n```","```\r\npublic class Util {\r\n\r\n    public void isNumberPrime(int num) {\r\n        boolean result = isPrime(num);\r\n        if (result) {\r\n            System.out.println(\"Number is Prime\");\r\n        } else {\r\n            System.out.println(\"Number is Not Prime\");\r\n        }\r\n    }\r\n\r\n    // isPrime method\r\n} \r\n```","```\r\npublic class Util {\r\n\r\n    public void isNumberPrime(int num) {\r\n        if (isPrime(num)) {\r\n            System.out.println(\"Number is Prime\");\r\n        } else {\r\n            System.out.println(\"Number is Not Prime\");\r\n        }\r\n    }\r\n\r\n    // isPrime method\r\n}\r\n```","```\r\npublic class Movie {\r\n\r\n    private String title;\r\n    private double price;\r\n    private MovieType type;\r\n\r\n    // other methods\r\n}\r\n```","```\r\npublic enum MovieType {\r\n    NEW, REGULAR\r\n}\r\n```","```\r\npublic class Customer {\r\n\r\n    private String name;\r\n    private String address;\r\n    private List<Movie> movies;\r\n\r\n    public double totalCost() {\r\n        double result = 0;\r\n        for (Movie movie : movies) {\r\n            result += movieCost(movie);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private double movieCost(Movie movie) {\r\n        if (movie.getType()\r\n            .equals(MovieType.NEW)) {\r\n            return 2 + movie.getPrice();\r\n        }\r\n        return movie.getPrice();\r\n    }\r\n\r\n    // other methods\r\n}\r\n```","```\r\npublic class Customer {\r\n\r\n    private String name;\r\n    private String address;\r\n    private List<Movie> movies;\r\n\r\n    public double totalCost() {\r\n        double result = 0;\r\n        for (Movie movie : movies) {\r\n            result += movie.movieCost();\r\n        }\r\n        return result;\r\n    }\r\n\r\n    // other methods\r\n}\r\n```"]