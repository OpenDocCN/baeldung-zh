["```\r\n<dependency>\r\n    <groupId>org.drools</groupId>\r\n    <artifactId>drools-core</artifactId>\r\n    <version>7.4.1.Final</version>\r\n</dependency>\r\n```","```\r\nquery belongsTo(String x, String y)\r\n    Fact(x, y;)\r\n    or\r\n    (Fact(z, y;) and belongsTo(x, z;))\r\nend\r\n```","```\r\nrule \"Great Wall of China BELONGS TO Planet Earth\"\r\nwhen\r\n    belongsTo(\"Great Wall of China\", \"Planet Earth\";)\r\nthen\r\n    result.setValue(\"Decision one taken: Great Wall of China BELONGS TO Planet Earth\");\r\nend\r\n\r\nrule \"print all facts\"\r\nwhen\r\n    belongsTo(element, place;)\r\nthen\r\n    result.addFact(element + \" IS ELEMENT OF \" + place);\r\nend\r\n```","```\r\npublic class Fact {\r\n\r\n    @Position(0)\r\n    private String element;\r\n\r\n    @Position(1)\r\n    private String place;\r\n\r\n    // getters, setters, constructors, and other methods ...    \r\n} \r\n```","```\r\npublic class Result {\r\n    private String value;\r\n    private List<String> facts = new ArrayList<>();\r\n\r\n    //... getters, setters, constructors, and other methods\r\n}\r\n```","```\r\npublic class BackwardChainingTest {\r\n\r\n    @Before\r\n    public void before() {\r\n        result = new Result();\r\n        ksession = new DroolsBeanFactory().getKieSession();\r\n    }\r\n\r\n    @Test\r\n    public void whenWallOfChinaIsGiven_ThenItBelongsToPlanetEarth() {\r\n\r\n        ksession.setGlobal(\"result\", result);\r\n        ksession.insert(new Fact(\"Asia\", \"Planet Earth\"));\r\n        ksession.insert(new Fact(\"China\", \"Asia\"));\r\n        ksession.insert(new Fact(\"Great Wall of China\", \"China\"));\r\n\r\n        ksession.fireAllRules();\r\n\r\n        assertEquals(\r\n          result.getValue(),\r\n          \"Decision one taken: Great Wall of China BELONGS TO Planet Earth\");\r\n    }\r\n}\r\n```"]