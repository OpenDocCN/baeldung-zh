["```\r\nenum Result {\r\n    POSITIVE, NEGATIVE, ZERO\r\n} \r\n```","```\r\nstatic Result byOperator(Integer integer) {\r\n    if (integer > 0) {\r\n        return POSITIVE;\r\n    } else if (integer < 0) {\r\n        return NEGATIVE;\r\n    }\r\n    return ZERO;\r\n} \r\n```","```\r\nassertEquals(POSITIVE, PositiveOrNegative.byOperator(42));\r\nassertEquals(ZERO, PositiveOrNegative.byOperator(0));\r\nassertEquals(NEGATIVE, PositiveOrNegative.byOperator(-700));\r\n```","```\r\nstatic Result bySignum(Integer integer) {\r\n    int result = Integer.signum(integer);\r\n    if (result == 1) {\r\n        return Result.POSITIVE;\r\n    } else if (result == -1) {\r\n        return Result.NEGATIVE;\r\n    }\r\n    return Result.ZERO;\r\n}\r\n```","```\r\nassertEquals(POSITIVE, PositiveOrNegative.bySignum(42));\r\nassertEquals(ZERO, PositiveOrNegative.bySignum(0));\r\nassertEquals(NEGATIVE, PositiveOrNegative.bySignum(-700));\r\n```","```\r\nstatic Result bySignum(Float floatNumber) {\r\n    float result = Math.signum(floatNumber);\r\n\r\n    if (result.compareTo(1.0f) == 0) {\r\n        return Result.POSITIVE;\r\n    } else if (result.compareTo(-1.0f) == 0) {\r\n        return Result.NEGATIVE;\r\n    }\r\n    return Result.ZERO;\r\n}\r\n```","```\r\nassertEquals(POSITIVE, PositiveOrNegative.bySignum(4.2f));\r\nassertEquals(ZERO, PositiveOrNegative.bySignum(0f));\r\nassertEquals(NEGATIVE, PositiveOrNegative.bySignum(-7.7f));\r\n```"]