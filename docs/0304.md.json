["```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-data-cassandra</artifactId>\r\n    <version>2.6.3</version>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n     <version>2.6.3</version>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>com.datastax.astra</groupId>\r\n    <artifactId>astra-spring-boot-starter</artifactId>\r\n    <version>0.3.0</version>\r\n</dependency>\r\n```","```\r\n@SpringBootApplication\r\npublic class AstraDbSpringApplication {\r\n\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(AstraDbSpringApplication.class, args);\r\n    }\r\n}\r\n```","```\r\nastra.api.application-token=<token>\r\nastra.api.database-id=<your_db_id>\r\nastra.api.database-region=europe-west1\r\n```","```\r\nastra.cql.enabled=true\r\nastra.cql.downloadScb.path=~/.astra/secure-connect-shopping-list.zip \r\n```","```\r\nspring.data.cassandra.keyspace=shopping_list\r\nspring.data.cassandra.schema-action=CREATE_IF_NOT_EXISTS\r\n```","```\r\n@RestController\r\npublic class AstraDbApiController {\r\n\r\n    @Autowired\r\n    private AstraClient astraClient;\r\n\r\n    @GetMapping(\"/ping\")\r\n    public String ping() {\r\n        return astraClient.apiDevopsOrganizations()\r\n          .organizationId();\r\n    }\r\n\r\n}\r\n```","```\r\nmvn clean install spring-boot:run\r\n```","```\r\n...\r\n13:08:00.656 [main] INFO  c.d.stargate.sdk.StargateClient - + CqlSession   :[ENABLED]\r\n13:08:00.656 [main] INFO  c.d.stargate.sdk.StargateClient - + API Cql      :[ENABLED]\r\n13:08:00.657 [main] INFO  c.d.stargate.sdk.rest.ApiDataClient - + API Data     :[ENABLED]\r\n13:08:00.657 [main] INFO  c.d.s.sdk.doc.ApiDocumentClient - + API Document :[ENABLED]\r\n13:08:00.658 [main] INFO  c.d.s.sdk.gql.ApiGraphQLClient - + API GraphQL  :[ENABLED]\r\n13:08:00.658 [main] INFO  com.datastax.astra.sdk.AstraClient\r\n  - [AstraClient] has been initialized.\r\n13:08:01.515 [main] INFO  o.b.s.a.AstraDbSpringApplication\r\n  - Started AstraDbSpringApplication in 7.653 seconds (JVM running for 8.097) \r\n```","```\r\n$ curl http://localhost:8080/ping; echo\r\nd23bf54d-1bc2-4ab7-9bd9-2c628aa54e85\r\n```","```\r\n@Table\r\npublic class ShoppingList {\r\n\r\n    @PrimaryKey\r\n    @CassandraType(type = Name.UUID)\r\n    private UUID uid = UUID.randomUUID();\r\n\r\n    private String title;\r\n    private boolean completed = false;\r\n\r\n    @Column\r\n    private List<String> items = new ArrayList<>();\r\n\r\n    // Standard Getters and Setters\r\n}\r\n```","```\r\n@Repository\r\npublic interface ShoppingListRepository extends CassandraRepository<ShoppingList, String> {\r\n\r\n    ShoppingList findByTitleAllIgnoreCase(String title);\r\n\r\n}\r\n```","```\r\n@Service\r\npublic class ShoppingListService {\r\n\r\n    @Autowired\r\n    private ShoppingListRepository shoppingListRepository;\r\n\r\n    public List<ShoppingList> findAll() {\r\n        return shoppingListRepository.findAll(CassandraPageRequest.first(10)).toList();\r\n    }\r\n\r\n    public ShoppingList findByTitle(String title) {\r\n        return shoppingListRepository.findByTitleAllIgnoreCase(title);\r\n    }\r\n\r\n    @PostConstruct\r\n    public void insert() {\r\n        ShoppingList groceries = new ShoppingList(\"Groceries\");\r\n        groceries.setItems(Arrays.asList(\"Bread\", \"Milk, Apples\"));\r\n\r\n        ShoppingList pharmacy = new ShoppingList(\"Pharmacy\");\r\n        pharmacy.setCompleted(true);\r\n        pharmacy.setItems(Arrays.asList(\"Nappies\", \"Suncream, Aspirin\"));\r\n\r\n        shoppingListRepository.save(groceries);\r\n        shoppingListRepository.save(pharmacy);\r\n    }\r\n\r\n}\r\n```","```\r\n@RestController\r\n@RequestMapping(value = \"/shopping\")\r\npublic class ShoppingListController {\r\n\r\n    @Autowired\r\n    private ShoppingListService shoppingListService;\r\n\r\n    @GetMapping(\"/list\")\r\n    public List<ShoppingList> findAll() {\r\n        return shoppingListService.findAll();\r\n    }\r\n}\r\n```","```\r\n[\r\n  {\r\n    \"uid\": \"363dba2e-17f3-4d01-a44f-a805f74fc43d\",\r\n    \"title\": \"Groceries\",\r\n    \"completed\": false,\r\n    \"items\": [\r\n      \"Bread\",\r\n      \"Milk, Apples\"\r\n    ]\r\n  },\r\n  {\r\n    \"uid\": \"9c0f407e-5fc1-41ad-8e46-b3c115de9474\",\r\n    \"title\": \"Pharmacy\",\r\n    \"completed\": true,\r\n    \"items\": [\r\n      \"Nappies\",\r\n      \"Suncream, Aspirin\"\r\n    ]\r\n  }\r\n]\r\n```","```\r\n@Autowired\r\nprivate CassandraTemplate cassandraTemplate;\r\n\r\n@GetMapping(\"/datacenter\")\r\npublic String datacenter() {\r\n    return cassandraTemplate\r\n        .getCqlOperations()\r\n        .queryForObject(\"SELECT data_center FROM system.local\", String.class);\r\n}\r\n```"]