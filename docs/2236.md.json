["```\r\npublic int runBinarySearchIteratively(\r\n  int[] sortedArray, int key, int low, int high) {\r\n    int index = Integer.MAX_VALUE;\r\n\r\n    while (low <= high) {\r\n        int mid = low  + ((high - low) / 2);\r\n        if (sortedArray[mid] < key) {\r\n            low = mid + 1;\r\n        } else if (sortedArray[mid] > key) {\r\n            high = mid - 1;\r\n        } else if (sortedArray[mid] == key) {\r\n            index = mid;\r\n            break;\r\n        }\r\n    }\r\n    return index;\r\n}\r\n```","```\r\npublic int runBinarySearchRecursively(\r\n  int[] sortedArray, int key, int low, int high) {\r\n    int middle = low  + ((high - low) / 2);\r\n\r\n    if (high < low) {\r\n        return -1;\r\n    }\r\n\r\n    if (key == sortedArray[middle]) {\r\n        return middle;\r\n    } else if (key < sortedArray[middle]) {\r\n        return runBinarySearchRecursively(\r\n          sortedArray, key, low, middle - 1);\r\n    } else {\r\n        return runBinarySearchRecursively(\r\n          sortedArray, key, middle + 1, high);\r\n    }\r\n} \r\n```","```\r\nint index = Arrays.binarySearch(sortedArray, key); \r\n```","```\r\nint index = Collections.binarySearch(sortedList, key); \r\n```"]