["```\r\n<dependency>\r\n    <groupId>org.springframework.cloud</groupId>\r\n    <artifactId>spring-cloud-config-server</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-security</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.cloud</groupId>\r\n    <artifactId>spring-cloud-starter-config</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n</dependency>\r\n```","```\r\n@SpringBootApplication\r\n@EnableConfigServer\r\npublic class ConfigServer {\r\n\r\n    public static void main(String[] arguments) {\r\n        SpringApplication.run(ConfigServer.class, arguments);\r\n    }\r\n} \r\n```","```\r\nserver.port=8888\r\nspring.cloud.config.server.git.uri=ssh://localhost/config-repo\r\nspring.cloud.config.server.git.clone-on-start=true\r\nspring.security.user.name=root\r\nspring.security.user.password=s3cr3t\r\n```","```\r\n$> git init\r\n$> echo 'user.role=Developer' > config-client-development.properties\r\n$> echo 'user.role=User'      > config-client-production.properties\r\n$> git add .\r\n$> git commit -m 'Initial config-client properties'\r\n```","```\r\n/{application}/{profile}[/{label}]\r\n/{application}-{profile}.yml\r\n/{label}/{application}-{profile}.yml\r\n/{application}-{profile}.properties\r\n/{label}/{application}-{profile}.properties\r\n```","```\r\n$> curl http://root:[[email protected]](/web/20221108190012/https://www.baeldung.com/cdn-cgi/l/email-protection):8888/config-client/development/master\r\n```","```\r\n@SpringBootApplication\r\n@RestController\r\npublic class ConfigClient {\r\n\r\n    @Value(\"${user.role}\")\r\n    private String role;\r\n\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(ConfigClient.class, args);\r\n    }\r\n\r\n    @GetMapping(\r\n      value = \"/whoami/{username}\",  \r\n      produces = MediaType.TEXT_PLAIN_VALUE)\r\n    public String whoami(@PathVariable(\"username\") String username) {\r\n        return String.format(\"Hello! \r\n          You're %s and you'll become a(n) %s...\\n\", username, role);\r\n    }\r\n}\r\n```","```\r\nspring.application.name=config-client\r\nspring.profiles.active=development\r\nspring.config.import=optional:configserver:http://root:[[email protected]](/web/20221108190012/https://www.baeldung.com/cdn-cgi/l/email-protection):8888\r\n```","```\r\n$> curl http://localhost:8080/whoami/Mr_Pink\r\n```","```\r\nHello! You're Mr_Pink and you'll become a(n) Developer...\r\n```","```\r\n@Configuration\r\npublic class SecurityConfiguration {\r\n\r\n    @Bean\r\n    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {\r\n        http.csrf()\r\n          .ignoringAntMatchers(\"/encrypt/**\")\r\n          .ignoringAntMatchers(\"/decrypt/**\");\r\n\r\n        //...\r\n    }\r\n}\r\n```","```\r\n$> keytool -genkeypair -alias config-server-key \\\r\n       -keyalg RSA -keysize 4096 -sigalg SHA512withRSA \\\r\n       -dname 'CN=Config Server,OU=Spring Cloud,O=Baeldung' \\\r\n       -keypass my-k34-s3cr3t -keystore config-server.jks \\\r\n       -storepass my-s70r3-s3cr3t\r\n```","```\r\nencrypt.keyStore.location=classpath:/config-server.jks\r\nencrypt.keyStore.password=my-s70r3-s3cr3t\r\nencrypt.keyStore.alias=config-server-key\r\nencrypt.keyStore.secret=my-k34-s3cr3t\r\n```","```\r\n$> export PASSWORD=$(curl -X POST --data-urlencode d3v3L \\\r\n       http://root:[[email protected]](/web/20221108190012/https://www.baeldung.com/cdn-cgi/l/email-protection):8888/encrypt)\r\n$> echo \"user.password={cipher}$PASSWORD\" >> config-client-development.properties\r\n$> git commit -am 'Added encrypted password'\r\n$> curl -X POST http://root:[[email protected]](/web/20221108190012/https://www.baeldung.com/cdn-cgi/l/email-protection):8888/refresh\r\n```","```\r\n@SpringBootApplication\r\n@RestController\r\npublic class ConfigClient {\r\n\r\n    ...\r\n\r\n    @Value(\"${user.password}\")\r\n    private String password;\r\n\r\n    ...\r\n    public String whoami(@PathVariable(\"username\") String username) {\r\n        return String.format(\"Hello! \r\n          You're %s and you'll become a(n) %s, \" +\r\n          \"but only if your password is '%s'!\\n\", \r\n          username, role, password);\r\n    }\r\n}\r\n```","```\r\n$> curl http://localhost:8080/whoami/Mr_Pink\r\nHello! You're Mr_Pink and you'll become a(n) Developer, \\\r\n  but only if your password is 'd3v3L'!\r\n```","```\r\nuser.password={cipher}{secret:my-499-s3cr3t}AgAMirj1DkQC0WjRv...\r\nuser.password={cipher}{key:config-client-key}AgAMirj1DkQC0WjRv...\r\n```","```\r\nspring.cloud.config.server.encrypt.enabled=false\r\n```"]