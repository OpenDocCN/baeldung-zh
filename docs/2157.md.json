["```\r\n<dependency>\r\n    <groupId>org.pitest</groupId>\r\n    <artifactId>pitest-parent</artifactId>\r\n    <version>1.1.10</version>\r\n    <type>pom</type>\r\n</dependency> \r\n```","```\r\n<plugin>\r\n    <groupId>org.pitest</groupId>\r\n    <artifactId>pitest-maven</artifactId>\r\n    <version>1.1.10</version>\r\n    <configuration>\r\n        <targetClasses>\r\n            <param>com.baeldung.testing.mutation.*</param>\r\n        </targetClasses>\r\n        <targetTests>\r\n            <param>com.baeldung.mutation.test.*</param>\r\n\t</targetTests>\r\n     </configuration>\r\n</plugin> \r\n```","```\r\npublic boolean isPalindrome(String inputString) {\r\n    if (inputString.length() == 0) {\r\n        return true;\r\n    } else {\r\n        char firstChar = inputString.charAt(0);\r\n        char lastChar = inputString.charAt(inputString.length() - 1);\r\n        String mid = inputString.substring(1, inputString.length() - 1);\r\n        return (firstChar == lastChar) && isPalindrome(mid);\r\n    }\r\n} \r\n```","```\r\n@Test\r\npublic void whenPalindrom_thenAccept() {\r\n    Palindrome palindromeTester = new Palindrome();\r\n    assertTrue(palindromeTester.isPalindrome(\"noon\"));\r\n} \r\n```","```\r\nif (inputString.length() == 0) {\r\n    return true;\r\n}\r\n```","```\r\nif (inputString.length() != 0) {\r\n    return true;\r\n}\r\n```","```\r\n@Test\r\npublic void whenNotPalindrom_thanReject() {\r\n    Palindrome palindromeTester = new Palindrome();\r\n    assertFalse(palindromeTester.isPalindrome(\"box\"));\r\n}\r\n@Test\r\npublic void whenNearPalindrom_thanReject() {\r\n    Palindrome palindromeTester = new Palindrome();\r\n    assertFalse(palindromeTester.isPalindrome(\"neon\"));\r\n}\r\n```","```\r\n<configuration>\r\n    <targetClasses>\r\n        <param>com.baeldung.testing.mutation.*</param>\r\n    </targetClasses>\r\n    <targetTests>\r\n        <param>com.baeldung.mutation.test.*</param>\r\n    </targetTests>\r\n    <mutators>\r\n        <mutator>CONSTRUCTOR_CALLS</mutator>\r\n        <mutator>VOID_METHOD_CALLS</mutator>\r\n        <mutator>RETURN_VALS</mutator>\r\n        <mutator>NON_VOID_METHOD_CALLS</mutator>\r\n    </mutators>\r\n</configuration>\r\n```"]