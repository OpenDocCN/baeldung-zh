["```\r\n<dependency>\r\n    <groupId>org.drools</groupId>\r\n    <artifactId>drools-core</artifactId>\r\n    <version>7.0.0.Final</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.kie</groupId>\r\n    <artifactId>kie-spring</artifactId>\r\n    <version>7.0.0.Final</version>\r\n</dependency>\r\n```","```\r\npublic class TaxiRide {\r\n    private Boolean isNightSurcharge;\r\n    private Long distanceInMile;\r\n\r\n    // standard constructors, getters/setters\r\n}\r\n```","```\r\npublic class Fare {\r\n    private Long nightSurcharge;\r\n    private Long rideFare;\r\n\r\n    // standard constructors, getters/setters\r\n}\r\n```","```\r\nglobal com.baeldung.spring.drools.model.Fare rideFare;\r\ndialect  \"mvel\"\r\n\r\nrule \"Calculate Taxi Fare - Scenario 1\"\r\n    when\r\n        taxiRideInstance:TaxiRide(isNightSurcharge == false && distanceInMile < 10);\r\n    then\r\n      \trideFare.setNightSurcharge(0);\r\n       \trideFare.setRideFare(70);\r\nend \r\n```","```\r\n@Configuration\r\n@ComponentScan(\"com.baeldung.spring.drools.service\")\r\npublic class TaxiFareConfiguration {\r\n    private static final String drlFile = \"TAXI_FARE_RULE.drl\";\r\n\r\n    @Bean\r\n    public KieContainer kieContainer() {\r\n        KieServices kieServices = KieServices.Factory.get();\r\n\r\n        KieFileSystem kieFileSystem = kieServices.newKieFileSystem();\r\n        kieFileSystem.write(ResourceFactory.newClassPathResource(drlFile));\r\n        KieBuilder kieBuilder = kieServices.newKieBuilder(kieFileSystem);\r\n        kieBuilder.buildAll();\r\n        KieModule kieModule = kieBuilder.getKieModule();\r\n\r\n        return kieServices.newKieContainer(kieModule.getReleaseId());\r\n    }\r\n} \r\n```","```\r\nKieModule kieModule = kieBuilder.getKieModule();\r\n```","```\r\nKieContainer kContainer = kieServices.newKieContainer(kieModule.getReleaseId());\r\n```","```\r\n@Service\r\npublic class TaxiFareCalculatorService {\r\n\r\n    @Autowired\r\n    private KieContainer kieContainer;\r\n\r\n    public Long calculateFare(TaxiRide taxiRide, Fare rideFare) {\r\n        KieSession kieSession = kieContainer.newKieSession();\r\n        kieSession.setGlobal(\"rideFare\", rideFare);\r\n        kieSession.insert(taxiRide);\r\n        kieSession.fireAllRules();\r\n        kieSession.dispose();\r\n        return rideFare.getTotalFare();\r\n    }\r\n} \r\n```","```\r\n@Test\r\npublic void whenNightSurchargeFalseAndDistLessThan10_thenFixWithoutNightSurcharge() {\r\n    TaxiRide taxiRide = new TaxiRide();\r\n    taxiRide.setIsNightSurcharge(false);\r\n    taxiRide.setDistanceInMile(9L);\r\n    Fare rideFare = new Fare();\r\n    Long totalCharge = taxiFareCalculatorService.calculateFare(taxiRide, rideFare);\r\n\r\n    assertNotNull(totalCharge);\r\n    assertEquals(Long.valueOf(70), totalCharge);\r\n}\r\n```"]