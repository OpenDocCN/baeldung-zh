["```\r\n@Document(collection = \"inventory\")\r\npublic class Inventory {\r\n\r\n    @Id\r\n    private String id;\r\n    private String status;\r\n    private Size size;\r\n    private InStock inStock;\r\n\r\n    // standard getters and setters    \r\n}\r\n```","```\r\npublic interface InventoryRepository extends MongoRepository<Inventory, String> {\r\n\r\n    @Query(value = \"{ 'status' : ?0 }\", fields = \"{ 'item' : 1, 'status' : 1 }\")\r\n    List<Inventory> findByStatusIncludeItemAndStatusFields(String status);\r\n\r\n    @Query(value = \"{ 'status' : ?0 }\", fields = \"{ 'item' : 1, 'status' : 1, '_id' : 0 }\")\r\n    List<Inventory> findByStatusIncludeItemAndStatusExcludeIdFields(String status);\r\n\r\n    @Query(value = \"{ 'status' : ?0 }\", fields = \"{ 'status' : 0, 'inStock' : 0 }\")\r\n    List<Inventory> findByStatusIncludeAllButStatusAndStockFields(String status);\r\n\r\n    @Query(value = \"{ 'status' : ?0 }\", fields = \"{ 'item' : 1, 'status' : 1, 'size.uom': 1 }\")\r\n    List<Inventory> findByStatusIncludeEmbeddedFields(String status);\r\n\r\n    @Query(value = \"{ 'status' : ?0 }\", fields = \"{ 'size.uom': 0 }\")\r\n    List<Inventory> findByStatusExcludeEmbeddedFields(String status);\r\n\r\n    @Query(value = \"{ 'status' : ?0 }\", fields = \"{ 'item' : 1, 'status' : 1, 'inStock.quantity': 1 }\")\r\n    List<Inventory> findByStatusIncludeEmbeddedFieldsInArray(String status);\r\n\r\n    @Query(value = \"{ 'status' : ?0 }\", fields = \"{ 'item' : 1, 'status' : 1, 'inStock': { $slice: -1 } }\")\r\n    List<Inventory> findByStatusIncludeEmbeddedFieldsLastElementInArray(String status);\r\n\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.data</groupId>\r\n    <artifactId>spring-data-mongodb</artifactId>\r\n    <version>3.0.3.RELEASE</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>de.flapdoodle.embed</groupId>\r\n    <artifactId>de.flapdoodle.embed.mongo</artifactId>\r\n    <version>3.2.6</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n```","```\r\nList<Inventory> inventoryList = inventoryRepository.findByStatusIncludeItemAndStatusFields(\"A\");\r\n\r\ninventoryList.forEach(i -> {\r\n  assertNotNull(i.getId());\r\n  assertNotNull(i.getItem());\r\n  assertNotNull(i.getStatus());\r\n  assertNull(i.getSize());\r\n  assertNull(i.getInStock());\r\n});\r\n```","```\r\nQuery query = new Query();\r\n query.fields()\r\n   .include(\"item\")\r\n   .include(\"status\"); \r\n```","```\r\nList<Inventory> inventoryList = inventoryRepository.findByStatusIncludeItemAndStatusExcludeIdFields(\"A\");\r\n\r\ninventoryList.forEach(i -> {\r\n   assertNotNull(i.getItem());\r\n   assertNotNull(i.getStatus());\r\n   assertNull(i.getId());\r\n   assertNull(i.getSize());\r\n   assertNull(i.getInStock());\r\n});\r\n```","```\r\nQuery query = new Query();\r\nquery.fields()\r\n  .include(\"item\")\r\n  .include(\"status\")\r\n  .exclude(\"_id\"); \r\n```","```\r\nList<Inventory> inventoryList = inventoryRepository.findByStatusIncludeAllButStatusAndStockFields(\"A\");\r\n\r\ninventoryList.forEach(i -> {\r\n  assertNotNull(i.getItem());\r\n  assertNotNull(i.getId());\r\n  assertNotNull(i.getSize());\r\n  assertNull(i.getInStock());\r\n  assertNull(i.getStatus());\r\n});\r\n```","```\r\nQuery query = new Query();\r\nquery.fields()\r\n  .exclude(\"status\")\r\n  .exclude(\"inStock\"); \r\n```","```\r\nList<Inventory> inventoryList = inventoryRepository.findByStatusIncludeEmbeddedFields(\"A\");\r\n\r\ninventoryList.forEach(i -> {\r\n  assertNotNull(i.getItem());\r\n  assertNotNull(i.getStatus());\r\n  assertNotNull(i.getId());\r\n  assertNotNull(i.getSize());\r\n  assertNotNull(i.getSize().getUom());\r\n  assertNull(i.getSize().getHeight());\r\n  assertNull(i.getSize().getWidth());\r\n  assertNull(i.getInStock());\r\n});\r\n```","```\r\nQuery query = new Query();\r\nquery.fields()\r\n  .include(\"item\")\r\n  .include(\"status\")\r\n  .include(\"size.uom\"); \r\n```","```\r\nList<Inventory> inventoryList = inventoryRepository.findByStatusExcludeEmbeddedFields(\"A\");\r\n\r\ninventoryList.forEach(i -> {\r\n  assertNotNull(i.getItem());\r\n  assertNotNull(i.getStatus());\r\n  assertNotNull(i.getId());\r\n  assertNotNull(i.getSize());\r\n  assertNull(i.getSize().getUom());\r\n  assertNotNull(i.getSize().getHeight());\r\n  assertNotNull(i.getSize().getWidth());\r\n  assertNotNull(i.getInStock());\r\n});\r\n```","```\r\nQuery query = new Query();\r\nquery.fields()\r\n  .exclude(\"size.uom\"); \r\n```","```\r\nList<Inventory> inventoryList = inventoryRepository.findByStatusIncludeEmbeddedFieldsInArray(\"A\");\r\n\r\ninventoryList.forEach(i -> {\r\n  assertNotNull(i.getItem());\r\n  assertNotNull(i.getStatus());\r\n  assertNotNull(i.getId());\r\n  assertNotNull(i.getInStock());\r\n  i.getInStock()\r\n    .forEach(stock -> {\r\n      assertNull(stock.getWareHouse());\r\n      assertNotNull(stock.getQuantity());\r\n     });\r\n  assertNull(i.getSize());\r\n});\r\n```","```\r\nQuery query = new Query();\r\nquery.fields()\r\n  .include(\"item\")\r\n  .include(\"status\")\r\n  .include(\"inStock.quantity\"); \r\n```","```\r\nList<Inventory> inventoryList = inventoryRepository.findByStatusIncludeEmbeddedFieldsLastElementInArray(\"A\");\r\n\r\ninventoryList.forEach(i -> {\r\n  assertNotNull(i.getItem());\r\n  assertNotNull(i.getStatus());\r\n  assertNotNull(i.getId());\r\n  assertNotNull(i.getInStock());\r\n  assertEquals(1, i.getInStock().size());\r\n  assertNull(i.getSize());\r\n}); \r\n```","```\r\nQuery query = new Query();\r\nquery.fields()\r\n  .include(\"item\")\r\n  .include(\"status\")\r\n  .slice(\"inStock\", -1); \r\n```"]