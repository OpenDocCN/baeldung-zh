["```\r\nclass Person {\r\n    private String firstName;\r\n    private String lastName;\r\n    private Address address;\r\n\r\n    Person(String firstName, String lastName, Address address) {\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n        this.address = address;\r\n    }\r\n\r\n    // getters and setter omitted\r\n}\r\n```","```\r\nclass Address {\r\n    private String street;\r\n    private String city;\r\n    private ZipCode zipCode;\r\n\r\n    Address(String street, String city, ZipCode zipCode) {\r\n        this.street = street;\r\n        this.city = city;\r\n        this.zipCode = zipCode;\r\n    }\r\n\r\n    // getters and setter omitted\r\n}\r\n```","```\r\nclass ZipCode {\r\n    private long zipcode;\r\n\r\n    ZipCode(long zipcode) {\r\n        this.zipcode = zipcode;\r\n    }\r\n\r\n    // getters and setter omitted\r\n}\r\n```","```\r\nPerson person = new Person(\"aName\", \"aLastName\", new Address(\"aStreet\", \"aCity\", new ZipCode(90210)));\r\n```","```\r\nAddress address = person.getAddress();\r\n```","```\r\nassertThat(address).isNotNull();\r\n```","```\r\nassertThat(address).isNotIn(RESTRICTED_ADDRESSES);\r\n```","```\r\nZipCode zipCode = address.getZipCode();\r\n```","```\r\nassertThat(zipCode).isNotNull();\r\n```","```\r\nassertThat(zipCode.getZipcode()).isBetween(1000L, 100_000L);\r\n```","```\r\nassertThat(person)\r\n  .extracting(Person::getAddress)\r\n  .isNotNull()\r\n  .isNotIn(RESTRICTED_ADDRESSES)\r\n  .extracting(Address::getZipCode)\r\n  .isNotNull()\r\n  .extracting(ZipCode::getZipcode, as(InstanceOfAssertFactories.LONG))\r\n  .isBetween(1_000L, 100_000L);\r\n```"]