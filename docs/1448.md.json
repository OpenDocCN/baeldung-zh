["```\r\n<dependency>\r\n    <groupId>org.apache.shiro</groupId>\r\n    <artifactId>shiro-core</artifactId>\r\n    <version>1.4.1</version>\r\n</dependency>\r\n```","```\r\n[users]\r\njane.admin = password, admin\r\njohn.editor = password2, editor\r\nzoe.author = password3, author\r\n\r\n[roles]\r\nadmin = *\r\neditor = articles:*\r\nauthor = articles:create, articles:edit\r\n```","```\r\nIniRealm iniRealm = new IniRealm(\"classpath:shiro.ini\");\r\nSecurityManager securityManager = new DefaultSecurityManager(iniRealm);\r\nSecurityUtils.setSecurityManager(securityManager);\r\n```","```\r\nSubject subject = SecurityUtils.getSubject();\r\nif (subject.hasRole(\"admin\")) {       \r\n    logger.info(\"Welcome Admin\");              \r\n}\r\n```","```\r\nSubject subject = SecurityUtils.getSubject();\r\nif (subject.isPermitted(\"articles:create\")) {\r\n    //Create a new article\r\n}\r\n```","```\r\n[users]\r\nzoe.author = password3, author\r\n#Other users...\r\n\r\n[roles]\r\nauthor = articles:create, articles:edit\r\n#Other roles...\r\n```","```\r\narticles:edit:1\r\n```","```\r\nSubject subject = SecurityUtils.getSubject();\r\nif (subject.isPermitted(\"articles:edit:123\")) {\r\n    //Edit article with id 123\r\n}\r\n```","```\r\n[roles]\r\nauthor = articles:*\r\n```","```\r\nSubject subject = SecurityUtils.getSubject();\r\nif (subject.isPermitted(\"articles:create\")) {\r\n    //Create a new article\r\n}\r\n```","```\r\nif (subject.isPermitted(\"articles:edit:1\")) { //Better than \"articles:*\"\r\n    //Edit article\r\n}\r\n```","```\r\npublic class PathPermission implements Permission {\r\n\r\n    private final Path path;\r\n\r\n    public PathPermission(Path path) {\r\n        this.path = path;\r\n    }\r\n\r\n    @Override\r\n    public boolean implies(Permission p) {\r\n        if(p instanceof PathPermission) {\r\n            return ((PathPermission) p).path.startsWith(path);\r\n        }\r\n        return false;\r\n    }\r\n}\r\n```","```\r\nIniRealm realm = new IniRealm();\r\nIni ini = Ini.fromResourcePath(Main.class.getResource(\"/com/.../shiro.ini\").getPath());\r\nrealm.setIni(ini);\r\nrealm.setPermissionResolver(new PathPermissionResolver());\r\nrealm.init();\r\n\r\nSecurityManager securityManager = new DefaultSecurityManager(realm);\r\n```","```\r\npublic class PathPermissionResolver implements PermissionResolver {\r\n    @Override\r\n    public Permission resolvePermission(String permissionString) {\r\n        return new PathPermission(Paths.get(permissionString));\r\n    }\r\n}\r\n```","```\r\n[roles]\r\nadmin = /\r\neditor = /articles\r\nauthor = /articles/drafts\r\n```","```\r\nif(currentUser.isPermitted(\"/articles/drafts/new-article\")) {\r\n    log.info(\"You can access articles\");\r\n}\r\n```","```\r\n[main]\r\npermissionResolver = com.baeldung.shiro.permissions.custom.PathPermissionResolver\r\ndataSource = org.apache.shiro.jndi.JndiObjectFactory\r\ndataSource.resourceName = java://app/jdbc/myDataSource\r\n\r\njdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm\r\njdbcRealm.dataSource = $dataSource \r\njdbcRealm.permissionResolver = $permissionResolver\r\n```"]