["```\r\npublic void runPortScan(String ip, int nbrPortMaxToScan) throws IOException {\r\n        ConcurrentLinkedQueue openPorts = new ConcurrentLinkedQueue<>();\r\n        ExecutorService executorService = Executors.newFixedThreadPool(poolSize);\r\n        AtomicInteger port = new AtomicInteger(0);\r\n        while (port.get() < nbrPortMaxToScan) {\r\n                final int currentPort = port.getAndIncrement();\r\n                executorService.submit(() -> {\r\n                        try {\r\n                                Socket socket = new Socket();\r\n                                socket.connect(new InetSocketAddress(ip, currentPort), timeOut);\r\n                                socket.close();\r\n                                openPorts.add(currentPort);\r\n                                System.out.println(ip + \" ,port open: \" + currentPort);\r\n                        } catch (IOException e) {\r\n                                System.err.println(e);\r\n                        }\r\n                });\r\n        }\r\n        executorService.shutdown();\r\n        try {\r\n                executorService.awaitTermination(10, TimeUnit.MINUTES);\r\n        } catch (InterruptedException e) {\r\n                throw new RuntimeException(e);\r\n        }\r\n        List openPortList = new ArrayList<>();\r\n        System.out.println(\"openPortsQueue: \" + openPorts.size());\r\n        while (!openPorts.isEmpty()) {\r\n                openPortList.add(openPorts.poll());\r\n        }\r\n        openPortList.forEach(p -> System.out.println(\"port \" + p + \" is open\"));\r\n}\r\n```"]