["```\r\nAuthentication authentication = SecurityContextHolder.getContext().getAuthentication();\r\nString currentPrincipalName = authentication.getName();\r\n```","```\r\nAuthentication authentication = SecurityContextHolder.getContext().getAuthentication();\r\nif (!(authentication instanceof AnonymousAuthenticationToken)) {\r\n    String currentUserName = authentication.getName();\r\n    return currentUserName;\r\n}\r\n```","```\r\n@Controller\r\npublic class SecurityController {\r\n\r\n    @RequestMapping(value = \"/username\", method = RequestMethod.GET)\r\n    @ResponseBody\r\n    public String currentUserName(Principal principal) {\r\n        return principal.getName();\r\n    }\r\n}\r\n```","```\r\n@Controller\r\npublic class SecurityController {\r\n\r\n    @RequestMapping(value = \"/username\", method = RequestMethod.GET)\r\n    @ResponseBody\r\n    public String currentUserName(Authentication authentication) {\r\n        return authentication.getName();\r\n    }\r\n}\r\n```","```\r\nUserDetails userDetails = (UserDetails) authentication.getPrincipal();\r\nSystem.out.println(\"User has authorities: \" + userDetails.getAuthorities());\r\n```","```\r\n@Controller\r\npublic class GetUserWithHTTPServletRequestController {\r\n\r\n    @RequestMapping(value = \"/username\", method = RequestMethod.GET)\r\n    @ResponseBody\r\n    public String currentUserNameSimple(HttpServletRequest request) {\r\n        Principal principal = request.getUserPrincipal();\r\n        return principal.getName();\r\n    }\r\n}\r\n```","```\r\npublic interface IAuthenticationFacade {\r\n    Authentication getAuthentication();\r\n}\r\n@Component\r\npublic class AuthenticationFacade implements IAuthenticationFacade {\r\n\r\n    @Override\r\n    public Authentication getAuthentication() {\r\n        return SecurityContextHolder.getContext().getAuthentication();\r\n    }\r\n}\r\n```","```\r\n@Controller\r\npublic class GetUserWithCustomInterfaceController {\r\n    @Autowired\r\n    private IAuthenticationFacade authenticationFacade;\r\n\r\n    @RequestMapping(value = \"/username\", method = RequestMethod.GET)\r\n    @ResponseBody\r\n    public String currentUserNameSimple() {\r\n        Authentication authentication = authenticationFacade.getAuthentication();\r\n        return authentication.getName();\r\n    }\r\n}\r\n```","```\r\n<%@ taglib prefix=\"security\" uri=\"http://www.springframework.org/security/tags\" %>\r\n```","```\r\n<security:authorize access=\"isAuthenticated()\">\r\n    authenticated as <security:authentication property=\"principal.username\" /> \r\n</security:authorize>\r\n```","```\r\n<dependency>\r\n    <groupId>org.thymeleaf.extras</groupId>\r\n    <artifactId>thymeleaf-extras-springsecurity5</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.thymeleaf</groupId>\r\n    <artifactId>thymeleaf-spring5</artifactId>\r\n</dependency>\r\n```","```\r\n<html xmlns:th=\"https://www.thymeleaf.org\" \r\n  xmlns:sec=\"https://www.thymeleaf.org/thymeleaf-extras-springsecurity5\">\r\n<body>\r\n    <div sec:authorize=\"isAuthenticated()\">\r\n      Authenticated as <span sec:authentication=\"name\"></span></div>\r\n</body>\r\n</html>\r\n```","```\r\nhttp://localhost:8080/spring-security-rest-custom/foos/1\r\n```"]