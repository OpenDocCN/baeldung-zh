["```\r\n<dependency>\r\n    <groupId>com.squareup.okhttp3</groupId>\r\n    <artifactId>okhttp</artifactId>\r\n    <version>4.9.1</version>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>com.squareup.okhttp3</groupId>\r\n    <artifactId>mockwebserver</artifactId>\r\n    <version>4.9.1</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n```","```\r\npublic class SimpleLoggingInterceptor implements Interceptor {\r\n\r\n    private static final Logger LOGGER = LoggerFactory.getLogger(SimpleLoggingInterceptor.class);\r\n\r\n    @Override\r\n    public Response intercept(Chain chain) throws IOException {\r\n        Request request = chain.request();\r\n\r\n        LOGGER.info(\"Intercepted headers: {} from URL: {}\", request.headers(), request.url());\r\n\r\n        return chain.proceed(request);\r\n    }\r\n}\r\n```","```\r\nOkHttpClient client = new OkHttpClient.Builder() \r\n  .addInterceptor(new SimpleLoggingInterceptor())\r\n  .build();\r\n```","```\r\n@Rule\r\npublic MockWebServer server = new MockWebServer();\r\n\r\n@Test\r\npublic void givenSimpleLogginInterceptor_whenRequestSent_thenHeadersLogged() throws IOException {\r\n    server.enqueue(new MockResponse().setBody(\"Hello Baeldung Readers!\"));\r\n\r\n    OkHttpClient client = new OkHttpClient.Builder()\r\n      .addInterceptor(new SimpleLoggingInterceptor())\r\n      .build();\r\n\r\n    Request request = new Request.Builder()\r\n      .url(server.url(\"/greeting\"))\r\n      .header(\"User-Agent\", \"A Baeldung Reader\")\r\n      .build();\r\n\r\n    try (Response response = client.newCall(request).execute()) {\r\n        assertEquals(\"Response code should be: \", 200, response.code());\r\n        assertEquals(\"Body should be: \", \"Hello Baeldung Readers!\", response.body().string());\r\n    }\r\n}\r\n```","```\r\n16:07:02.644 [main] INFO  c.b.o.i.SimpleLoggingInterceptor - Intercepted headers: User-Agent: A Baeldung Reader\r\n from URL: http://localhost:54769/greeting\r\n```","```\r\n<dependency>\r\n    <groupId>com.squareup.okhttp3</groupId>\r\n    <artifactId>logging-interceptor</artifactId>\r\n    <version>4.9.1</version>\r\n</dependency>\r\n```","```\r\nHttpLoggingInterceptor logger = new HttpLoggingInterceptor();\r\nlogger.setLevel(HttpLoggingInterceptor.Level.HEADERS);\r\n```","```\r\npublic class CacheControlResponeInterceptor implements Interceptor {\r\n\r\n    @Override\r\n    public Response intercept(Chain chain) throws IOException {\r\n        Response response = chain.proceed(chain.request());\r\n        return response.newBuilder()\r\n          .header(\"Cache-Control\", \"no-store\")\r\n          .build();\r\n    }\r\n}\r\n```","```\r\npublic class ErrorMessage {\r\n\r\n    private final int status;\r\n    private final String detail;\r\n\r\n    public ErrorMessage(int status, String detail) {\r\n        this.status = status;\r\n        this.detail = detail;\r\n    }\r\n\r\n    // Getters and setters\r\n}\r\n```","```\r\npublic class ErrorResponseInterceptor implements Interceptor {\r\n\r\n    public static final MediaType APPLICATION_JSON = MediaType.get(\"application/json; charset=utf-8\");\r\n\r\n    @Override\r\n    public Response intercept(Chain chain) throws IOException {\r\n        Response response = chain.proceed(chain.request());\r\n\r\n        if (!response.isSuccessful()) {\r\n            Gson gson = new Gson();\r\n            String body = gson.toJson(\r\n              new ErrorMessage(response.code(), \"The response from the server was not OK\"));\r\n            ResponseBody responseBody = ResponseBody.create(body, APPLICATION_JSON);\r\n\r\n            ResponseBody originalBody = response.body();\r\n            if (originalBody != null) {\r\n                originalBody.close();\r\n            }\r\n\r\n            return response.newBuilder().body(responseBody).build();\r\n        }\r\n        return response;\r\n    }\r\n}\r\n```","```\r\n{\r\n    \"status\": 500,\r\n    \"detail\": \"The response from the server was not OK\"\r\n}\r\n```","```\r\nOkHttpClient client = new OkHttpClient.Builder()\r\n  .addNetworkInterceptor(new SimpleLoggingInterceptor())\r\n  .build();\r\n```"]