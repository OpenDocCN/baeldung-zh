["```\r\n<dependency>\r\n    <groupId>org.apache.kafka</groupId>\r\n    <artifactId>kafka-streams</artifactId>\r\n    <version>2.8.0</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.apache.kafka</groupId>\r\n    <artifactId>kafka-clients</artifactId>\r\n    <version>2.8.0</version>\r\n</dependency> \r\n```","```\r\n./confluent start\r\n```","```\r\nString inputTopic = \"inputTopic\";\r\n```","```\r\nProperties streamsConfiguration = new Properties();\r\nstreamsConfiguration.put(\r\n  StreamsConfig.APPLICATION_ID_CONFIG, \r\n  \"wordcount-live-test\");\r\n```","```\r\nprivate String bootstrapServers = \"localhost:9092\";\r\nstreamsConfiguration.put(\r\n  StreamsConfig.BOOTSTRAP_SERVERS_CONFIG, \r\n  bootstrapServers);\r\n```","```\r\nstreamsConfiguration.put(\r\n  StreamsConfig.DEFAULT_KEY_SERDE_CLASS_CONFIG, \r\n  Serdes.String().getClass().getName());\r\nstreamsConfiguration.put(\r\n  StreamsConfig.DEFAULT_VALUE_SERDE_CLASS_CONFIG, \r\n  Serdes.String().getClass().getName());\r\n```","```\r\nthis.stateDirectory = Files.createTempDirectory(\"kafka-streams\");\r\nstreamsConfiguration.put(\r\n  StreamsConfig.STATE_DIR_CONFIG, this.stateDirectory.toAbsolutePath().toString()); \r\n```","```\r\nStreamsBuilder builder = new StreamsBuilder();\r\nKStream<String, String> textLines = builder.stream(inputTopic);\r\nPattern pattern = Pattern.compile(\"\\\\W+\", Pattern.UNICODE_CHARACTER_CLASS);\r\n\r\nKTable<String, Long> wordCounts = textLines\r\n  .flatMapValues(value -> Arrays.asList(pattern.split(value.toLowerCase())))\r\n  .groupBy((key, word) -> word)\r\n  .count();\r\n```","```\r\nwordCounts.toStream()\r\n  .foreach((word, count) -> System.out.println(\"word: \" + word + \" -> \" + count));\r\n```","```\r\nString outputTopic = \"outputTopic\";\r\nwordCounts.toStream()\r\n  .to(outputTopic, Produced.with(Serdes.String(), Serdes.Long()));\r\n```","```\r\nTopology topology = builder.build();\r\nKafkaStreams streams = new KafkaStreams(topology, streamsConfiguration);\r\nstreams.start();\r\n\r\nThread.sleep(30000);\r\nstreams.close();\r\n```","```\r\n./kafka-console-producer --topic inputTopic --broker-list localhost:9092\r\n>\"this is a pony\"\r\n>\"this is a horse and pony\" \r\n```","```\r\nword:  -> 1\r\nword: this -> 1\r\nword: is -> 1\r\nword: a -> 1\r\nword: pony -> 1\r\nword:  -> 2\r\nword: this -> 2\r\nword: is -> 2\r\nword: a -> 2\r\nword: horse -> 1\r\nword: and -> 1\r\nword: pony -> 2\r\n```"]