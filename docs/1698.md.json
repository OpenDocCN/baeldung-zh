["```\r\n<dependency>\r\n    <groupId>org.testng</groupId>\r\n    <artifactId>testng</artifactId>\r\n    <version>7.1.0</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n```","```\r\n@Test\r\npublic void givenNumber_whenEven_thenTrue() {\r\n    assertTrue(number % 2 == 0);\r\n}\r\n```","```\r\n@BeforeClass\r\npublic void setup() {\r\n    number = 12;\r\n}\r\n\r\n@AfterClass\r\npublic void tearDown() {\r\n    number = 0;\r\n}\r\n```","```\r\n<plugin>\r\n    <groupId>org.apache.maven.plugins</groupId>\r\n    <artifactId>maven-surefire-plugin</artifactId>\r\n    <version>2.22.2</version>\r\n    <configuration>\r\n        <suiteXmlFiles>\r\n            <suiteXmlFile>\r\n               src\\test\\resources\\test_suite.xml\r\n            </suiteXmlFile>\r\n        </suiteXmlFiles>\r\n    </configuration>\r\n</plugin>\r\n```","```\r\n<suiteXmlFiles>\r\n    <suiteXmlFile>\r\n      src/test/resources/parametrized_test.xml\r\n    </suiteXmlFile>\r\n    <suiteXmlFile>\r\n      src/test/resources/registration_test.xml\r\n    </suiteXmlFile>\r\n</suiteXmlFiles>\r\n```","```\r\njava org.testng.TestNG test_suite.xml\r\n```","```\r\n<suite name=\"suite\">\r\n    <test name=\"test suite\">\r\n        <classes>\r\n            <class name=\"com.baeldung.RegistrationTest\" />\r\n            <class name=\"com.baeldung.SignInTest\" />\r\n        </classes>\r\n    </test>\r\n</suite>\r\n```","```\r\n@Test(groups = \"regression\")\r\npublic void givenNegativeNumber_sumLessthanZero_thenCorrect() {\r\n    int sum = numbers.stream().reduce(0, Integer::sum);\r\n\r\n    assertTrue(sum < 0);\r\n}\r\n```","```\r\n<test name=\"test groups\">\r\n    <groups>\r\n        <run>\r\n            <include name=\"regression\" />\r\n        </run>\r\n    </groups>\r\n    <classes>\r\n        <class\r\n          name=\"com.baeldung.SummationServiceTest\" />\r\n    </classes>\r\n</test>\r\n```","```\r\n@Test\r\n@Parameters({\"value\", \"isEven\"})\r\npublic void\r\n  givenNumberFromXML_ifEvenCheckOK_thenCorrect(int value, boolean isEven) {\r\n\r\n    assertEquals(isEven, value % 2 == 0);\r\n}\r\n```","```\r\n<suite name=\"My test suite\">\r\n    <test name=\"numbersXML\">\r\n        <parameter name=\"value\" value=\"1\"/>\r\n        <parameter name=\"isEven\" value=\"false\"/>\r\n        <classes>\r\n            <class name=\"baeldung.com.ParametrizedTests\"/>\r\n        </classes>\r\n    </test>\r\n</suite>\r\n```","```\r\n@DataProvider(name = \"numbers\")\r\npublic static Object[][] evenNumbers() {\r\n    return new Object[][]{{1, false}, {2, true}, {4, true}};\r\n}\r\n\r\n@Test(dataProvider = \"numbers\")\r\npublic void \r\n  givenNumberFromDataProvider_ifEvenCheckOK_thenCorrect(Integer number, boolean expected) {    \r\n    assertEquals(expected, number % 2 == 0);\r\n}\r\n```","```\r\n@Test(dataProvider = \"numbersObject\")\r\npublic void \r\n  givenNumberObjectFromDataProvider_ifEvenCheckOK_thenCorrect(EvenNumber number) {  \r\n    assertEquals(number.isEven(), number.getValue() % 2 == 0);\r\n}\r\n\r\n@DataProvider(name = \"numbersObject\")\r\npublic Object[][] parameterProvider() {\r\n    return new Object[][]{{new EvenNumber(1, false)},\r\n      {new EvenNumber(2, true)}, {new EvenNumber(4, true)}};\r\n}\r\n```","```\r\n@Test(enabled=false)\r\npublic void givenNumbers_sumEquals_thenCorrect() { \r\n    int sum = numbers.stream.reduce(0, Integer::sum);\r\n    assertEquals(6, sum);\r\n}\r\n```","```\r\n@Test\r\npublic void givenEmail_ifValid_thenTrue() {\r\n    boolean valid = email.contains(\"@\");\r\n\r\n    assertEquals(valid, true);\r\n}\r\n\r\n@Test(dependsOnMethods = {\"givenEmail_ifValid_thenTrue\"})\r\npublic void givenValidEmail_whenLoggedIn_thenTrue() {\r\n    LOGGER.info(\"Email {} valid >> logging in\", email);\r\n}\r\n```","```\r\n<suite name=\"suite\" parallel=\"classes\" thread-count=\"2\">\r\n    <test name=\"test suite\">\r\n        <classes>\r\n\t    <class name=\"baeldung.com.RegistrationTest\" />\r\n            <class name=\"baeldung.com.SignInTest\" />\r\n        </classes>\r\n    </test>\r\n</suite>\r\n```","```\r\npublic class MultiThreadedTests {\r\n\r\n    @Test(threadPoolSize = 5, invocationCount = 10, timeOut = 1000)\r\n    public void givenMethod_whenRunInThreads_thenCorrect() {\r\n        int count = Thread.activeCount();\r\n\r\n        assertTrue(count > 1);\r\n    }\r\n}\r\n```"]