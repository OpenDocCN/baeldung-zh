["```\r\n<dependency>\r\n    <groupId>com.vaadin</groupId>\r\n    <artifactId>vaadin-server</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>com.vaadin</groupId>\r\n    <artifactId>vaadin-client-compiled</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>com.vaadin</groupId>\r\n    <artifactId>vaadin-themes</artifactId>\r\n</dependency> \r\n```","```\r\n<repositories>\r\n    <repository>\r\n        <id>vaadin-addons</id>\r\n        <url>http://maven.vaadin.com/vaadin-addons</url>\r\n    </repository>\r\n</repositories>\r\n<dependencyManagement>\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>com.vaadin</groupId>\r\n            <artifactId>vaadin-bom</artifactId>\r\n            <version>13.0.9</version>\r\n            <type>pom</type>\r\n            <scope>import</scope>\r\n        </dependency>\r\n    </dependencies>\r\n</dependencyManagement>\r\n```","```\r\n<plugin>\r\n    <groupId>org.eclipse.jetty</groupId>\r\n    <artifactId>jetty-maven-plugin</artifactId>\r\n    <version>9.3.9.v20160517</version>\r\n    <configuration>\r\n        <scanIntervalSeconds>2</scanIntervalSeconds>\r\n        <skipTests>true</skipTests>\r\n    </configuration>\r\n</plugin>\r\n```","```\r\nmvn jetty:run\r\n```","```\r\n@WebServlet(urlPatterns = \"/VAADIN/*\", name = \"MyUIServlet\", asyncSupported = true)\r\n@VaadinServletConfiguration(ui = VaadinUI.class, productionMode = false)\r\npublic static class MyUIServlet extends VaadinServlet {}\r\n```","```\r\npublic class VaadinUI extends UI {\r\n\r\n    @Override\r\n    protected void init(VaadinRequest vaadinRequest) {\r\n        VerticalLayout verticalLayout = new VerticalLayout();\r\n        verticalLayout.setSpacing(true);\r\n        verticalLayout.setMargin(true);\r\n        setContent(verticalLayout);\r\n}\r\n```","```\r\nVerticalLayout verticalLayout = new VerticalLayout();\r\nverticalLayout.setSpacing(true);\r\nverticalLayout.setMargin(true);\r\nsetContent(verticalLayout);\r\n```","```\r\nHorizontalLayout horizontalLayout = new HorizontalLayout();\r\n```","```\r\nGridLayout gridLayout = new GridLayout(3, 2);\r\n```","```\r\nFormLayout formLayout = new FormLayout();\r\n```","```\r\nLabel label = new Label();\r\nlabel.setId(\"LabelID\");\r\nlabel.setValue(\"Label Value\");\r\nlabel.setCaption(\"Label\");\r\ngridLayout.addComponent(label);\r\n```","```\r\nLink link = new Link(\"Baeldung\",\r\n  new ExternalResource(\"http://www.baeldung.com/\"));\r\nlink.setTargetName(\"_blank\");\r\n```","```\r\nTextField textField = new TextField();\r\ntextField.setIcon(VaadinIcons.USER);\r\n```","```\r\nTextArea textArea = new TextArea();\r\n```","```\r\nDateField dateField = new DateField(\"DateField\", LocalDate.ofEpochDay(0));\r\n```","```\r\nInlineDateField inlineDateField = new InlineDateField();\r\n```","```\r\nPasswordField passwordField = new PasswordField();\r\n```","```\r\nRichTextArea richTextArea = new RichTextArea();\r\nrichTextArea.setCaption(\"Rich Text Area\");\r\nrichTextArea.setValue(\"<h1>RichTextArea</h1>\");\r\nrichTextArea.setSizeFull();\r\nPanel richTextPanel = new Panel();\r\nrichTextPanel.setContent(richTextArea);\r\n```","```\r\nButton normalButton = new Button(\"Normal Button\");\r\n```","```\r\ntinyButton.addStyleName(\"tiny\");\r\nsmallButton.addStyleName(\"small\");\r\nlargeButton.addStyleName(\"large\");\r\nhugeButton.addStyleName(\"huge\");\r\ndangerButton.addStyleName(\"danger\");\r\nfriendlyButton.addStyleName(\"friendly\");\r\nprimaryButton.addStyleName(\"primary\");\r\nborderlessButton.addStyleName(\"borderless\");\r\nlinkButton.addStyleName(\"link\");\r\nquietButton.addStyleName(\"quiet\");\r\n```","```\r\nButton disabledButton = new Button(\"Disabled Button\");\r\ndisabledButton.setDescription(\"This button cannot be clicked\");\r\ndisabledButton.setEnabled(false);\r\nbuttonLayout.addComponent(disabledButton);\r\n```","```\r\nNativeButton nativeButton = new NativeButton(\"Native Button\");\r\nbuttonLayout.addComponent(nativeButton);\r\n```","```\r\nButton iconButton = new Button(\"Icon Button\");\r\niconButton.setIcon(VaadinIcons.ALIGN_LEFT);\r\nbuttonLayout.addComponent(iconButton);\r\n```","```\r\nCheckBox checkbox = new CheckBox(\"CheckBox\");        \r\ncheckbox.setValue(true);\r\ncheckbox.addValueChangeListener(e ->\r\n  checkbox.setValue(!checkbox.getValue()));\r\nformLayout.addComponent(checkbox);\r\n```","```\r\nList<String> numbers = new ArrayList<>();\r\nnumbers.add(\"One\");\r\nnumbers.add(\"Ten\");\r\nnumbers.add(\"Eleven\");\r\n```","```\r\nComboBox comboBox = new ComboBox(\"ComboBox\");\r\ncomboBox.addItems(numbers);\r\nformLayout.addComponent(comboBox);\r\n```","```\r\nListSelect listSelect = new ListSelect(\"ListSelect\");\r\nlistSelect.addItems(numbers);\r\nlistSelect.setRows(2);\r\nformLayout.addComponent(listSelect);\r\n```","```\r\nNativeSelect nativeSelect = new NativeSelect(\"NativeSelect\");\r\nnativeSelect.addItems(numbers);\r\nformLayout.addComponent(nativeSelect);\r\n```","```\r\nTwinColSelect twinColSelect = new TwinColSelect(\"TwinColSelect\");\r\ntwinColSelect.addItems(numbers);\r\n```","```\r\nGrid<Row> grid = new Grid(Row.class);\r\ngrid.setColumns(\"column1\", \"column2\", \"column3\");\r\nRow row1 = new Row(\"Item1\", \"Item2\", \"Item3\");\r\nRow row2 = new Row(\"Item4\", \"Item5\", \"Item6\");\r\nList<Row> rows = new ArrayList();\r\nrows.add(row1);\r\nrows.add(row2);\r\ngrid.setItems(rows);\r\n```","```\r\npublic class Row {\r\n    private String column1;\r\n    private String column2;\r\n    private String column3;\r\n\r\n    // constructors, getters, setters\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>com.vaadin</groupId>\r\n    <artifactId>vaadin-push</artifactId>\r\n    <versionId>8.8.5</versionId>\r\n</dependency>\r\n```","```\r\n@Push\r\n@Theme(\"mytheme\")\r\npublic class VaadinUI extends UI {...}\r\n```","```\r\nprivate Label currentTime;\r\n```","```\r\nScheduledExecutorService scheduleExecutor = Executors.newScheduledThreadPool(1);\r\nRunnable task = () -> {\r\n    currentTime.setValue(\"Current Time : \" + Instant.now());\r\n};\r\nscheduleExecutor.scheduleWithFixedDelay(task, 0, 1, TimeUnit.SECONDS);\r\n```","```\r\npublic class BindData {\r\n\r\n    private String bindName;\r\n\r\n    public BindData(String bindName){\r\n        this.bindName = bindName;\r\n    }\r\n\r\n    // getter & setter\r\n}\r\n```","```\r\nBinder<BindData> binder = new Binder<>();\r\nBindData bindData = new BindData(\"BindData\");\r\nbinder.readBean(bindData);\r\nTextField bindedTextField = new TextField();\r\nbinder.forField(bindedTextField).bind(BindData::getBindName, BindData::setBindName);\r\n```","```\r\nBindData stringValidatorBindData = new BindData(\"\");\r\nTextField stringValidator = new TextField();\r\nBinder<BindData> stringValidatorBinder = new Binder<>();\r\nstringValidatorBinder.setBean(stringValidatorBindData);\r\nstringValidatorBinder.forField(stringValidator)\r\n  .withValidator(new StringLengthValidator(\"String must have 2-5 characters lenght\", 2, 5))\r\n  .bind(BindData::getBindName, BindData::setBindName);\r\n```","```\r\nButton buttonStringValidator = new Button(\"Validate String\");\r\nbuttonStringValidator.addClickListener(e -> stringValidatorBinder.validate());\r\n```"]