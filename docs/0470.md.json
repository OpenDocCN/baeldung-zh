["```\r\nmvn archetype:generate \\\r\n  -DinteractiveMode=false \\\r\n  -DarchetypeGroupId=org.openjdk.jmh \\\r\n  -DarchetypeArtifactId=jmh-java-benchmark-archetype \\\r\n  -DgroupId=com.baeldung \\\r\n  -DartifactId=benchmark \\\r\n  -Dversion=1.0\r\n```","```\r\n<dependency>\r\n    <groupId>org.eclipse.collections</groupId>\r\n    <artifactId>eclipse-collections</artifactId>\r\n    <version>10.0.0</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.eclipse.collections</groupId>\r\n    <artifactId>eclipse-collections-api</artifactId>\r\n    <version>10.0.0</version>\r\n</dependency>\r\n```","```\r\nprivate List<Integer> jdkIntList;\r\nprivate MutableList<Integer> ecMutableList;\r\nprivate ExecutorService executor;\r\nprivate IntList ecIntList;\r\n\r\n@Setup\r\npublic void setup() {\r\n    PrimitiveIterator.OfInt iterator = new Random(1L).ints(-10000, 10000).iterator();\r\n    ecMutableList = FastList.newWithNValues(1_000_000, iterator::nextInt);\r\n    jdkIntList = new ArrayList<>(1_000_000);\r\n    jdkIntList.addAll(ecMutableList);\r\n    ecIntList = ecMutableList.collectInt(i -> i, new IntArrayList(1_000_000));\r\n    executor = Executors.newWorkStealingPool();\r\n}\r\n\r\n@Benchmark\r\npublic long jdkList() {\r\n    return jdkIntList.stream().mapToLong(i -> i).sum();\r\n}\r\n\r\n@Benchmark\r\npublic long ecMutableList() {\r\n    return ecMutableList.sumOfInt(i -> i);\r\n}\r\n\r\n@Benchmark\r\npublic long jdkListParallel() {\r\n    return jdkIntList.parallelStream().mapToLong(i -> i).sum();\r\n}\r\n\r\n@Benchmark\r\npublic long ecMutableListParallel() {\r\n    return ecMutableList.asParallel(executor, 100_000).sumOfInt(i -> i);\r\n}\r\n\r\n@Benchmark\r\npublic long ecPrimitive() { \r\n    return this.ecIntList.sum(); \r\n}\r\n\r\n@Benchmark\r\npublic long ecPrimitiveParallel() {\r\n    return this.ecIntList.primitiveParallelStream().sum(); \r\n}\r\n```","```\r\nmvn clean install\r\njava -jar target/benchmarks.jar IntegerListSum -rf json\r\n```","```\r\nBenchmark                              Mode  Cnt     Score       Error  Units\r\nIntegerListSum.ecMutableList          thrpt   10   573.016 ±    35.865  ops/s\r\nIntegerListSum.ecMutableListParallel  thrpt   10  1251.353 ±   705.196  ops/s\r\nIntegerListSum.ecPrimitive            thrpt   10  4067.901 ±   258.574  ops/s\r\nIntegerListSum.ecPrimitiveParallel    thrpt   10  8827.092 ± 11143.823  ops/s\r\nIntegerListSum.jdkList                thrpt   10   568.696 ±     7.951  ops/s\r\nIntegerListSum.jdkListParallel        thrpt   10   918.512 ±    27.487  ops/s\r\n```","```\r\nprivate List<Integer> jdkIntList;\r\nprivate MutableList<Integer> ecMutableList;\r\nprivate IntList ecIntList;\r\nprivate ExecutorService executor;\r\n\r\n@Setup\r\npublic void setup() {\r\n    PrimitiveIterator.OfInt iterator = new Random(1L).ints(-10000, 10000).iterator();\r\n    ecMutableList = FastList.newWithNValues(1_000_000, iterator::nextInt);\r\n    jdkIntList = new ArrayList<>(1_000_000);\r\n    jdkIntList.addAll(ecMutableList);\r\n    ecIntList = ecMutableList.collectInt(i -> i, new IntArrayList(1_000_000));\r\n    executor = Executors.newWorkStealingPool();\r\n}\r\n\r\n@Benchmark\r\npublic List<Integer> jdkList() {\r\n    return jdkIntList.stream().filter(i -> i % 5 == 0).collect(Collectors.toList());\r\n}\r\n\r\n@Benchmark\r\npublic MutableList<Integer> ecMutableList() {\r\n    return ecMutableList.select(i -> i % 5 == 0);\r\n}\r\n\r\n@Benchmark\r\npublic List<Integer> jdkListParallel() {\r\n    return jdkIntList.parallelStream().filter(i -> i % 5 == 0).collect(Collectors.toList());\r\n}\r\n\r\n@Benchmark\r\npublic MutableList<Integer> ecMutableListParallel() {\r\n    return ecMutableList.asParallel(executor, 100_000).select(i -> i % 5 == 0).toList();\r\n}\r\n\r\n@Benchmark\r\npublic IntList ecPrimitive() {\r\n    return this.ecIntList.select(i -> i % 5 == 0);\r\n}\r\n\r\n@Benchmark\r\npublic IntList ecPrimitiveParallel() {\r\n    return this.ecIntList.primitiveParallelStream()\r\n      .filter(i -> i % 5 == 0)\r\n      .collect(IntLists.mutable::empty, MutableIntList::add, MutableIntList::addAll);\r\n}\r\n```","```\r\nmvn clean install\r\njava -jar target/benchmarks.jar IntegerListFilter -rf json\r\n```","```\r\nBenchmark                                 Mode  Cnt     Score    Error  Units\r\nIntegerListFilter.ecMutableList          thrpt   10   145.733 ±  7.000  ops/s\r\nIntegerListFilter.ecMutableListParallel  thrpt   10   603.191 ± 24.799  ops/s\r\nIntegerListFilter.ecPrimitive            thrpt   10   232.873 ±  8.032  ops/s\r\nIntegerListFilter.ecPrimitiveParallel    thrpt   10  1029.481 ± 50.570  ops/s\r\nIntegerListFilter.jdkList                thrpt   10   155.284 ±  4.562  ops/s\r\nIntegerListFilter.jdkListParallel        thrpt   10   445.737 ± 23.685  ops/s\r\n```"]