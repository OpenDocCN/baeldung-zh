["```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n</dependency>\r\n```","```\r\n@GetMapping(\"/get-text\")\r\npublic @ResponseBody String getText() {\r\n    return \"Hello world\";\r\n} \r\n```","```\r\n@GetMapping(value = \"/image\")\r\npublic @ResponseBody byte[] getImage() throws IOException {\r\n    InputStream in = getClass()\r\n      .getResourceAsStream(\"/com/baeldung/produceimage/image.jpg\");\r\n    return IOUtils.toByteArray(in);\r\n} \r\n```","```\r\n@GetMapping(\r\n  value = \"/get-image-with-media-type\",\r\n  produces = MediaType.IMAGE_JPEG_VALUE\r\n)\r\npublic @ResponseBody byte[] getImageWithMediaType() throws IOException {\r\n    InputStream in = getClass()\r\n      .getResourceAsStream(\"/com/baeldung/produceimage/image.jpg\");\r\n    return IOUtils.toByteArray(in);\r\n} \r\n```","```\r\n@GetMapping(\r\n  value = \"/get-file\",\r\n  produces = MediaType.APPLICATION_OCTET_STREAM_VALUE\r\n)\r\npublic @ResponseBody byte[] getFile() throws IOException {\r\n    InputStream in = getClass()\r\n      .getResourceAsStream(\"/com/baeldung/produceimage/data.txt\");\r\n    return IOUtils.toByteArray(in);\r\n} \r\n```","```\r\n@GetMapping(\"/get-image-dynamic-type\")\r\n@ResponseBody\r\npublic ResponseEntity<InputStreamResource> getImageDynamicType(@RequestParam(\"jpg\") boolean jpg) {\r\n    MediaType contentType = jpg ? MediaType.IMAGE_JPEG : MediaType.IMAGE_PNG;\r\n    InputStream in = jpg ?\r\n      getClass().getResourceAsStream(\"/com/baeldung/produceimage/image.jpg\") :\r\n      getClass().getResourceAsStream(\"/com/baeldung/produceimage/image.png\");\r\n    return ResponseEntity.ok()\r\n      .contentType(contentType)\r\n      .body(new InputStreamResource(in));\r\n}\r\n```"]