["```\r\n<dependencies>\r\n    <dependency>\r\n        <groupId>org.springframework.security</groupId>\r\n        <artifactId>spring-security-web</artifactId>\r\n        <version>5.6.0</version>\r\n   </dependency>\r\n</dependencies>\r\n```","```\r\n@Configuration\r\n@EnableAutoConfiguration\r\n@EnableWebSecurity\r\n@EnableGlobalMethodSecurity(prePostEnabled = true)\r\npublic class SecurityJavaConfig extends WebSecurityConfigurerAdapter {\r\n    ...\r\n}\r\n```","```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<beans:beans ...>\r\n    <global-method-security pre-post-annotations=\"enabled\"/>\r\n</beans:beans>\r\n```","```\r\n@Override\r\nprotected void configure(final HttpSecurity http) throws Exception {\r\n    ...\r\n    .antMatchers(\"/auth/admin/*\").hasRole(\"ADMIN\")\r\n    .antMatchers(\"/auth/*\").hasAnyRole(\"ADMIN\",\"USER\")\r\n    ...\r\n} \r\n```","```\r\n<http>\r\n    <intercept-url pattern=\"/auth/admin/*\" access=\"hasRole('ADMIN')\"/>\r\n    <intercept-url pattern=\"/auth/*\" access=\"hasAnyRole('ADMIN','USER')\"/>\r\n</http> \r\n```","```\r\n@Override\r\nprotected void configure(AuthenticationManagerBuilder auth) throws Exception {\r\n    auth.inMemoryAuthentication()\r\n      .withUser(\"user1\").password(encoder().encode(\"user1Pass\"))\r\n      .authorities(\"USER\")\r\n      .and().withUser(\"admin\").password(encoder().encode(\"adminPass\"))\r\n      .authorities(\"ADMIN\");\r\n} \r\n```","```\r\n@Override\r\nprotected void configure(final HttpSecurity http) throws Exception {\r\n    ...\r\n    .antMatchers(\"/auth/admin/*\").hasAuthority(\"ADMIN\")\r\n    .antMatchers(\"/auth/*\").hasAnyAuthority(\"ADMIN\", \"USER\")\r\n    ...\r\n}\r\n```","```\r\n@Bean\r\npublic PasswordEncoder passwordEncoder() {\r\n    return new BCryptPasswordEncoder();\r\n}\r\n```","```\r\n<authentication-manager>\r\n    <authentication-provider>\r\n        <user-service>\r\n            <user name=\"user1\" password=\"user1Pass\" authorities=\"ROLE_USER\"/>\r\n            <user name=\"admin\" password=\"adminPass\" authorities=\"ROLE_ADMIN\"/>\r\n        </user-service>\r\n    </authentication-provider>\r\n</authentication-manager>\r\n<bean name=\"passwordEncoder\" \r\n  class=\"org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder\"/>\r\n```","```\r\n<http>\r\n    <intercept-url pattern=\"/auth/admin/*\" access=\"hasAuthority('ADMIN')\"/>\r\n    <intercept-url pattern=\"/auth/*\" access=\"hasAnyAuthority('ADMIN','USER')\"/>\r\n</http>\r\n```","```\r\n...\r\n.antMatchers(\"/*\").permitAll()\r\n...\r\n```","```\r\n...\r\n.antMatchers(\"/*\").denyAll()\r\n...\r\n```","```\r\n<http auto-config=\"true\" use-expressions=\"true\">\r\n    <intercept-url access=\"permitAll\" pattern=\"/*\" /> <!-- Choose only one -->\r\n    <intercept-url access=\"denyAll\" pattern=\"/*\" /> <!-- Choose only one -->\r\n</http>\r\n```","```\r\n...\r\n.antMatchers(\"/*\").anonymous()\r\n...\r\n```","```\r\n<http>\r\n    <intercept-url pattern=\"/*\" access=\"isAnonymous()\"/>\r\n</http>\r\n```","```\r\n...\r\n.antMatchers(\"/*\").authenticated()\r\n...\r\n```","```\r\n<http>\r\n    <intercept-url pattern=\"/*\" access=\"isAuthenticated()\"/>\r\n</http>\r\n```","```\r\n...\r\n.antMatchers(\"/*\").rememberMe()\r\n...\r\n```","```\r\n<http>\r\n    <intercept-url pattern=\"*\" access=\"isRememberMe()\"/>\r\n</http>\r\n```","```\r\n...\r\n.antMatchers(\"/*\").fullyAuthenticated()\r\n...\r\n```","```\r\n<http>\r\n    <intercept-url pattern=\"*\" access=\"isFullyAuthenticated()\"/>\r\n</http>\r\n```","```\r\n@PreAuthorize(\"hasPermission(#articleId, 'isEditor')\")\r\npublic void acceptArticle(Article article) {\r\n   â€¦\r\n}\r\n```","```\r\n<global-method-security pre-post-annotations=\"enabled\">\r\n    <expression-handler ref=\"expressionHandler\"/>\r\n</global-method-security>\r\n\r\n<bean id=\"expressionHandler\"\r\n    class=\"org.springframework.security.access.expression\r\n      .method.DefaultMethodSecurityExpressionHandler\">\r\n    <property name=\"permissionEvaluator\" ref=\"customInterfaceImplementation\"/>\r\n</bean>\r\n```","```\r\n@Override\r\nprotected MethodSecurityExpressionHandler expressionHandler() {\r\n    DefaultMethodSecurityExpressionHandler expressionHandler = \r\n      new DefaultMethodSecurityExpressionHandler();\r\n    expressionHandler.setPermissionEvaluator(new CustomInterfaceImplementation());\r\n    return expressionHandler;\r\n}\r\n```"]