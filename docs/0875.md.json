["```\r\n<dependency>\r\n    <groupId>ch.qos.logback</groupId>\r\n    <artifactId>logback-classic</artifactId>\r\n    <version>1.2.6</version>\r\n</dependency>\r\n```","```\r\npublic class MapAppender extends AppenderBase<ILoggingEvent> {\r\n\r\n    private ConcurrentMap<String, ILoggingEvent> eventMap \r\n      = new ConcurrentHashMap<>();\r\n\r\n    @Override\r\n    protected void append(ILoggingEvent event) {\r\n        eventMap.put(System.currentTimeMillis(), event);\r\n    }\r\n\r\n    public Map<String, ILoggingEvent> getEventMap() {\r\n        return eventMap;\r\n    }\r\n}\r\n```","```\r\n<configuration>\r\n    <appender name=\"map\" class=\"com.baeldung.logback.MapAppender\"/>\r\n    <root level=\"info\">\r\n        <appender-ref ref=\"map\"/>\r\n    </root>\r\n</configuration>\r\n```","```\r\npublic class MapAppender extends AppenderBase<ILoggingEvent> {\r\n\r\n    //...\r\n\r\n    private String prefix;\r\n\r\n    @Override\r\n    protected void append(ILoggingEvent event) {\r\n        eventMap.put(prefix + System.currentTimeMillis(), event);\r\n    }\r\n\r\n    public String getPrefix() {\r\n        return prefix;\r\n    }\r\n\r\n    public void setPrefix(String prefix) {\r\n        this.prefix = prefix;\r\n    }\r\n\r\n    //...\r\n\r\n}\r\n```","```\r\n<configuration debug=\"true\">\r\n\r\n    <appender name=\"map\" class=\"com.baeldung.logback.MapAppender\">\r\n        <prefix>test</prefix>\r\n    </appender>\r\n\r\n    //...\r\n\r\n</configuration>\r\n```","```\r\npublic class MapAppender extends AppenderBase<ILoggingEvent> {\r\n\r\n    //...\r\n\r\n    @Override\r\n    protected void append(final ILoggingEvent event) {\r\n        if (prefix == null || \"\".equals(prefix)) {\r\n            addError(\"Prefix is not set for MapAppender.\");\r\n            return;\r\n        }\r\n\r\n        eventMap.put(prefix + System.currentTimeMillis(), event);\r\n    }\r\n\r\n    //...\r\n\r\n}\r\n```","```\r\n<configuration debug=\"true\">\r\n\r\n    //...\r\n\r\n</configuration>\r\n```"]