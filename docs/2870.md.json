["```\r\n<build>\r\n    <plugin>\r\n        <groupId>org.apache.maven.plugins</groupId>\r\n        <artifactId>maven-surefire-plugin</artifactId>\r\n        <version>2.22.2</version>\r\n        <configuration>\r\n            <parallel>methods</parallel>\r\n            <useUnlimitedThreads>true</useUnlimitedThreads>\r\n        </configuration>\r\n    </plugin>\r\n</build>\r\n```","```\r\n@RunWith(SpringRunner.class)\r\n@ContextConfiguration(classes = Spring5JUnit4ConcurrentTest.SimpleConfiguration.class)\r\npublic class Spring5JUnit4ConcurrentTest implements ApplicationContextAware, InitializingBean {\r\n\r\n    @Configuration\r\n    public static class SimpleConfiguration {}\r\n\r\n    private ApplicationContext applicationContext;\r\n\r\n    private boolean beanInitialized = false;\r\n\r\n    @Override\r\n    public void afterPropertiesSet() throws Exception {\r\n        this.beanInitialized = true;\r\n    }\r\n\r\n    @Override\r\n    public void setApplicationContext(\r\n      final ApplicationContext applicationContext) throws BeansException {\r\n        this.applicationContext = applicationContext;\r\n    }\r\n\r\n    @Test\r\n    public void whenTestStarted_thenContextSet() throws Exception {\r\n        TimeUnit.SECONDS.sleep(2);\r\n\r\n        assertNotNull(\r\n          \"The application context should have been set due to ApplicationContextAware semantics.\",\r\n          this.applicationContext);\r\n    }\r\n\r\n    @Test\r\n    public void whenTestStarted_thenBeanInitialized() throws Exception {\r\n        TimeUnit.SECONDS.sleep(2);\r\n\r\n        assertTrue(\r\n          \"This test bean should have been initialized due to InitializingBean semantics.\",\r\n          this.beanInitialized);\r\n    }\r\n}\r\n```","```\r\npublic class TestContextManager {\r\n\r\n    // ...\r\n    private final TestContext testContext;\r\n\r\n    private final ThreadLocal<TestContext> testContextHolder = new ThreadLocal<TestContext>() {\r\n        protected TestContext initialValue() {\r\n            return copyTestContext(TestContextManager.this.testContext);\r\n        }\r\n    };\r\n\r\n    public final TestContext getTestContext() {\r\n        return this.testContextHolder.get();\r\n    }\r\n\r\n    // ...\r\n}\r\n```"]