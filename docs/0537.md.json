["```\r\nString decodeText(String input, String encoding) throws IOException {\r\n    return \r\n      new BufferedReader(\r\n        new InputStreamReader(\r\n          new ByteArrayInputStream(input.getBytes()), \r\n          Charset.forName(encoding)))\r\n        .readLine();\r\n}\r\n```","```\r\nThe fa��ade pattern is a software design pattern.\r\n```","```\r\nString convertToBinary(String input, String encoding) \r\n      throws UnsupportedEncodingException {\r\n    byte[] encoded_input = Charset.forName(encoding)\r\n      .encode(input)\r\n      .array();  \r\n    return IntStream.range(0, encoded_input.length)\r\n        .map(i -> encoded_input[i])\r\n        .mapToObj(e -> Integer.toBinaryString(e ^ 255))\r\n        .map(e -> String.format(\"%1$\" + Byte.SIZE + \"s\", e).replace(\" \", \"0\"))\r\n        .collect(Collectors.joining(\" \"));\r\n}\r\n```","```\r\nassertEquals(convertToBinary(\"T\", \"US-ASCII\"), \"01010100\");\r\n```","```\r\nassertEquals(convertToBinary(\"語\", \"Big5\"), \"10111011 01111001\");\r\n```","```\r\nassertEquals(convertToBinary(\"T\", \"UTF-32\"), \"00000000 00000000 00000000 01010100\");\r\n```","```\r\nassertEquals(convertToBinary(\"T\", \"UTF-8\"), \"01010100\");\r\n```","```\r\nassertEquals(convertToBinary(\"語\", \"UTF-8\"), \"11101000 10101010 10011110\");\r\n```","```\r\nCharset.defaultCharset().displayName();\r\n```","```\r\nwindows-1252\r\n```","```\r\nnew BufferedReader(new InputStreamReader(new ByteArrayInputStream(input.getBytes()))).readLine();\r\n```","```\r\nnew BufferedReader(new InputStreamReader(new ByteArrayInputStream(input.getBytes()))).readLine();\r\n```","```\r\n-Dfile.encoding=\"UTF-8\"\r\n-Dsun.jnu.encoding=\"UTF-8\"\r\n```","```\r\nThe façade pattern is a software-design pattern.\r\n```","```\r\nString decodeText(String input, Charset charset, \r\n  CodingErrorAction codingErrorAction) throws IOException {\r\n    CharsetDecoder charsetDecoder = charset.newDecoder();\r\n    charsetDecoder.onMalformedInput(codingErrorAction);\r\n    return new BufferedReader(\r\n      new InputStreamReader(\r\n        new ByteArrayInputStream(input.getBytes()), charsetDecoder)).readLine();\r\n}\r\n```","```\r\nAssertions.assertEquals(\r\n  \"The faade pattern is a software design pattern.\",\r\n  CharacterEncodingExamples.decodeText(\r\n    \"The façade pattern is a software design pattern.\",\r\n    StandardCharsets.US_ASCII,\r\n    CodingErrorAction.IGNORE));\r\n```","```\r\nAssertions.assertEquals(\r\n  \"The fa��ade pattern is a software design pattern.\",\r\n  CharacterEncodingExamples.decodeText(\r\n    \"The façade pattern is a software design pattern.\",\r\n    StandardCharsets.US_ASCII,\r\n    CodingErrorAction.REPLACE));\r\n```","```\r\nAssertions.assertThrows(\r\n  MalformedInputException.class,\r\n    () -> CharacterEncodingExamples.decodeText(\r\n      \"The façade pattern is a software design pattern.\",\r\n      StandardCharsets.US_ASCII,\r\n      CodingErrorAction.REPORT));\r\n```"]