["```\r\nkeytool -genkeypair -alias senderKeyPair -keyalg RSA -keysize 2048 \\\r\n  -dname \"CN=Baeldung\" -validity 365 -storetype PKCS12 \\\r\n  -keystore sender_keystore.p12 -storepass changeit\r\n```","```\r\nKeyStore keyStore = KeyStore.getInstance(\"PKCS12\");\r\nkeyStore.load(new FileInputStream(\"sender_keystore.p12\"), \"changeit\");\r\nPrivateKey privateKey = \r\n  (PrivateKey) keyStore.getKey(\"senderKeyPair\", \"changeit\");\r\n```","```\r\nkeytool -exportcert -alias senderKeyPair -storetype PKCS12 \\\r\n  -keystore sender_keystore.p12 -file \\\r\n  sender_certificate.cer -rfc -storepass changeit\r\n```","```\r\nkeytool -certreq -alias senderKeyPair -storetype PKCS12 \\\r\n  -keystore sender_keystore.p12 -file -rfc \\\r\n  -storepass changeit > sender_certificate.csr\r\n```","```\r\nkeytool -importcert -alias receiverKeyPair -storetype PKCS12 \\\r\n  -keystore receiver_keystore.p12 -file \\\r\n  sender_certificate.cer -rfc -storepass changeit\r\n```","```\r\nKeyStore keyStore = KeyStore.getInstance(\"PKCS12\");\r\nkeyStore.load(new FileInputStream(\"receiver_keytore.p12\"), \"changeit\");\r\nCertificate certificate = keyStore.getCertificate(\"receiverKeyPair\");\r\nPublicKey publicKey = certificate.getPublicKey();\r\n```","```\r\nbyte[] messageBytes = Files.readAllBytes(Paths.get(\"message.txt\"));\r\n```","```\r\nMessageDigest md = MessageDigest.getInstance(\"SHA-256\");\r\nbyte[] messageHash = md.digest(messageBytes);\r\n```","```\r\nCipher cipher = Cipher.getInstance(\"RSA\");\r\ncipher.init(Cipher.ENCRYPT_MODE, privateKey);\r\nbyte[] digitalSignature = cipher.doFinal(messageHash);\r\n```","```\r\nFiles.write(Paths.get(\"digital_signature_1\"), digitalSignature);\r\n```","```\r\nbyte[] encryptedMessageHash = \r\n  Files.readAllBytes(Paths.get(\"digital_signature_1\"));\r\n```","```\r\nCipher cipher = Cipher.getInstance(\"RSA\");\r\ncipher.init(Cipher.DECRYPT_MODE, publicKey);\r\nbyte[] decryptedMessageHash = cipher.doFinal(encryptedMessageHash);\r\n```","```\r\nbyte[] messageBytes = Files.readAllBytes(Paths.get(\"message.txt\"));\r\n\r\nMessageDigest md = MessageDigest.getInstance(\"SHA-256\");\r\nbyte[] newMessageHash = md.digest(messageBytes);\r\n```","```\r\nboolean isCorrect = Arrays.equals(decryptedMessageHash, newMessageHash);\r\n```","```\r\nSignature signature = Signature.getInstance(\"SHA256withRSA\");\r\nsignature.initSign(privateKey);\r\n```","```\r\nbyte[] messageBytes = Files.readAllBytes(Paths.get(\"message.txt\"));\r\n\r\nsignature.update(messageBytes);\r\nbyte[] digitalSignature = signature.sign();\r\n```","```\r\nFiles.write(Paths.get(\"digital_signature_2\"), digitalSignature);\r\n```","```\r\nSignature signature = Signature.getInstance(\"SHA256withRSA\");\r\n```","```\r\nsignature.initVerify(publicKey);\r\n```","```\r\nbyte[] messageBytes = Files.readAllBytes(Paths.get(\"message.txt\"));\r\n\r\nsignature.update(messageBytes);\r\n```","```\r\nboolean isCorrect = signature.verify(receivedSignature);\r\n```"]