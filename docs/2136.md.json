["```\r\nPOST http://localhost:8081/upload-file\r\n```","```\r\n@PostMapping(value = \"/upload-file\")\r\npublic String handleFileUpload(@RequestPart(value = \"file\") MultipartFile file) {\r\n    // File upload logic\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>io.github.openfeign</groupId>\r\n    <artifactId>feign-core</artifactId>\r\n    <version>10.12</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>io.github.openfeign.form</groupId>\r\n    <artifactId>feign-form</artifactId>\r\n    <version>3.8.0</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>io.github.openfeign.form</groupId>\r\n    <artifactId>feign-form-spring</artifactId>\r\n    <version>3.8.0</version>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.cloud</groupId>\r\n    <artifactId>spring-cloud-starter-openfeign</artifactId>\r\n    <version>3.1.0</version>\r\n</dependency>\r\n```","```\r\n@SpringBootApplication\r\n@EnableFeignClients\r\npublic class ExampleApplication {\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(ExampleApplication.class, args);\r\n    }\r\n}\r\n```","```\r\npublic class FeignSupportConfig {\r\n    @Bean\r\n    public Encoder multipartFormEncoder() {\r\n        return new SpringFormEncoder(new SpringEncoder(new ObjectFactory<HttpMessageConverters>() {\r\n            @Override\r\n            public HttpMessageConverters getObject() throws BeansException {\r\n                return new HttpMessageConverters(new RestTemplate().getMessageConverters());\r\n            }\r\n        }));\r\n    }\r\n}\r\n```","```\r\n@FeignClient(name = \"file\", url = \"http://localhost:8081\", configuration = FeignSupportConfig.class)\r\npublic interface UploadClient {\r\n    @PostMapping(value = \"/upload-file\", consumes = MediaType.MULTIPART_FORM_DATA_VALUE)\r\n    String fileUpload(@RequestPart(value = \"file\") MultipartFile file);\r\n} \r\n```","```\r\n@FeignClient(name = \"file\", url = \"http://localhost:8081\", fallback = UploadFallback.class, configuration = FeignSupportConfig.class)\r\n```","```\r\npublic String uploadFile(MultipartFile file) {\r\n    return client.fileUpload(file);\r\n}\r\n```","```\r\npublic interface UploadResource {\r\n    @RequestLine(\"POST /upload-file\")\r\n    @Headers(\"Content-Type: multipart/form-data\")\r\n    Response uploadFile(@Param(\"file\") MultipartFile file);\r\n}\r\n```","```\r\npublic boolean uploadFileWithManualClient(MultipartFile file) {\r\n    UploadResource fileUploadResource = Feign.builder().encoder(new SpringFormEncoder())\r\n      .target(UploadResource.class, HTTP_FILE_UPLOAD_URL);\r\n    Response response = fileUploadResource.uploadFile(file);\r\n    return response.status() == 200;\r\n}\r\n```","```\r\n@SpringBootTest\r\npublic class OpenFeignFileUploadLiveTest {\r\n\r\n    @Autowired\r\n    private UploadService uploadService;\r\n\r\n    private static String FILE_NAME = \"fileupload.txt\";\r\n\r\n    @Test\r\n    public void whenAnnotatedFeignClient_thenFileUploadSuccess() {\r\n        ClassLoader classloader = Thread.currentThread().getContextClassLoader();\r\n        File file = new File(classloader.getResource(FILE_NAME).getFile());\r\n        Assert.assertTrue(file.exists());\r\n        FileInputStream input = new FileInputStream(file);\r\n        MultipartFile multipartFile = new MockMultipartFile(\"file\", file.getName(), \"text/plain\",\r\n          IOUtils.toByteArray(input));\r\n        String uploadFile = uploadService.uploadFile(multipartFile);\r\n\r\n        Assert.assertNotNull(uploadFile);\r\n    }\r\n}\r\n```","```\r\n@Test\r\npublic void whenFeignBuilder_thenFileUploadSuccess() throws IOException {\r\n    // same as above\r\n    Assert.assertTrue(uploadService.uploadFileWithManualClient(multipartFile));\r\n}\r\n```"]