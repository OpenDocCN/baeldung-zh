["```\r\nclass Item {\r\n    private int id;\r\n    private String name;\r\n    private String ownerName;\r\n\r\n    // getters\r\n}\r\n```","```\r\nclass View {\r\n    public static class User {}\r\n    public static class Admin extends User {}\r\n} \r\n```","```\r\n@JsonView(View.User.class)\r\nprivate int id;\r\n@JsonView(View.User.class)\r\nprivate String name;\r\n@JsonView(View.Admin.class)\r\nprivate String ownerName;\r\n```","```\r\nenum Role {\r\n    ROLE_USER,\r\n    ROLE_ADMIN\r\n}\r\n\r\nclass View {\r\n\r\n    public static final Map<Role, Class> MAPPING = new HashMap<>();\r\n\r\n    static {\r\n        MAPPING.put(Role.ADMIN, Admin.class);\r\n        MAPPING.put(Role.USER, User.class);\r\n    }\r\n\r\n    //...\r\n}\r\n```","```\r\n@RestControllerAdvice\r\nclass SecurityJsonViewControllerAdvice extends AbstractMappingJacksonResponseBodyAdvice {\r\n\r\n    @Override\r\n    protected void beforeBodyWriteInternal(\r\n      MappingJacksonValue bodyContainer,\r\n      MediaType contentType,\r\n      MethodParameter returnType,\r\n      ServerHttpRequest request,\r\n      ServerHttpResponse response) {\r\n        if (SecurityContextHolder.getContext().getAuthentication() != null\r\n          && SecurityContextHolder.getContext().getAuthentication().getAuthorities() != null) {\r\n            Collection<? extends GrantedAuthority> authorities\r\n              = SecurityContextHolder.getContext().getAuthentication().getAuthorities();\r\n            List<Class> jsonViews = authorities.stream()\r\n              .map(GrantedAuthority::getAuthority)\r\n              .map(AppConfig.Role::valueOf)\r\n              .map(View.MAPPING::get)\r\n              .collect(Collectors.toList());\r\n            if (jsonViews.size() == 1) {\r\n                bodyContainer.setSerializationView(jsonViews.get(0));\r\n                return;\r\n            }\r\n            throw new IllegalArgumentException(\"Ambiguous @JsonView declaration for roles \"\r\n              + authorities.stream()\r\n              .map(GrantedAuthority::getAuthority).collect(Collectors.joining(\",\")));\r\n        }\r\n    }\r\n}\r\n```"]