["```\r\n@Entity\r\npublic class User {\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n    private long id;\r\n    private String username;\r\n    private String password;\r\n\r\n    //...\r\n}\r\n```","```\r\npublic class UserService {\r\n    EntityManager entityManager;\r\n\r\n    public UserService(EntityManager entityManager) {\r\n        this.entityManager = entityManager;\r\n    }\r\n\r\n    @Transactional\r\n    public long saveUser(User user){\r\n        entityManager.persist(user);\r\n        return user.getId();\r\n    }\r\n}\r\n```","```\r\n@Test\r\npublic void whenNewUserIsPersisted_thenEntityHasNoId() {\r\n    User user = new User();\r\n    user.setUsername(\"test\");\r\n    user.setPassword(UUID.randomUUID().toString());\r\n\r\n    long index = service.saveUser(user);\r\n\r\n    Assert.assertEquals(0L, index);\r\n}\r\n```","```\r\n@Test\r\npublic void whenTransactionIsControlled_thenEntityHasId() {\r\n    User user = new User();\r\n    user.setUsername(\"test\");\r\n    user.setPassword(UUID.randomUUID().toString());\r\n\r\n    entityManager.getTransaction().begin();\r\n    long index = service.saveUser(user);\r\n    entityManager.getTransaction().commit();\r\n\r\n    Assert.assertEquals(2L, index);\r\n}\r\n```","```\r\n@Entity\r\npublic class User {\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.SEQUENCE)\r\n    private long id;\r\n\r\n    //...\r\n}\r\n```"]