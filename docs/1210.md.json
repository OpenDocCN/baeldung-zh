["```\r\npublic class StackWalkerDemo {\r\n\r\n    public void methodOne() {\r\n        this.methodTwo();\r\n    }\r\n\r\n    public void methodTwo() {\r\n        this.methodThree();\r\n    }\r\n\r\n    public void methodThree() {\r\n        // stack walking code\r\n    }\r\n}\r\n```","```\r\npublic void methodThree() {\r\n    List<StackFrame> stackTrace = StackWalker.getInstance()\r\n      .walk(this::walkExample);\r\n} \r\n```","```\r\npublic List<StackFrame> walkExample(Stream<StackFrame> stackFrameStream) {\r\n    return stackFrameStream.collect(Collectors.toList());\r\n}\r\n```","```\r\n@Test\r\npublic void giveStalkWalker_whenWalkingTheStack_thenShowStackFrames() {\r\n    new StackWalkerDemo().methodOne();\r\n}\r\n```","```\r\nclass com.baeldung.java9.stackwalker.StackWalkerDemo#methodThree, Line 20\r\nclass com.baeldung.java9.stackwalker.StackWalkerDemo#methodTwo, Line 15\r\nclass com.baeldung.java9.stackwalker.StackWalkerDemo#methodOne, Line 11\r\nclass com.baeldung.java9.stackwalker\r\n  .StackWalkerDemoTest#giveStalkWalker_whenWalkingTheStack_thenShowStackFrames, Line 9\r\nclass org.junit.runners.model.FrameworkMethod$1#runReflectiveCall, Line 50\r\nclass org.junit.internal.runners.model.ReflectiveCallable#run, Line 12\r\n  ...more org.junit frames...\r\nclass org.junit.runners.ParentRunner#run, Line 363\r\nclass org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference#run, Line 86\r\n  ...more org.eclipse frames...\r\nclass org.eclipse.jdt.internal.junit.runner.RemoteTestRunner#main, Line 192\r\n```","```\r\npublic List<StackFrame> walkExample2(Stream<StackFrame> stackFrameStream) {\r\n    return stackFrameStream\r\n      .filter(f -> f.getClassName().contains(\"com.baeldung\"))\r\n      .collect(Collectors.toList());\r\n}\r\n```","```\r\nclass com.baeldung.java9.stackwalker.StackWalkerDemo#methodThree, Line 27\r\nclass com.baeldung.java9.stackwalker.StackWalkerDemo#methodTwo, Line 15\r\nclass com.baeldung.java9.stackwalker.StackWalkerDemo#methodOne, Line 11\r\nclass com.baeldung.java9.stackwalker\r\n  .StackWalkerDemoTest#giveStalkWalker_whenWalkingTheStack_thenShowStackFrames, Line 9\r\n```","```\r\npublic String walkExample3(Stream<StackFrame> stackFrameStream) {\r\n    return stackFrameStream\r\n      .filter(frame -> frame.getClassName()\r\n        .contains(\"com.baeldung\") && frame.getClassName().endsWith(\"Test\"))\r\n      .findFirst()\r\n      .map(f -> f.getClassName() + \"#\" + f.getMethodName() \r\n        + \", Line \" + f.getLineNumber())\r\n      .orElse(\"Unknown caller\");\r\n}\r\n```","```\r\nList<StackFrame> stackTrace = StackWalker\r\n  .getInstance(StackWalker.Option.SHOW_REFLECT_FRAMES)\r\n  .walk(this::walkExample);\r\n```","```\r\ncom.baeldung.java9.stackwalker.StackWalkerDemo#methodThree, Line 40\r\ncom.baeldung.java9.stackwalker.StackWalkerDemo#methodTwo, Line 16\r\ncom.baeldung.java9.stackwalker.StackWalkerDemo#methodOne, Line 12\r\ncom.baeldung.java9.stackwalker\r\n  .StackWalkerDemoTest#giveStalkWalker_whenWalkingTheStack_thenShowStackFrames, Line 9\r\njdk.internal.reflect.NativeMethodAccessorImpl#invoke0, Line -2\r\njdk.internal.reflect.NativeMethodAccessorImpl#invoke, Line 62\r\njdk.internal.reflect.DelegatingMethodAccessorImpl#invoke, Line 43\r\njava.lang.reflect.Method#invoke, Line 547\r\norg.junit.runners.model.FrameworkMethod$1#runReflectiveCall, Line 50\r\n  ...eclipse and junit frames...\r\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner#main, Line 192\r\n```","```\r\nRunnable r = () -> {\r\n    List<StackFrame> stackTrace2 = StackWalker\r\n      .getInstance(StackWalker.Option.SHOW_HIDDEN_FRAMES)\r\n      .walk(this::walkExample);\r\n    printStackTrace(stackTrace2);\r\n};\r\nr.run();\r\n```","```\r\ncom.baeldung.java9.stackwalker.StackWalkerDemo#lambda$0, Line 47\r\ncom.baeldung.java9.stackwalker.StackWalkerDemo$$Lambda$39/924477420#run, Line -1\r\ncom.baeldung.java9.stackwalker.StackWalkerDemo#methodThree, Line 50\r\ncom.baeldung.java9.stackwalker.StackWalkerDemo#methodTwo, Line 16\r\ncom.baeldung.java9.stackwalker.StackWalkerDemo#methodOne, Line 12\r\ncom.baeldung.java9.stackwalker\r\n  .StackWalkerDemoTest#giveStalkWalker_whenWalkingTheStack_thenShowStackFrames, Line 9\r\njdk.internal.reflect.NativeMethodAccessorImpl#invoke0, Line -2\r\njdk.internal.reflect.NativeMethodAccessorImpl#invoke, Line 62\r\njdk.internal.reflect.DelegatingMethodAccessorImpl#invoke, Line 43\r\njava.lang.reflect.Method#invoke, Line 547\r\norg.junit.runners.model.FrameworkMethod$1#runReflectiveCall, Line 50\r\n  ...junit and eclipse frames...\r\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner#main, Line 192\r\n```","```\r\npublic void findCaller() {\r\n    Class<?> caller = StackWalker\r\n      .getInstance(StackWalker.Option.RETAIN_CLASS_REFERENCE)\r\n      .getCallerClass();\r\n    System.out.println(caller.getCanonicalName());\r\n}\r\n```","```\r\n@Test\r\npublic void giveStalkWalker_whenInvokingFindCaller_thenFindCallingClass() {\r\n    new StackWalkerDemo().findCaller();\r\n}\r\n```","```\r\ncom.baeldung.java9.stackwalker.StackWalkerDemoTest\r\n```"]