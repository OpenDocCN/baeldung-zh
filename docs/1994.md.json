["```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n    <exclusions>\r\n        <exclusion>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-tomcat</artifactId>\r\n        </exclusion>\r\n    </exclusions>\r\n</dependency>\r\n```","```\r\npublic interface CabBookingService {\r\n    Booking bookRide(String pickUpLocation) throws BookingException;\r\n}\r\n```","```\r\n@Bean \r\nCabBookingService bookingService() {\r\n    return new CabBookingServiceImpl();\r\n}\r\n```","```\r\n@Bean \r\nRmiServiceExporter exporter(CabBookingService implementation) {\r\n    Class<CabBookingService> serviceInterface = CabBookingService.class;\r\n    RmiServiceExporter exporter = new RmiServiceExporter();\r\n    exporter.setServiceInterface(serviceInterface);\r\n    exporter.setService(implementation);\r\n    exporter.setServiceName(serviceInterface.getSimpleName());\r\n    exporter.setRegistryPort(1099); \r\n    return exporter;\r\n}\r\n```","```\r\n@Bean \r\nRmiProxyFactoryBean service() {\r\n    RmiProxyFactoryBean rmiProxyFactory = new RmiProxyFactoryBean();\r\n    rmiProxyFactory.setServiceUrl(\"rmi://localhost:1099/CabBookingService\");\r\n    rmiProxyFactory.setServiceInterface(CabBookingService.class);\r\n    return rmiProxyFactory;\r\n}\r\n```","```\r\npublic static void main(String[] args) throws BookingException {\r\n    CabBookingService service = SpringApplication\r\n      .run(RmiClient.class, args).getBean(CabBookingService.class);\r\n    Booking bookingOutcome = service\r\n      .bookRide(\"13 Seagate Blvd, Key Largo, FL 33037\");\r\n    System.out.println(bookingOutcome);\r\n}\r\n```"]