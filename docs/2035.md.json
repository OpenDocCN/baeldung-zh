["```\r\n@RequestMapping(\"/user/{id}\")\r\npublic String handleRequest(@PathVariable(\"id\") String userId, Model map) {}\r\n```","```\r\n@RequestMapping(\"/user/{userId}/name/{userName}\")\r\npublic String handleRequest(@PathVariable String userId,\r\n  @PathVariable String userName, Model map) {}\r\n```","```\r\n@RequestMapping(\"/user/{userId}/name/{userName}\")\r\npublic String handleRequest(@PathVariable Map<String, String> varsMap, Model map) {}\r\n```","```\r\n@Controller\r\n@RequestMapping(\"/sessionattributes\")\r\n@SessionAttributes(\"todos\")\r\npublic class TodoControllerWithSessionAttributes {\r\n\r\n    @GetMapping(\"/form\")\r\n    public String showForm(Model model,\r\n      @ModelAttribute(\"todos\") TodoList todos) {\r\n        // method body\r\n        return \"sessionattributesform\";\r\n    }\r\n\r\n    // other methods\r\n}\r\n```","```\r\n@GetMapping\r\npublic String getTodos(@SessionAttribute(\"todos\") TodoList todos) {\r\n    // method body\r\n    return \"todoView\";\r\n}\r\n```","```\r\n@PostMapping(\"/user\")\r\npublic String submitForm(@Valid NewUserForm newUserForm, \r\n  BindingResult result, Model model) {\r\n    if (result.hasErrors()) {\r\n        return \"userHome\";\r\n    }\r\n    model.addAttribute(\"message\", \"Valid form\");\r\n    return \"userHome\";\r\n}\r\n```","```\r\n<bean id=\"person1\" class=\"com.baeldung.Person\" >\r\n    <property name=\"name\" value=\"Joe\" />\r\n</bean>\r\n<bean id=\"person2\" class=\"com.baeldung.Person\" >\r\n    <property name=\"name\" value=\"Doe\" />\r\n</bean>\r\n```","```\r\n@Autowired\r\n@Qualifier(\"person1\")\r\nprivate Person person;\r\n```","```\r\npublic class Person {\r\n    private String name;\r\n\r\n    @Required\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n}\r\n```","```\r\n<bean id=\"person\" class=\"com.baeldung.Person\">\r\n    <property name=\"name\" value=\"Joe\" />\r\n</bean>\r\n```","```\r\n@ControllerAdvice(\"my.package\")\r\n@ControllerAdvice(value = \"my.package\")\r\n@ControllerAdvice(basePackages = \"my.package\")\r\n```","```\r\n@ControllerAdvice(basePackageClasses = MyClass.class)\r\n```","```\r\n@ControllerAdvice\r\npublic class RestResponseEntityExceptionHandler\r\n  extends ResponseEntityExceptionHandler {\r\n\r\n    @ExceptionHandler(value = { IllegalArgumentException.class,\r\n      IllegalStateException.class })\r\n    protected ResponseEntity<Object> handleConflict(RuntimeException ex,\r\n      WebRequest request) {\r\n        String bodyOfResponse = \"This should be application specific\";\r\n        return handleExceptionInternal(ex, bodyOfResponse, new HttpHeaders(),\r\n          HttpStatus.CONFLICT, request);\r\n    }\r\n}\r\n```"]