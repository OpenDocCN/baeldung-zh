["```\r\n@PostMapping(\"/user/registration\")\r\npublic GenericResponse registerUserAccount(\r\n      @Valid UserDto accountDto, HttpServletRequest request) {\r\n    logger.debug(\"Registering user account with information: {}\", accountDto);\r\n    User registered = createUserAccount(accountDto);\r\n    if (registered == null) {\r\n        throw new UserAlreadyExistException();\r\n    }\r\n    String appUrl = \"http://\" + request.getServerName() + \":\" + \r\n      request.getServerPort() + request.getContextPath();\r\n\r\n    eventPublisher.publishEvent(\r\n      new OnRegistrationCompleteEvent(registered, request.getLocale(), appUrl));\r\n\r\n    return new GenericResponse(\"success\");\r\n}\r\n```","```\r\n<html>\r\n<head>\r\n<title th:text=\"#{label.form.title}\">form</title>\r\n</head>\r\n<body>\r\n<form action=\"/\" method=\"POST\" enctype=\"utf8\">\r\n    <input  name=\"firstName\" value=\"\" />\r\n    <span id=\"firstNameError\" style=\"display:none\"></span>\r\n\r\n    <input  name=\"lastName\" value=\"\" />\r\n    <span id=\"lastNameError\" style=\"display:none\"></span>\r\n\r\n    <input  name=\"email\" value=\"\" />           \r\n    <span id=\"emailError\" style=\"display:none\"></span>\r\n\r\n    <input name=\"password\" value=\"\" type=\"password\" />\r\n    <span id=\"passwordError\" style=\"display:none\"></span>\r\n\r\n    <input name=\"matchingPassword\" value=\"\" type=\"password\" />\r\n    <span id=\"globalError\" style=\"display:none\"></span>\r\n\r\n    <a href=\"#\" onclick=\"register()\" th:text=\"#{label.form.submit}>submit</a>\r\n</form>\r\n\r\n<script src=\"jquery.min.js\"></script>\r\n<script type=\"text/javascript\">\r\nvar serverContext = [[@{/}]];\r\n\r\nfunction register(){\r\n    $(\".alert\").html(\"\").hide();\r\n    var formData= $('form').serialize();\r\n    $.post(serverContext + \"/user/registration\",formData ,function(data){\r\n        if(data.message == \"success\"){\r\n            window.location.href = serverContext +\"/successRegister.html\";\r\n        }\r\n    })\r\n    .fail(function(data) {\r\n        if(data.responseJSON.error.indexOf(\"MailError\") > -1)\r\n        {\r\n            window.location.href = serverContext + \"/emailError.html\";\r\n        }\r\n        else if(data.responseJSON.error.indexOf(\"InternalError\") > -1){\r\n            window.location.href = serverContext + \r\n              \"/login.html?message=\" + data.responseJSON.message;\r\n        }\r\n        else if(data.responseJSON.error == \"UserAlreadyExist\"){\r\n            $(\"#emailError\").show().html(data.responseJSON.message);\r\n        }\r\n        else{\r\n            var errors = $.parseJSON(data.responseJSON.message);\r\n            $.each( errors, function( index,item ){\r\n                $(\"#\"+item.field+\"Error\").show().html(item.defaultMessage);\r\n            });\r\n            errors = $.parseJSON(data.responseJSON.error);\r\n            $.each( errors, function( index,item ){\r\n                $(\"#globalError\").show().append(item.defaultMessage+\"<br>\");\r\n            });\r\n }\r\n}\r\n</script>\r\n</body>\r\n</html>\r\n```","```\r\n@Override\r\nprotected ResponseEntity<Object> handleBindException\r\n  (BindException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {\r\n    logger.error(\"400 Status Code\", ex);\r\n    BindingResult result = ex.getBindingResult();\r\n    GenericResponse bodyOfResponse = \r\n      new GenericResponse(result.getFieldErrors(), result.getGlobalErrors());\r\n\r\n    return handleExceptionInternal(\r\n      ex, bodyOfResponse, new HttpHeaders(), HttpStatus.BAD_REQUEST, request);\r\n}\r\n```","```\r\n@ExceptionHandler({ UserAlreadyExistException.class })\r\npublic ResponseEntity<Object> handleUserAlreadyExist(RuntimeException ex, WebRequest request) {\r\n    logger.error(\"409 Status Code\", ex);\r\n    GenericResponse bodyOfResponse = new GenericResponse(\r\n      messages.getMessage(\"message.regError\", null, request.getLocale()), \"UserAlreadyExist\");\r\n\r\n    return handleExceptionInternal(\r\n      ex, bodyOfResponse, new HttpHeaders(), HttpStatus.CONFLICT, request);\r\n}\r\n```","```\r\npublic class GenericResponse {\r\n\r\n    public GenericResponse(List<FieldError> fieldErrors, List<ObjectError> globalErrors) {\r\n        super();\r\n        ObjectMapper mapper = new ObjectMapper();\r\n        try {\r\n            this.message = mapper.writeValueAsString(fieldErrors);\r\n            this.error = mapper.writeValueAsString(globalErrors);\r\n        } catch (JsonProcessingException e) {\r\n            this.message = \"\";\r\n            this.error = \"\";\r\n        }\r\n    }\r\n}\r\n```","```\r\nvar serverContext = [[@{/}]];\r\n\r\nfunction register(){\r\n    $(\".alert\").html(\"\").hide();\r\n    var formData= $('form').serialize();\r\n    $.post(serverContext + \"/user/registration\",formData ,function(data){\r\n        if(data.message == \"success\"){\r\n            window.location.href = serverContext +\"/successRegister.html\";\r\n        }\r\n    })\r\n    .fail(function(data) {\r\n        if(data.responseJSON.error.indexOf(\"MailError\") > -1)\r\n        {\r\n            window.location.href = serverContext + \"/emailError.html\";\r\n        }\r\n        else if(data.responseJSON.error.indexOf(\"InternalError\") > -1){\r\n            window.location.href = serverContext + \r\n              \"/login.html?message=\" + data.responseJSON.message;\r\n        }\r\n        else if(data.responseJSON.error == \"UserAlreadyExist\"){\r\n            $(\"#emailError\").show().html(data.responseJSON.message);\r\n        }\r\n        else{\r\n            var errors = $.parseJSON(data.responseJSON.message);\r\n            $.each( errors, function( index,item ){\r\n                $(\"#\"+item.field+\"Error\").show().html(item.defaultMessage);\r\n            });\r\n            errors = $.parseJSON(data.responseJSON.error);\r\n            $.each( errors, function( index,item ){\r\n                $(\"#globalError\").show().append(item.defaultMessage+\"<br>\");\r\n            });\r\n }\r\n}\r\n```"]