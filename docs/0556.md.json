["```\r\npublic interface TextService {\r\n    String doSomethingWithText(String text);\r\n    String doSomethingElseWithText(String text);    \r\n}\r\n```","```\r\npublic class SpecializedTextService implements TextService { ... }\r\n```","```\r\npublic class TextClass {\r\n    private TextService textService;\r\n\r\n    // constructor\r\n}\r\n```","```\r\npublic class TextClassFactory {\r\n\r\n    public TextClass getTextClass() {\r\n        return new TextClass(new SpecializedTextService(); \r\n    }    \r\n}\r\n```","```\r\n<beans  \r\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n  xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee \r\n  http://java.sun.com/xml/ns/javaee/beans_1_0.xsd\">\r\n</beans>\r\n```","```\r\npublic interface ImageFileEditor {\r\n    String openFile(String fileName);\r\n    String editFile(String fileName);\r\n    String writeFile(String fileName);\r\n    String saveFile(String fileName);\r\n}\r\n```","```\r\npublic class GifFileEditor implements ImageFileEditor {\r\n\r\n    @Override\r\n    public String openFile(String fileName) {\r\n        return \"Opening GIF file \" + fileName;\r\n    }\r\n\r\n    @Override\r\n    public String editFile(String fileName) {\r\n      return \"Editing GIF file \" + fileName;\r\n    }\r\n\r\n    @Override\r\n    public String writeFile(String fileName) {\r\n        return \"Writing GIF file \" + fileName;\r\n    }\r\n\r\n    @Override\r\n    public String saveFile(String fileName) {\r\n        return \"Saving GIF file \" + fileName;\r\n    }\r\n}\r\n```","```\r\npublic class JpgFileEditor implements ImageFileEditor {\r\n    // JPG-specific implementations for openFile() / editFile() / writeFile() / saveFile()\r\n    ...\r\n}\r\n```","```\r\npublic class PngFileEditor implements ImageFileEditor {\r\n    // PNG-specific implementations for openFile() / editFile() / writeFile() / saveFile()\r\n    ...\r\n}\r\n```","```\r\npublic class ImageFileProcessor {\r\n\r\n    private ImageFileEditor imageFileEditor;\r\n\r\n    @Inject\r\n    public ImageFileProcessor(ImageFileEditor imageFileEditor) {\r\n        this.imageFileEditor = imageFileEditor;\r\n    }\r\n}\r\n```","```\r\npublic static void main(String[] args) {\r\n    Weld weld = new Weld();\r\n    WeldContainer container = weld.initialize();\r\n    ImageFileProcessor imageFileProcessor = container.select(ImageFileProcessor.class).get();\r\n\r\n    System.out.println(imageFileProcessor.openFile(\"file1.png\"));\r\n\r\n    container.shutdown();\r\n} \r\n```","```\r\nUnsatisfied dependencies for type ImageFileEditor with qualifiers @Default at injection point...\r\n```","```\r\n@Alternative\r\npublic class GifFileEditor implements ImageFileEditor { ... }\r\n```","```\r\n@Alternative\r\npublic class JpgFileEditor implements ImageFileEditor { ... } \r\n```","```\r\npublic class PngFileEditor implements ImageFileEditor { ... }\r\n```","```\r\nOpening PNG file file1.png \r\n```","```\r\n@Inject\r\nprivate final ImageFileEditor imageFileEditor;\r\n```","```\r\n@Inject \r\npublic void setImageFileEditor(ImageFileEditor imageFileEditor) { ... }\r\n```","```\r\n@Named(\"GifFileEditor\")\r\npublic class GifFileEditor implements ImageFileEditor { ... }\r\n\r\n@Named(\"JpgFileEditor\")\r\npublic class JpgFileEditor implements ImageFileEditor { ... }\r\n\r\n@Named(\"PngFileEditor\")\r\npublic class PngFileEditor implements ImageFileEditor { ... }\r\n```","```\r\n@Inject \r\npublic ImageFileProcessor(@Named(\"PngFileEditor\") ImageFileEditor imageFileEditor) { ... }\r\n```","```\r\n@Inject \r\nprivate final @Named(\"PngFileEditor\") ImageFileEditor imageFileEditor;\r\n\r\n@Inject \r\npublic void setImageFileEditor(@Named(\"PngFileEditor\") ImageFileEditor imageFileEditor) { ... }\r\n```","```\r\n@Inject\r\npublic ImageFileProcessor(ImageFileEditor imageFileEditor, TimeLogger timeLogger) { ... } \r\n\r\npublic String openFile(String fileName) {\r\n    return imageFileEditor.openFile(fileName) + \" at: \" + timeLogger.getTime();\r\n}\r\n\r\n// additional image file methods \r\n```","```\r\npublic class TimeLogger {\r\n\r\n    private SimpleDateFormat dateFormat;\r\n    private Calendar calendar;\r\n\r\n    // constructors\r\n\r\n    public String getTime() {\r\n        return dateFormat.format(calendar.getTime());\r\n    }\r\n}\r\n```","```\r\npublic class TimeLoggerFactory {\r\n\r\n    @Produces\r\n    public TimeLogger getTimeLogger() {\r\n        return new TimeLogger(new SimpleDateFormat(\"HH:mm\"), Calendar.getInstance());\r\n    }\r\n}\r\n```","```\r\nOpening PNG file file1.png at: 17:46\r\n```","```\r\n@Qualifier\r\n@Retention(RetentionPolicy.RUNTIME)\r\n@Target({ElementType.FIELD, ElementType.METHOD, ElementType.TYPE, ElementType.PARAMETER})\r\npublic @interface GifFileEditorQualifier {} \r\n```","```\r\n@Qualifier\r\n@Retention(RetentionPolicy.RUNTIME)\r\n@Target({ElementType.FIELD, ElementType.METHOD, ElementType.TYPE, ElementType.PARAMETER})\r\npublic @interface JpgFileEditorQualifier {} \r\n```","```\r\n@Qualifier\r\n@Retention(RetentionPolicy.RUNTIME)\r\n@Target({ElementType.FIELD, ElementType.METHOD, ElementType.TYPE, ElementType.PARAMETER})\r\npublic @interface PngFileEditorQualifier {} \r\n```","```\r\n@GifFileEditorQualifier\r\npublic class GifFileEditor implements ImageFileEditor { ... } \r\n```","```\r\n@JpgFileEditorQualifier\r\npublic class JpgFileEditor implements ImageFileEditor { ... }\r\n```","```\r\n@PngFileEditorQualifier\r\npublic class PngFileEditor implements ImageFileEditor { ... } \r\n```","```\r\n@Inject\r\npublic ImageFileProcessor(@PngFileEditorQualifier ImageFileEditor imageFileEditor, TimeLogger timeLogger) { ... } \r\n```"]