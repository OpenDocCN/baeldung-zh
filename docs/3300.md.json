["```\r\nBufferedReader reader = \r\n  new BufferedReader(new FileReader(\"src/main/resources/input.txt\"));\r\n```","```\r\nFileReader reader = \r\n  new FileReader(\"src/main/resources/input.txt\");\r\n```","```\r\nBufferedReader reader = \r\n  new BufferedReader(new InputStreamReader(System.in));\r\n```","```\r\nBufferedReader reader = \r\n  new BufferedReader(new FileReader(\"src/main/resources/input.txt\"));\r\n```","```\r\nBufferedReader reader = \r\n  new BufferedReader(new FileReader(\"src/main/resources/input.txt\")), 16384);\r\n```","```\r\nBufferedReader reader = \r\n  Files.newBufferedReader(Paths.get(\"src/main/resources/input.txt\"))\r\n```","```\r\npublic String readAllLines(BufferedReader reader) throws IOException {\r\n    StringBuilder content = new StringBuilder();\r\n    String line;\r\n\r\n    while ((line = reader.readLine()) != null) {\r\n        content.append(line);\r\n        content.append(System.lineSeparator());\r\n    }\r\n\r\n    return content.toString();\r\n}\r\n```","```\r\npublic String readAllLinesWithStream(BufferedReader reader) {\r\n    return reader.lines()\r\n      .collect(Collectors.joining(System.lineSeparator()));\r\n}\r\n```","```\r\ntry (BufferedReader reader = \r\n       new BufferedReader(new FileReader(\"src/main/resources/input.txt\"))) {\r\n    return readAllLines(reader);\r\n}\r\n```","```\r\npublic String readAllCharsOneByOne(BufferedReader reader) throws IOException {\r\n    StringBuilder content = new StringBuilder();\r\n\r\n    int value;\r\n    while ((value = reader.read()) != -1) {\r\n        content.append((char) value);\r\n    }\r\n\r\n    return content.toString();\r\n}\r\n```","```\r\npublic String readMultipleChars(BufferedReader reader) throws IOException {\r\n    int length;\r\n    char[] chars = new char[length];\r\n    int charsRead = reader.read(chars, 0, length);\r\n\r\n    String result;\r\n    if (charsRead != -1) {\r\n        result = new String(chars, 0, charsRead);\r\n    } else {\r\n        result = \"\";\r\n    }\r\n\r\n    return result;\r\n}\r\n```","```\r\n@Test\r\npublic void givenBufferedReader_whensSkipChars_thenOk() throws IOException {\r\n    StringBuilder result = new StringBuilder();\r\n\r\n    try (BufferedReader reader = \r\n           new BufferedReader(new StringReader(\"1__2__3__4__5\"))) {\r\n        int value;\r\n        while ((value = reader.read()) != -1) {\r\n            result.append((char) value);\r\n            reader.skip(2L);\r\n        }\r\n    }\r\n\r\n    assertEquals(\"12345\", result);\r\n}\r\n```","```\r\n@Test\r\npublic void givenBufferedReader_whenSkipsWhitespacesAtBeginning_thenOk() \r\n  throws IOException {\r\n    String result;\r\n\r\n    try (BufferedReader reader = \r\n           new BufferedReader(new StringReader(\"    Lorem ipsum dolor sit amet.\"))) {\r\n        do {\r\n            reader.mark(1);\r\n        } while(Character.isWhitespace(reader.read()))\r\n\r\n        reader.reset();\r\n        result = reader.readLine();\r\n    }\r\n\r\n    assertEquals(\"Lorem ipsum dolor sit amet.\", result);\r\n}\r\n```"]