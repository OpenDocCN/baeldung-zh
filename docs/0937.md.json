["```\r\n@RestController\r\n@CrossOrigin(\"http://localhost:4200\")\r\npublic class ResourceController {\r\n\r\n    @GetMapping(\"/user\")\r\n    public String user(Principal principal) {\r\n        return principal.getName();\r\n    }\r\n}\r\n```","```\r\n@EnableWebSecurity\r\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\r\n\r\n    @Override\r\n    protected void configure(HttpSecurity http) throws Exception {\r\n        http\r\n            .authorizeRequests()\r\n                .anyRequest().authenticated()\r\n                .and()\r\n            .httpBasic();\r\n    }\r\n}\r\n```","```\r\ncurl -v -H \"Access-Control-Request-Method: GET\" -H \"Origin: http://localhost:4200\" \r\n  -X OPTIONS http://localhost:8080/user\r\n...\r\n< HTTP/1.1 401\r\n...\r\n< WWW-Authenticate: Basic realm=\"Realm\"\r\n...\r\n< Vary: Origin\r\n< Vary: Access-Control-Request-Method\r\n< Vary: Access-Control-Request-Headers\r\n< Access-Control-Allow-Origin: http://localhost:4200\r\n< Access-Control-Allow-Methods: POST\r\n< Access-Control-Allow-Credentials: true\r\n< Allow: GET, HEAD, POST, PUT, DELETE, TRACE, OPTIONS, PATCH\r\n...\r\n```","```\r\n@EnableWebSecurity\r\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\r\n    @Override\r\n    protected void configure(HttpSecurity http) throws Exception {\r\n        // ...\r\n        http.cors();\r\n    }\r\n}\r\n```"]