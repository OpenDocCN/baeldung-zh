["```\r\n<dependency>\r\n    <groupId>com.intuit.karate</groupId>\r\n    <artifactId>karate-apache</artifactId>\r\n    <version>0.6.0</version>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>com.intuit.karate</groupId>\r\n    <artifactId>karate-junit4</artifactId>\r\n    <version>0.6.0</version>\r\n</dependency>\r\n```","```\r\nScenario: Testing valid GET endpoint\r\nGiven url 'http://localhost:8097/user/get'\r\nWhen method GET\r\nThen status 200\r\n```","```\r\nScenario: Testing the exact response of a GET endpoint\r\nGiven url 'http://localhost:8097/user/get'\r\nWhen method GET\r\nThen status 200\r\nAnd match $ == {id:\"1234\",name:\"John Smith\"}\r\n```","```\r\nAnd match $.id == \"1234\"\r\n```","```\r\nScenario: Testing that GET response contains specific field\r\nGiven url 'http://localhost:8097/user/get'\r\nWhen method GET\r\nThen status 200\r\nAnd match $ contains {id:\"1234\"}\r\n```","```\r\nScenario: Test GET request exact response\r\nGiven url 'http://localhost:8097/user/get'\r\nWhen method GET\r\nThen status 200\r\nAnd match $ == {id:\"#notnull\",name:\"John Smith\"}\r\n```","```\r\nScenario: Testing a POST endpoint with request body\r\nGiven url 'http://localhost:8097/user/create'\r\nAnd request { id: '1234' , name: 'John Smith'}\r\nWhen method POST\r\nThen status 200\r\nAnd match $ contains {id:\"#notnull\"}\r\n```","```\r\n@RunWith(Karate.class)\r\n@CucumberOptions(features = \"classpath:karate\")\r\npublic class KarateUnitTest {\r\n//...     \r\n}\r\n```","```\r\nprivate static WireMockServer wireMockServer\r\n  = new WireMockServer(WireMockConfiguration.options().port(8097));\r\n\r\n@BeforeClass\r\npublic static void setUp() throws Exception {\r\n    wireMockServer.start();\r\n    configureFor(\"localhost\", 8097);\r\n    stubFor(\r\n      get(urlEqualTo(\"/user/get\"))\r\n        .willReturn(aResponse()\r\n          .withStatus(200)\r\n          .withHeader(\"Content-Type\", \"application/json\")\r\n          .withBody(\"{ \\\"id\\\": \\\"1234\\\", name: \\\"John Smith\\\" }\")));\r\n\r\n    stubFor(\r\n      post(urlEqualTo(\"/user/create\"))\r\n        .withHeader(\"content-type\", equalTo(\"application/json\"))\r\n        .withRequestBody(containing(\"id\"))\r\n        .willReturn(aResponse()\r\n          .withStatus(200)\r\n          .withHeader(\"Content-Type\", \"application/json\")\r\n          .withBody(\"{ \\\"id\\\": \\\"1234\\\", name: \\\"John Smith\\\" }\")));\r\n\r\n}\r\n\r\n@AfterClass\r\npublic static void tearDown() throws Exception {\r\n    wireMockServer.stop();\r\n}\r\n```"]