["```\r\n@Test\r\npublic void createStream_whenFindAnyResultIsPresent_thenCorrect() {\r\n    List<String> list = Arrays.asList(\"A\",\"B\",\"C\",\"D\");\r\n\r\n    Optional<String> result = list.stream().findAny();\r\n\r\n    assertTrue(result.isPresent());\r\n    assertThat(result.get(), anyOf(is(\"A\"), is(\"B\"), is(\"C\"), is(\"D\")));\r\n}\r\n```","```\r\n@Test\r\npublic void createParallelStream_whenFindAnyResultIsPresent_thenCorrect()() {\r\n    List<Integer> list = Arrays.asList(1, 2, 3, 4, 5);\r\n    Optional<Integer> result = list\r\n      .stream().parallel()\r\n      .filter(num -> num < 4).findAny();\r\n\r\n    assertTrue(result.isPresent());\r\n    assertThat(result.get(), anyOf(is(1), is(2), is(3)));\r\n}\r\n```","```\r\n@Test\r\npublic void createStream_whenFindFirstResultIsPresent_thenCorrect() {\r\n\r\n    List<String> list = Arrays.asList(\"A\", \"B\", \"C\", \"D\");\r\n\r\n    Optional<String> result = list.stream().findFirst();\r\n\r\n    assertTrue(result.isPresent());\r\n    assertThat(result.get(), is(\"A\"));\r\n}\r\n```"]