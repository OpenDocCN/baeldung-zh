["```\r\nEntityManager em = ...;\r\nCriteriaBuilder cb = em.getCriteriaBuilder();\r\nCriteriaQuery<Pet> cq = cb.createQuery(Pet.class);\r\nRoot<Pet> pet = cq.from(Pet.class);\r\ncq.select(pet);\r\nTypedQuery<Pet> q = em.createQuery(cq);\r\nList<Pet> allPets = q.getResultList();\r\n```","```\r\n<properties>\r\n    <querydsl.version>4.1.3</querydsl.version>\r\n</properties>\r\n```","```\r\n<dependencies>\r\n\r\n    <dependency>\r\n        <groupId>com.querydsl</groupId>\r\n        <artifactId>querydsl-apt</artifactId>\r\n        <version>${querydsl.version}</version>\r\n        <scope>provided</scope>\r\n    </dependency>\r\n\r\n    <dependency>\r\n        <groupId>com.querydsl</groupId>\r\n        <artifactId>querydsl-jpa</artifactId>\r\n        <version>${querydsl.version}</version>\r\n    </dependency>\r\n\r\n</dependencies>\r\n```","```\r\n<plugin>\r\n    <groupId>com.mysema.maven</groupId>\r\n    <artifactId>apt-maven-plugin</artifactId>\r\n    <version>1.1.3</version>\r\n    <executions>\r\n        <execution>\r\n            <goals>\r\n                <goal>process</goal>\r\n            </goals>\r\n            <configuration>\r\n                <outputDirectory>target/generated-sources/java</outputDirectory>\r\n                <processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>\r\n            </configuration>\r\n        </execution>\r\n    </executions>\r\n</plugin>\r\n```","```\r\n@Entity\r\npublic class User {\r\n\r\n    @Id\r\n    @GeneratedValue\r\n    private Long id;\r\n\r\n    private String login;\r\n\r\n    private Boolean disabled;\r\n\r\n    @OneToMany(cascade = CascadeType.PERSIST, mappedBy = \"user\")\r\n    private Set<BlogPost> blogPosts = new HashSet<>(0);\r\n\r\n    // getters and setters\r\n\r\n}\r\n\r\n@Entity\r\npublic class BlogPost {\r\n\r\n    @Id\r\n    @GeneratedValue\r\n    private Long id;\r\n\r\n    private String title;\r\n\r\n    private String body;\r\n\r\n    @ManyToOne\r\n    private User user;\r\n\r\n    // getters and setters\r\n\r\n}\r\n```","```\r\nmvn compile\r\n```","```\r\npublic static final QUser user = new QUser(\"user\");\r\n```","```\r\nEntityManagerFactory emf = \r\n  Persistence.createEntityManagerFactory(\"com.baeldung.querydsl.intro\");\r\nEntityManager em = entityManagerFactory.createEntityManager();\r\nJPAQueryFactory queryFactory = new JPAQueryFactory(em);\r\n```","```\r\nQUser user = QUser.user;\r\n\r\nUser c = queryFactory.selectFrom(user)\r\n  .where(user.login.eq(\"David\"))\r\n  .fetchOne();\r\n```","```\r\nList<User> c = queryFactory.selectFrom(user)\r\n  .orderBy(user.login.asc())\r\n  .fetch();\r\n```","```\r\nNumberPath<Long> count = Expressions.numberPath(Long.class, \"c\");\r\n\r\nList<Tuple> userTitleCounts = queryFactory.select(\r\n  blogPost.title, blogPost.id.count().as(count))\r\n  .from(blogPost)\r\n  .groupBy(blogPost.title)\r\n  .orderBy(count.desc())\r\n  .fetch();\r\n```","```\r\nQBlogPost blogPost = QBlogPost.blogPost;\r\n\r\nList<User> users = queryFactory.selectFrom(user)\r\n  .innerJoin(user.blogPosts, blogPost)\r\n  .on(blogPost.title.eq(\"Hello World!\"))\r\n  .fetch();\r\n```","```\r\nList<User> users = queryFactory.selectFrom(user)\r\n  .where(user.id.in(\r\n    JPAExpressions.select(blogPost.user.id)\r\n      .from(blogPost)\r\n      .where(blogPost.title.eq(\"Hello World!\"))))\r\n  .fetch();\r\n```","```\r\nqueryFactory.update(user)\r\n  .where(user.login.eq(\"Ash\"))\r\n  .set(user.login, \"Ash2\")\r\n  .set(user.disabled, true)\r\n  .execute();\r\n```","```\r\nqueryFactory.delete(user)\r\n  .where(user.login.eq(\"David\"))\r\n  .execute();\r\n```"]