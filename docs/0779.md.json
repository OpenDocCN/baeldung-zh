["```\r\n$git log --oneline\r\na795255 (HEAD -> master) create 2nd file\r\n5282c7c appending more info\r\nb0e1887 creating first file\r\n```","```\r\n$ git checkout 5282c7c\r\nNote: switching to '5282c7c'.\r\n\r\nYou are in 'detached HEAD' state. You can look around, make experimental\r\nchanges and commit them, and you can discard any commits you make in this\r\nstate without impacting any branches by switching back to a branch.\r\n\r\nIf you want to create a new branch to retain commits you create, you may\r\ndo so (now or later) by using -c with the switch command. Example:\r\n\r\n  git switch -c <new-branch-name>\r\n\r\nOr undo this operation with:\r\n\r\n  git switch -\r\n\r\nHEAD is now at 5282c7c appending more info\r\n\r\n[[emailÂ protected]](/web/20221023083938/https://www.baeldung.com/cdn-cgi/l/email-protection): MINGW64 ~/git/detached-head-demo ((5282c7c...))\r\n```","```\r\necho \"understanding git detached head scenarios\" > sample-file.txt\r\ngit add .\r\ngit commit -m \"Create new sample file\"\r\necho \"Another line\" >> sample-file.txt\r\ngit commit -a -m \"Add a new line to the file\"\r\n```","```\r\n$ git log --oneline\r\n7a367ef (HEAD) Add a new line to the file\r\nd423c8c create new sample file\r\n5282c7c appending more info\r\nb0e1887 creating first file\r\n```","```\r\ngit switch <branch-name> \r\n```","```\r\ngit checkout <branch-name>\r\n```","```\r\ngit branch experimental\r\ngit checkout experimental\r\n```","```\r\n$ git log --oneline\r\n7a367ef (HEAD -> experimental) Add a new line to the file\r\nd423c8c create new sample file\r\n5282c7c appending more info\r\nb0e1887 creating first file\r\n```"]