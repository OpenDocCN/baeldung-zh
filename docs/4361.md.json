["```\r\n<plugin>\r\n  <groupId>org.apache.maven.plugins</groupId>\r\n  <artifactId>maven-compiler-plugin</artifactId>\r\n  <version>3.1</version>\r\n  <configuration>\r\n    <source>1.8</source>\r\n    <target>1.8</target>\r\n    <compilerArgument>-parameters</compilerArgument>\r\n  </configuration>\r\n</plugin> \r\n```","```\r\npublic class Person {\r\n\r\n    private String fullName;\r\n\r\n    public Person(String fullName) {\r\n        this.fullName = fullName;\r\n    }\r\n\r\n    public void setFullName(String fullName) {\r\n        this.fullName = fullName;\r\n    }\r\n\r\n    // other methods\r\n}\r\n```","```\r\n@Test\r\npublic void whenGetConstructorParams_thenOk() \r\n  throws NoSuchMethodException, SecurityException {\r\n\r\n    List<Parameter> parameters \r\n        = Arrays.asList(Person.class.getConstructor(String.class).getParameters());\r\n    Optional<Parameter> parameter \r\n        = parameters.stream().filter(Parameter::isNamePresent).findFirst();\r\n    assertThat(parameter.get().getName()).isEqualTo(\"fullName\");\r\n}\r\n\r\n@Test\r\npublic void whenGetMethodParams_thenOk() \r\n  throws NoSuchMethodException, SecurityException {\r\n\r\n    List<Parameter> parameters = Arrays.asList(\r\n      Person.class.getMethod(\"setFullName\", String.class).getParameters());\r\n    Optional<Parameter> parameter= parameters.stream()\r\n      .filter(Parameter::isNamePresent)\r\n      .findFirst();\r\n\r\n    assertThat(parameter.get().getName()).isEqualTo(\"fullName\");\r\n}\r\n```"]