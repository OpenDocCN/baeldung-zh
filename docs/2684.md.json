["```\r\npublic List<String> findUsingLoop(String search, List<String> list) {\r\n    List<String> matches = new ArrayList<String>();\r\n\r\n    for(String str: list) {\r\n        if (str.contains(search)) {\r\n            matches.add(str);\r\n        }\r\n    }\r\n\r\n    return matches;\r\n} \r\n```","```\r\npublic List<String> findUsingStream(String search, List<String> list) {\r\n    List<String> matchingElements = list.stream()\r\n      .filter(str -> str.trim().contains(search))\r\n      .collect(Collectors.toList());\r\n\r\n    return matchingElements;\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>com.google.guava</groupId>\r\n    <artifactId>guava</artifactId>\r\n    <version>31.0.1-jre</version>\r\n</dependency>\r\n\r\n<dependency>\r\n    <groupId>org.apache.commons</groupId>\r\n    <artifactId>commons-collections4</artifactId>\r\n    <version>4.1</version>\r\n</dependency>\r\n```","```\r\npublic List<String> findUsingCommonsCollection(String search, List<String> list) {\r\n    Iterable<String> result = IterableUtils.filteredIterable(list, new Predicate<String>() {\r\n        public boolean evaluate(String listElement) {\r\n            return listElement.contains(search);\r\n        }\r\n    });\r\n\r\n    return IteratorUtils.toList(result.iterator());\r\n} \r\n```","```\r\npublic List<String> findUsingGuava(String search, List<String> list) {         \r\n    Iterable<String> result = Iterables.filter(list, Predicates.containsPattern(search));\r\n\r\n    return Lists.newArrayList(result.iterator());\r\n}\r\n```"]