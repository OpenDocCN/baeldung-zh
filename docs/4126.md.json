["```\r\n<repositories>\r\n    <repository>\r\n        <id>osgeo</id>\r\n        <name>Open Source Geospatial Foundation Repository</name>\r\n        <url>http://download.osgeo.org/webdav/geotools/</url>\r\n    </repository>\r\n    <repository>\r\n        <id>opengeo</id>\r\n        <name>OpenGeo Maven Repository</name>\r\n        <url>http://repo.opengeo.org</url>\r\n    </repository>\r\n</repositories>\r\n```","```\r\n<dependency>\r\n    <groupId>org.geotools</groupId>\r\n    <artifactId>gt-shapefile</artifactId>\r\n    <version>15.2</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.geotools</groupId>\r\n    <artifactId>gt-epsg-hsql</artifactId>\r\n    <version>15.2</version>\r\n</dependency>\r\n```","```\r\nprivate static void addToLocationMap(\r\n  String name,\r\n  double lat,\r\n  double lng,\r\n  Map<String, List<Double>> locations) {\r\n    List<Double> coordinates = new ArrayList<>();\r\n\r\n    coordinates.add(lat);\r\n    coordinates.add(lng);\r\n    locations.put(name, coordinates);\r\n}\r\n```","```\r\nMap<String, List<Double>> locations = new HashMap<>();\r\n\r\naddToLocationMap(\"Bangkok\", 13.752222, 100.493889, locations);\r\naddToLocationMap(\"New York\", 53.083333, -0.15, locations);\r\naddToLocationMap(\"Cape Town\", -33.925278, 18.423889, locations);\r\naddToLocationMap(\"Sydney\", -33.859972, 151.211111, locations);\r\naddToLocationMap(\"Ottawa\", 45.420833, -75.69, locations);\r\naddToLocationMap(\"Cairo\", 30.07708, 31.285909, locations);\r\n```","```\r\nSimpleFeatureType TYPE = DataUtilities.createType(\r\n  \"Location\", \"location:Point:srid=4326,\" + \"name:String\");\r\n```","```\r\nSimpleFeatureTypeBuilder builder = new SimpleFeatureTypeBuilder();\r\nbuilder.setName(\"Location\");\r\nbuilder.setCRS(DefaultGeographicCRS.WGS84);\r\n\r\nbuilder\r\n  .add(\"Location\", Point.class);\r\n  .length(15)\r\n  .add(\"Name\", String.class);\r\n\r\nSimpleFeatureType CITY = builder.buildFeatureType();\r\n```","```\r\nSimpleFeatureBuilder featureBuilder = new SimpleFeatureBuilder(CITY);\r\n```","```\r\nDefaultFeatureCollection collection = new DefaultFeatureCollection();\r\n```","```\r\nGeometryFactory geometryFactory\r\n  = JTSFactoryFinder.getGeometryFactory(null);\r\n```","```\r\nprivate static Function<Map.Entry<String, List<Double>>, SimpleFeature>\r\n  toFeature(SimpleFeatureType CITY, GeometryFactory geometryFactory) {\r\n    return location -> {\r\n        Point point = geometryFactory.createPoint(\r\n           new Coordinate(location.getValue()\r\n             .get(0), location.getValue().get(1)));\r\n\r\n        SimpleFeatureBuilder featureBuilder\r\n          = new SimpleFeatureBuilder(CITY);\r\n        featureBuilder.add(point);\r\n        featureBuilder.add(location.getKey());\r\n        return featureBuilder.buildFeature(null);\r\n    };\r\n}\r\n```","```\r\nlocations.entrySet().stream()\r\n  .map(toFeature(CITY, geometryFactory))\r\n  .forEach(collection::add);\r\n```","```\r\nFile shapeFile = new File(\r\n  new File(\".\").getAbsolutePath() + \"shapefile.shp\");\r\n```","```\r\nMap<String, Serializable> params = new HashMap<>();\r\nparams.put(\"url\", shapeFile.toURI().toURL());\r\nparams.put(\"create spatial index\", Boolean.TRUE);\r\n```","```\r\nShapefileDataStoreFactory dataStoreFactory\r\n  = new ShapefileDataStoreFactory();\r\n\r\nShapefileDataStore dataStore \r\n  = (ShapefileDataStore) dataStoreFactory.createNewDataStore(params);\r\ndataStore.createSchema(CITY);\r\n```","```\r\nTransaction transaction = new DefaultTransaction(\"create\");\r\n\r\nString typeName = dataStore.getTypeNames()[0];\r\nSimpleFeatureSource featureSource\r\n  = dataStore.getFeatureSource(typeName);\r\n\r\nif (featureSource instanceof SimpleFeatureStore) {\r\n    SimpleFeatureStore featureStore\r\n      = (SimpleFeatureStore) featureSource;\r\n\r\n    featureStore.setTransaction(transaction);\r\n    try {\r\n        featureStore.addFeatures(collection);\r\n        transaction.commit();\r\n\r\n    } catch (Exception problem) {\r\n        transaction.rollback();\r\n    } finally {\r\n        transaction.close();\r\n    }\r\n}\r\n```"]