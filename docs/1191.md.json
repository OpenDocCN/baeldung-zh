["```\r\n<parent>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-parent</artifactId>\r\n    <version>2.7.2</version>\r\n    <relativePath />\r\n</parent>\r\n```","```\r\n<dependency>\r\n    <groupId>io.vavr</groupId>\r\n    <artifactId>vavr</artifactId>\r\n    <version>0.9.0</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-data-jpa</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>com.h2database</groupId>\r\n    <artifactId>h2</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-test</artifactId>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.data</groupId>\r\n    <artifactId>spring-data-commons</artifactId>\r\n    <version>2.0.0.RELEASE</version>\r\n</dependency>\r\n```","```\r\n@Entity\r\npublic class User {\r\n\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.AUTO)\r\n    private long id;\r\n\r\n    private String name;\r\n\r\n    // standard constructor, getters, setters\r\n}\r\n```","```\r\npublic interface VavrUserRepository extends Repository<User, Long> {\r\n\r\n    Option<User> findById(long id);\r\n\r\n    Seq<User> findByName(String name);\r\n\r\n    User save(User user);\r\n}\r\n```","```\r\n@SpringBootApplication\r\npublic class Application {\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(Application.class, args);\r\n    }\r\n}\r\n```","```\r\n@RunWith(SpringRunner.class)\r\n@SpringBootTest(classes = Application.class)\r\npublic class VavrRepositoryIntegrationTest {\r\n\r\n    @Autowired\r\n    private VavrUserRepository userRepository;\r\n\r\n    @Before\r\n    public void setup() {\r\n        User user1 = new User();\r\n        user1.setName(\"John\");\r\n        User user2 = new User();\r\n        user2.setName(\"John\");\r\n\r\n        userRepository.save(user1);\r\n        userRepository.save(user2);\r\n    }\r\n\r\n    @Test\r\n    public void whenAddUsers_thenGetUsers() {\r\n        Option<User> user = userRepository.findById(1L);\r\n        assertFalse(user.isEmpty());\r\n        assertTrue(user.get().getName().equals(\"John\"));\r\n\r\n        Seq<User> users = userRepository.findByName(\"John\");\r\n        assertEquals(2, users.size());\r\n    }\r\n}\r\n```"]