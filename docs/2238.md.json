["```\r\nA B C D E F G H I J K L M N O P Q R S T U V W X Y Z\r\nD E F G H I J K L M N O P Q R S T U V W X Y Z A B C\r\n```","```\r\noffset = offset % 26\r\n```","```\r\npublic class CaesarCipher {\r\n    String cipher(String message, int offset) {}\r\n}\r\n```","```\r\nStringBuilder result = new StringBuilder();\r\nfor (char character : message.toCharArray()) {\r\n    if (character != ' ') {\r\n        int originalAlphabetPosition = character - 'a';\r\n        int newAlphabetPosition = (originalAlphabetPosition + offset) % 26;\r\n        char newCharacter = (char) ('a' + newAlphabetPosition);\r\n        result.append(newCharacter);\r\n    } else {\r\n        result.append(character);\r\n    }\r\n}\r\nreturn result;\r\n```","```\r\nCaesarCipher cipher = new CaesarCipher();\r\n\r\nString cipheredMessage = cipher.cipher(\"he told me i could never teach a llama to drive\", 3);\r\n\r\nassertThat(cipheredMessage)\r\n  .isEqualTo(\"kh wrog ph l frxog qhyhu whdfk d oodpd wr gulyh\");\r\n```","```\r\nString cipheredMessage = cipher.cipher(\"he told me i could never teach a llama to drive\", 10);\r\n\r\nassertThat(cipheredMessage)\r\n  .isEqualTo(\"ro dyvn wo s myevn xofob dokmr k vvkwk dy nbsfo\");\r\n```","```\r\nString decipher(String message, int offset) {}\r\n```","```\r\nreturn cipher(message, 26 - (offset % 26));\r\n```","```\r\nString decipheredSentence = cipher.decipher(\"ro dyvn wo s myevn xofob dokmr k vvkwk dy nbsfo\", 36);\r\nassertThat(decipheredSentence)\r\n  .isEqualTo(\"he told me i could never teach a llama to drive\");\r\n```","```\r\nint breakCipher(String message) {}\r\n```","```\r\ndouble[] englishLettersProbabilities = {0.073, 0.009, 0.030, 0.044, 0.130, 0.028, 0.016, 0.035, 0.074,\r\n  0.002, 0.003, 0.035, 0.025, 0.078, 0.074, 0.027, 0.003,\r\n  0.077, 0.063, 0.093, 0.027, 0.013, 0.016, 0.005, 0.019, 0.001};\r\n```","```\r\ndouble[] expectedLettersFrequencies = Arrays.stream(englishLettersProbabilities)\r\n  .map(probability -> probability * message.getLength())\r\n  .toArray();\r\n```","```\r\n<dependency>\r\n    <groupId>org.apache.commons</groupId>\r\n    <artifactId>commons-math3</artifactId>\r\n    <version>3.6.1</version>\r\n</dependency>\r\n```","```\r\ndouble[] chiSquares = new double[26];\r\n\r\nfor (int offset = 0; offset < chiSquares.length; offset++) {\r\n    String decipheredMessage = decipher(message, offset);\r\n    long[] lettersFrequencies = observedLettersFrequencies(decipheredMessage);\r\n    double chiSquare = new ChiSquareTest().chiSquare(expectedLettersFrequencies, lettersFrequencies);\r\n    chiSquares[offset] = chiSquare;\r\n}\r\n\r\nreturn chiSquares;\r\n```","```\r\nlong[] observedLettersFrequencies(String message) {\r\n    return IntStream.rangeClosed('a', 'z')\r\n      .mapToLong(letter -> countLetter((char) letter, message))\r\n      .toArray();\r\n}\r\n\r\nlong countLetter(char letter, String message) {\r\n    return message.chars()\r\n      .filter(character -> character == letter)\r\n      .count();\r\n}\r\n```","```\r\nint probableOffset = 0;\r\nfor (int offset = 0; offset < chiSquares.length; offset++) {\r\n    <span class=\"x x-first\">log</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">debug</span>(String.format(\"Chi-Square for offset %d: %.2f\", offset, chiSquares[offset]));\r\n    if (chiSquares[offset] < chiSquares[probableOffset]) {\r\n        probableOffset = offset;\r\n    }\r\n}\r\n\r\nreturn probableOffset;\r\n```","```\r\nint offset = algorithm.breakCipher(\"ro dyvn wo s myevn xofob dokmr k vvkwk dy nbsfo\");\r\nassertThat(offset).isEqualTo(10);\r\n\r\nassertThat(algorithm.decipher(\"ro dyvn wo s myevn xofob dokmr k vvkwk dy nbsfo\", offset))\r\n  .isEqualTo(\"he told me i could never teach a llama to drive\");\r\n```","```\r\nChi-Square for offset 0: 210.69\r\nChi-Square for offset 1: 327.65\r\nChi-Square for offset 2: 255.22\r\nChi-Square for offset 3: 187.12\r\nChi-Square for offset 4: 734.16\r\nChi-Square for offset 5: 673.68\r\nChi-Square for offset 6: 223.35\r\nChi-Square for offset 7: 111.13\r\nChi-Square for offset 8: 270.11\r\nChi-Square for offset 9: 153.26\r\nChi-Square for offset 10: 23.74\r\nChi-Square for offset 11: 643.14\r\nChi-Square for offset 12: 328.83\r\nChi-Square for offset 13: 434.19\r\nChi-Square for offset 14: 384.80\r\nChi-Square for offset 15: 1206.47\r\nChi-Square for offset 16: 138.08\r\nChi-Square for offset 17: 262.66\r\nChi-Square for offset 18: 253.28\r\nChi-Square for offset 19: 280.83\r\nChi-Square for offset 20: 365.77\r\nChi-Square for offset 21: 107.08\r\nChi-Square for offset 22: 548.81\r\nChi-Square for offset 23: 255.12\r\nChi-Square for offset 24: 458.72\r\nChi-Square for offset 25: 325.45\r\n```"]