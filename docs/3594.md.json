["```\r\n<dependency>\r\n    <groupId>org.thymeleaf</groupId>\r\n    <artifactId>thymeleaf</artifactId>\r\n    <version>3.0.11.RELEASE</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.thymeleaf</groupId>\r\n    <artifactId>thymeleaf-spring5</artifactId>\r\n    <version>3.0.11.RELEASE</version>\r\n</dependency>\r\n```","```\r\n<p th:text=\"${#dates.formatISO(date)}\"></p>\r\n```","```\r\n<p th:text=\"${#dates.format(date, 'dd-MM-yyyy HH:mm')}\"></p>\r\n```","```\r\n<p th:text=\"${#dates.dayOfWeekName(date)}\"></p>\r\n<p th:text=\"${#dates.createNow()}\"></p>\r\n<p th:text=\"${#dates.createToday()}\"></p>\r\n```","```\r\n<p th:text=\"${#calendars.formatISO(calendar)}\"></p>\r\n<p th:text=\"${#calendars.format(calendar, 'dd-MM-yyyy HH:mm')}\"></p>\r\n<p th:text=\"${#calendars.dayOfWeekName(calendar)}\"></p>\r\n```","```\r\n<p th:text=\"${#calendars.createNow().getTime()}\"></p>\r\n<p th:text=\"${#calendars.createToday().getFirstDayOfWeek()}\"></p>\r\n```","```\r\n<p th:text=\"${#numbers.formatDecimal(num,2,3)}\"></p>\r\n<p th:text=\"${#numbers.formatDecimal(num,2,3,'COMMA')}\"></p>\r\n```","```\r\n<p th:each=\"number: ${#numbers.sequence(0,2)}\">\r\n    <span th:text=\"${number}\"></span>\r\n</p>\r\n<p th:each=\"number: ${#numbers.sequence(0,4,2)}\">\r\n    <span th:text=\"${number}\"></span>\r\n</p>\r\n```","```\r\n<p th:text=\"${#strings.isEmpty(string)}\"></p>\r\n<p th:text=\"${#strings.isEmpty(nullString)}\"></p>\r\n<p th:text=\"${#strings.defaultString(emptyString,'Empty String')}\"></p>\r\n```","```\r\n<p th:text=\"${#strings.indexOf(name,frag)}\"></p>\r\n<p th:text=\"${#strings.substring(name,3,5)}\"></p>\r\n<p th:text=\"${#strings.substringAfter(name,prefix)}\"></p>\r\n<p th:text=\"${#strings.substringBefore(name,suffix)}\"></p>\r\n<p th:text=\"${#strings.replace(name,'las','ler')}\"></p>\r\n```","```\r\n<p th:text=\"${#strings.equals(first, second)}\"></p>\r\n<p th:text=\"${#strings.equalsIgnoreCase(first, second)}\"></p>\r\n<p th:text=\"${#strings.concat(values...)}\"></p>\r\n<p th:text=\"${#strings.concatReplaceNulls(nullValue, values...)}\"></p>\r\n```","```\r\n<p th:text=\"${#strings.abbreviate(string,5)} \"></p>\r\n<p th:text=\"${#strings.capitalizeWords(string)}\"></p>\r\n```","```\r\n<p th:text=\"${#aggregates.sum(array)}\"></p>\r\n<p th:text=\"${#aggregates.avg(array)}\"></p>\r\n<p th:text=\"${#aggregates.sum(set)}\"></p>\r\n<p th:text=\"${#aggregates.avg(set)}\"></p>\r\n```"]