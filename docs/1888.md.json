["```\r\nvar App = React.createClass({displayName: \"App\",\r\n    handleSubmit: function() {\r\n    \tvar last = this.state.data[this.state.data.length-1];\r\n    \tvar secondLast = this.state.data[this.state.data.length-2];\r\n        $.ajax({\r\n            url: '/next/'+last+'/'+secondLast,\r\n            dataType: 'text',\r\n            success: function(msg) {\r\n                var series = this.state.data;\r\n                series.push(msg);\r\n                this.setState({data: series});\r\n            }.bind(this),\r\n            error: function(xhr, status, err) {\r\n                console.error('/next', status, err.toString());\r\n            }.bind(this)\r\n        });\r\n    },\r\n    componentDidMount: function() {\r\n    \tthis.setState({data: this.props.data});\r\n    },\t\r\n    getInitialState: function() {\r\n        return {data: []};\r\n    },\t\r\n    render: function() {\r\n        return (\r\n            React.createElement(\"div\", {className: \"app\"},\r\n            \tReact.createElement(\"h2\", null, \"Fibonacci Generator\"),\r\n            \tReact.createElement(\"h2\", null, this.state.data.toString()),\r\n                React.createElement(\"input\", {type: \"submit\", value: \"Next\", onClick: this.handleSubmit})\r\n            )     \r\n        );\r\n    }\r\n});\r\n```","```\r\n<%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %>\r\n<html>\r\n<head>\r\n    <title>Hello React</title>\r\n    <script type=\"text/javascript\" src=\"js/react.js\"></script>\r\n    <script type=\"text/javascript\" src=\"js/react-dom.js\"></script>\r\n    <script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-1.10.0.min.js\"></script>\r\n</head>\r\n<body>\r\n<div id=\"root\"></div>\r\n<script type=\"text/javascript\" src=\"app.js\"></script>\r\n<script type=\"text/javascript\">\r\n    ReactDOM.render(\r\n        React.createElement(App, {data: [0,1,1]}),\r\n        document.getElementById(\"root\")\r\n    );\r\n</script>\r\n</body>\r\n</html>\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.apache.tomcat.embed</groupId>\r\n    <artifactId>tomcat-embed-jasper</artifactId>\r\n    <scope>provided</scope>\r\n</dependency>\r\n```","```\r\n@Controller\r\npublic class MyWebController {\r\n    @RequestMapping(\"/\")\r\n    public String index(Map<String, Object> model) throws Exception {\r\n        ScriptEngine nashorn = new ScriptEngineManager().getEngineByName(\"nashorn\");\r\n        nashorn.eval(new FileReader(\"static/js/react.js\"));\r\n        nashorn.eval(new FileReader(\"static/js/react-dom-server.js\"));\r\n        nashorn.eval(new FileReader(\"static/app.js\"));\r\n        Object html = nashorn.eval(\r\n          \"ReactDOMServer.renderToString(\" + \r\n            \"React.createElement(App, {data: [0,1,1]})\" + \r\n          \");\");\r\n        model.put(\"content\", String.valueOf(html));\r\n        return \"index\";\r\n    }\r\n}\r\n```","```\r\n<%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %>\r\n<html>\r\n<head>\r\n    <title>Hello React!</title>\r\n    <script type=\"text/javascript\" src=\"js/react.js\"></script>\r\n    <script type=\"text/javascript\" src=\"js/react-dom.js\"></script>\r\n    <script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-1.10.0.min.js\"></script>\r\n</head>\r\n<body>\r\n<div id=\"root\">${content}</div>\r\n<script type=\"text/javascript\" src=\"app.js\"></script>\r\n<script type=\"text/javascript\">\r\n\tReactDOM.render(\r\n        React.createElement(App, {data: [0,1,1]}),\r\n        document.getElementById(\"root\")\r\n    );\r\n</script>\r\n</body>\r\n</html>\r\n```","```\r\n@RestController\r\npublic class MyRestController {\r\n    @RequestMapping(\"/next/{last}/{secondLast}\")\r\n    public int index(\r\n      @PathVariable(\"last\") int last, \r\n      @PathVariable(\"secondLast\") int secondLast) throws Exception {\r\n        return last + secondLast;\r\n    }\r\n}\r\n```","```\r\n@SpringBootApplication\r\npublic class Application extends SpringBootServletInitializer {\r\n    @Override\r\n    protected SpringApplicationBuilder configure(SpringApplicationBuilder application) {\r\n        return application.sources(Application.class);\r\n    }\r\n    public static void main(String[] args) throws Exception {\r\n        SpringApplication.run(Application.class, args);\r\n    }\r\n}\r\n```"]