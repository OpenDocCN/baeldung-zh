["```\r\ndocker-compose up\r\n```","```\r\nversion: \"3.7\"\r\nservices:\r\n  ...\r\nvolumes:\r\n  ...\r\nnetworks:\r\n  ... \r\n```","```\r\nservices:\r\n  frontend:\r\n    image: my-vue-app\r\n    ...\r\n  backend:\r\n    image: my-springboot-app\r\n    ...\r\n  db:\r\n    image: postgres\r\n    ... \r\n```","```\r\nservices: \r\n  my-service:\r\n    image: ubuntu:latest\r\n    ... \r\n```","```\r\nservices: \r\n  my-custom-app:\r\n    build: /path/to/dockerfile/\r\n    ... \r\n```","```\r\nservices: \r\n  my-custom-app:\r\n    build: https://github.com/my-company/my-project.git\r\n    ... \r\n```","```\r\nservices: \r\n  my-custom-app:\r\n    build: https://github.com/my-company/my-project.git\r\n    image: my-project-image\r\n    ... \r\n```","```\r\nservices:\r\n  network-example-service:\r\n    image: karthequian/helloworld:latest\r\n    expose:\r\n      - \"80\" \r\n```","```\r\nservices:\r\n  network-example-service:\r\n    image: karthequian/helloworld:latest\r\n    ports:\r\n      - \"80:80\"\r\n    ...\r\n  my-custom-app:\r\n    image: myapp:latest\r\n    ports:\r\n      - \"8080:3000\"\r\n    ...\r\n  my-custom-app-replica:\r\n    image: myapp:latest\r\n    ports:\r\n      - \"8081:3000\"\r\n    ... \r\n```","```\r\nservices:\r\n  network-example-service:\r\n    image: karthequian/helloworld:latest\r\n    networks: \r\n      - my-shared-network\r\n    ...\r\n  another-service-in-the-same-network:\r\n    image: alpine:latest\r\n    networks: \r\n      - my-shared-network\r\n    ...\r\n  another-service-in-its-own-network:\r\n    image: alpine:latest\r\n    networks: \r\n      - my-private-network\r\n    ...\r\nnetworks:\r\n  my-shared-network: {}\r\n  my-private-network: {} \r\n```","```\r\nservices:\r\n  volumes-example-service:\r\n    image: alpine:latest\r\n    volumes: \r\n      - my-named-global-volume:/my-volumes/named-global-volume\r\n      - /tmp:/my-volumes/host-volume\r\n      - /home:/my-volumes/readonly-host-volume:ro\r\n    ...\r\n  another-volumes-example-service:\r\n    image: alpine:latest\r\n    volumes:\r\n      - my-named-global-volume:/another-path/the-same-named-global-volume\r\n    ...\r\nvolumes:\r\n  my-named-global-volume: \r\n```","```\r\nservices:\r\n  kafka:\r\n    image: wurstmeister/kafka:2.11-0.11.0.3\r\n    depends_on:\r\n      - zookeeper\r\n    ...\r\n  zookeeper:\r\n    image: wurstmeister/zookeeper\r\n    ... \r\n```","```\r\nservices:\r\n  database: \r\n    image: \"postgres:${POSTGRES_VERSION}\"\r\n    environment:\r\n      DB: mydb\r\n      USER: \"${USER}\" \r\n```","```\r\nPOSTGRES_VERSION=alpine\r\nUSER=foo\r\n```","```\r\nexport POSTGRES_VERSION=alpine\r\nexport USER=foo\r\ndocker-compose up \r\n```","```\r\nPOSTGRES_VERSION=alpine USER=foo docker-compose up \r\n```","```\r\nservices:\r\n  worker:\r\n    image: dockersamples/examplevotingapp_worker\r\n    networks:\r\n      - frontend\r\n      - backend\r\n    deploy:\r\n      mode: replicated\r\n      replicas: 6\r\n      resources:\r\n        limits:\r\n          cpus: '0.50'\r\n          memory: 50M\r\n        reservations:\r\n          cpus: '0.25'\r\n          memory: 20M\r\n      ... \r\n```","```\r\nDATAFLOW_VERSION=2.1.0.RELEASE SKIPPER_VERSION=2.0.2.RELEASE docker-compose up \r\n```","```\r\nlookup registry-1.docker.io: no such host\r\n```","```\r\ndocker-compose [-f <arg>...] [options] [COMMAND] [ARGS...] \r\n```","```\r\ndocker-compose up\r\n```","```\r\ndocker-compose start\r\n```","```\r\ndocker-compose -f custom-compose-file.yml start\r\n```","```\r\ndocker-compose up -d\r\n```","```\r\ndocker-compose stop\r\n```","```\r\ndocker-compose down\r\n```"]