["```\r\n@Test\r\npublic void whenPush_addsAtFirst() {\r\n    Deque<String> stack = new ArrayDeque<>();\r\n    stack.push(\"first\");\r\n    stack.push(\"second\");\r\n\r\n    assertEquals(\"second\", stack.getFirst());\r\n} \r\n```","```\r\n@Test\r\npublic void whenPop_removesLast() {\r\n    Deque<String> stack = new ArrayDeque<>();\r\n    stack.push(\"first\");\r\n    stack.push(\"second\");\r\n\r\n    assertEquals(\"second\", stack.pop());\r\n} \r\n```","```\r\n@Test\r\npublic void whenOffer_addsAtLast() {\r\n    Deque<String> queue = new ArrayDeque<>();\r\n    queue.offer(\"first\");\r\n    queue.offer(\"second\");\r\n\r\n    assertEquals(\"second\", queue.getLast());\r\n} \r\n```","```\r\n@Test\r\npublic void whenPoll_removesFirst() {\r\n    Deque<String> queue = new ArrayDeque<>();\r\n    queue.offer(\"first\");\r\n    queue.offer(\"second\");\r\n\r\n    assertEquals(\"first\", queue.poll());\r\n} \r\n```"]