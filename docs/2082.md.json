["```\r\ngrails create-app\r\n```","```\r\ngrails create-domain-class com.baeldung.grails.Student\r\n```","```\r\nclass Student {\r\n    String firstName\r\n    String lastName\r\n}\r\n```","```\r\ngrails create-service com.baeldung.grails.Student\r\n```","```\r\n@Transactional\r\nclass StudentService {\r\n\r\n    def get(id){\r\n        Student.get(id)\r\n    }\r\n\r\n    def list() {\r\n        Student.list()\r\n    }\r\n\r\n    def save(student){\r\n        student.save()\r\n    }\r\n\r\n    def delete(id){\r\n        Student.get(id).delete()\r\n    }\r\n}\r\n```","```\r\ngrails create-controller com.baeldung.grails.Student\r\n```","```\r\nclass StudentController {\r\n\r\n    def studentService\r\n\r\n    def index() {\r\n        respond studentService.list()\r\n    }\r\n\r\n    def show(Long id) {\r\n        respond studentService.get(id)\r\n    }\r\n\r\n    def create() {\r\n        respond new Student(params)\r\n    }\r\n\r\n    def save(Student student) {\r\n        studentService.save(student)\r\n        redirect action:\"index\", method:\"GET\"\r\n    }\r\n\r\n    def delete(Long id) {\r\n        studentService.delete(id)\r\n        redirect action:\"index\", method:\"GET\"\r\n    }\r\n}\r\n```","```\r\n<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <meta name=\"layout\" content=\"main\" />\r\n    </head>\r\n    <body>\r\n        <div class=\"nav\" role=\"navigation\">\r\n            <ul>\r\n                <li><g:link class=\"create\" action=\"create\">Create</g:link></li>\r\n            </ul>\r\n        </div>\r\n        <div id=\"list-student\" class=\"content scaffold-list\" role=\"main\">\r\n            <f:table collection=\"${studentList}\" \r\n                properties=\"['firstName', 'lastName']\" />\r\n        </div>\r\n    </body>\r\n</html>\r\n```","```\r\n<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <meta name=\"layout\" content=\"main\" />\r\n    </head>\r\n    <body>\r\n        <div id=\"create-student\" class=\"content scaffold-create\" role=\"main\">\r\n            <g:form resource=\"${this.student}\" method=\"POST\">\r\n                <fieldset class=\"form\">\r\n                    <f:all bean=\"student\"/>\r\n                </fieldset>\r\n                <fieldset class=\"buttons\">\r\n                    <g:submitButton name=\"create\" class=\"save\" value=\"Create\" />\r\n                </fieldset>\r\n            </g:form>\r\n        </div>\r\n    </body>\r\n</html>\r\n```","```\r\n<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <meta name=\"layout\" content=\"main\" />\r\n    </head>\r\n    <body>\r\n        <div class=\"nav\" role=\"navigation\">\r\n            <ul>\r\n                <li><g:link class=\"list\" action=\"index\">Students list</g:link></li>\r\n            </ul>\r\n        </div>\r\n        <div id=\"show-student\" class=\"content scaffold-show\" role=\"main\">\r\n            <f:display bean=\"student\" />\r\n            <g:form resource=\"${this.student}\" method=\"DELETE\">\r\n                <fieldset class=\"buttons\">\r\n                    <input class=\"delete\" type=\"submit\" value=\"delete\" />\r\n                </fieldset>\r\n            </g:form>\r\n        </div>\r\n    </body>\r\n</html>\r\n```","```\r\nvoid \"Test the index action returns the correct model\"() {\r\n    given:\r\n    controller.studentService = Mock(StudentService) {\r\n        list() >> [new Student(firstName: 'John',lastName: 'Doe')]\r\n    }\r\n\r\n    when:\"The index action is executed\"\r\n    controller.index()\r\n\r\n    then:\"The model is correct\"\r\n    model.studentList.size() == 1\r\n    model.studentList[0].firstName == 'John'\r\n    model.studentList[0].lastName == 'Doe'\r\n}\r\n```","```\r\nvoid \"Test the delete action with an instance\"() {\r\n    given:\r\n    controller.studentService = Mock(StudentService) {\r\n      1 * delete(2)\r\n    }\r\n\r\n    when:\"The domain instance is passed to the delete action\"\r\n    request.contentType = FORM_CONTENT_TYPE\r\n    request.method = 'DELETE'\r\n    controller.delete(2)\r\n\r\n    then:\"The user is redirected to index\"\r\n    response.redirectedUrl == '/student/index'\r\n}\r\n```","```\r\nprivate Long setupData() {\r\n    new Student(firstName: 'John',lastName: 'Doe')\r\n      .save(flush: true, failOnError: true)\r\n    new Student(firstName: 'Max',lastName: 'Foo')\r\n      .save(flush: true, failOnError: true)\r\n    Student student = new Student(firstName: 'Alex',lastName: 'Bar')\r\n      .save(flush: true, failOnError: true)\r\n    student.id\r\n}\r\n```","```\r\nvoid \"test list\"() {\r\n    setupData()\r\n\r\n    when:\r\n    List<Student> studentList = studentService.list()\r\n\r\n    then:\r\n    studentList.size() == 3\r\n    studentList[0].lastName == 'Doe'\r\n    studentList[1].lastName == 'Foo'\r\n    studentList[2].lastName == 'Bar'\r\n}\r\n```","```\r\nvoid \"test delete\"() {\r\n    Long id = setupData()\r\n\r\n    expect:\r\n    studentService.list().size() == 3\r\n\r\n    when:\r\n    studentService.delete(id)\r\n    sessionFactory.currentSession.flush()\r\n\r\n    then:\r\n    studentService.list().size() == 2\r\n}\r\n```","```\r\ngrails run-app\r\n```","```\r\ngrails war\r\n```"]