["```\r\n<dependencyManagement>\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.springframework.cloud</groupId>\r\n            <artifactId>spring-cloud-task-dependencies</artifactId>\r\n            <version>2.2.3.RELEASE</version>\r\n            <type>pom</type>\r\n            <scope>import</scope>\r\n        </dependency>\r\n    </dependencies>\r\n</dependencyManagement>\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.cloud</groupId>\r\n    <artifactId>spring-cloud-starter-task</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.cloud</groupId>\r\n    <artifactId>spring-cloud-task-core</artifactId>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-data-jpa</artifactId>\r\n    <version>2.6.1</version>\r\n</dependency>\r\n```","```\r\n@SpringBootApplication\r\n@EnableTask\r\npublic class TaskDemo {\r\n    // ...\r\n} \r\n```","```\r\n@Autowired\r\nprivate DataSource dataSource;\r\n\r\npublic class HelloWorldTaskConfigurer extends DefaultTaskConfigurer{\r\n    public HelloWorldTaskConfigurer(DataSource dataSource){\r\n        super(dataSource);\r\n    }\r\n}\r\n```","```\r\n@Bean\r\npublic HelloWorldTaskConfigurer getTaskConfigurer() {\r\n    return new HelloWorldTaskConfigurer(dataSource);\r\n}\r\n```","```\r\n@Component\r\npublic static class HelloWorldApplicationRunner \r\n  implements ApplicationRunner {\r\n\r\n    @Override\r\n    public void run(ApplicationArguments arg0) throws Exception {\r\n        System.out.println(\"Hello World from Spring Cloud Task!\");\r\n    }\r\n}\r\n```","```\r\n@Bean\r\npublic TaskListener taskListener() {\r\n    return new TaskListener();\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-batch</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.cloud</groupId>\r\n    <artifactId>spring-cloud-task-batch</artifactId>\r\n</dependency>\r\n```","```\r\n@Bean\r\npublic Job job2() {\r\n    return jobBuilderFactory.get(\"job2\")\r\n      .start(stepBuilderFactory.get(\"job2step1\")\r\n      .tasklet(new Tasklet(){\r\n          @Override\r\n          public RepeatStatus execute(\r\n            StepContribution contribution,\r\n            ChunkContext chunkContext) throws Exception {\r\n            System.out.println(\"This job is from Baeldung\");\r\n                return RepeatStatus.FINISHED;\r\n          }\r\n    }).build()).build();\r\n}\r\n```","```\r\n//..Other Annotation..\r\n@EnableBatchProcessing\r\npublic class TaskDemo {\r\n    // ...\r\n}\r\n```","```\r\n@SpringBootApplication\r\n@EnableTaskLauncher\r\npublic class StreamTaskSinkApplication {\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(TaskSinkApplication.class, args);\r\n    }\r\n}\r\n```","```\r\n@Bean\r\npublic TaskLauncher taskLauncher() {\r\n    return mock(TaskLauncher.class);\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.cloud</groupId>\r\n    <artifactId>spring-cloud-deployer-local</artifactId>\r\n    <version>2.3.1.RELEASE</version>\r\n</dependency>\r\n```","```\r\npublic class StreamTaskSinkApplicationTests {\r\n\r\n    @Autowired\r\n    private Sink sink; \r\n\r\n    //\r\n}\r\n```"]