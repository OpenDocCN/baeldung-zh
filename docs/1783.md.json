["```\r\n@Getter\r\n@Setter\r\npublic class StandardAccount {\r\n    private String name;\r\n    private BigDecimal balance;\r\n}\r\n```","```\r\n@Test\r\npublic void givenStandardAccount_thenUseStandardAccessors() {\r\n    StandardAccount account = new StandardAccount();\r\n    account.setName(\"Basic Accessors\");\r\n    account.setBalance(BigDecimal.TEN);\r\n\r\n    assertEquals(\"Basic Accessors\", account.getName());\r\n    assertEquals(BigDecimal.TEN, account.getBalance()); \r\n}\r\n```","```\r\n@Accessors(fluent = true)\r\n```","```\r\n@Accessors(fluent = true, chain = false)\r\n@Getter\r\n@Setter\r\npublic class FluentAccount {\r\n    private String name;\r\n    private BigDecimal balance;\r\n}\r\n```","```\r\n@Test\r\npublic void givenFluentAccount_thenUseFluentAccessors() {\r\n    FluentAccount account = new FluentAccount();\r\n    account.name(\"Fluent Account\");\r\n    account.balance(BigDecimal.TEN);\r\n\r\n    assertEquals(\"Fluent Account\", account.name()); \r\n    assertEquals(BigDecimal.TEN, account.balance());\r\n}\r\n```","```\r\n@Accessors(chain = true)\r\n```","```\r\n@Accessors(fluent = true, chain = true)\r\n@Getter \r\n@Setter \r\npublic class ChainedFluentAccount { \r\n    private String name; \r\n    private BigDecimal balance;\r\n} \r\n```","```\r\n@Accessors(fluent = true)\r\n```","```\r\n@Test\r\npublic void givenChainedFluentAccount_thenUseChainedFluentAccessors() {\r\n    ChainedFluentAccount account = new ChainedFluentAccount()\r\n      .name(\"Fluent Account\")\r\n      .balance(BigDecimal.TEN);\r\n\r\n    assertEquals(\"Fluent Account\", account.name()); \r\n    assertEquals(BigDecimal.TEN, account.balance());\r\n}\r\n```","```\r\npublic class PrefixedAccount { \r\n    private String sName; \r\n    private BigDecimal bdBalance; \r\n}\r\n```","```\r\n@Accessors(prefix = {\"s\", \"bd\"})\r\n@Getter\r\n@Setter\r\npublic class PrefixedAccount {\r\n    private String sName;\r\n    private BigDecimal bdBalance;\r\n}\r\n```","```\r\n@Test\r\npublic void givenPrefixedAccount_thenRemovePrefixFromAccessors() {\r\n    PrefixedAccount account = new PrefixedAccount();\r\n    account.setName(\"Prefixed Fields\");\r\n    account.setBalance(BigDecimal.TEN);\r\n\r\n    assertEquals(\"Prefixed Fields\", account.getName()); \r\n    assertEquals(BigDecimal.TEN, account.getBalance());\r\n}\r\n```","```\r\n@Accessors(prefix = \"s_\")\r\nprivate String s_notes;\r\n```","```\r\nlombok.accessors.chain=true\r\nlombok.accessors.fluent=true\r\n```"]