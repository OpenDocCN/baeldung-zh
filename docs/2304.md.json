["```\r\n@Configuration\r\n@EnableSwagger2\r\npublic class SwaggerConfig implements WebMvcConfigurer {\r\n\r\n    @Bean\r\n    public Docket api() {\r\n        return new Docket(DocumentationType.SWAGGER_2).select()\r\n                .apis(RequestHandlerSelectors.basePackage(\"com.baeldung\"))\r\n                .paths(PathSelectors.regex(\"/.*\"))\r\n                .build();\r\n    }\r\n\r\n    @Override\r\n    public void addResourceHandlers(ResourceHandlerRegistry registry) {\r\n        registry.addResourceHandler(\"swagger-ui.html\")\r\n                .addResourceLocations(\"classpath:/META-INF/resources/\");\r\n        registry.addResourceHandler(\"/webjars/**\")\r\n                .addResourceLocations(\"classpath:/META-INF/resources/webjars/\");\r\n    }\r\n}\r\n```","```\r\n@Profile({\"!prod && swagger\"})\r\n```","```\r\n@Configuration \r\n@Profile({\"!prod && swagger\"})\r\n@EnableSwagger2 \r\npublic class SwaggerConfig implements WebMvcConfigurer {\r\n    ...\r\n}\r\n```","```\r\n -Dspring.profiles.active=prod // Swagger is disabled\r\n\r\n  -Dspring.profiles.active=prod,anyOther // Swagger is disabled\r\n\r\n  -Dspring.profiles.active=swagger // Swagger is enabled\r\n\r\n  -Dspring.profiles.active=swagger,anyOtherNotProd // Swagger is enabled\r\n\r\n  none // Swagger is disabled\r\n```","```\r\n@Configuration\r\n@ConditionalOnExpression(value = \"${useSwagger:false}\")\r\n@EnableSwagger2\r\npublic class SwaggerConfig implements WebMvcConfigurer {\r\n    ...\r\n}\r\n```","```\r\n-DuseSwagger=true\r\n```","```\r\n我们应该注意，这个例子没有包括任何保证我们的生产实例不会意外地将`useSwagger`设置为`true`的方法。\r\n5.避免陷阱\r\n\r\n如果启用 Swagger 是一个安全问题，那么我们需要选择一个防错但易于使用的策略。\r\n\r\n当我们使用`@Profile`时，一些 SpEL 表达式可能会违背这些目标:\r\n\r\n```","```\r\n\r\n```","```\r\n\r\n```","```\r\n\r\n这就是为什么我们的`@Profile`示例使用了:\r\n\r\n```","```\r\n\r\n这种解决方案可能是最严格的，因为它默认禁用 Swagger **，并保证在** `**“prod”**. `中不能启用 \r\n\r\n **## 6.结论\r\n\r\n在本文中，我们研究了在生产中**禁用招摇** **的解决方案。**\r\n\r\n我们看了如何通过`@Profile`和`@ConditionalOnExpression`注释切换打开 Swagger 的 bean。我们还考虑了如何防止错误配置和不希望的缺省。\r\n\r\n和往常一样，本文的示例代码可以在 GitHub 上找到[。](https://web.archive.org/web/20220630142743/https://github.com/eugenp/tutorials/tree/master/spring-web-modules/spring-rest-http-2)** \r\n```"]