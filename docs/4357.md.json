["```\r\n<dependency>\r\n    <groupId>org.jgotesting</groupId>\r\n    <artifactId>jgotesting</artifactId>\r\n    <version>0.12</version>\r\n</dependency>\r\n```","```\r\nimport static org.jgotesting.Assert.*; // same methods as JUnit\r\nimport static org.jgotesting.Check.*; // aliases starting with \"check\"\r\nimport static org.jgotesting.Testing.*;\r\n```","```\r\npublic class JGoTestingUnitTest {\r\n\r\n    @Rule\r\n    public final JGoTestRule test = new JGoTestRule();\r\n\r\n    //...\r\n}\r\n```","```\r\n@Test\r\npublic void whenComparingIntegers_thenEqual() {\r\n    int anInt = 10;\r\n\r\n    assertEquals(anInt, 10);\r\n    checkEquals(anInt, 10);\r\n}\r\n```","```\r\n@Test\r\npublic void whenComparingStrings_thenMultipleFailingAssertions() {\r\n    String aString = \"The test string\";\r\n    String anotherString = \"The test String\";\r\n\r\n    checkEquals(\"Strings are not equal!\", aString, equalTo(anotherString));\r\n    checkTrue(\"String is longer than one character\", aString.length() == 1);\r\n    checkTrue(\"A failing message\", aString.length() == 2);\r\n}\r\n```","```\r\norg.junit.ComparisonFailure: Strings are not equal!\r\n  expected:<[the test s]tring> but was:<[The Test S]tring>\r\n// ...\r\njava.lang.AssertionError: String is longer than one character\r\n// ...\r\njava.lang.AssertionError: Strings are not the same\r\n  expected the same:<the test string> was not:<The Test String>\r\n```","```\r\n@Test\r\npublic void whenComparingNumbers_thenLoggedMessage() {\r\n    log(\"There was something wrong when comparing numbers\");\r\n\r\n    int anInt = 10;\r\n    int anotherInt = 10;\r\n\r\n    checkEquals(anInt, 10);\r\n    checkTrue(\"First number should be bigger\", 10 > anotherInt);\r\n    checkSame(anInt, anotherInt);\r\n}\r\n```","```\r\norg.jgotesting.events.LogMessage: There was something wrong\r\n  when comparing numbers\r\n// ...\r\njava.lang.AssertionError: First number should be bigger\r\n```","```\r\n@Test\r\npublic void givenFile_whenDoesnotExists_thenTerminated() throws Exception {\r\n    File aFile = new File(\"a_dummy_file.txt\");\r\n\r\n    terminateIf(aFile.exists(), is(false));\r\n\r\n    // this doesn't get executed\r\n    checkEquals(aFile.getName(), \"a_dummy_file.txt\");\r\n}\r\n```","```\r\n@Test\r\npublic void whenComparingStrings_thenMultipleAssertions() {\r\n    String aString = \"This is a string\";\r\n    String anotherString = \"This Is a String\";\r\n\r\n    test.check(aString, equalToIgnoringCase(anotherString))\r\n      .check(aString.length() == 16)\r\n      .check(aString.startsWith(\"This\"));\r\n}\r\n```","```\r\n@Test\r\npublic void givenChecker_whenComparingStrings_thenEqual() throws Exception {\r\n    Checker<String> aChecker = s -> s.matches(\"\\\\d+\");\r\n\r\n    String aString = \"1235\";\r\n\r\n    test.check(aString, aChecker);\r\n}\r\n```"]