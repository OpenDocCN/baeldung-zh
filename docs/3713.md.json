["```\r\nboolean[] ba = new boolean[10_000];\r\nSystem.out.println(ClassLayout.parseInstance(ba).toPrintable());\r\n```","```\r\n[Z object internals:\r\n OFFSET  SIZE      TYPE DESCRIPTION               VALUE\r\n      0     4           (object header)           01 00 00 00 (1)\r\n      4     4           (object header)           00 00 00 00 (0)\r\n      8     4           (object header)           05 00 00 f8 (-134217723)\r\n     12     4           (object header)           10 27 00 00 (10000)\r\n     16 10000   boolean [Z.                       N/A\r\nInstance size: 10016 bytes\r\n```","```\r\nBitSet bitSet = new BitSet(10_000);\r\nSystem.out.println(GraphLayout.parseInstance(bitSet).toPrintable());\r\n```","```\r\n[[emailÂ protected]](/web/20220625224428/https://www.baeldung.com/cdn-cgi/l/email-protection) object externals:\r\n          ADDRESS       SIZE TYPE             PATH      \r\n        76beb8190         24 java.util.BitSet           \r\n        76beb81a8       1272 [J               .words \r\n```","```\r\nPath path = Paths.get(\"footprint.csv\");\r\ntry (BufferedWriter stream = Files.newBufferedWriter(path, StandardOpenOption.CREATE)) {\r\n    stream.write(\"bits,bool,bitset\\n\");\r\n\r\n    for (int i = 0; i <= 10_000_000; i += 500) {\r\n        System.out.println(\"Number of bits => \" + i);\r\n\r\n        boolean[] ba = new boolean[i];\r\n        BitSet bitSet = new BitSet(i);\r\n\r\n        long baSize = ClassLayout.parseInstance(ba).instanceSize();\r\n        long bitSetSize = GraphLayout.parseInstance(bitSet).totalSize();\r\n\r\n        stream.write((i + \",\" + baSize + \",\" + bitSetSize + \"\\n\"));\r\n\r\n        if (i % 10_000 == 0) {\r\n            stream.flush();\r\n        }\r\n    }\r\n}\r\n```","```\r\n@State(Scope.Benchmark)\r\n@BenchmarkMode(Mode.Throughput)\r\npublic class VectorOfBitsBenchmark {\r\n\r\n    private boolean[] array;\r\n    private BitSet bitSet;\r\n\r\n    @Param({\"100\", \"1000\", \"5000\", \"50000\", \"100000\", \"1000000\", \"2000000\", \"3000000\",\r\n      \"5000000\", \"7000000\", \"10000000\", \"20000000\", \"30000000\", \"50000000\", \"70000000\", \"1000000000\"})\r\n    public int size;\r\n\r\n    @Setup(Level.Trial)\r\n    public void setUp() {\r\n        array = new boolean[size];\r\n        for (int i = 0; i < array.length; i++) {\r\n            array[i] = ThreadLocalRandom.current().nextBoolean();\r\n        }\r\n\r\n        bitSet = new BitSet(size);\r\n        for (int i = 0; i < size; i++) {\r\n            bitSet.set(i, ThreadLocalRandom.current().nextBoolean());\r\n        }\r\n    }\r\n\r\n    // omitted benchmarks\r\n}\r\n```","```\r\n@Benchmark\r\npublic boolean getBoolArray() {\r\n    return array[ThreadLocalRandom.current().nextInt(size)];\r\n}\r\n\r\n@Benchmark\r\npublic boolean getBitSet() {\r\n    return bitSet.get(ThreadLocalRandom.current().nextInt(size));\r\n}\r\n```","```\r\n$ java -jar jmh-1.0-SNAPSHOT.jar -f2 -t4 -prof perfnorm -rff get.csv getBitSet getBoolArray\r\n```","```\r\n\"Benchmark\",\"Mode\",\"Threads\",\"Samples\",\"Score\",\"Score Error (99.9%)\",\"Unit\",\"Param: size\"\r\n\"getBitSet\",\"thrpt\",4,40,184790139.562014,2667066.521846,\"ops/s\",100\r\n\"getBitSet:L1-dcache-load-misses\",\"thrpt\",4,2,0.002467,NaN,\"#/op\",100\r\n\"getBitSet:L1-dcache-loads\",\"thrpt\",4,2,19.050243,NaN,\"#/op\",100\r\n\"getBitSet:L1-dcache-stores\",\"thrpt\",4,2,6.042285,NaN,\"#/op\",100\r\n\"getBitSet:L1-icache-load-misses\",\"thrpt\",4,2,0.002206,NaN,\"#/op\",100\r\n\"getBitSet:branch-misses\",\"thrpt\",4,2,0.000451,NaN,\"#/op\",100\r\n\"getBitSet:branches\",\"thrpt\",4,2,12.985709,NaN,\"#/op\",100\r\n\"getBitSet:dTLB-load-misses\",\"thrpt\",4,2,0.000194,NaN,\"#/op\",100\r\n\"getBitSet:dTLB-loads\",\"thrpt\",4,2,19.132320,NaN,\"#/op\",100\r\n\"getBitSet:dTLB-store-misses\",\"thrpt\",4,2,0.000034,NaN,\"#/op\",100\r\n\"getBitSet:dTLB-stores\",\"thrpt\",4,2,6.035930,NaN,\"#/op\",100\r\n\"getBitSet:iTLB-load-misses\",\"thrpt\",4,2,0.000246,NaN,\"#/op\",100\r\n\"getBitSet:iTLB-loads\",\"thrpt\",4,2,0.000417,NaN,\"#/op\",100\r\n\"getBitSet:instructions\",\"thrpt\",4,2,90.781944,NaN,\"#/op\",100\r\n```","```\r\n@Benchmark\r\npublic void setBoolArray() {\r\n    int index = ThreadLocalRandom.current().nextInt(size);\r\n    array[index] = true;\r\n}\r\n\r\n@Benchmark\r\npublic void setBitSet() {\r\n    int index = ThreadLocalRandom.current().nextInt(size);\r\n    bitSet.set(index);\r\n}\r\n```","```\r\n$ java -jar jmh-1.0-SNAPSHOT.jar -f2 -t4 -prof perfnorm -rff set.csv setBitSet setBoolArray\r\n```","```\r\n@Benchmark\r\npublic int cardinalityBoolArray() {\r\n    int sum = 0;\r\n    for (boolean b : array) {\r\n        if (b) sum++;\r\n    }\r\n\r\n    return sum;\r\n}\r\n\r\n@Benchmark\r\npublic int cardinalityBitSet() {\r\n    return bitSet.cardinality();\r\n}\r\n```","```\r\n$ java -jar jmh-1.0-SNAPSHOT.jar -f2 -t4 -prof perfnorm -rff cardinal.csv cardinalityBitSet cardinalityBoolArray\r\n```","```\r\nif (b) {\r\n    sum++;\r\n}\r\n```"]