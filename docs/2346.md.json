["```\r\npublic class TestBOM {\r\n    public static void main(String ...args){\r\n        System.out.println(\"BOM Test\");\r\n    }\r\n}\r\n```","```\r\n$ javac ./TestBOM.java\r\n```","```\r\n∩╗┐public class TestBOM {\r\n ^\r\n.\\TestBOM.java:1: error: illegal character: '\\u00bf'\r\n∩╗┐public class TestBOM {\r\n  ^\r\n2 errors\r\n```","```\r\n@Test\r\npublic void whenInputFileHasBOM_thenUseInputStream() throws IOException {\r\n    String line;\r\n    String actual = \"\";\r\n    try (BufferedReader br = new BufferedReader(new InputStreamReader(file))) {\r\n        while ((line = br.readLine()) != null) {\r\n            actual += line;\r\n        }\r\n    }\r\n    assertEquals(expected, actual);\r\n}\r\n```","```\r\norg.opentest4j.AssertionFailedError: expected: <Hello world with BOM.> but was: <Hello world with BOM.>\r\nExpected :Hello world with BOM.\r\nActual   :Hello world with BOM.\r\n```","```\r\n@Test\r\npublic void whenInputFileHasBOM_thenUseInputStreamWithReplace() throws IOException {\r\n    String line;\r\n    String actual = \"\";\r\n    try (BufferedReader br = new BufferedReader(new InputStreamReader(file))) {\r\n        while ((line = br.readLine()) != null) {\r\n            actual += line.replace(\"\\uFEFF\", \"\");\r\n        }\r\n    }\r\n    assertEquals(expected, actual);\r\n}\r\n```","```\r\n@Test\r\npublic void whenInputFileHasBOM_thenUseBOMInputStream() throws IOException {\r\n    String line;\r\n    String actual = \"\";\r\n    ByteOrderMark[] byteOrderMarks = new ByteOrderMark[] { \r\n      ByteOrderMark.UTF_8, ByteOrderMark.UTF_16BE, ByteOrderMark.UTF_16LE, ByteOrderMark.UTF_32BE, ByteOrderMark.UTF_32LE\r\n    };\r\n    InputStream inputStream = new BOMInputStream(ioStream, false, byteOrderMarks);\r\n    Reader reader = new InputStreamReader(inputStream);\r\n    BufferedReader br = new BufferedReader(reader);\r\n    while ((line = br.readLine()) != null) {\r\n        actual += line;\r\n    }\r\n    assertEquals(expected, actual);\r\n}\r\n```","```\r\n@Test\r\npublic void whenInputFileHasBOM_thenUseGoogleGdata() throws IOException {\r\n    char[] actual = new char[21];\r\n    try (Reader r = new UnicodeReader(ioStream, null)) {\r\n        r.read(actual);\r\n    }\r\n    assertEquals(expected, String.valueOf(actual));\r\n}\r\n```"]