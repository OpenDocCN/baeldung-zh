["```\r\npublic final class Cat {\r\n\r\n    private int weight;\r\n\r\n    // standard getter and setter\r\n}\r\n```","```\r\npublic class BlackCat extends Cat {\r\n}\r\n```","```\r\nThe type BlackCat cannot subclass the final class Cat\r\n```","```\r\nCat cat = new Cat();\r\ncat.setWeight(1);\r\n\r\nassertEquals(1, cat.getWeight()); \r\n```","```\r\npublic class Dog {\r\n    public final void sound() {\r\n        // ...\r\n    }\r\n}\r\n```","```\r\npublic class BlackDog extends Dog {\r\n    public void sound() {\r\n    }\r\n}\r\n```","```\r\n- overrides\r\ncom.baeldung.finalkeyword.Dog.sound\r\n- Cannot override the final method from Dog\r\nsound() method is final and canâ€™t be overridden\r\n```","```\r\npublic void whenFinalVariableAssign_thenOnlyOnce() {\r\n    final int i = 1;\r\n    //...\r\n    i=2;\r\n}\r\n```","```\r\nThe final local variable i may already have been assigned\r\n```","```\r\nfinal Cat cat = new Cat();\r\n```","```\r\nThe final local variable cat cannot be assigned. It must be blank and not using a compound assignment\r\n```","```\r\ncat.setWeight(5);\r\n\r\nassertEquals(5, cat.getWeight());\r\n```","```\r\nstatic final int MAX_WIDTH = 999;\r\n```","```\r\npublic void methodWithFinalArguments(final int x) {\r\n    x=1;\r\n}\r\n```","```\r\nThe final local variable x cannot be assigned. It must be blank and not using a compound assignment\r\n```"]