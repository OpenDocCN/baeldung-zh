["```\r\n<dependencies>\r\n    <dependency>\r\n        <groupId>org.springframework.boot</groupId>\r\n        <artifactId>spring-boot-starter-data-jpa</artifactId>\r\n    </dependency>\r\n    <dependency>\r\n        <groupId>com.h2database</groupId>\r\n        <artifactId>h2</artifactId>\r\n    </dependency>\r\n</dependencies>\r\n```","```\r\n@Bean(initMethod = \"start\", destroyMethod = \"stop\")\r\npublic Server inMemoryH2DatabaseaServer() throws SQLException {\r\n    return Server.createTcpServer(\r\n      \"-tcp\", \"-tcpAllowOthers\", \"-tcpPort\", \"9090\");\r\n}\r\n```","```\r\nspring.datasource.url=jdbc:h2:mem:mydb\r\nspring.datasource.driverClassName=org.h2.Driver\r\nspring.datasource.username=sa\r\nspring.datasource.password=\r\nspring.jpa.hibernate.ddl-auto=create\r\n```","```\r\n@SpringBootApplication\r\npublic class SpringBootApp {\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(SpringBootApp.class, args);\r\n    }\r\n}\r\n```","```\r\n@PostConstruct\r\nprivate void initDb() {\r\n    String sqlStatements[] = {\r\n      \"drop table employees if exists\",\r\n      \"create table employees(id serial,first_name varchar(255),last_name varchar(255))\",\r\n      \"insert into employees(first_name, last_name) values('Eugen','Paraschiv')\",\r\n      \"insert into employees(first_name, last_name) values('Scott','Tiger')\"\r\n    };\r\n\r\n    Arrays.asList(sqlStatements).forEach(sql -> {\r\n        jdbcTemplate.execute(sql);\r\n    });\r\n\r\n    // Query test data and print results\r\n}\r\n```","```\r\nspring.datasource.url=jdbc:h2:tcp://localhost:9090/mem:mydb\r\nspring.datasource.driverClassName=org.h2.Driver\r\nspring.datasource.username=sa\r\nspring.datasource.password=\r\nspring.jpa.hibernate.ddl-auto=create\r\n```","```\r\n@SpringBootApplication\r\npublic class ClientSpringBootApp {\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(ClientSpringBootApp.class, args);\r\n    }\r\n\r\n    @PostConstruct\r\n    private void initDb() {\r\n        String sqlStatements[] = {\r\n          \"insert into employees(first_name, last_name) values('Donald','Trump')\",\r\n          \"insert into employees(first_name, last_name) values('Barack','Obama')\"\r\n        };\r\n\r\n        Arrays.asList(sqlStatements).forEach(sql -> {\r\n            jdbcTemplate.execute(sql);\r\n        });\r\n\r\n        // Fetch data using SELECT statement and print results\r\n    } \r\n}\r\n```","```\r\n****** Creating table: Employees, and Inserting test data ******\r\ndrop table employees if exists\r\ncreate table employees(id serial,first_name varchar(255),last_name varchar(255))\r\ninsert into employees(first_name, last_name) values('Eugen','Paraschiv')\r\ninsert into employees(first_name, last_name) values('Scott','Tiger')\r\n****** Fetching from table: Employees ******\r\nid:1,first_name:Eugen,last_name:Paraschiv\r\nid:2,first_name:Scott,last_name:Tiger\r\n```","```\r\n****** Inserting more test data in the table: Employees ******\r\ninsert into employees(first_name, last_name) values('Donald','Trump')\r\ninsert into employees(first_name, last_name) values('Barack','Obama')\r\n****** Fetching from table: Employees ******\r\nid:1,first_name:Eugen,last_name:Paraschiv\r\nid:2,first_name:Scott,last_name:Tiger\r\nid:3,first_name:Donald,last_name:Trump\r\nid:4,first_name:Barack,last_name:Obama\r\n```"]