["```\r\nprivate static final Pattern[] inputRegexes = new Pattern[4];\r\n\r\nstatic {\r\n    inputRegexes[0] = Pattern.compile(\".*[A-Z].*\");\r\n    inputRegexes[1] = Pattern.compile(\".*[a-z].*\");\r\n    inputRegexes[2] = Pattern.compile(\".*\\\\d.*\");\r\n    inputRegexes[3] = Pattern.compile(\".*[`[[email protected]](/web/20220626205753/https://www.baeldung.com/cdn-cgi/l/email-protection)#$%^&*()\\\\-_=+\\\\\\\\|\\\\[{\\\\]};:'\\\",<.>/?].*\");\r\n}\r\n```","```\r\nprivate static boolean isMatchingRegex(String input) {\r\n    boolean inputMatches = true;\r\n    for (Pattern inputRegex : inputRegexes) {\r\n        if (!inputRegex.matcher(input).matches()) {\r\n            inputMatches = false;\r\n        }\r\n    }\r\n    return inputMatches;\r\n}\r\n```","```\r\nString regex = \"^(?=.*?\\\\p{Lu})(?=.*?\\\\p{Ll})(?=.*?\\\\d)\" +\r\n    \"(?=.*?[`[[email protected]](/web/20220626205753/https://www.baeldung.com/cdn-cgi/l/email-protection)#$%^&*()\\\\-_=+\\\\\\\\|\\\\[{\\\\]};:'\\\",<.>/?]).*$\";\r\n```","```\r\n@Test\r\npublic void givenSingleRegex_whenMatchingCorrectString_thenMatches() {\r\n    String validInput = \"Ab3;\";\r\n    assertTrue(Pattern.compile(regex).matcher(validInput).matches());\r\n}\r\n```","```\r\nprivate static boolean checkString(String input) {\r\n    String specialChars = \"~`[[email protected]](/web/20220626205753/https://www.baeldung.com/cdn-cgi/l/email-protection)#$%^&*()-_=+\\\\|[{]};:'\\\",<.>/?\";\r\n    char currentCharacter;\r\n    boolean numberPresent = false;\r\n    boolean upperCasePresent = false;\r\n    boolean lowerCasePresent = false;\r\n    boolean specialCharacterPresent = false;\r\n\r\n    for (int i = 0; i < input.length(); i++) {\r\n        currentCharacter = input.charAt(i);\r\n        if (Character.isDigit(currentCharacter)) {\r\n            numberPresent = true;\r\n        } else if (Character.isUpperCase(currentCharacter)) {\r\n            upperCasePresent = true;\r\n        } else if (Character.isLowerCase(currentCharacter)) {\r\n            lowerCasePresent = true;\r\n        } else if (specialChars.contains(String.valueOf(currentCharacter))) {\r\n            specialCharacterPresent = true;\r\n        }\r\n    }\r\n\r\n    return\r\n      numberPresent && upperCasePresent && lowerCasePresent && specialCharacterPresent;\r\n}\r\n```"]