["```\r\n<dependency>\r\n    <groupId>com.google.http-client</groupId>\r\n    <artifactId>google-http-client</artifactId>\r\n    <version>1.23.0</version>\r\n</dependency>\r\n```","```\r\nHttpRequestFactory requestFactory\r\n  = new NetHttpTransport().createRequestFactory();\r\nHttpRequest request = requestFactory.buildGetRequest(\r\n  new GenericUrl(\"https://github.com\"));\r\nString rawResponse = request.execute().parseAsString()\r\n```","```\r\npublic class GitHubExample {\r\n    static HttpTransport HTTP_TRANSPORT = new NetHttpTransport();\r\n}\r\n```","```\r\npublic class GitHubExample {\r\n    static HttpTransport HTTP_TRANSPORT = new ApacheHttpTransport();\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>com.google.http-client</groupId>\r\n    <artifactId>google-http-client-jackson2</artifactId>\r\n    <version>1.23.0</version>\r\n</dependency>\r\n```","```\r\npublic class GitHubExample {\r\n\r\n    static HttpTransport HTTP_TRANSPORT = new NetHttpTransport();\r\n    staticJsonFactory JSON_FACTORY = new JacksonFactory();\r\n}\r\n```","```\r\npublic class User {\r\n\r\n    @Key\r\n    private String login;\r\n    @Key\r\n    private long id;\r\n    @Key(\"email\")\r\n    private String email;\r\n\r\n    // standard getters and setters\r\n}\r\n```","```\r\npublic class User extends GenericJson {\r\n    //...\r\n}\r\n```","```\r\npublic class GitHubExample {\r\n\r\n    static HttpTransport HTTP_TRANSPORT = new NetHttpTransport();\r\n    static JsonFactory JSON_FACTORY = new JacksonFactory();\r\n\r\n    private static void run() throws Exception {\r\n        HttpRequestFactory requestFactory \r\n          = HTTP_TRANSPORT.createRequestFactory(\r\n            (HttpRequest request) -> {\r\n              request.setParser(new JsonObjectParser(JSON_FACTORY));\r\n          });\r\n    }\r\n}\r\n```","```\r\npublic class GitHubUrl extends GenericUrl {\r\n\r\n    public GitHubUrl(String encodedUrl) {\r\n        super(encodedUrl);\r\n    }\r\n\r\n    @Key\r\n    public int per_page;\r\n\r\n}\r\n```","```\r\nprivate static void run() throws Exception {\r\n    HttpRequestFactory requestFactory\r\n      = HTTP_TRANSPORT.createRequestFactory(\r\n        (HttpRequest request) -> {\r\n          request.setParser(new JsonObjectParser(JSON_FACTORY));\r\n        });\r\n    GitHubUrl url = new GitHubUrl(\"https://api.github.com/users\");\r\n    url.per_page = 10;\r\n    HttpRequest request = requestFactory.buildGetRequest(url);\r\n    Type type = new TypeToken<List<User>>() {}.getType();\r\n    List<User> users = (List<User>)request\r\n      .execute()\r\n      .parseAs(type);\r\n}\r\n```","```\r\nHttpHeaders headers = request.getHeaders();\r\nheaders.setUserAgent(\"Baeldung Client\");\r\nheaders.set(\"Time-Zone\", \"Europe/Amsterdam\");\r\n```","```\r\nExponentialBackOff backoff = new ExponentialBackOff.Builder()\r\n  .setInitialIntervalMillis(500)\r\n  .setMaxElapsedTimeMillis(900000)\r\n  .setMaxIntervalMillis(6000)\r\n  .setMultiplier(1.5)\r\n  .setRandomizationFactor(0.5)\r\n  .build();\r\nrequest.setUnsuccessfulResponseHandler(\r\n  new HttpBackOffUnsuccessfulResponseHandler(backoff));\r\n```","```\r\nhandlers = java.util.logging.ConsoleHandler\r\njava.util.logging.ConsoleHandler.level = ALL\r\ncom.google.api.client.http.level = ALL\r\n```","```\r\n-Djava.util.logging.config.file=logging.properties\r\n```","```\r\n-------------- REQUEST  --------------\r\nGET https://api.github.com/users?page=1&per;_page=10\r\nAccept-Encoding: gzip\r\nUser-Agent: Google-HTTP-Java-Client/1.23.0 (gzip)\r\n\r\nNov 12, 2017 6:43:15 PM com.google.api.client.http.HttpRequest execute\r\ncurl -v --compressed -H 'Accept-Encoding: gzip' -H 'User-Agent: Google-HTTP-Java-Client/1.23.0 (gzip)' -- 'https://api.github.com/users?page=1&per;_page=10'\r\nNov 12, 2017 6:43:16 PM com.google.api.client.http.HttpResponse \r\n-------------- RESPONSE --------------\r\nHTTP/1.1 200 OK\r\nStatus: 200 OK\r\nTransfer-Encoding: chunked\r\nServer: GitHub.com\r\nAccess-Control-Allow-Origin: *\r\n...\r\nLink: <https://api.github.com/users?page=1&per;_page=10&since;=19>; rel=\"next\", <https://api.github.com/users{?since}>; rel=\"first\"\r\nX-GitHub-Request-Id: 8D6A:1B54F:3377D97:3E37B36:5A08DC93\r\nContent-Type: application/json; charset=utf-8\r\n...\r\n```"]