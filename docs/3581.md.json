["```\r\n@GetMapping(\"/process-blocking\")\r\npublic ResponseEntity<?> handleReqSync(Model model) { \r\n    // ...\r\n    return ResponseEntity.ok(\"ok\");\r\n}\r\n```","```\r\n@GetMapping(\"/async-deferredresult\")\r\npublic DeferredResult<ResponseEntity<?>> handleReqDefResult(Model model) {\r\n    LOG.info(\"Received async-deferredresult request\");\r\n    DeferredResult<ResponseEntity<?>> output = new DeferredResult<>();\r\n\r\n    ForkJoinPool.commonPool().submit(() -> {\r\n        LOG.info(\"Processing in separate thread\");\r\n        try {\r\n            Thread.sleep(6000);\r\n        } catch (InterruptedException e) {\r\n        }\r\n        output.setResult(ResponseEntity.ok(\"ok\"));\r\n    });\r\n\r\n    LOG.info(\"servlet thread freed\");\r\n    return output;\r\n}\r\n```","```\r\n[nio-8080-exec-6] com.baeldung.controller.AsyncDeferredResultController: \r\nReceived async-deferredresult request\r\n[nio-8080-exec-6] com.baeldung.controller.AsyncDeferredResultController: \r\nServlet thread freed\r\n[nio-8080-exec-6] java.lang.Thread : Processing in separate thread\r\n```","```\r\ndeferredResult.onCompletion(() -> LOG.info(\"Processing complete\"));\r\n```","```\r\nDeferredResult<ResponseEntity<?>> deferredResult = new DeferredResult<>(500l);\r\n\r\ndeferredResult.onTimeout(() -> \r\n  deferredResult.setErrorResult(\r\n    ResponseEntity.status(HttpStatus.REQUEST_TIMEOUT)\r\n      .body(\"Request timeout occurred.\")));\r\n```","```\r\nForkJoinPool.commonPool().submit(() -> {\r\n    LOG.info(\"Processing in separate thread\");\r\n    try {\r\n        Thread.sleep(6000);\r\n    } catch (InterruptedException e) {\r\n        ...\r\n    }\r\n    deferredResult.setResult(ResponseEntity.ok(\"OK\")));\r\n});\r\n```","```\r\n[nio-8080-exec-6] com.baeldung.controller.DeferredResultController: \r\nservlet thread freed\r\n[nio-8080-exec-6] java.lang.Thread: Processing in separate thread\r\n[nio-8080-exec-6] com.baeldung.controller.DeferredResultController: \r\nRequest timeout occurred\r\n```","```\r\ndeferredResult.onError((Throwable t) -> {\r\n    deferredResult.setErrorResult(\r\n      ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)\r\n        .body(\"An error occurred.\"));\r\n});\r\n```"]