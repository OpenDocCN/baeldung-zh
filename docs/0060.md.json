["```\r\nspring:\r\n  datasource:\r\n    url: ...\r\n    username: ...\r\n    password: ...\r\n    driverClassname: ...\r\n```","```\r\n@ConfigurationProperties(prefix = \"spring.datasource\")\r\npublic class DataSourceProperties implements BeanClassLoaderAware, InitializingBean {\r\n\r\n    // ...\r\n\r\n    /**\r\n     * Fully qualified name of the JDBC driver. Auto-detected based on the URL by default.\r\n     */\r\n    private String driverClassName;\r\n\r\n    /**\r\n     * JDBC URL of the database.\r\n     */\r\n    private String url;\r\n\r\n    /**\r\n     * Login username of the database.\r\n     */\r\n    private String username;\r\n\r\n    /**\r\n     * Login password of the database.\r\n     */\r\n    private String password;\r\n\r\n    // ...\r\n\r\n}\r\n```","```\r\n@Configuration\r\npublic class TodoDatasourceConfiguration {\r\n\r\n    @Bean\r\n    @ConfigurationProperties(\"spring.datasource.todos\")\r\n    public DataSourceProperties todosDataSourceProperties() {\r\n        return new DataSourceProperties();\r\n    }\r\n\r\n    @Bean\r\n    @ConfigurationProperties(\"spring.datasource.topics\")\r\n    public DataSourceProperties topicsDataSourceProperties() {\r\n        return new DataSourceProperties();\r\n    }\r\n\r\n}\r\n```","```\r\nspring:\r\n  datasource:\r\n    todos:\r\n      url: ...\r\n      username: ...\r\n      password: ...\r\n      driverClassName: ...\r\n    topics:\r\n      url: ...\r\n      username: ...\r\n      password: ...\r\n      driverClassName: ...\r\n```","```\r\n@Bean\r\npublic DataSource todosDataSource() {\r\n    return todosDataSourceProperties()\r\n      .initializeDataSourceBuilder()\r\n      .build();\r\n}\r\n\r\n@Bean\r\npublic DataSource topicsDataSource() {\r\n    return topicsDataSourceProperties()\r\n      .initializeDataSourceBuilder()\r\n      .build();\r\n}\r\n```","```\r\n@Bean\r\npublic JdbcTemplate todosJdbcTemplate(@Qualifier(\"todosDataSource\") DataSource dataSource) {\r\n    return new JdbcTemplate(dataSource);\r\n}\r\n\r\n@Bean\r\npublic JdbcTemplate topicsJdbcTemplate(@Qualifier(\"topicsDataSource\") DataSource dataSource) {\r\n    return new JdbcTemplate(dataSource);\r\n} \r\n```","```\r\n@Autowired\r\n@Qualifier(\"topicsJdbcTemplate\")\r\nJdbcTemplate jdbcTemplate;\r\n```","```\r\npublic interface TodoRepository extends JpaRepository<Todo, Long> {}\r\n```","```\r\n@Configuration\r\n@EnableTransactionManagement\r\n@EnableJpaRepositories(\r\n  basePackageClasses = Todo.class,\r\n  entityManagerFactoryRef = \"todosEntityManagerFactory\",\r\n  transactionManagerRef = \"todosTransactionManager\"\r\n)\r\npublic class TodoJpaConfiguration {\r\n\r\n    @Bean\r\n    public LocalContainerEntityManagerFactoryBean todosEntityManagerFactory(\r\n      Qualifier(\"todosDataSource\") DataSource dataSource,\r\n      EntityManagerFactoryBuilder builder) {\r\n        return builder\r\n          .dataSource(todosDataSource())\r\n          .packages(Todo.class)\r\n          .build();\r\n    }\r\n\r\n    @Bean\r\n    public PlatformTransactionManager todosTransactionManager(\r\n      @Qualifier(\"todosEntityManagerFactory\") LocalContainerEntityManagerFactoryBean todosEntityManagerFactory) {\r\n        return new JpaTransactionManager(Objects.requireNonNull(todosEntityManagerFactory.getObject()));\r\n    }\r\n\r\n}\r\n```","```\r\n@Bean\r\n@ConfigurationProperties(\"spring.datasource.todos.hikari\")\r\npublic DataSource todosDataSource() {\r\n    return todosDataSourceProperties()\r\n      .initializeDataSourceBuilder()\r\n      .build();\r\n}\r\n```","```\r\nspring.datasource.todos.hikari.connectionTimeout=30000 \r\nspring.datasource.todos.hikari.idleTimeout=600000 \r\nspring.datasource.todos.hikari.maxLifetime=1800000 \r\n```"]