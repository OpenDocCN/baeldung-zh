["```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-data-jpa</artifactId>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>com.h2database</groupId>\r\n    <artifactId>h2</artifactId>\r\n    <scope>runtime</scope>\r\n</dependency>\r\n```","```\r\nspring.h2.console.enabled=true\r\n```","```\r\n@Entity\r\npublic class Book {\r\n\r\n    @Id\r\n    @GeneratedValue\r\n    private Long id;\r\n    private String name;\r\n\r\n    // standard constructors\r\n\r\n    // standard getters and setters\r\n}\r\n```","```\r\ninsert into book values(1, 'The Tartar Steppe');\r\ninsert into book values(2, 'Poem Strip');\r\ninsert into book values(3, 'Restless Nights: Selected Stories of Dino Buzzati');\r\n```","```\r\n@Repository\r\npublic interface BookRepository extends JpaRepository<Book, Long> {\r\n}\r\n```","```\r\n@Service\r\npublic class BookService {\r\n\r\n    @Autowired\r\n    private BookRepository bookRepository;\r\n\r\n    public List<Book> list() {\r\n        return bookRepository.findAll();\r\n    }\r\n}\r\n```","```\r\n@RunWith(SpringRunner.class)\r\n@SpringBootTest\r\npublic class BookServiceUnitTest {\r\n\r\n    @Autowired\r\n    private BookService bookService;\r\n\r\n    @Test\r\n    public void whenApplicationStarts_thenHibernateCreatesInitialRecords() {\r\n        List<Book> books = bookService.list();\r\n\r\n        Assert.assertEquals(books.size(), 3);\r\n    }\r\n}\r\n```","```\r\n@Entity(name=\"BOOK\")\r\npublic class Book {\r\n    // members, standard getters and setters\r\n}\r\n```","```\r\nspring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl\r\n```"]