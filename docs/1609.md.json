["```\r\nList mockedList = mock(List.class);\r\n```","```\r\npublic static <T> T mock(Class<T> classToMock) {\r\n    return mock(classToMock, withSettings());\r\n}\r\n```","```\r\npublic static MockSettings withSettings() {\r\n    return new MockSettingsImpl().defaultAnswer(RETURNS_DEFAULTS);\r\n}\r\n```","```\r\nPizzaService service = mock(PizzaService.class);\r\nPizza pizza = service.orderHouseSpecial();\r\nPizzaSize size = pizza.getSize();\r\n```","```\r\nPizzaService pizzaService = mock(PizzaService.class, withSettings().defaultAnswer(RETURNS_SMART_NULLS));\r\n```","```\r\norg.mockito.exceptions.verification.SmartNullPointerException: \r\nYou have a NullPointerException here:\r\n-> at com.baeldung.mockito.mocksettings.MockSettingsUnitTest.whenServiceMockedWithSmartNulls_thenExceptionHasExtraInfo(MockSettingsUnitTest.java:45)\r\nbecause this method call was *not* stubbed correctly:\r\n-> at com.baeldung.mockito.mocksettings.MockSettingsUnitTest.whenServiceMockedWithSmartNulls_thenExceptionHasExtraInfo(MockSettingsUnitTest.java:44)\r\npizzaService.orderHouseSpecial();\r\n```","```\r\nPizzaService service = mock(PizzaService.class, withSettings()\r\n  .name(\"pizzaServiceMock\")\r\n  .verboseLogging()\r\n  .defaultAnswer(RETURNS_SMART_NULLS));\r\n```","```\r\npizzaServiceMock.orderHouseSpecial();\r\n   invoked: -> at com.baeldung.mockito.mocksettings.MockSettingsUnitTest.whenServiceMockedWithNameAndVerboseLogging_thenLogsMethodInvocations(MockSettingsUnitTest.java:36)\r\n   has returned: \"Mock for Pizza, hashCode: 366803687\" (com.baeldung.mockito.fluentapi.Pizza$MockitoMock$168951489)\r\n```","```\r\npublic interface SpecialInterface {\r\n    // Public methods\r\n}\r\n```","```\r\npublic class SimpleService {\r\n\r\n    public SimpleService(SpecialInterface special) {\r\n        Runnable runnable = (Runnable) special;\r\n        runnable.run();\r\n    }\r\n    // More service methods\r\n}\r\n```","```\r\nSpecialInterface specialMock = mock(SpecialInterface.class);\r\nSimpleService service = new SimpleService(specialMock);\r\n```","```\r\nSpecialInterface specialMock = mock(SpecialInterface.class, withSettings()\r\n  .extraInterfaces(Runnable.class));\r\n```","```\r\n@Test\r\npublic void whenMockSetupWithConstructor_thenConstructorIsInvoked() {\r\n    AbstractCoffee coffeeSpy = mock(AbstractCoffee.class, withSettings()\r\n      .useConstructor(\"espresso\")\r\n      .defaultAnswer(CALLS_REAL_METHODS));\r\n\r\n    assertEquals(\"Coffee name: \", \"espresso\", coffeeSpy.getName());\r\n}\r\n```"]