["```\r\nCalendar calendar = Calendar.getInstance(locale); \r\ncalendar.set(year, month, day); \r\nint weekOfYear = calendar.get(Calendar.WEEK_OF_YEAR);\r\n```","```\r\n@Test\r\npublic void givenDateUsingFieldsAndLocaleItaly_whenGetWeekNumber_thenWeekIsReturnedCorrectly() {\r\n    Calendar calendar = Calendar.getInstance(Locale.ITALY);\r\n    calendar.set(2020, 10, 22);\r\n\r\n    assertEquals(47, calendar.get(Calendar.WEEK_OF_YEAR));\r\n}\r\n```","```\r\nCalendar calendar = Calendar.getInstance();\r\ncalendar.setFirstDayOfWeek(firstDayOfWeek);\r\ncalendar.setMinimalDaysInFirstWeek(minimalDaysInFirstWeek);\r\ncalendar.set(year, month, day);\r\n\r\nint weekOfYear = calendar.get(Calendar.WEEK_OF_YEAR); \r\n```","```\r\n@Test\r\npublic void givenDateUsingFieldsAndLocaleCanada_whenGetWeekNumber_thenWeekIsReturnedCorrectly() {\r\n    Calendar calendar = Calendar.getInstance(Locale.CANADA);\r\n    calendar.set(2020, 10, 22);\r\n\r\n    assertEquals(48, calendar.get(Calendar.WEEK_OF_YEAR));\r\n} \r\n```","```\r\nLocalDate date = LocalDate.of(year, month, day);\r\nint weekOfYear = date.get(WeekFields.of(locale).weekOfYear()); \r\n```","```\r\nLocalDate date = LocalDate.of(year, month, day);\r\nint weekOfYear = date.get(ChronoField.ALIGNED_WEEK_OF_YEAR); \r\n```"]