["```\r\n<dependency>\r\n    <groupId>org.datanucleus</groupId>\r\n    <artifactId>javax.jdo</artifactId>\r\n    <version>3.2.0-m6</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.datanucleus</groupId>\r\n    <artifactId>datanucleus-core</artifactId>\r\n    <version>5.1.0-m2</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.datanucleus</groupId>\r\n    <artifactId>datanucleus-api-jdo</artifactId>\r\n    <version>5.1.0-m2</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.datanucleus</groupId>\r\n    <artifactId>datanucleus-rdbms</artifactId>\r\n    <version>5.1.0-m2</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.datanucleus</groupId>\r\n    <artifactId>datanucleus-xml</artifactId>\r\n    <version>5.0.0-release</version>\r\n</dependency> \r\n```","```\r\n@PersistenceCapable\r\npublic class Product {\r\n\r\n    @PrimaryKey\r\n    @Persistent(valueStrategy = IdGeneratorStrategy.INCREMENT)\r\n    long id;\r\n\r\n    String name;\r\n    Double price = 0.0;\r\n\r\n    // standard constructors, getters, setters\r\n}\r\n```","```\r\nmvn datanucleus:enhance\r\n```","```\r\n<plugin>\r\n    <groupId>org.datanucleus</groupId>\r\n    <artifactId>datanucleus-maven-plugin</artifactId>\r\n    <version>5.0.2</version>\r\n    <configuration>\r\n        <api>JDO</api>\r\n        <props>${basedir}/datanucleus.properties</props>\r\n        <log4jConfiguration>${basedir}/log4j.properties</log4jConfiguration>\r\n        <verbose>true</verbose>\r\n    </configuration>\r\n    <executions>\r\n        <execution>\r\n            <phase>process-classes</phase>\r\n            <goals>\r\n                <goal>enhance</goal>\r\n            </goals>\r\n        </execution>\r\n    </executions>\r\n</plugin>\r\n```","```\r\nPersistenceManagerFactory pmf = new JDOPersistenceManagerFactory(pumd, null);\r\nPersistenceManager pm = pmf.getPersistenceManager(); \r\n```","```\r\nTransaction tx = pm.currentTransaction();\r\n```","```\r\nProduct product = new Product(\"Tablet\", 80.0);\r\npm.makePersistent(product);\r\n```","```\r\nfinally {\r\n    if (tx.isActive()) {\r\n        tx.rollback();\r\n    }\r\n    pm.close();\r\n}\r\n```","```\r\nPersistenceUnitMetaData pumd = new PersistenceUnitMetaData(\r\n  \"dynamic-unit\", \"RESOURCE_LOCAL\", null);\r\npumd.addClassName(\"com.baeldung.jdo.Product\");\r\npumd.setExcludeUnlistedClasses();\r\npumd.addProperty(\"javax.jdo.option.ConnectionDriverName\", \"org.h2.Driver\");\r\npumd\r\n  .addProperty(\"javax.jdo.option.ConnectionURL\", \"jdbc:h2:mem:mypersistence\");\r\npumd.addProperty(\"javax.jdo.option.ConnectionUserName\", \"sa\");\r\npumd.addProperty(\"javax.jdo.option.ConnectionPassword\", \"\");\r\npumd.addProperty(\"datanucleus.autoCreateSchema\", \"true\");\r\n```","```\r\nQuery q = pm.newQuery(\r\n  \"SELECT FROM \" + Product.class.getName() + \" WHERE price < 1\");\r\nList<Product> products = (List<Product>) q.execute();\r\nIterator<Product> iter = products.iterator();\r\nwhile (iter.hasNext()) {\r\n    Product p = iter.next();\r\n    // show the product information\r\n} \r\n```","```\r\nQuery query = pm.newQuery(Product.class, \"name == \\\"Phone\\\"\");\r\nCollection result = (Collection) query.execute();\r\nProduct product = (Product) result.iterator().next();\r\nproduct.setName(\"Android Phone\"); \r\n```","```\r\nQuery query = pm.newQuery(Product.class, \"name == \\\"Android Phone\\\"\");\r\nCollection result = (Collection) query.execute();\r\nProduct product = (Product) result.iterator().next();\r\npm.deletePersistent(product); \r\n```","```\r\npumdXML.addProperty(\"javax.jdo.option.ConnectionURL\", \"xml:file:myPersistence.xml\");\r\n```","```\r\n@PersistenceCapable()\r\npublic class ProductXML {\r\n\r\n    @XmlAttribute\r\n    private long productNumber = 0;\r\n    @PrimaryKey\r\n    private String name = null;\r\n    private Double price = 0.0;\r\n\r\n    // standard getters and setters\r\n```","```\r\nProductXML productXML = new ProductXML(0,\"Tablet\", 80.0);\r\npm.makePersistent(productXML);\r\n```","```\r\n<productXML productNumber=\"0\">\r\n    <name>Tablet</name>\r\n    <price>80.0</price>\r\n</productXML>\r\n```","```\r\nQuery q = pm.newQuery(\"SELECT FROM \" + ProductXML.class.getName());\r\nList<ProductXML> products = (List<ProductXML>) q.execute();\r\n```","```\r\nQuery qDJDOQL = pm.newQuery(Product.class);\r\nqDJDOQL.setFilter(\"name == 'Tablet' && price == price_value\");\r\nqDJDOQL.declareParameters(\"double price_value\");\r\nList<Product> resultsqDJDOQL = qDJDOQL.setParameters(80.0).executeList();\r\n```","```\r\nQuery query = pm.newQuery(\"javax.jdo.query.SQL\", \"SELECT * FROM PRODUCT\");\r\nquery.setClass(Product.class);\r\nList<Product> results = query.executeList();\r\n```","```\r\nQuery q = pm.newQuery(\"JPQL\",\r\n  \"SELECT p FROM \" + Product.class.getName() + \" p WHERE p.name = 'Laptop'\");\r\nList results = (List) q.execute();\r\n```"]