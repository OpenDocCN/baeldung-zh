["```\r\n@Override\r\nprotected void configure(final HttpSecurity http) throws Exception {\r\n    ...\r\n    .antMatchers(\"/\").hasAnyAuthority(\"ROLE_USER\")\r\n    ...\r\n}\r\n```","```\r\n<http use-expressions=\"true\">\r\n    <intercept-url pattern=\"/\"\r\n      access=\"hasAuthority('ROLE_USER')\"/>\r\n    ...\r\n</http>\r\n```","```\r\npublic class MinuteBasedVoter implements AccessDecisionVoter {\r\n   ...\r\n}\r\n```","```\r\n@Override\r\npublic int vote(\r\n  Authentication authentication, Object object, Collection collection) {\r\n    return authentication.getAuthorities().stream()\r\n      .map(GrantedAuthority::getAuthority)\r\n      .filter(r -> \"ROLE_USER\".equals(r) \r\n        && LocalDateTime.now().getMinute() % 2 != 0)\r\n      .findAny()\r\n      .map(s -> ACCESS_DENIED)\r\n      .orElseGet(() -> ACCESS_ABSTAIN);\r\n}\r\n```","```\r\n@Override\r\npublic boolean supports(ConfigAttribute attribute) {\r\n    return true;\r\n}\r\n```","```\r\n@Override\r\npublic boolean supports(Class clazz) {\r\n    return true;\r\n}\r\n```","```\r\n@Configuration\r\n@EnableWebSecurity\r\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\r\n...\r\n}\r\n\r\n```","```\r\n@Bean\r\npublic AccessDecisionManager accessDecisionManager() {\r\n    List<AccessDecisionVoter<? extends Object>> decisionVoters \r\n      = Arrays.asList(\r\n        new WebExpressionVoter(),\r\n        new RoleVoter(),\r\n        new AuthenticatedVoter(),\r\n        new MinuteBasedVoter());\r\n    return new UnanimousBased(decisionVoters);\r\n}\r\n```","```\r\n@Override\r\nprotected void configure(HttpSecurity http) throws Exception {\r\n    http\r\n    ...\r\n    .anyRequest()\r\n    .authenticated()\r\n    .accessDecisionManager(accessDecisionManager());\r\n}\r\n\r\n```","```\r\n<http access-decision-manager-ref=\"accessDecisionManager\">\r\n  <intercept-url\r\n    pattern=\"/**\"\r\n    access=\"hasAnyRole('ROLE_ADMIN', 'ROLE_USER')\"/>\r\n  ...\r\n</http>\r\n```","```\r\n<beans:bean\r\n  id=\"minuteBasedVoter\"\r\n  class=\"org.baeldung.voter.MinuteBasedVoter\"/>\r\n\r\n```","```\r\n<beans:bean \r\n  id=\"accessDecisionManager\" \r\n  class=\"org.springframework.security.access.vote.UnanimousBased\">\r\n    <beans:constructor-arg>\r\n        <beans:list>\r\n            <beans:bean class=\r\n              \"org.springframework.security.web.access.expression.WebExpressionVoter\"/>\r\n            <beans:bean class=\r\n              \"org.springframework.security.access.vote.AuthenticatedVoter\"/>\r\n            <beans:bean class=\r\n              \"org.springframework.security.access.vote.RoleVoter\"/>\r\n            <beans:bean class=\r\n              \"org.baeldung.voter.MinuteBasedVoter\"/>\r\n        </beans:list>\r\n    </beans:constructor-arg>\r\n</beans:bean>\r\n\r\n```","```\r\n<authentication-manager>\r\n    <authentication-provider>\r\n        <user-service>\r\n            <user name=\"user\" password=\"pass\" authorities=\"ROLE_USER\"/>\r\n            <user name=\"admin\" password=\"pass\" authorities=\"ROLE_ADMIN\"/>\r\n        </user-service>\r\n    </authentication-provider>\r\n</authentication-manager>\r\n```","```\r\n@Configuration\r\n@ImportResource({\"classpath:spring-security.xml\"})\r\npublic class XmlSecurityConfig {\r\n    public XmlSecurityConfig() {\r\n        super();\r\n    }\r\n}\r\n```","```\r\nhttp://localhost:8080/spring-security-custom-permissions/login\r\n```"]