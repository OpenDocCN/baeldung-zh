["```\r\npublic class Car {\r\n    private String name;\r\n    private String engine;\r\n\r\n    public static int numberOfCars;\r\n\r\n    public Car(String name, String engine) {\r\n        this.name = name;\r\n        this.engine = engine;\r\n        numberOfCars++;\r\n    }\r\n\r\n    // getters and setters\r\n}\r\n```","```\r\n@Test\r\npublic void whenNumberOfCarObjectsInitialized_thenStaticCounterIncreases() {\r\n    new Car(\"Jaguar\", \"V8\");\r\n    new Car(\"Bugatti\", \"W16\");\r\n\r\n    assertEquals(2, Car.numberOfCars);\r\n}\r\n```","```\r\nstatic void setNumberOfCars(int numberOfCars) {\r\n    Car.numberOfCars = numberOfCars;\r\n}\r\n```","```\r\npublic class StaticBlockDemo {\r\n    public static List<String> ranks = new LinkedList<>();\r\n\r\n    static {\r\n        ranks.add(\"Lieutenant\");\r\n        ranks.add(\"Captain\");\r\n        ranks.add(\"Major\");\r\n    }\r\n\r\n    static {\r\n        ranks.add(\"Colonel\");\r\n        ranks.add(\"General\");\r\n    }\r\n}\r\n```","```\r\npublic class Singleton  {\r\n    private Singleton() {}\r\n\r\n    private static class SingletonHolder {\r\n        public static final Singleton instance = new Singleton();\r\n    }\r\n\r\n    public static Singleton getInstance() {\r\n        return SingletonHolder.instance;\r\n    }\r\n}\r\n```","```\r\npublic class MyClass { \r\n    int instanceVariable = 0; \r\n\r\n    public static void staticMethod() { \r\n        System.out.println(instanceVariable); \r\n    } \r\n\r\n    public static void main(String[] args) {\r\n        MyClass.staticMethod();\r\n    }\r\n} \r\n```"]