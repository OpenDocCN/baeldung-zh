["```\r\n@Configuration\r\npublic class SpringBootSecurityConfiguration \r\n  extends WebSecurityConfigurerAdapter {\r\n    @Override\r\n    public void configure(HttpSecurity http) throws Exception {\r\n        http.csrf().disable();\r\n    }\r\n}\r\n```","```\r\n@Configuration\r\npublic class SpringSecurityConfiguration extends WebSecurityConfigurerAdapter {\r\n    @Override\r\n    public void configure(HttpSecurity http) throws Exception {\r\n        http.csrf().csrfTokenRepository(CookieCsrfTokenRepository.withHttpOnlyFalse());\r\n    }\r\n}\r\n```","```\r\n<logger name=\"org.springframework.security.web.csrf\" level=\"DEBUG\" />\r\n```","```\r\nInvalid CSRF token found for http://...\r\n```","```\r\nCsrfToken token = (CsrfToken) request.getAttribute(\"_csrf\");\r\nLOGGER.info(\"{}={}\", token.getHeaderName(), token.getToken());\r\n```","```\r\nconst csrfToken = document.cookie.replace(/(?:(?:^|.*;\\s*)XSRF-TOKEN\\s*\\=\\s*([^;]*).*$)|^.*$/, '$1');\r\n```","```\r\nfetch(url, {\r\n    method: 'POST',\r\n    body: JSON.stringify({ /* data to send */ }),\r\n    headers: { 'X-XSRF-TOKEN': csrfToken },\r\n})\r\n```"]