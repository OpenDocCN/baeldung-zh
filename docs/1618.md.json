["```\r\n@Entity\r\npublic class Person {\r\n\r\n    @Id\r\n    @GeneratedValue\r\n    private Long id;\r\n\r\n    private String name;\r\n\r\n    // getters and setters\r\n\r\n}\r\n```","```\r\npublic interface PersonRepository extends JpaRepository<Person, Long> {\r\n\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-data-rest</artifactId>\r\n</dependency>\r\n```","```\r\n{\r\n    \"_embedded\" : {\r\n        \"persons\" : [ {\r\n            \"name\" : \"John Doe\",\r\n            \"_links\" : {\r\n                \"self\" : {\r\n                    \"href\" : \"http://localhost:8080/persons/1\"\r\n                },\r\n                \"person\" : {\r\n                    \"href\" : \"http://localhost:8080/persons/1{?projection}\",\r\n                    \"templated\" : true\r\n                }\r\n            }\r\n        }, ...]\r\n    ...\r\n}\r\n```","```\r\n@Configuration\r\npublic class RestConfiguration implements RepositoryRestConfigurer {\r\n\r\n    @Override\r\n    public void configureRepositoryRestConfiguration(\r\n      RepositoryRestConfiguration config, CorsRegistry cors) {\r\n        config.exposeIdsFor(Person.class);\r\n    }\r\n}\r\n```","```\r\n@Configuration\r\npublic class RestConfiguration extends RepositoryRestConfigurerAdapter {\r\n    @Override\r\n    public void configureRepositoryRestConfiguration(RepositoryRestConfiguration config) {\r\n        config.exposeIdsFor(Person.class);\r\n    }\r\n}\r\n```","```\r\n{\r\n    \"_embedded\" : {\r\n        \"persons\" : [ {\r\n            \"id\" : 1,\r\n            \"name\" : \"John Doe\",\r\n            \"_links\" : {\r\n                \"self\" : {\r\n                    \"href\" : \"http://localhost:8080/persons/1\"\r\n                },\r\n                \"person\" : {\r\n                    \"href\" : \"http://localhost:8080/persons/1{?projection}\",\r\n                    \"templated\" : true\r\n                }\r\n            }\r\n        }, ...]\r\n    ...\r\n}\r\n```","```\r\n@Configuration\r\npublic class RestConfiguration implements RepositoryRestConfigurer {\r\n\r\n    @Autowired\r\n    private EntityManager entityManager;\r\n\r\n    @Override\r\n    public void configureRepositoryRestConfiguration(\r\n      RepositoryRestConfiguration config, CorsRegistry cors) {\r\n        Class[] classes = entityManager.getMetamodel()\r\n          .getEntities().stream().map(Type::getJavaType).toArray(Class[]::new);\r\n        config.exposeIdsFor(classes);\r\n    }\r\n}\r\n```","```\r\n@Projection(name = \"person-view\", types = Person.class)\r\npublic interface PersonView {\r\n\r\n    Long getId();\r\n\r\n    String getName();\r\n\r\n}\r\n```","```\r\n{\r\n    \"_embedded\" : {\r\n        \"persons\" : [ {\r\n            \"id\" : 1,\r\n            \"name\" : \"John Doe\",\r\n            \"_links\" : {\r\n                \"self\" : {\r\n                    \"href\" : \"http://localhost:8080/persons/1\"\r\n                },\r\n                \"person\" : {\r\n                    \"href\" : \"http://localhost:8080/persons/1{?projection}\",\r\n                    \"templated\" : true\r\n                }\r\n            }\r\n        }, ...]\r\n    ...\r\n}\r\n```","```\r\n@RepositoryRestResource(excerptProjection = PersonView.class)\r\npublic interface PersonRepository extends JpaRepository<Person, Long> {\r\n\r\n} \r\n```","```\r\n{\r\n    ...            \r\n    \"persons\" : [ {\r\n        \"name\" : \"John Doe\",\r\n        \"id\" : 1,\r\n        ...\r\n    }, ...]\r\n    ...\r\n}\r\n```","```\r\n@JsonPropertyOrder({\"id\", \"name\"})\r\n@Projection(name = \"person-view\", types = Person.class)\r\npublic interface PersonView { \r\n    //...\r\n}\r\n```","```\r\npublic class PersonDto {\r\n\r\n    private Long id;\r\n\r\n    private String name;\r\n\r\n    public PersonDto(Person person) {\r\n        this.id = person.getId();\r\n        this.name = person.getName();\r\n    }\r\n\r\n    // getters and setters\r\n}\r\n```","```\r\n@RepositoryRestController\r\npublic class PersonController {\r\n\r\n    @Autowired\r\n    private PersonRepository repository;\r\n\r\n    @GetMapping(\"/persons\")\r\n    ResponseEntity<?> persons(PagedResourcesAssembler resourcesAssembler) {\r\n        Page<Person> persons = this.repository.findAll(Pageable.ofSize(20));\r\n        Page<PersonDto> personDtos = persons.map(PersonDto::new);\r\n        PagedModel<EntityModel<PersonDto>> pagedModel = resourcesAssembler.toModel(personDtos);\r\n        return ResponseEntity.ok(pagedModel);\r\n    }\r\n\r\n}\r\n```","```\r\n{\r\n    \"_embedded\" : {\r\n        \"personDtoes\" : [ {\r\n            \"id\" : 1,\r\n            \"name\" : \"John Doe\"\r\n        }, ...]\r\n    }, ...\r\n}\r\n```"]