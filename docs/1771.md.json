["```\r\n<dependency>\r\n    <groupId>org.apache.poi</groupId>\r\n    <artifactId>poi-ooxml</artifactId>\r\n    <version>3.15</version>\r\n</dependency>\r\n```","```\r\npublic static String logo = \"logo-leaf.png\";\r\npublic static String paragraph1 = \"poi-word-para1.txt\";\r\npublic static String paragraph2 = \"poi-word-para2.txt\";\r\npublic static String paragraph3 = \"poi-word-para3.txt\";\r\npublic static String output = \"rest-with-spring.docx\";\r\n```","```\r\npublic String convertTextFileToString(String fileName) {\r\n    try (Stream<String> stream \r\n      = Files.lines(Paths.get(ClassLoader.getSystemResource(fileName).toURI()))) {\r\n\r\n        return stream.collect(Collectors.joining(\" \"));\r\n    } catch (IOException | URISyntaxException e) {\r\n        return null;\r\n    }\r\n}\r\n```","```\r\nXWPFDocument document = new XWPFDocument();\r\n```","```\r\nXWPFParagraph title = document.createParagraph();\r\ntitle.setAlignment(ParagraphAlignment.CENTER);\r\n```","```\r\nXWPFRun titleRun = title.createRun();\r\ntitleRun.setText(\"Build Your REST API with Spring\");\r\ntitleRun.setColor(\"009933\");\r\ntitleRun.setBold(true);\r\ntitleRun.setFontFamily(\"Courier\");\r\ntitleRun.setFontSize(20);\r\n```","```\r\nXWPFParagraph subTitle = document.createParagraph();\r\nsubTitle.setAlignment(ParagraphAlignment.CENTER);\r\n```","```\r\nXWPFRun subTitleRun = subTitle.createRun();\r\nsubTitleRun.setText(\"from HTTP fundamentals to API Mastery\");\r\nsubTitleRun.setColor(\"00CC44\");\r\nsubTitleRun.setFontFamily(\"Courier\");\r\nsubTitleRun.setFontSize(16);\r\nsubTitleRun.setTextPosition(20);\r\nsubTitleRun.setUnderline(UnderlinePatterns.DOT_DOT_DASH);\r\n```","```\r\nXWPFParagraph image = document.createParagraph();\r\nimage.setAlignment(ParagraphAlignment.CENTER);\r\n```","```\r\nXWPFRun imageRun = image.createRun();\r\nimageRun.setTextPosition(20);\r\n```","```\r\nPath imagePath = Paths.get(ClassLoader.getSystemResource(logo).toURI());\r\nimageRun.addPicture(Files.newInputStream(imagePath),\r\n  XWPFDocument.PICTURE_TYPE_PNG, imagePath.getFileName().toString(),\r\n  Units.toEMU(50), Units.toEMU(50));\r\n```","```\r\nXWPFParagraph para1 = document.createParagraph();\r\npara1.setAlignment(ParagraphAlignment.BOTH);\r\nString string1 = convertTextFileToString(paragraph1);\r\nXWPFRun para1Run = para1.createRun();\r\npara1Run.setText(string1);\r\n```","```\r\nXWPFParagraph para2 = document.createParagraph();\r\npara2.setAlignment(ParagraphAlignment.RIGHT);\r\nString string2 = convertTextFileToString(paragraph2);\r\nXWPFRun para2Run = para2.createRun();\r\npara2Run.setText(string2);\r\npara2Run.setItalic(true);\r\n\r\nXWPFParagraph para3 = document.createParagraph();\r\npara3.setAlignment(ParagraphAlignment.LEFT);\r\nString string3 = convertTextFileToString(paragraph3);\r\nXWPFRun para3Run = para3.createRun();\r\npara3Run.setText(string3);\r\n```","```\r\nFileOutputStream out = new FileOutputStream(output);\r\ndocument.write(out);\r\nout.close();\r\ndocument.close();\r\n```","```\r\nstatic WordDocument wordDocument;\r\n```","```\r\n@BeforeClass\r\npublic static void generateMSWordFile() throws Exception {\r\n    WordTest.wordDocument = new WordDocument();\r\n    wordDocument.handleSimpleDoc();\r\n}\r\n```","```\r\nPath msWordPath = Paths.get(WordDocument.output);\r\nXWPFDocument document = new XWPFDocument(Files.newInputStream(msWordPath));\r\nList<XWPFParagraph> paragraphs = document.getParagraphs();\r\ndocument.close();\r\n```","```\r\nXWPFParagraph title = paragraphs.get(0);\r\nXWPFRun titleRun = title.getRuns().get(0);\r\n\r\nassertEquals(\"Build Your REST API with Spring\", title.getText());\r\nassertEquals(\"009933\", titleRun.getColor());\r\nassertTrue(titleRun.isBold());\r\nassertEquals(\"Courier\", titleRun.getFontFamily());\r\nassertEquals(20, titleRun.getFontSize());\r\n```","```\r\nassertEquals(\"from HTTP fundamentals to API Mastery\",\r\n  paragraphs.get(1).getText());\r\nassertEquals(\"What makes a good API?\", paragraphs.get(3).getText());\r\nassertEquals(wordDocument.convertTextFileToString\r\n  (WordDocument.paragraph1), paragraphs.get(4).getText());\r\nassertEquals(wordDocument.convertTextFileToString\r\n  (WordDocument.paragraph2), paragraphs.get(5).getText());\r\nassertEquals(wordDocument.convertTextFileToString\r\n  (WordDocument.paragraph3), paragraphs.get(6).getText());\r\n```"]