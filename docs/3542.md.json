["```\r\n@Document\r\npublic class User {\r\n    @Id\r\n    private String id;\r\n    private String name;\r\n    private Integer age;\r\n\r\n    // standard getters and setters\r\n}\r\n```","```\r\nQuery query = new Query();\r\nquery.fields().include(\"name\").exclude(\"id\");\r\nList<User> john = mongoTemplate.find(query, User.class);\r\n```","```\r\n@Query(value=\"{}\", fields=\"{name : 1, _id : 0}\")\r\nList<User> findNameAndExcludeId();\r\n```","```\r\nMatchOperation matchStage = Aggregation.match(new Criteria(\"foo\").is(\"bar\"));\r\nProjectionOperation projectStage = Aggregation.project(\"foo\", \"bar.baz\");\r\n\r\nAggregation aggregation \r\n  = Aggregation.newAggregation(matchStage, projectStage);\r\n\r\nAggregationResults<OutType> output \r\n  = mongoTemplate.aggregate(aggregation, \"foobar\", OutType.class);\r\n```","```\r\n{\r\n    \"_id\" : \"01001\",\r\n    \"city\" : \"AGAWAM\",\r\n    \"loc\" : [\r\n        -72.622739,\r\n        42.070206\r\n    ],\r\n    \"pop\" : 15338,\r\n    \"state\" : \"MA\"\r\n}\r\n```","```\r\npublic class StatePoulation {\r\n\r\n    @Id\r\n    private String state;\r\n    private Integer statePop;\r\n\r\n    // standard getters and setters\r\n}\r\n```","```\r\nGroupOperation groupByStateAndSumPop = group(\"state\")\r\n  .sum(\"pop\").as(\"statePop\");\r\nMatchOperation filterStates = match(new Criteria(\"statePop\").gt(10000000));\r\nSortOperation sortByPopDesc = sort(Sort.by(Direction.DESC, \"statePop\"));\r\n\r\nAggregation aggregation = newAggregation(\r\n  groupByStateAndSumPop, filterStates, sortByPopDesc);\r\nAggregationResults<StatePopulation> result = mongoTemplate.aggregate(\r\n  aggregation, \"zips\", StatePopulation.class);\r\n```","```\r\nGroupOperation sumTotalCityPop = group(\"state\", \"city\")\r\n  .sum(\"pop\").as(\"cityPop\");\r\nGroupOperation averageStatePop = group(\"_id.state\")\r\n  .avg(\"cityPop\").as(\"avgCityPop\");\r\nSortOperation sortByAvgPopAsc = sort(Sort.by(Direction.ASC, \"avgCityPop\"));\r\nLimitOperation limitToOnlyFirstDoc = limit(1);\r\nProjectionOperation projectToMatchModel = project()\r\n  .andExpression(\"_id\").as(\"state\")\r\n  .andExpression(\"avgCityPop\").as(\"statePop\");\r\n\r\nAggregation aggregation = newAggregation(\r\n  sumTotalCityPop, averageStatePop, sortByAvgPopAsc,\r\n  limitToOnlyFirstDoc, projectToMatchModel);\r\n\r\nAggregationResults<StatePopulation> result = mongoTemplate\r\n  .aggregate(aggregation, \"zips\", StatePopulation.class);\r\nStatePopulation smallestState = result.getUniqueMappedResult();\r\n```","```\r\nGroupOperation sumZips = group(\"state\").count().as(\"zipCount\");\r\nSortOperation sortByCount = sort(Direction.ASC, \"zipCount\");\r\nGroupOperation groupFirstAndLast = group().first(\"_id\").as(\"minZipState\")\r\n  .first(\"zipCount\").as(\"minZipCount\").last(\"_id\").as(\"maxZipState\")\r\n  .last(\"zipCount\").as(\"maxZipCount\");\r\n\r\nAggregation aggregation = newAggregation(sumZips, sortByCount, groupFirstAndLast);\r\n\r\nAggregationResults<Document> result = mongoTemplate\r\n  .aggregate(aggregation, \"zips\", Document.class);\r\nDocument document= result.getUniqueMappedResult();\r\n```"]