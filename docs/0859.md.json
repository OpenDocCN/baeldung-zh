["```\r\npublic class FormatInstantUnitTest {\r\n\r\n    private static final String PATTERN_FORMAT = \"dd.MM.yyyy\";\r\n\r\n    @Test\r\n    public void givenInstant_whenUsingDateTimeFormatter_thenFormat() {\r\n        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(PATTERN_FORMAT)\r\n            .withZone(ZoneId.systemDefault());\r\n\r\n        Instant instant = Instant.parse(\"2022-02-15T18:35:24.00Z\");\r\n        String formattedInstant = formatter.format(instant);\r\n\r\n        assertThat(formattedInstant).isEqualTo(\"15.02.2022\");\r\n    }\r\n    ...\r\n}\r\n```","```\r\n@Test(expected = UnsupportedTemporalTypeException.class)\r\npublic void givenInstant_whenNotSpecifyingTimeZone_thenThrowException() {\r\n    DateTimeFormatter formatter = DateTimeFormatter.ofPattern(PATTERN_FORMAT);\r\n\r\n    Instant instant = Instant.now();\r\n    formatter.format(instant);\r\n}\r\n```","```\r\n@Test\r\npublic void givenInstant_whenUsingToString_thenFormat() {\r\n    Instant instant = Instant.ofEpochMilli(1641828224000L);\r\n    String formattedInstant = instant.toString();\r\n\r\n    assertThat(formattedInstant).isEqualTo(\"2022-01-10T15:23:44Z\");\r\n}\r\n```","```\r\n@Test\r\npublic void givenInstant_whenUsingJodaTime_thenFormat() {\r\n    org.joda.time.Instant instant = new org.joda.time.Instant(\"2022-03-20T10:11:12\");\r\n\r\n    String formattedInstant = DateTimeFormat.forPattern(PATTERN_FORMAT)\r\n        .print(instant);\r\n\r\n    assertThat(formattedInstant).isEqualTo(\"20.03.2022\");\r\n}\r\n```"]