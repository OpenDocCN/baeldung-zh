["```\r\n<dependency>\r\n    <groupId>com.fasterxml.jackson.core</groupId>\r\n    <artifactId>jackson-databind</artifactId>\r\n    <version>${jackson.version}</version>\r\n</dependency>\r\n```","```\r\n@Test\r\npublic void whenSerializeAndDeserializeUsingJackson_thenCorrect() \r\n  throws IOException{\r\n    Foo foo = new Foo(1,\"first\");\r\n    ObjectMapper mapper = new ObjectMapper();\r\n\r\n    String jsonStr = mapper.writeValueAsString(foo);\r\n    Foo result = mapper.readValue(jsonStr, Foo.class);\r\n    assertEquals(foo.getId(),result.getId());\r\n}\r\n```","```\r\n{\r\n    \"id\":1,\r\n    \"name\":\"first\"\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>com.google.code.gson</groupId>\r\n    <artifactId>gson</artifactId>\r\n    <version>${gson.version}</version>\r\n</dependency>\r\n```","```\r\n@Test\r\npublic void whenSerializeAndDeserializeUsingGson_thenCorrect(){\r\n    Gson gson = new Gson();\r\n    Foo foo = new Foo(1,\"first\");\r\n\r\n    String jsonStr = gson.toJson(foo);\r\n    Foo result = gson.fromJson(jsonStr, Foo.class);\r\n    assertEquals(foo.getId(),result.getId());\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>com.cedarsoftware</groupId>\r\n    <artifactId>json-io</artifactId>\r\n    <version>${json-io.version}</version>\r\n</dependency>\r\n```","```\r\n@Test\r\npublic void whenSerializeAndDeserializeUsingJsonio_thenCorrect(){\r\n    Foo foo = new Foo(1,\"first\");\r\n\r\n    String jsonStr = JsonWriter.objectToJson(foo);\r\n    Foo result = (Foo) JsonReader.jsonToJava(jsonStr);\r\n    assertEquals(foo.getId(),result.getId());\r\n}\r\n```","```\r\n{\r\n    \"@type\":\"org.baeldung.Foo\",\r\n    \"id\":1,\r\n    \"name\":\"first\"\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>com.owlike</groupId>\r\n    <artifactId>genson</artifactId>\r\n    <version>${genson.version}</version>\r\n</dependency>\r\n```","```\r\n@Test\r\npublic void whenSerializeAndDeserializeUsingGenson_thenCorrect(){\r\n    Genson genson = new Genson();\r\n    Foo foo = new Foo(1,\"first\");\r\n\r\n    String jsonStr = genson.serialize(foo);\r\n    Foo result = genson.deserialize(jsonStr, Foo.class);\r\n    assertEquals(foo.getId(),result.getId());\r\n}\r\n```"]