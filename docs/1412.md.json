["```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<definitions <!-- namespace declarations -->\r\n    targetNamespace=\"http://server.ws.soap.baeldung.com/\" name=\"CountryServiceImplService\">\r\n    <types>\r\n        <xsd:schema>\r\n            <xsd:import namespace=\"http://server.ws.soap.baeldung.com/\" \r\n              schemaLocation=\"http://localhost:8888/ws/country?xsd=1\"></xsd:import>\r\n        </xsd:schema>\r\n    </types>\r\n    <message name=\"findByName\">\r\n        <part name=\"arg0\" type=\"xsd:string\"></part>\r\n    </message>\r\n    <message name=\"findByNameResponse\">\r\n        <part name=\"return\" type=\"tns:country\"></part>\r\n    </message>\r\n    <portType name=\"CountryService\">\r\n        <operation name=\"findByName\">\r\n            <input wsam:Action=\"http://server.ws.soap.baeldung.com/CountryService/findByNameRequest\" \r\n              message=\"tns:findByName\"></input>\r\n            <output wsam:Action=\"http://server.ws.soap.baeldung.com/CountryService/findByNameResponse\" \r\n              message=\"tns:findByNameResponse\"></output>\r\n        </operation>\r\n    </portType>\r\n    <binding name=\"CountryServiceImplPortBinding\" type=\"tns:CountryService\">\r\n        <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\" style=\"rpc\"></soap:binding>\r\n        <operation name=\"findByName\">\r\n            <soap:operation soapAction=\"\"></soap:operation>\r\n            <input>\r\n                <soap:body use=\"literal\" namespace=\"http://server.ws.soap.baeldung.com/\"></soap:body>\r\n            </input>\r\n            <output>\r\n                <soap:body use=\"literal\" namespace=\"http://server.ws.soap.baeldung.com/\"></soap:body>\r\n            </output>\r\n        </operation>\r\n    </binding>\r\n    <service name=\"CountryServiceImplService\">\r\n        <port name=\"CountryServiceImplPort\" binding=\"tns:CountryServiceImplPortBinding\">\r\n            <soap:address location=\"http://localhost:8888/ws/country\"></soap:address>\r\n        </port>\r\n    </service>\r\n</definitions>\r\n```","```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<xs:schema <!-- namespace declarations -->\r\n    targetNamespace=\"http://server.ws.soap.baeldung.com/\">\r\n    <xs:complexType name=\"country\">\r\n        <xs:sequence>\r\n            <xs:element name=\"capital\" type=\"xs:string\" minOccurs=\"0\"></xs:element>\r\n            <xs:element name=\"currency\" type=\"tns:currency\" minOccurs=\"0\"></xs:element>\r\n            <xs:element name=\"name\" type=\"xs:string\" minOccurs=\"0\"></xs:element>\r\n            <xs:element name=\"population\" type=\"xs:int\"></xs:element>\r\n        </xs:sequence>\r\n    </xs:complexType>\r\n    <xs:simpleType name=\"currency\">\r\n        <xs:restriction base=\"xs:string\">\r\n            <xs:enumeration value=\"EUR\"></xs:enumeration>\r\n            <xs:enumeration value=\"INR\"></xs:enumeration>\r\n            <xs:enumeration value=\"USD\"></xs:enumeration>\r\n        </xs:restriction>\r\n    </xs:simpleType>\r\n</xs:schema>\r\n```","```\r\n<plugin> \r\n    <groupId>org.codehaus.mojo</groupId>\r\n    <artifactId>jaxws-maven-plugin</artifactId>\r\n    <version>2.6</version>\r\n    <executions> \r\n        <execution> \r\n            <id>wsimport-from-jdk</id>\r\n            <goals>\r\n                <goal>wsimport</goal>\r\n            </goals>\r\n        </execution>\r\n    </executions>\r\n    <configuration>\r\n        <wsdlUrls>\r\n            <wsdlUrl>http://localhost:8888/ws/country?wsdl</wsdlUrl> \r\n        </wsdlUrls>\r\n        <keep>true</keep> \r\n        <packageName>com.baeldung.soap.ws.client.generated</packageName> \r\n        <sourceDestDir>src/main/java</sourceDestDir>\r\n    </configuration>\r\n</plugin>\r\n```","```\r\nmvn clean jaxws:wsimport\r\n```","```\r\nJAVA_HOME/bin/wsimport -s src/main/java/ -keep -p com.baeldung.soap.ws.client.generated \"http://localhost:8888/ws/country?wsdl\"\r\n```","```\r\n<dependencies>\r\n    <dependency>\r\n        <groupId>jakarta.xml.ws</groupId\r\n        <artifactId>jakarta.xml.ws-api</artifactId\r\n        <version>3.0.0</version>\r\n    </dependency>\r\n    <dependency>\r\n        <groupId>com.sun.xml.ws</groupId>\r\n        <artifactId>jaxws-rt</artifactId>\r\n        <version>3.0.0</version\r\n        <scope>runtime</scope>\r\n    </dependency>\r\n    <dependency>\r\n        <groupId>com.sun.xml.ws</groupId>\r\n        <artifactId>jaxws-ri</artifactId>\r\n        <version>2.3.1</version\r\n        <type>pom</type>\r\n    </dependency>\r\n</dependencies>\r\n<build>\r\n    <plugins>        \r\n        <plugin>\r\n            <groupId>com.sun.xml.ws</groupId>\r\n            <artifactId>jaxws-maven-plugin</artifactId>\r\n            <version>2.3.2</version>\r\n            <configuration>\r\n                <wsdlUrls>\r\n                    <wsdlUrl>http://localhost:8888/ws/country?wsdl</wsdlUrl>\r\n                </wsdlUrls>\r\n                <keep>true</keep>\r\n                <packageName>com.baeldung.soap.ws.client.generated</packageName>\r\n                <sourceDestDir>src/main/java</sourceDestDir>\r\n            </configuration>\r\n        </plugin>\r\n    </plugins>\r\n</build> \r\n```","```\r\nmvn clean jaxws:wsimport\r\n```","```\r\n@XmlAccessorType(XmlAccessType.FIELD)\r\n@XmlType(name = \"country\", propOrder = { \"capital\", \"currency\", \"name\", \"population\" })\r\npublic class Country {\r\n    protected String capital;\r\n    @XmlSchemaType(name = \"string\")\r\n    protected Currency currency;\r\n    protected String name;\r\n    protected int population;\r\n    // standard getters and setters\r\n}\r\n```","```\r\n@XmlType(name = \"currency\")\r\n@XmlEnum\r\npublic enum Currency {\r\n    EUR, INR, USD;\r\n    public String value() {\r\n        return name();\r\n    }\r\n    public static Currency fromValue(String v) {\r\n        return valueOf(v);\r\n    }\r\n}\r\n```","```\r\n@WebService(name = \"CountryService\", targetNamespace = \"http://server.ws.soap.baeldung.com/\")\r\n@SOAPBinding(style = SOAPBinding.Style.RPC)\r\n@XmlSeeAlso({ ObjectFactory.class })\r\npublic interface CountryService {\r\n    @WebMethod\r\n    @WebResult(partName = \"return\")\r\n    @Action(input = \"http://server.ws.soap.baeldung.com/CountryService/findByNameRequest\", \r\n      output = \"http://server.ws.soap.baeldung.com/CountryService/findByNameResponse\")\r\n    public Country findByName(@WebParam(name = \"arg0\", partName = \"arg0\") String arg0);\r\n}\r\n```","```\r\n@WebServiceClient(name = \"CountryServiceImplService\", \r\n  targetNamespace = \"http://server.ws.soap.baeldung.com/\", \r\n  wsdlLocation = \"http://localhost:8888/ws/country?wsdl\")\r\npublic class CountryServiceImplService extends Service {\r\n\r\n    private final static URL COUNTRYSERVICEIMPLSERVICE_WSDL_LOCATION;\r\n    private final static WebServiceException COUNTRYSERVICEIMPLSERVICE_EXCEPTION;\r\n    private final static QName COUNTRYSERVICEIMPLSERVICE_QNAME = \r\n      new QName(\"http://server.ws.soap.baeldung.com/\", \"CountryServiceImplService\");\r\n\r\n    static {\r\n        URL url = null;\r\n        WebServiceException e = null;\r\n        try {\r\n            url = new URL(\"http://localhost:8888/ws/country?wsdl\");\r\n        } catch (MalformedURLException ex) {\r\n            e = new WebServiceException(ex);\r\n        }\r\n        COUNTRYSERVICEIMPLSERVICE_WSDL_LOCATION = url;\r\n        COUNTRYSERVICEIMPLSERVICE_EXCEPTION = e;\r\n    }\r\n\r\n    public CountryServiceImplService() {\r\n        super(__getWsdlLocation(), COUNTRYSERVICEIMPLSERVICE_QNAME);\r\n    }\r\n\r\n    // other constructors \r\n\r\n    @WebEndpoint(name = \"CountryServiceImplPort\")\r\n    public CountryService getCountryServiceImplPort() {\r\n        return super.getPort(new QName(\"http://server.ws.soap.baeldung.com/\", \"CountryServiceImplPort\"), \r\n          CountryService.class);\r\n    }\r\n\r\n    private static URL __getWsdlLocation() {\r\n        if (COUNTRYSERVICEIMPLSERVICE_EXCEPTION != null) {\r\n            throw COUNTRYSERVICEIMPLSERVICE_EXCEPTION;\r\n        }\r\n        return COUNTRYSERVICEIMPLSERVICE_WSDL_LOCATION;\r\n    }\r\n\r\n}\r\n```","```\r\n@BeforeClass\r\npublic static void setup() {\r\n    CountryServiceImplService service = new CountryServiceImplService();\r\n    CountryService countryService = service.getCountryServiceImplPort();\r\n}\r\n```","```\r\n@Test\r\npublic void givenCountryService_whenCountryIndia_thenCapitalIsNewDelhi() {\r\n    assertEquals(\"New Delhi\", countryService.findByName(\"India\").getCapital());\r\n}\r\n\r\n@Test\r\npublic void givenCountryService_whenCountryFrance_thenPopulationCorrect() {\r\n    assertEquals(66710000, countryService.findByName(\"France\").getPopulation());\r\n}\r\n\r\n@Test\r\npublic void givenCountryService_whenCountryUSA_thenCurrencyUSD() {\r\n    assertEquals(Currency.USD, countryService.findByName(\"USA\").getCurrency());\r\n} \r\n```"]