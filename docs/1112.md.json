["```\r\npublic interface CalculatorOperation {}\r\n```","```\r\npublic class Addition implements CalculatorOperation {\r\n    private double left;\r\n    private double right;\r\n    private double result = 0.0;\r\n\r\n    public Addition(double left, double right) {\r\n        this.left = left;\r\n        this.right = right;\r\n    }\r\n\r\n    // getters and setters\r\n\r\n}\r\n```","```\r\npublic class Subtraction implements CalculatorOperation {\r\n    private double left;\r\n    private double right;\r\n    private double result = 0.0;\r\n\r\n    public Subtraction(double left, double right) {\r\n        this.left = left;\r\n        this.right = right;\r\n    }\r\n\r\n    // getters and setters\r\n}\r\n```","```\r\npublic class Calculator {\r\n\r\n    public void calculate(CalculatorOperation operation) {\r\n        if (operation == null) {\r\n            throw new InvalidParameterException(\"Can not perform operation\");\r\n        }\r\n\r\n        if (operation instanceof Addition) {\r\n            Addition addition = (Addition) operation;\r\n            addition.setResult(addition.getLeft() + addition.getRight());\r\n        } else if (operation instanceof Subtraction) {\r\n            Subtraction subtraction = (Subtraction) operation;\r\n            subtraction.setResult(subtraction.getLeft() - subtraction.getRight());\r\n        }\r\n    }\r\n}\r\n```","```\r\npublic interface CalculatorOperation {\r\n    void perform();\r\n}\r\n```","```\r\npublic class Addition implements CalculatorOperation {\r\n    private double left;\r\n    private double right;\r\n    private double result;\r\n\r\n    // constructor, getters and setters\r\n\r\n    @Override\r\n    public void perform() {\r\n        result = left + right;\r\n    }\r\n}\r\n```","```\r\npublic class Division implements CalculatorOperation {\r\n    private double left;\r\n    private double right;\r\n    private double result;\r\n\r\n    // constructor, getters and setters\r\n    @Override\r\n    public void perform() {\r\n        if (right != 0) {\r\n            result = left / right;\r\n        }\r\n    }\r\n}\r\n```","```\r\npublic class Calculator {\r\n\r\n    public void calculate(CalculatorOperation operation) {\r\n        if (operation == null) {\r\n            throw new InvalidParameterException(\"Cannot perform operation\");\r\n        }\r\n        operation.perform();\r\n    }\r\n} \r\n```"]