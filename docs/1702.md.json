["```\r\npublic class YamlPropertySourceFactory implements PropertySourceFactory {\r\n\r\n    @Override\r\n    public PropertySource<?> createPropertySource(String name, EncodedResource encodedResource) \r\n      throws IOException {\r\n        YamlPropertiesFactoryBean factory = new YamlPropertiesFactoryBean();\r\n        factory.setResources(encodedResource.getResource());\r\n\r\n        Properties properties = factory.getObject();\r\n\r\n        return new PropertiesPropertySource(encodedResource.getResource().getFilename(), properties);\r\n    }\r\n}\r\n```","```\r\nyaml:\r\n  name: foo\r\n  aliases:\r\n    - abc\r\n    - xyz\r\n```","```\r\n@Configuration\r\n@ConfigurationProperties(prefix = \"yaml\")\r\n@PropertySource(value = \"classpath:foo.yml\", factory = YamlPropertySourceFactory.class)\r\npublic class YamlFooProperties {\r\n\r\n    private String name;\r\n\r\n    private List<String> aliases;\r\n\r\n    // standard getter and setters\r\n}\r\n```","```\r\n@RunWith(SpringRunner.class)\r\n@SpringBootTest\r\npublic class YamlFooPropertiesIntegrationTest {\r\n\r\n    @Autowired\r\n    private YamlFooProperties yamlFooProperties;\r\n\r\n    @Test\r\n    public void whenFactoryProvidedThenYamlPropertiesInjected() {\r\n        assertThat(yamlFooProperties.getName()).isEqualTo(\"foo\");\r\n        assertThat(yamlFooProperties.getAliases()).containsExactly(\"abc\", \"xyz\");\r\n    }\r\n}\r\n```"]