["```\r\n<dependency>\r\n    <groupId>net.imagej</groupId>\r\n    <artifactId>ij</artifactId>\r\n    <version>1.51h</version>\r\n</dependency>\r\n```","```\r\nImagePlus image = IJ.openImage(path);\r\n```","```\r\nFont font = new Font(\"Arial\", Font.BOLD, 18);\r\n\r\nImageProcessor ip = image.getProcessor();\r\nip.setColor(Color.GREEN);\r\nip.setFont(font);\r\nip.drawString(text, 0, 20);\r\n```","```\r\nBufferedImage image = ImageIO.read(new File(path));\r\n```","```\r\nFont font = new Font(\"Arial\", Font.BOLD, 18);\r\n\r\nGraphics g = image.getGraphics();\r\ng.setFont(font);\r\ng.setColor(Color.GREEN);\r\ng.drawString(text, 0, 20);\r\n```","```\r\nFont font = new Font(\"Arial\", Font.BOLD, 18);\r\n\r\nAttributedString attributedText = new AttributedString(text);\r\nattributedText.addAttribute(TextAttribute.FONT, font);\r\nattributedText.addAttribute(TextAttribute.FOREGROUND, Color.GREEN);\r\n\r\nGraphics g = image.getGraphics();\r\ng.drawString(attributedText.getIterator(), 0, 20);\r\n```","```\r\nGraphics g = image.getGraphics();\r\n\r\nFontMetrics metrics = g.getFontMetrics(font);\r\nint positionX = (image.getWidth() - metrics.stringWidth(text)) / 2;\r\nint positionY = (image.getHeight() - metrics.getHeight()) / 2 + metrics.getAscent();\r\n\r\ng.drawString(attributedText.getIterator(), positionX, positionY);\r\n```","```\r\nint positionX = (image.getWidth() - metrics.stringWidth(text));\r\nint positionY = (image.getHeight() - metrics.getHeight()) + metrics.getAscent();\r\n```","```\r\nint positionX = 0;\r\nint positionY = metrics.getAscent();\r\n```","```\r\nFontMetrics ruler = graphics.getFontMetrics(baseFont);\r\nGlyphVector vector = baseFont.createGlyphVector(ruler.getFontRenderContext(), text);\r\n\r\nShape outline = vector.getOutline(0, 0);\r\n\r\ndouble expectedWidth = outline.getBounds().getWidth();\r\ndouble expectedHeight = outline.getBounds().getHeight(); \r\n```","```\r\nboolean textFits = image.getWidth() >= expectedWidth && image.getHeight() >= expectedHeight;\r\n```","```\r\ndouble widthBasedFontSize = (baseFont.getSize2D()*image.getWidth())/expectedWidth;\r\ndouble heightBasedFontSize = (baseFont.getSize2D()*image.getHeight())/expectedHeight;\r\n\r\ndouble newFontSize = widthBasedFontSize < heightBasedFontSize ? widthBasedFontSize : heightBasedFontSize;\r\nnewFont = baseFont.deriveFont(baseFont.getStyle(), (float)newFontSize);\r\n```"]