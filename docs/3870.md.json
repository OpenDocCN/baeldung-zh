["```\r\npublic class Foo implements Serializable {\r\n\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.AUTO)\r\n    private long id;\r\n\r\n    public Foo() {\r\n        super();\r\n    }\r\n\r\n    public long getId() {\r\n        return id;\r\n    }\r\n    public void setId(long id) {\r\n        this.id = id;\r\n    }\r\n}\r\n```","```\r\nimport org.hibernate.annotations.Entity;\r\n\r\n@Entity\r\npublic class Foo implements Serializable {\r\n    ...\r\n```","```\r\nimport javax.persistence.Entity;\r\n\r\n@Entity\r\npublic class Foo implements Serializable {\r\n    ...\r\n```","```\r\n@Bean\r\npublic LocalSessionFactoryBean sessionFactory() {\r\n    LocalSessionFactoryBean sessionFactory = new LocalSessionFactoryBean();\r\n    sessionFactory.setDataSource(restDataSource());\r\n    ...\r\n    return sessionFactory;\r\n}\r\n```","```\r\n...\r\n@Autowired\r\nprivate SessionFactory sessionFactory;\r\n\r\n@Test(expected = MappingException.class)\r\n@Transactional\r\npublic void givenEntityIsPersisted_thenException() {\r\n    sessionFactory.getCurrentSession().saveOrUpdate(new Foo());\r\n}\r\n```","```\r\norg.hibernate.MappingException: Unknown entity: \r\ncom.baeldung.ex.mappingexception.persistence.model.Foo\r\n    at o.h.i.SessionFactoryImpl.getEntityPersister(SessionFactoryImpl.java:1141)\r\n```","```\r\nsessionFactory.setPackagesToScan(\r\n  new String[] { \"com.baeldung.ex.mappingexception.persistence.model\" });\r\n```","```\r\nsessionFactory.setAnnotatedClasses(new Class[] { Foo.class });\r\n```","```\r\npublic class Cause4MappingExceptionIntegrationTest {\r\n\r\n    @Test\r\n    public void givenEntityIsPersisted_thenException() throws IOException {\r\n        SessionFactory sessionFactory = configureSessionFactory();\r\n\r\n        Session session = sessionFactory.openSession();\r\n        session.beginTransaction();\r\n        session.saveOrUpdate(new Foo());\r\n        session.getTransaction().commit();\r\n    }\r\n\r\n    private SessionFactory configureSessionFactory() throws IOException {\r\n        Configuration configuration = new Configuration();\r\n        InputStream inputStream = this.getClass().getClassLoader().\r\n          getResourceAsStream(\"hibernate-mysql.properties\");\r\n        Properties hibernateProperties = new Properties();\r\n        hibernateProperties.load(inputStream);\r\n        configuration.setProperties(hibernateProperties);\r\n\r\n        // configuration.addAnnotatedClass(Foo.class);\r\n\r\n        ServiceRegistry serviceRegistry = new ServiceRegistryBuilder().\r\n          applySettings(configuration.getProperties()).buildServiceRegistry();\r\n        SessionFactory sessionFactory = configuration.buildSessionFactory(serviceRegistry);\r\n        return sessionFactory;\r\n    }\r\n}\r\n```","```\r\nhibernate.connection.username=tutorialuser\r\nhibernate.connection.password=tutorialmy5ql\r\nhibernate.connection.driver_class=com.mysql.jdbc.Driver\r\nhibernate.dialect=org.hibernate.dialect.MySQL5Dialect\r\nhibernate.connection.url=jdbc:mysql://localhost:3306/spring_hibernate4_exceptions\r\nhibernate.show_sql=false\r\nhibernate.hbm2ddl.auto=create\r\n```","```\r\norg.hibernate.MappingException: \r\n  Unknown entity: com.baeldung.ex.mappingexception.persistence.model.Foo\r\n    at o.h.i.SessionFactoryImpl.getEntityPersister(SessionFactoryImpl.java:1141)\r\n```","```\r\nconfiguration.addAnnotatedClass(Foo.class);\r\n```"]