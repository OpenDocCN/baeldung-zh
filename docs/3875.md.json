["```\r\n<dependency>\r\n    <groupId>org.apache.zookeeper</groupId>\r\n    <artifactId>zookeeper</artifactId>\r\n    <version>3.4.11</version>\r\n</dependency>\r\n```","```\r\nbin/zkCli.sh -server 127.0.0.1:2181\r\n```","```\r\n[zk: localhost:2181(CONNECTED) 0] create /MyFirstZNode ZNodeVal\r\nCreated /FirstZnode\r\n```","```\r\n[zk: localhost:2181(CONNECTED) 1] get /FirstZnode\r\n\r\n“Myfirstzookeeper-app”\r\ncZxid = 0x7f\r\nctime = Sun Feb 18 16:15:47 IST 2018\r\nmZxid = 0x7f\r\nmtime = Sun Feb 18 16:15:47 IST 2018\r\npZxid = 0x7f\r\ncversion = 0\r\ndataVersion = 0\r\naclVersion = 0\r\nephemeralOwner = 0x0\r\ndataLength = 22\r\nnumChildren = 0\r\n```","```\r\nset /MyFirstZNode ZNodeValUpdated\r\n```","```\r\npublic class ZKConnection {\r\n    private ZooKeeper zoo;\r\n    CountDownLatch connectionLatch = new CountDownLatch(1);\r\n\r\n    // ...\r\n\r\n    public ZooKeeper connect(String host) \r\n      throws IOException, \r\n      InterruptedException {\r\n        zoo = new ZooKeeper(host, 2000, new Watcher() {\r\n            public void process(WatchedEvent we) {\r\n                if (we.getState() == KeeperState.SyncConnected) {\r\n                    connectionLatch.countDown();\r\n                }\r\n            }\r\n        });\r\n\r\n        connectionLatch.await();\r\n        return zoo;\r\n    }\r\n\r\n    public void close() throws InterruptedException {\r\n        zoo.close();\r\n    }\r\n}\r\n```","```\r\npublic interface ZKManager {\r\n    public void create(String path, byte[] data)\r\n      throws KeeperException, InterruptedException;\r\n    public Object getZNodeData(String path, boolean watchFlag);\r\n    public void update(String path, byte[] data) \r\n      throws KeeperException, InterruptedException;\r\n}\r\n```","```\r\npublic class ZKManagerImpl implements ZKManager {\r\n    private static ZooKeeper zkeeper;\r\n    private static ZKConnection zkConnection;\r\n\r\n    public ZKManagerImpl() {\r\n        initialize();\r\n    }\r\n\r\n    private void initialize() {\r\n        zkConnection = new ZKConnection();\r\n        zkeeper = zkConnection.connect(\"localhost\");\r\n    }\r\n\r\n    public void closeConnection() {\r\n        zkConnection.close();\r\n    }\r\n\r\n    public void create(String path, byte[] data) \r\n      throws KeeperException, \r\n      InterruptedException {\r\n\r\n        zkeeper.create(\r\n          path, \r\n          data, \r\n          ZooDefs.Ids.OPEN_ACL_UNSAFE, \r\n          CreateMode.PERSISTENT);\r\n    }\r\n\r\n    public Object getZNodeData(String path, boolean watchFlag) \r\n      throws KeeperException, \r\n      InterruptedException {\r\n\r\n        byte[] b = null;\r\n        b = zkeeper.getData(path, null, null);\r\n        return new String(b, \"UTF-8\");\r\n    }\r\n\r\n    public void update(String path, byte[] data) throws KeeperException, \r\n      InterruptedException {\r\n        int version = zkeeper.exists(path, true).getVersion();\r\n        zkeeper.setData(path, data, version);\r\n    }\r\n}\r\n```"]