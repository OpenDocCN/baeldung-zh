["```\r\npublic class Movie {\r\n\r\n    private String id;\r\n\r\n    @NotEmpty(message = \"Movie name cannot be empty.\")\r\n    private String name;\r\n\r\n    // standard setters and getters\r\n}\r\n```","```\r\n@Validated\r\n@RestController\r\n@RequestMapping(\"/movies\")\r\npublic class MovieController {\r\n\r\n    @Autowired\r\n    private MovieService movieService;\r\n\r\n    //...\r\n}\r\n```","```\r\n@PostMapping\r\npublic void addAll(\r\n  @RequestBody \r\n  @NotEmpty(message = \"Input movie list cannot be empty.\")\r\n  List<@Valid Movie> movies) {\r\n    movieService.addAll(movies);\r\n}\r\n```","```\r\nInput movie list cannot be empty.\r\n```","```\r\nMovie name cannot be empty.\r\n```","```\r\n@Constraint(validatedBy = MaxSizeConstraintValidator.class)\r\n@Retention(RetentionPolicy.RUNTIME)\r\npublic @interface MaxSizeConstraint {\r\n    String message() default \"The input list cannot contain more than 4 movies.\";\r\n    Class<?>[] groups() default {};\r\n    Class<? extends Payload>[] payload() default {};\r\n}\r\n```","```\r\npublic class MaxSizeConstraintValidator implements ConstraintValidator<MaxSizeConstraint, List<Movie>> {\r\n    @Override\r\n    public boolean isValid(List<Movie> values, ConstraintValidatorContext context) {\r\n        return values.size() <= 4;\r\n    }\r\n}\r\n```","```\r\n@PostMapping\r\npublic void addAll(\r\n  @RequestBody\r\n  @NotEmpty(message = \"Input movie list cannot be empty.\")\r\n  @MaxSizeConstraint\r\n  List<@Valid Movie> movies) {\r\n    movieService.addAll(movies);\r\n}\r\n```","```\r\n@ExceptionHandler(ConstraintViolationException.class)\r\npublic ResponseEntity handle(ConstraintViolationException constraintViolationException) {\r\n    Set<ConstraintViolation<?>> violations = constraintViolationException.getConstraintViolations();\r\n    String errorMessage = \"\";\r\n    if (!violations.isEmpty()) {\r\n        StringBuilder builder = new StringBuilder();\r\n        violations.forEach(violation -> builder.append(\" \" + violation.getMessage()));\r\n        errorMessage = builder.toString();\r\n    } else {\r\n        errorMessage = \"ConstraintViolationException occured.\";\r\n    }\r\n    return new ResponseEntity<>(errorMessage, HttpStatus.BAD_REQUEST);\r\n }\r\n```","```\r\ncurl -v -d [{\"name\":\"Movie1\"}] -H \"Content-Type: application/json\" -X POST http://localhost:8080/movies\r\n```","```\r\n...\r\nHTTP/1.1 200\r\n...\r\n```","```\r\ncurl -d [] -H \"Content-Type: application/json\" -X POST http://localhost:8080/movies\r\n```","```\r\nInput movie list cannot be empty.\r\n```","```\r\ncurl -d [{\"name\":\"Movie1\"},{\"name\":\"Movie2\"},{\"name\":\"Movie3\"},{\"name\":\"Movie4\"},{\"name\":\"Movie5\"}] \r\n  -H \"Content-Type: application/json\" -X POST http://localhost:8080/movies\r\n```","```\r\nThe input list cannot contain more than 4 movies.\r\n```"]