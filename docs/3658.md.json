["```\r\nimport java.nio.file.*;\r\n```","```\r\npublic class FileVisitorImpl implements FileVisitor<Path> {\r\n\r\n    @Override\r\n    public FileVisitResult preVisitDirectory(\r\n      Path dir, BasicFileAttributes attrs) {\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public FileVisitResult visitFile(\r\n      Path file, BasicFileAttributes attrs) {\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public FileVisitResult visitFileFailed(\r\n      Path file, IOException exc) {       \r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public FileVisitResult postVisitDirectory(\r\n      Path dir, IOException exc) {    \r\n        return null;\r\n    }\r\n}\r\n```","```\r\nPath startingDir = Paths.get(\"pathToDir\");\r\nFileVisitorImpl visitor = new FileVisitorImpl();\r\nFiles.walkFileTree(startingDir, visitor);\r\n```","```\r\npublic class FileSearchExample implements FileVisitor<Path> {\r\n    private String fileName;\r\n    private Path startDir;\r\n\r\n    // standard constructors\r\n}\r\n```","```\r\n@Override\r\npublic FileVisitResult preVisitDirectory(\r\n  Path dir, BasicFileAttributes attrs) {\r\n    return CONTINUE;\r\n}\r\n```","```\r\n@Override\r\npublic FileVisitResult visitFile(Path file, BasicFileAttributes attrs) {\r\n    String fileName = file.getFileName().toString();\r\n    if (FILE_NAME.equals(fileName)) {\r\n        System.out.println(\"File found: \" + file.toString());\r\n        return TERMINATE;\r\n    }\r\n    return CONTINUE;\r\n}\r\n```","```\r\n@Override\r\npublic FileVisitResult visitFileFailed(Path file, IOException exc) {\r\n    System.out.println(\"Failed to access file: \" + file.toString());\r\n    return CONTINUE;\r\n}\r\n```","```\r\n@Override\r\npublic FileVisitResult postVisitDirectory(Path dir, IOException exc){\r\n    boolean finishedSearch = Files.isSameFile(dir, START_DIR);\r\n    if (finishedSearch) {\r\n        System.out.println(\"File:\" + FILE_NAME + \" not found\");\r\n        return TERMINATE;\r\n    }\r\n    return CONTINUE;\r\n}\r\n```","```\r\npublic static void main(String[] args) {\r\n    Path startingDir = Paths.get(\"C:/Users/user/Desktop\");\r\n    String fileToSearch = \"hibernate-guide.txt\"\r\n    FileSearchExample crawler = new FileSearchExample(\r\n      fileToSearch, startingDir);\r\n    Files.walkFileTree(startingDir, crawler);\r\n}\r\n```"]