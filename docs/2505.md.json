["```\r\npublic interface MessengerService extends Remote {\r\n    String sendMessage(String clientMessage) throws RemoteException;\r\n}\r\n```","```\r\npublic class MessengerServiceImpl implements MessengerService { \r\n\r\n    @Override \r\n    public String sendMessage(String clientMessage) { \r\n        return \"Client Message\".equals(clientMessage) ? \"Server Message\" : null;\r\n    }\r\n\r\n    public String unexposedMethod() { /* code */ }\r\n}\r\n```","```\r\nMessengerService server = new MessengerServiceImpl();\r\nMessengerService stub = (MessengerService) UnicastRemoteObject\r\n  .exportObject((MessengerService) server, 0);\r\n```","```\r\nRegistry registry = LocateRegistry.createRegistry(1099);\r\n```","```\r\nregistry.rebind(\"MessengerService\", stub); \r\n```","```\r\nRegistry registry = LocateRegistry.getRegistry();\r\nMessengerService server = (MessengerService) registry\r\n  .lookup(\"MessengerService\");\r\nString responseMessage = server.sendMessage(\"Client Message\");\r\nString expectedMessage = \"Server Message\";\r\n\r\nassertEquals(expectedMessage, responseMessage);\r\n```"]