["```\r\nCar:\r\n  type: object\r\n  properties:\r\n    owner:\r\n      type: string\r\n    plate:\r\n      type: string\r\nBike:\r\n  type: object\r\n  properties:\r\n    owner:\r\n      type: string\r\n    speed:\r\n      type: integer\r\n```","```\r\npaths:\r\n  /vehicle:\r\n    get:\r\n      responses:\r\n        '200':\r\n          # return Car or Bike\r\n```","```\r\nschema:\r\n  oneOf:\r\n    - $ref: '#/components/schemas/Car'\r\n    - $ref: '#/components/schemas/Bike'\r\n```","```\r\nexamples:\r\n  car:\r\n    summary: an example of car\r\n    value:\r\n      owner: baeldung\r\n      plate: AEX305\r\n  bike:\r\n    summary: an example of bike\r\n    value:\r\n      owner: john doe\r\n      speed: 25\r\n```","```\r\nopenapi: 3.0.0\r\ninfo:\r\n  title: Demo api\r\n  description: Demo api for the article 'specify two responses with same code based on optional parameter'\r\n  version: 0.1.0\r\npaths:\r\n  /vehicle:\r\n    get:\r\n      responses:\r\n        '200':\r\n          description: Get a vehicle \r\n          content:\r\n            application/json:\r\n              schema:\r\n                oneOf:\r\n                  - $ref: '#/components/schemas/Car'\r\n                  - $ref: '#/components/schemas/Bike'\r\n              examples:\r\n                car:\r\n                  summary: an example of car\r\n                  value:\r\n                    owner: baeldung\r\n                    plate: AEX305\r\n                bike:\r\n                  summary: an example of bike\r\n                  value:\r\n                    owner: john doe\r\n                    speed: 25\r\ncomponents:\r\n  schemas:\r\n    Car:\r\n      type: object\r\n      properties:\r\n        owner:\r\n          type: string\r\n        plate:\r\n          type: string\r\n    Bike:\r\n      type: object\r\n      properties:\r\n        owner:\r\n          type: string\r\n        speed:\r\n          type: integer \r\n```","```\r\n<plugin>\r\n    <groupId>io.swagger.codegen.v3</groupId>\r\n    <artifactId>swagger-codegen-maven-plugin</artifactId>\r\n    <version>3.0.34</version>\r\n    <executions>\r\n        <execution>\r\n            <goals>\r\n                <goal>generate</goal>\r\n            </goals>\r\n            <configuration>\r\n                <inputSpec>${project.basedir}/src/main/resources/static/api.yaml</inputSpec>\r\n                <language>spring</language>\r\n                <configOptions>\r\n                    <java8>true</java8>\r\n                    <interfaceOnly>true</interfaceOnly>\r\n                </configOptions>\r\n            </configuration>\r\n        </execution>\r\n    </executions>\r\n</plugin>\r\n```","```\r\nmvn clean compile\r\n```","```\r\n<dependency>\r\n    <groupId>org.springdoc</groupId>\r\n    <artifactId>springdoc-openapi-ui</artifactId>\r\n    <version>1.6.10</version>\r\n</dependency\r\n```","```\r\n@Bean\r\nSpringDocConfiguration springDocConfiguration() {\r\n    return new SpringDocConfiguration();\r\n}\r\n\r\n@Bean\r\nSpringDocConfigProperties springDocConfigProperties() {\r\n    return new SpringDocConfigProperties();\r\n}\r\n\r\n@Bean\r\nObjectMapperProvider objectMapperProvider(SpringDocConfigProperties springDocConfigProperties) {\r\n    return new ObjectMapperProvider(springDocConfigProperties);\r\n}\r\n```","```\r\nspringdoc.api-docs.enabled=false\r\nspringdoc.swagger-ui.url=/api.yaml\r\n```","```\r\nmvn spring-boot:run\r\n```","```\r\nCarOrBike:\r\n  description: a car will have an owner and a plate, whereas a bike has an owner and a speed\r\n  type: object\r\n  required:\r\n    - owner\r\n  properties:\r\n    owner:\r\n      type: string\r\n    plate:\r\n      type: string\r\n    speed:\r\n      type: integer\r\n```","```\r\nswagger: 2.0.0\r\ninfo:\r\n  title: Demo api\r\n  description: Demo api for the article 'specify two responses with same code based on optional parameter'\r\n  version: 0.1.0\r\npaths:\r\n  /vehicle:\r\n    get:\r\n      responses:\r\n        '200':\r\n          description: Get a vehicle. Can contain either a Car or a Bike\r\n          schema:\r\n            $ref: '#/definitions/CarOrBike'\r\n          examples:\r\n            application/json:\r\n              owner: baeldung\r\n              plate: AEX305\r\n              speed:\r\ndefinitions:\r\n  Car:\r\n    type: object\r\n    properties:\r\n      owner:\r\n        type: string\r\n      plate:\r\n        type: string\r\n  Bike:\r\n    type: object\r\n    properties:\r\n      owner:\r\n        type: string\r\n      speed:\r\n        type: integer\r\n  CarOrBike:\r\n    description: a car will have an owner and a plate, whereas a bike has an owner and a speed\r\n    type: object\r\n    required:\r\n      - owner\r\n    properties:\r\n      owner:\r\n        type: string\r\n      plate:\r\n        type: string\r\n      speed:\r\n        type: integer \r\n```","```\r\n<plugin>\r\n    <groupId>io.swagger</groupId>\r\n    <artifactId>swagger-codegen-maven-plugin</artifactId>\r\n    <version>2.4.27</version>\r\n    <executions>\r\n        <execution>\r\n            <goals>\r\n                <goal>generate</goal>\r\n            </goals>\r\n            <configuration>\r\n                <inputSpec>${project.basedir}/src/main/resources/static/api.yaml</inputSpec>\r\n                <language>spring</language>\r\n                <configOptions>\r\n                    <java8>true</java8>\r\n                    <interfaceOnly>true</interfaceOnly>\r\n                </configOptions>\r\n            </configuration>\r\n        </execution>\r\n    </executions>\r\n</plugin>\r\n```"]