["```\r\n@ExtendWith(SpringExtension.class)\r\n@ContextConfiguration(classes = { BirdConfig.class, CatConfig.class, DogConfig.class })\r\nclass ConfigUnitTest {\r\n\r\n    @Autowired\r\n    ApplicationContext context;\r\n\r\n    @Test\r\n    void givenImportedBeans_whenGettingEach_shallFindIt() {\r\n        assertThatBeanExists(\"dog\", Dog.class);\r\n        assertThatBeanExists(\"cat\", Cat.class);\r\n        assertThatBeanExists(\"bird\", Bird.class);\r\n    }\r\n\r\n    private void assertThatBeanExists(String beanName, Class<?> beanClass) {\r\n        Assertions.assertTrue(context.containsBean(beanName));\r\n        Assertions.assertNotNull(context.getBean(beanClass));\r\n    }\r\n}\r\n```","```\r\n@Configuration\r\n@Import({ DogConfig.class, CatConfig.class })\r\nclass MammalConfiguration {\r\n}\r\n```","```\r\n@ExtendWith(SpringExtension.class)\r\n@ContextConfiguration(classes = { MammalConfiguration.class })\r\nclass ConfigUnitTest {\r\n\r\n    @Autowired\r\n    ApplicationContext context;\r\n\r\n    @Test\r\n    void givenImportedBeans_whenGettingEach_shallFindOnlyTheImportedBeans() {\r\n        assertThatBeanExists(\"dog\", Dog.class);\r\n        assertThatBeanExists(\"cat\", Cat.class);\r\n\r\n        Assertions.assertFalse(context.containsBean(\"bird\"));\r\n    }\r\n\r\n    private void assertThatBeanExists(String beanName, Class<?> beanClass) {\r\n        Assertions.assertTrue(context.containsBean(beanName));\r\n        Assertions.assertNotNull(context.getBean(beanClass));\r\n    }\r\n}\r\n```","```\r\n@Configuration\r\n@Import({ MammalConfiguration.class, BirdConfig.class })\r\nclass AnimalConfiguration {\r\n}\r\n```","```\r\n@ExtendWith(SpringExtension.class)\r\n@ContextConfiguration(classes = { AnimalConfiguration.class })\r\nclass AnimalConfigUnitTest {\r\n    // same test validating that all beans are available in the context\r\n}\r\n```","```\r\n@Configuration\r\n@Import(Bug.class)\r\nclass BugConfig {\r\n}\r\n\r\n@Component(value = \"bug\")\r\nclass Bug {\r\n}\r\n```","```\r\npackage com.baeldung.importannotation.animal;\r\n\r\n// imports...\r\n\r\n@Configuration\r\n@ComponentScan\r\npublic class AnimalScanConfiguration {\r\n}\r\n```","```\r\npackage com.baeldung.importannotation.zoo;\r\n\r\n// imports...\r\n\r\n@Configuration\r\n@Import(AnimalScanConfiguration.class)\r\nclass ZooApplication {\r\n}\r\n```"]