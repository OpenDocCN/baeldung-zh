["```\r\nMap<Number, User> users = new HashMap<>();\r\n\r\nusers.get(longId);\r\nusers.get(doubleId);\r\n```","```\r\nMap<Object, User> users = new HashMap<>();\r\n\r\nusers.get(longId); /// Works.\r\nusers.get(stringId); // Works.\r\nusers.get(Instant.now()); // Also works.\r\n```","```\r\nMap<Long, User> usersByLong = new HashMap<>();\r\nMap<String, User> usersByString = new HashMap<>();\r\n```","```\r\nclass MultiKeyWrapper {\r\n    private final Object key;\r\n\r\n    MultiKeyWrapper(Long key) {\r\n        this.key = key;\r\n    }\r\n\r\n    MultiKeyWrapper(String key) {\r\n        this.key = key;\r\n    }\r\n\r\n    @Override\r\n    public bool equals(Object other) { ... }\r\n\r\n    @Override\r\n    public int hashCode() { ... }\r\n}\r\n```","```\r\nMap<MultiKeyWrapper, User> users = new HashMap<>();\r\nusers.get(new MultiKeyWrapper(longId)); // Works\r\nusers.get(new MultiKeyWrapper(stringId)); // Works\r\nusers.get(new MultiKeyWrapper(Instant.now())); // Compilation error\r\n```","```\r\ninterface MultiKeyWrapper {}\r\n\r\nrecord LongMultiKeyWrapper(Long value) implements MultiKeyWrapper {}\r\nrecord StringMultiKeyWrapper(String value) implements MultiKeyWrapper {}\r\n```","```\r\nMap<MultiKeyWrapper, User> users = new HashMap<>();\r\nusers.get(new LongMultiKeyWrapper(longId)); // Works\r\nusers.get(new StringMultiKeyWrapper(stringId)); // Works \r\n```"]