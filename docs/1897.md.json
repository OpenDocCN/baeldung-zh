["```\r\npublic class HelloWorldScheduler implements Scheduler {\r\n\r\n    @Override\r\n    public void registered(SchedulerDriver schedulerDriver, Protos.FrameworkID frameworkID, \r\n      Protos.MasterInfo masterInfo) {\r\n    }\r\n\r\n    @Override\r\n    public void reregistered(SchedulerDriver schedulerDriver, Protos.MasterInfo masterInfo) {\r\n    }\r\n\r\n    @Override\r\n    public void resourceOffers(SchedulerDriver schedulerDriver, List<Offer> list) {\r\n    }\r\n\r\n    @Override\r\n    public void offerRescinded(SchedulerDriver schedulerDriver, OfferID offerID) {\r\n    }\r\n\r\n    @Override\r\n    public void statusUpdate(SchedulerDriver schedulerDriver, Protos.TaskStatus taskStatus) {\r\n    }\r\n\r\n    @Override\r\n    public void frameworkMessage(SchedulerDriver schedulerDriver, Protos.ExecutorID executorID, \r\n      Protos.SlaveID slaveID, byte[] bytes) {\r\n    }\r\n\r\n    @Override\r\n    public void disconnected(SchedulerDriver schedulerDriver) {\r\n    }\r\n\r\n    @Override\r\n    public void slaveLost(SchedulerDriver schedulerDriver, Protos.SlaveID slaveID) {\r\n    }\r\n\r\n    @Override\r\n    public void executorLost(SchedulerDriver schedulerDriver, Protos.ExecutorID executorID, \r\n      Protos.SlaveID slaveID, int i) {\r\n    }\r\n\r\n    @Override\r\n    public void error(SchedulerDriver schedulerDriver, String s) {\r\n    }\r\n}\r\n```","```\r\npublic class HelloWorldExecutor implements Executor {\r\n    @Override\r\n    public void registered(ExecutorDriver driver, Protos.ExecutorInfo executorInfo, \r\n      Protos.FrameworkInfo frameworkInfo, Protos.SlaveInfo slaveInfo) {\r\n    }\r\n\r\n    @Override\r\n    public void reregistered(ExecutorDriver driver, Protos.SlaveInfo slaveInfo) {\r\n    }\r\n\r\n    @Override\r\n    public void disconnected(ExecutorDriver driver) {\r\n    }\r\n\r\n    @Override\r\n    public void launchTask(ExecutorDriver driver, Protos.TaskInfo task) {\r\n    }\r\n\r\n    @Override\r\n    public void killTask(ExecutorDriver driver, Protos.TaskID taskId) {\r\n    }\r\n\r\n    @Override\r\n    public void frameworkMessage(ExecutorDriver driver, byte[] data) {\r\n    }\r\n\r\n    @Override\r\n    public void shutdown(ExecutorDriver driver) {\r\n    }\r\n}\r\n```","```\r\n--resources='cpus:24;gpus:2;mem:24576;disk:409600;ports:[21000-24000,30000-34000];bugs(debug_role):{a,b,c}'\r\n```","```\r\n--attributes='rack:abc;zone:west;os:centos5;level:10;keys:[1000-1500]'\r\n```","```\r\n --resources=\"cpus:4;mem:2048;cpus(baeldung):8;mem(baeldung):4096\"\r\n```","```\r\n<dependency>\r\n    <groupId>org.apache.mesos</groupId>\r\n    <artifactId>mesos</artifactId>\r\n    <version>0.28.3</version>\r\n</dependency>\r\n```","```\r\npublic static void main(String[] args) {\r\n\r\n    String path = System.getProperty(\"user.dir\")\r\n      + \"/target/libraries2-1.0.0-SNAPSHOT.jar\";\r\n\r\n    CommandInfo.URI uri = CommandInfo.URI.newBuilder().setValue(path).setExtract(false).build();\r\n\r\n    String helloWorldCommand = \"java -cp libraries2-1.0.0-SNAPSHOT.jar com.baeldung.mesos.executors.HelloWorldExecutor\";\r\n    CommandInfo commandInfoHelloWorld = CommandInfo.newBuilder()\r\n      .setValue(helloWorldCommand)\r\n      .addUris(uri)\r\n      .build();\r\n\r\n    ExecutorInfo executorHelloWorld = ExecutorInfo.newBuilder()\r\n      .setExecutorId(Protos.ExecutorID.newBuilder()\r\n      .setValue(\"HelloWorldExecutor\"))\r\n      .setCommand(commandInfoHelloWorld)\r\n      .setName(\"Hello World (Java)\")\r\n      .setSource(\"java\")\r\n      .build();\r\n}\r\n```","```\r\nFrameworkInfo.Builder frameworkBuilder = FrameworkInfo.newBuilder()\r\n  .setFailoverTimeout(120000)\r\n  .setUser(\"\")\r\n  .setName(\"Hello World Framework (Java)\");\r\n\r\nframeworkBuilder.setPrincipal(\"test-framework-java\");\r\n\r\nMesosSchedulerDriver driver = new MesosSchedulerDriver(new HelloWorldScheduler(),\r\n  frameworkBuilder.build(), args[0]);\r\n```","```\r\nint status = driver.run() == Protos.Status.DRIVER_STOPPED ? 0 : 1;\r\n\r\ndriver.stop();\r\n\r\nSystem.exit(status);\r\n```","```\r\n@Override\r\npublic void resourceOffers(SchedulerDriver schedulerDriver, List<Offer> list) {\r\n\r\n    for (Offer offer : list) {\r\n        List<TaskInfo> tasks = new ArrayList<TaskInfo>();\r\n        Protos.TaskID taskId = Protos.TaskID.newBuilder()\r\n          .setValue(Integer.toString(launchedTasks++)).build();\r\n\r\n        System.out.println(\"Launching printHelloWorld \" + taskId.getValue() + \" Hello World Java\");\r\n\r\n        Protos.Resource.Builder cpus = Protos.Resource.newBuilder()\r\n          .setName(\"cpus\")\r\n          .setType(Protos.Value.Type.SCALAR)\r\n          .setScalar(Protos.Value.Scalar.newBuilder()\r\n            .setValue(1));\r\n\r\n        Protos.Resource.Builder mem = Protos.Resource.newBuilder()\r\n          .setName(\"mem\")\r\n          .setType(Protos.Value.Type.SCALAR)\r\n          .setScalar(Protos.Value.Scalar.newBuilder()\r\n            .setValue(128));\r\n```","```\r\n TaskInfo printHelloWorld = TaskInfo.newBuilder()\r\n          .setName(\"printHelloWorld \" + taskId.getValue())\r\n          .setTaskId(taskId)\r\n          .setSlaveId(offer.getSlaveId())\r\n          .addResources(cpus)\r\n          .addResources(mem)\r\n          .setExecutor(ExecutorInfo.newBuilder(helloWorldExecutor))\r\n          .build();\r\n\r\n        List<OfferID> offerIDS = new ArrayList<>();\r\n        offerIDS.add(offer.getId());\r\n\r\n        tasks.add(printHelloWorld);\r\n\r\n        schedulerDriver.launchTasks(offerIDS, tasks);\r\n    }\r\n}\r\n```","```\r\nschedulerDriver.declineOffer(offer.getId());\r\n```","```\r\njava -cp libraries2-1.0.0-SNAPSHOT.jar com.baeldung.mesos.executors.HelloWorldExecutor\r\n```","```\r\npublic class HelloWorldExecutor implements Executor {\r\n    public static void main(String[] args) {\r\n        MesosExecutorDriver driver = new MesosExecutorDriver(new HelloWorldExecutor());\r\n        System.exit(driver.run() == Protos.Status.DRIVER_STOPPED ? 0 : 1);\r\n    }\r\n}\r\n```","```\r\npublic void launchTask(ExecutorDriver driver, TaskInfo task) {\r\n\r\n    Protos.TaskStatus status = Protos.TaskStatus.newBuilder()\r\n      .setTaskId(task.getTaskId())\r\n      .setState(Protos.TaskState.TASK_RUNNING)\r\n      .build();\r\n    driver.sendStatusUpdate(status);\r\n\r\n    System.out.println(\"Execute Task!!!\");\r\n\r\n    status = Protos.TaskStatus.newBuilder()\r\n      .setTaskId(task.getTaskId())\r\n      .setState(Protos.TaskState.TASK_FINISHED)\r\n      .build();\r\n    driver.sendStatusUpdate(status);\r\n}\r\n```","```\r\nString myStatus = \"Hello Framework\";\r\ndriver.sendFrameworkMessage(myStatus.getBytes());\r\n```"]