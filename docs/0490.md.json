["```\r\npublic class SocialConnector {\r\n    private boolean isCounterEnabled = true;\r\n    private int counter = 4;\r\n    @Getter @Setter\r\n    List users;\r\n\r\n    public SocialConnector() {\r\n        users = new ArrayList<>();\r\n    }\r\n\r\n    public boolean switchCounter() {\r\n        this.isCounterEnabled = !this.isCounterEnabled;\r\n        return this.isCounterEnabled;\r\n    }\r\n} \r\n```","```\r\npublic List getFollowers(String account) {\r\n    if (counter < 0) {\r\n        throw new IllegalStateException (\"API limit reached\");\r\n    } else {\r\n        if (this.isCounterEnabled) {\r\n            counter--;\r\n        }\r\n        for (SocialUser user : users) {\r\n            if (user.getUsername().equals(account)) {\r\n                return user.getFollowers();\r\n            }\r\n        }\r\n     }\r\n     return new ArrayList<>();\r\n} \r\n```","```\r\npublic class SocialUser {\r\n    @Getter\r\n    private String username;\r\n    @Getter\r\n    private List<SocialUser> followers;\r\n\r\n    @Override\r\n    public boolean equals(Object obj) {\r\n        return ((SocialUser) obj).getUsername().equals(username);\r\n    }\r\n\r\n    public SocialUser(String username) {\r\n        this.username = username;\r\n        this.followers = new ArrayList<>();\r\n    }\r\n\r\n    public SocialUser(String username, List<SocialUser> followers) {\r\n        this.username = username;\r\n        this.followers = followers;\r\n    }\r\n\r\n    public void addFollowers(List<SocialUser> followers) {\r\n        this.followers.addAll(followers);\r\n    }\r\n}\r\n```","```\r\npublic class GreedyAlgorithm {\r\n    int currentLevel = 0;\r\n    final int maxLevel = 3;\r\n    SocialConnector sc;\r\n    public GreedyAlgorithm(SocialConnector sc) {\r\n        this.sc = sc;\r\n    }\r\n}\r\n```","```\r\npublic long findMostFollowersPath(String account) {\r\n    long max = 0;\r\n    SocialUser toFollow = null;\r\n\r\n    List followers = sc.getFollowers(account);\r\n    for (SocialUser el : followers) {\r\n        long followersCount = el.getFollowersCount();\r\n        if (followersCount > max) {\r\n            toFollow = el;\r\n            max = followersCount;\r\n        }\r\n    }\r\n    if (currentLevel < maxLevel - 1) {\r\n        currentLevel++;\r\n        max += findMostFollowersPath(toFollow.getUsername());\r\n    } \r\n    return max;\r\n}\r\n```","```\r\npublic void greedyAlgorithmTest() {\r\n    GreedyAlgorithm ga = new GreedyAlgorithm(prepareNetwork());\r\n    assertEquals(ga.findMostFollowersPath(\"root\"), 5);\r\n}\r\n```","```\r\npublic class NonGreedyAlgorithm {\r\n    int currentLevel = 0;\r\n    final int maxLevel = 3; \r\n    SocialConnector tc;\r\n\r\n    public NonGreedyAlgorithm(SocialConnector tc, int level) {\r\n        this.tc = tc;\r\n        this.currentLevel = level;\r\n    }\r\n}\r\n```","```\r\npublic long findMostFollowersPath(String account) {\t\t\r\n    List<SocialUser> followers = tc.getFollowers(account);\r\n    long total = currentLevel > 0 ? followers.size() : 0;\r\n\r\n    if (currentLevel < maxLevel ) {\r\n        currentLevel++;\r\n        long[] count = new long[followers.size()];\r\n        int i = 0;\r\n        for (SocialUser el : followers) {\r\n            NonGreedyAlgorithm sub = new NonGreedyAlgorithm(tc, currentLevel);\r\n            count[i] = sub.findMostFollowersPath(el.getUsername());\r\n            i++;\r\n        }\r\n\r\n        long max = 0;\r\n        for (; i > 0; i--) {\r\n            if (count[i-1] > max) {\r\n                max = count[i-1];\r\n            }\r\n        }\t\t\r\n        return total + max;\r\n     }\t\r\n     return total;\r\n}\r\n```","```\r\npublic void nongreedyAlgorithmTest() {\r\n    NonGreedyAlgorithm nga = new NonGreedyAlgorithm(prepareNetwork(), 0);\r\n    Assertions.assertThrows(IllegalStateException.class, () -> {\r\n        nga.findMostFollowersPath(\"root\");\r\n    });\r\n}\r\n\r\npublic void nongreedyAlgorithmUnboundedTest() {\r\n    SocialConnector sc = prepareNetwork();\r\n    sc.switchCounter();\r\n    NonGreedyAlgorithm nga = new NonGreedyAlgorithm(sc, 0);\r\n    assertEquals(nga.findMostFollowersPath(\"root\"), 6);\r\n}\r\n```"]