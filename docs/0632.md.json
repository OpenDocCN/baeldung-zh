["```\r\n<dependency>\r\n    <groupId>net.datafaker</groupId>\r\n    <artifactId>datafaker</artifactId>\r\n    <version>1.6.0</version>\r\n</dependency>\r\n```","```\r\npublic class Templatify {\r\n    private static Faker faker = new Faker();\r\n\r\n    public static void main(String[] args) {\r\n        System.out.println(\"Expression: \" + getExpression());\r\n        System.out.println(\"Expression with a placeholder: \" + getExpressionWithPlaceholder());\r\n    }\r\n\r\n    static String getExpression() {\r\n        return faker.expression(\"#{templatify 'test','t','j','r'}\");\r\n    }\r\n\r\n    static String getExpressionWithPlaceholder() {\r\n        return faker.expression(\"#{templatify '#ight', '#', 'f', 'l', 'm', 'n'}\");\r\n    }\r\n}\r\n```","```\r\nExpression: resj\r\nExpression with a placeholder: night\r\n```","```\r\npublic class Examplify {\r\n    private static Faker faker = new Faker();\r\n\r\n    public static void main(String[] args) {\r\n        System.out.println(\"Expression: \" + getExpression());\r\n        System.out.println(\"Number expression: \" + getNumberExpression());\r\n    }\r\n\r\n    static String getExpression() {\r\n        return faker.expression(\"#{examplify 'Cat in the Hat'}\");\r\n    }\r\n\r\n    static String getNumberExpression() {\r\n        return faker.expression(\"#{examplify '123-123-123'}\");\r\n    }\r\n}\r\n```","```\r\nExpression: Lvo lw ero Qkd\r\nNumber expression: 707-657-434\r\n```","```\r\npublic class Regexify {\r\n    private static Faker faker = new Faker();\r\n\r\n    public static void main(String[] args) {\r\n        System.out.println(\"Expression: \" + getExpression());\r\n        System.out.println(\"Regexify with a method: \" + getMethodExpression());\r\n    }\r\n\r\n    static String getExpression() {\r\n        return faker.expression(\"#{regexify '(hello|bye|hey)'}\");\r\n    }\r\n\r\n    static String getMethodExpression() {\r\n        return faker.regexify(\"[A-D]{4,10}\");\r\n    }\r\n} \r\n```","```\r\nExpression: bye\r\nRegexify with a method: DCCC \r\n```","```\r\npublic class Option {\r\n    private static Faker faker = new Faker();\r\n\r\n    public static void main(String[] args) {\r\n        System.out.println(\"First expression: \" + getFirstExpression());\r\n        System.out.println(\"Second expression: \" + getSecondExpression());\r\n        System.out.println(\"Third expression: \" + getThirdExpression());\r\n    }\r\n\r\n    static String getFirstExpression() {\r\n        return faker.expression(\"#{options.option 'Hi','Hello','Hey'}\");\r\n    }\r\n\r\n    static String getSecondExpression() {\r\n        return faker.expression(\"#{options.option '1','2','3','4','*'}\");\r\n    }\r\n\r\n    static String getThirdExpression() {\r\n        return faker.expression(\"#{regexify '(Hi|Hello|Hey)'}\");\r\n    }\r\n}\r\n```","```\r\nFirst expression: Hey\r\nSecond expression: 4\r\nThird expression: Hello\r\n```","```\r\npublic class Csv {\r\n    private static Faker faker = new Faker();\r\n\r\n    public static void main(String[] args) {\r\n        System.out.println(\"First expression:\\n\" + getFirstExpression());\r\n        System.out.println(\"Second expression:\\n\" + getSecondExpression());\r\n    }\r\n\r\n    static String getFirstExpression() {\r\n        String firstExpressionString\r\n          = \"#{csv '4','name_column','#{Name.first_name}','last_name_column','#{Name.last_name}'}\";\r\n        return faker.expression(firstExpressionString);\r\n    }\r\n\r\n    static String getSecondExpression() {\r\n        String secondExpressionString\r\n          = \"#{csv ',','\\\"','true','4','name_column','#{Name.first_name}','last_name_column','#{Name.last_name}'}\";\r\n        return faker.expression(secondExpressionString);\r\n    }\r\n}\r\n```","```\r\nFirst expression:\r\n\"name_column\",\"last_name_column\"\r\n\"Riley\",\"Spinka\"\r\n\"Lindsay\",\"O'Conner\"\r\n\"Sid\",\"Rogahn\"\r\n\"Prince\",\"Wiegand\"\r\n\r\nSecond expression:\r\n\"name_column\",\"last_name_column\"\r\n\"Jen\",\"Schinner\"\r\n\"Valeria\",\"Walter\"\r\n\"Mikki\",\"Effertz\"\r\n\"Deon\",\"Bergnaum\"\r\n```","```\r\npublic class Json {\r\n    private static final Faker faker = new Faker();\r\n\r\n    public static void main(String[] args) {\r\n        System.out.println(getExpression());\r\n    }\r\n\r\n    static String getExpression() {\r\n        return faker.expression(\r\n          \"#{json 'person',\" + \"'#{json ''first_name'',''#{Name.first_name}'',''last_name'',''#{Name.last_name}''}',\" +\r\n          \"'address',\" + \"'#{json ''country'',''#{Address.country}'',''city'',''#{Address.city}''}'}\");\r\n    }\r\n} \r\n```","```\r\n{\"person\": {\"first_name\": \"Dorian\", \"last_name\": \"Simonis\"}, \"address\": {\"country\": \"Cameroon\", \"city\": \"South Ernestine\"}}\r\n```","```\r\npublic class MethodInvocation {\r\n    private static Faker faker = new Faker();\r\n\r\n    public static void main(String[] args) {\r\n        System.out.println(\"Name from a method: \" + getNameFromMethod());\r\n        System.out.println(\"Name from an expression: \" + getNameFromExpression());\r\n    }\r\n\r\n    static String getNameFromMethod() {\r\n        return faker.name().firstName();\r\n    }\r\n\r\n    static String getNameFromExpression() {\r\n        return faker.expression(\"#{Name.first_Name}\");\r\n    }\r\n}\r\n```","```\r\npublic class MethodInvocationWithParams {\r\n    public static int MIN = 1;\r\n    public static int MAX = 10;\r\n    public static String UNIT = \"SECONDS\";\r\n    private static Faker faker = new Faker();\r\n\r\n    public static void main(String[] args) {\r\n        System.out.println(\"Duration from the method :\" + getDurationFromMethod());\r\n        System.out.println(\"Duration from the expression: \" + getDurationFromExpression());\r\n    }\r\n    static Duration getDurationFromMethod() {\r\n        return faker.date().duration(MIN, MAX, UNIT);\r\n    }\r\n\r\n    static String getDurationFromExpression() {\r\n        return faker.expression(\"#{date.duration '1', '10', 'SECONDS'}\");\r\n    }\r\n}\r\n```","```\r\nDuration from the method: PT6S\r\nDuration from the expression: PT4S\r\n```","```\r\npublic class Collection {\r\n    public static int MIN = 1;\r\n    public static int MAX = 100;\r\n    private static Faker faker = new Faker();\r\n\r\n    public static void main(String[] args) {\r\n        System.out.println(getFictionalCharacters());\r\n    }\r\n\r\n    static List<String> getFictionalCharacters() {\r\n        return faker.collection(\r\n          () -> faker.starWars().character(),\r\n          () -> faker.starTrek().character())\r\n            .len(MIN, MAX)\r\n            .generate();\r\n    }\r\n} \r\n```","```\r\npublic class MixedCollection {\r\n    public static int MIN = 1;\r\n    public static int MAX = 20;\r\n    private static Faker faker = new Faker();\r\n\r\n    public static void main(String[] args) {\r\n        System.out.println(getMixedCollection());\r\n    }\r\n\r\n    static List<? extends Serializable> getMixedCollection() {\r\n        return faker.collection(\r\n        () -> faker.date().birthday(),\r\n        () -> faker.name().fullName())\r\n          .len(MIN, MAX)\r\n          .generate();\r\n    }\r\n}\r\n```","```\r\n[1964-11-09 15:16:43.0, Devora Stamm DVM, 1980-01-11 15:18:00.0, 1989-04-28 05:13:54.0,\r\n  2004-09-06 17:11:49.0, Irving Turcotte, Sherita Durgan I, 2004-03-08 00:45:57.0, 1979-08-25 22:48:50.0,\r\n  Manda Hane, Latanya Hegmann, 1991-05-29 12:07:23.0, 1989-06-26 12:40:44.0, Kevin Quigley] \r\n```"]