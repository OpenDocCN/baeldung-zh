["```\r\nopenssl req -x509 -sha256 -days 3650 -newkey rsa:4096 -keyout rootCA.key -out rootCA.crt\r\n```","```\r\nopenssl req -new -newkey rsa:4096 -keyout localhost.key â€“out localhost.csr\r\n```","```\r\nauthorityKeyIdentifier=keyid,issuer\r\nbasicConstraints=CA:FALSE\r\nsubjectAltName = @alt_names\r\n[alt_names]\r\nDNS.1 = localhost\r\n```","```\r\nopenssl x509 -req -CA rootCA.crt -CAkey rootCA.key -in localhost.csr -out localhost.crt -days 365 -CAcreateserial -extfile localhost.ext\r\n```","```\r\nopenssl x509 -in localhost.crt -text\r\n```","```\r\nopenssl pkcs12 -export -out localhost.p12 -name \"localhost\" -inkey localhost.key -in localhost.crt\r\n```","```\r\nkeytool -importkeystore -srckeystore localhost.p12 -srcstoretype PKCS12 -destkeystore keystore.jks -deststoretype JKS\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-security</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-thymeleaf</artifactId>\r\n</dependency>\r\n```","```\r\n@SpringBootApplication\r\npublic class X509AuthenticationServer {\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(X509AuthenticationServer.class, args);\r\n    }\r\n}\r\n\r\n@Controller\r\npublic class UserController {\r\n    @RequestMapping(value = \"/user\")\r\n    public String user(Model model, Principal principal) {\r\n\r\n        UserDetails currentUser \r\n          = (UserDetails) ((Authentication) principal).getPrincipal();\r\n        model.addAttribute(\"username\", currentUser.getUsername());\r\n        return \"user\";\r\n    }\r\n}\r\n```","```\r\nserver.ssl.key-store=../store/keystore.jks\r\nserver.ssl.key-store-password=${PASSWORD}\r\nserver.ssl.key-alias=localhost\r\nserver.ssl.key-password=${PASSWORD}\r\nserver.ssl.enabled=true\r\nserver.port=8443\r\nspring.security.user.name=Admin\r\nspring.security.user.password=admin\r\n```","```\r\n<!DOCTYPE html>\r\n<html xmlns:th=\"http://www.thymeleaf.org\">\r\n<head>\r\n    <title>X.509 Authentication Demo</title>\r\n</head>\r\n<body>\r\n    <h2>Hello <span th:text=\"${username}\"/>!</h2>\r\n</body>\r\n</html>\r\n```","```\r\nmvn spring-boot:run\r\n```","```\r\nkeytool -import -trustcacerts -noprompt -alias ca -ext san=dns:localhost,ip:127.0.0.1 -file rootCA.crt -keystore truststore.jks\r\n```","```\r\n@SpringBootApplication\r\n@EnableWebSecurity\r\n@EnableGlobalMethodSecurity(prePostEnabled = true)\r\npublic class X509AuthenticationServer extends WebSecurityConfigurerAdapter {\r\n    ...\r\n\r\n    @Override\r\n    protected void configure(HttpSecurity http) throws Exception {\r\n        http.authorizeRequests().anyRequest().authenticated()\r\n          .and()\r\n          .x509()\r\n            .subjectPrincipalRegex(\"CN=(.*?)(?:,|$)\")\r\n            .userDetailsService(userDetailsService());\r\n    }\r\n\r\n    @Bean\r\n    public UserDetailsService userDetailsService() {\r\n        return new UserDetailsService() {\r\n            @Override\r\n            public UserDetails loadUserByUsername(String username) {\r\n                if (username.equals(\"Bob\")) {\r\n                    return new User(username, \"\", \r\n                      AuthorityUtils\r\n                        .commaSeparatedStringToAuthorityList(\"ROLE_USER\"));\r\n                }\r\n                throw new UsernameNotFoundException(\"User not found!\");\r\n            }\r\n        };\r\n    }\r\n}\r\n```","```\r\n@Controller\r\npublic class UserController {\r\n    @PreAuthorize(\"hasAuthority('ROLE_USER')\")\r\n    @RequestMapping(value = \"/user\")\r\n    public String user(Model model, Principal principal) {\r\n        ...\r\n    }\r\n}\r\n```","```\r\nserver.ssl.trust-store=store/truststore.jks\r\nserver.ssl.trust-store-password=${PASSWORD}\r\nserver.ssl.client-auth=need\r\n```","```\r\nopenssl req -new -newkey rsa:4096 -nodes -keyout clientBob.key -out clientBob.csr\r\n```","```\r\nopenssl x509 -req -CA rootCA.crt -CAkey rootCA.key -in clientBob.csr -out clientBob.crt -days 365 -CAcreateserial\r\n```","```\r\nopenssl pkcs12 -export -out clientBob.p12 -name \"clientBob\" -inkey clientBob.key -in clientBob.crt\r\n```","```\r\n<http>\r\n    ...\r\n    <x509 subject-principal-regex=\"CN=(.*?)(?:,|$)\" \r\n      user-service-ref=\"userService\"/>\r\n\r\n    <authentication-manager>\r\n        <authentication-provider>\r\n            <user-service id=\"userService\">\r\n                <user name=\"Bob\" password=\"\" authorities=\"ROLE_USER\"/>\r\n            </user-service>\r\n        </authentication-provider>\r\n    </authentication-manager>\r\n    ...\r\n</http>\r\n```","```\r\n<Connector port=\"8443\" protocol=\"HTTP/1.1\" SSLEnabled=\"true\" scheme=\"https\" secure=\"true\"\r\n    clientAuth=\"true\" sslProtocol=\"TLS\"\r\n    keystoreFile=\"${catalina.home}/conf/keystore.jks\"\r\n    keystoreType=\"JKS\" keystorePass=\"changeit\"\r\n    truststoreFile=\"${catalina.home}/conf/truststore.jks\"\r\n    truststoreType=\"JKS\" truststorePass=\"changeit\"\r\n/>\r\n```"]