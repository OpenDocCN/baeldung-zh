["```\r\n${projectDirectory}/.mvn/extensions.xml\r\n```","```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<extensions>\r\n    <extension>\r\n        <groupId>com.baeldung.maven.polyglot</groupId>\r\n        <artifactId>maven-polyglot-json-extension</artifactId>\r\n        <version>1.0-SNAPSHOT</version>\r\n    </extension>\r\n</extensions>\r\n```","```\r\n+-----------+-------------------+--------------------------------------+\r\n| Language  | Artifact Id       | Accepted POM files                   |\r\n+-----------+-------------------+--------------------------------------+\r\n| Atom      | polyglot-atom     | pom.atom                             |\r\n| Clojure   | polyglot-clojure  | pom.clj                              |\r\n| Groovy    | polyglot-groovy   | pom.groovy, pom.gy                   |\r\n| Java      | polyglot-java     | pom.java                             |\r\n| Kotlin    | polyglot-kotlin   | pom.kts                              |\r\n| Ruby      | polyglot-ruby     | pom.rb, Mavenfile, Jarfile, Gemfile  |\r\n| Scala     | polyglot-scala    | pom.scala                            |\r\n| XML       | polyglot-xml      | pom.xml                            |\r\n| YAML      | polyglot-yaml     | pom.yaml, pom.yml                    |\r\n+-----------+-------------------+--------------------------------------+ \r\n```","```\r\n${projectDirectory}/.mvn/extensions.xml\r\n```","```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<extensions>\r\n    <extension>\r\n        <groupId>io.takari.polyglot</groupId>\r\n        <artifactId>polyglot-yaml</artifactId>\r\n        <version>0.3.1</version>\r\n    </extension>\r\n</extensions>\r\n```","```\r\nmodelVersion: 4.0.0\r\ngroupId: com.baeldung.maven.polyglot\r\nartifactId: maven-polyglot-yml-app\r\nversion: 1.0-SNAPSHOT\r\nname: 'YAML Demo'\r\n\r\nproperties: {maven.compiler.source: 1.8, maven.compiler.target: 1.8}\r\n```","```\r\nmvn clean install\r\n```","```\r\nmvn io.takari.polyglot:polyglot-translate-plugin:translate -Dinput=pom.xml -Doutput=pom.yml\r\n```","```\r\n<dependency>\r\n    <groupId>org.apache.maven</groupId>\r\n    <artifactId>maven-core</artifactId>\r\n    <version>3.5.4</version>\r\n    <scope>provided</scope>\r\n</dependency>\r\n<dependency>\r\n    <groupId>com.fasterxml.jackson.core</groupId>\r\n    <artifactId>jackson-databind</artifactId>\r\n    <version>2.13.0</version>\r\n</dependency>\r\n```","```\r\n<plugin>\r\n    <groupId>org.codehaus.plexus</groupId>\r\n    <artifactId>plexus-component-metadata</artifactId>\r\n    <version>1.7.1</version>\r\n    <executions>\r\n        <execution>\r\n            <goals>\r\n                <goal>generate-metadata</goal>\r\n            </goals>\r\n        </execution>\r\n    </executions>\r\n</plugin>\r\n```","```\r\n@Component(role = ModelProcessor.class)\r\npublic class CustomModelProcessor implements ModelProcessor {\r\n\r\n    @Override\r\n    public File locatePom(File projectDirectory) {\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public Model read(\r\n      InputStream input, \r\n      Map<String, ?> options) throws IOException, ModelParseException {\r\n        return null;\r\n    }\r\n    //...\r\n}\r\n```","```\r\n@Override\r\npublic File locatePom(File projectDirectory) {\r\n    File pomFile = new File(projectDirectory, \"pom.json\");\r\n    if (!pomFile.exists()) {\r\n        pomFile = new File(projectDirectory, \"pom.xml\");\r\n    }\r\n    return pomFile;\r\n}\r\n```","```\r\n@Requirement\r\nprivate ModelReader modelReader;\r\n\r\n@Override\r\npublic Model read(InputStream input, Map<String, ?> options) \r\n  throws IOException, ModelParseException {\r\n\r\n    FileModelSource source = getFileFromOptions(options);\r\n    try (InputStream is = input) {\r\n        //JSON FILE ==> Jackson\r\n        if (isJsonFile(source)) {\r\n            ObjectMapper objectMapper = new ObjectMapper();\r\n            return objectMapper.readValue(input, Model.class);\r\n        } else {\r\n            // XML FILE ==> DefaultModelReader\r\n            return modelReader.read(input, options);\r\n        }\r\n    }\r\n    return model;\r\n}\r\n```","```\r\nmvn clean install\r\n```","```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<extensions>\r\n    <extension>\r\n        <groupId>com.baeldung.maven.polyglot</groupId>\r\n        <artifactId>maven-polyglot-json-extension</artifactId>\r\n        <version>1.0-SNAPSHOT</version>\r\n    </extension>\r\n</extensions>\r\n```","```\r\n{\r\n  \"modelVersion\": \"4.0.0\",\r\n  \"groupId\": \"com.baeldung.maven.polyglot\",\r\n  \"artifactId\": \"maven-polyglot-json-app\",\r\n  \"version\": \"1.0.1\",\r\n  \"name\": \"Json Maven Polyglot\",\r\n  \"parent\": {\r\n    \"groupId\": \"org.springframework.boot\",\r\n    \"artifactId\": \"spring-boot-starter-parent\",\r\n    \"version\": \"2.0.5.RELEASE\",\r\n    \"relativePath\": null\r\n  },\r\n  \"properties\": {\r\n    \"project.build.sourceEncoding\": \"UTF-8\",\r\n    \"project.reporting.outputEncoding\": \"UTF-8\",\r\n    \"maven.compiler.source\": \"1.8\",\r\n    \"maven.compiler.target\": \"1.8\",\r\n    \"java.version\": \"1.8\"\r\n  },\r\n  \"dependencies\": [\r\n    {\r\n      \"groupId\": \"org.springframework.boot\",\r\n      \"artifactId\": \"spring-boot-starter-web\"\r\n    }\r\n  ],\r\n  \"build\": {\r\n    \"plugins\": [\r\n      {\r\n        \"groupId\": \"org.springframework.boot\",\r\n        \"artifactId\": \"spring-boot-maven-plugin\"\r\n      }\r\n    ]\r\n  }\r\n}\r\n```","```\r\nmvnÂ spring-boot:run\r\n```"]