["```\r\npublic class User {\r\n    private Long id;\r\n    private String userName;\r\n    private String firstName;\r\n    private String email;\r\n\r\n    // getters and setters\r\n}\r\n```","```\r\npublic interface UserDao {\r\n    void create(User user);\r\n    User read(Long id);\r\n    void update(User user);\r\n    void delete(String userName);\r\n}\r\n```","```\r\npublic class UserDaoImpl implements UserDao {\r\n    private final EntityManager entityManager;\r\n\r\n    @Override\r\n    public void create(User user) {\r\n        entityManager.persist(user);\r\n    }\r\n\r\n    @Override\r\n    public User read(long id) {\r\n        return entityManager.find(User.class, id);\r\n    }\r\n\r\n    // ...\r\n}\r\n```","```\r\npublic interface UserRepository {\r\n    User get(Long id);\r\n    void add(User user);\r\n    void update(User user);\r\n    void remove(User user);\r\n}\r\n```","```\r\npublic class UserRepositoryImpl implements UserRepository {\r\n    private UserDaoImpl userDaoImpl;\r\n\r\n    @Override\r\n    public User get(Long id) {\r\n        User user = userDaoImpl.read(id);\r\n        return user;\r\n    }\r\n\r\n    @Override\r\n    public void add(User user) {\r\n        userDaoImpl.create(user);\r\n    }\r\n\r\n    // ...\r\n}\r\n```","```\r\npublic class Tweet {\r\n    private String email;\r\n    private String tweetText;    \r\n    private Date dateCreated;\r\n\r\n    // getters and setters\r\n}\r\n```","```\r\npublic interface TweetDao {\r\n    List<Tweet> fetchTweets(String email);    \r\n}\r\n```","```\r\npublic class TweetDaoImpl implements TweetDao {\r\n    @Override\r\n    public List<Tweet> fetchTweets(String email) {\r\n        List<Tweet> tweets = new ArrayList<Tweet>();\r\n\r\n        //call Twitter API and prepare Tweet object\r\n\r\n        return tweets;\r\n    }\r\n}\r\n```","```\r\npublic class UserSocialMedia extends User {\r\n    private List<Tweet> tweets;\r\n\r\n    // getters and setters\r\n}\r\n```","```\r\npublic class UserRepositoryImpl implements UserRepository {\r\n    private UserDaoImpl userDaoImpl;\r\n    private TweetDaoImpl tweetDaoImpl;\r\n\r\n    @Override\r\n    public User get(Long id) {\r\n        UserSocialMedia user = (UserSocialMedia) userDaoImpl.read(id);\r\n\r\n        List<Tweet> tweets = tweetDaoImpl.fetchTweets(user.getEmail());\r\n        user.setTweets(tweets);\r\n\r\n        return user;\r\n    }\r\n}\r\n```"]