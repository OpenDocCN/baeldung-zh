["```\r\n<dependency>\r\n    <groupId>com.amazonaws</groupId>\r\n    <artifactId>aws-java-sdk</artifactId>\r\n    <version>1.11.377</version>\r\n</dependency>\r\n```","```\r\nAWSCredentials credentials = new BasicAWSCredentials(\r\n  \"<AWS accesskey>\", \r\n  \"<AWS secretkey>\"\r\n); \r\n```","```\r\nAmazonRDSClientBuilder.standard().withCredentials(credentials)\r\n  .withRegion(Regions.AP_SOUTHEAST_2)\r\n  .build(); \r\n```","```\r\nCreateDBInstanceRequest request = new CreateDBInstanceRequest();\r\nrequest.setDBInstanceIdentifier(\"baeldung\");   \r\nrequest.setDBInstanceClass(\"db.t2.micro\");\r\nrequest.setEngine(\"postgres\");\r\nrequest.setMultiAZ(false);\r\nrequest.setMasterUsername(\"username\");\r\nrequest.setMasterUserPassword(\"password\");\r\nrequest.setDBName(\"mydb\");       \r\nrequest.setStorageType(\"gp2\");   \r\nrequest.setAllocatedStorage(10); \r\n```","```\r\namazonRDS.createDBInstance(request); \r\n```","```\r\nDescribeDBInstancesResult result = amazonRDS.describeDBInstances();\r\nList<DBInstance> instances = result.getDBInstances();\r\nfor (DBInstance instance : instances) {\r\n    // Information about each RDS instance\r\n    String identifier = instance.getDBInstanceIdentifier();\r\n    String engine = instance.getEngine();\r\n    String status = instance.getDBInstanceStatus();\r\n    Endpoint endpoint = instance.getEndpoint();\r\n}\r\n```","```\r\ndb_hostname=<Endpoint URL>\r\ndb_username=username\r\ndb_password=password\r\ndb_database=mydb \r\n```","```\r\nProperties prop = new Properties();\r\nInputStream input = AwsRdsDemo.class.getClassLoader().getResourceAsStream(\"db.properties\");\r\nprop.load(input);\r\nString db_hostname = prop.getProperty(\"db_hostname\");\r\nString db_username = prop.getProperty(\"db_username\");\r\nString db_password = prop.getProperty(\"db_password\");\r\nString db_database = prop.getProperty(\"db_database\"); \r\n```","```\r\nConnection conn = DriverManager.getConnection(jdbc_url, db_username, db_password);\r\nStatement statement = conn.createStatement();\r\nString sql = \"CREATE TABLE IF NOT EXISTS jdbc_test (id SERIAL PRIMARY KEY, content VARCHAR(80))\";\r\nstatement.executeUpdate(sql); \r\n```","```\r\nPreparedStatement preparedStatement = conn.prepareStatement(\"INSERT INTO jdbc_test (content) VALUES (?)\");\r\nString content = \"\" + UUID.randomUUID();\r\npreparedStatement.setString(1, content);\r\npreparedStatement.executeUpdate(); \r\n```","```\r\nString sql = \"SELECT  count(*) as count FROM jdbc_test\";\r\nResultSet resultSet = statement.executeQuery(sql);\r\nwhile (resultSet.next()) {\r\n    String count = resultSet.getString(\"count\");\r\n    Logger.log(\"Total Records: \" + count);\r\n} \r\n```","```\r\nDeleteDBInstanceRequest request = new DeleteDBInstanceRequest();\r\nrequest.setDBInstanceIdentifier(identifier);\r\nrequest.setSkipFinalSnapshot(true);\r\nDBInstance instance = amazonRDS.deleteDBInstance(request);\r\n```"]