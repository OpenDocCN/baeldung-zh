["```\r\n<dependency>\r\n    <groupId>one.microstream</groupId>\r\n    <artifactId>microstream-storage-embedded</artifactId>\r\n    <version>07.00.00-MS-GA</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>one.microstream</groupId>\r\n    <artifactId>microstream-storage-embedded-configuration</artifactId>\r\n    <version>07.00.00-MS-GA</version>\r\n</dependency>\r\n```","```\r\nEmbeddedStorageManager storageManager = EmbeddedStorage.start(directory);\r\nstorageManager.setRoot(\"baeldung-demo\");\r\nstorageManager.storeRoot();\r\n```","```\r\npublic class RootInstance {\r\n\r\n    private final String name;\r\n    private final List<Book> books;\r\n\r\n    public RootInstance(String name) {\r\n        this.name = name;\r\n        books = new ArrayList<>();\r\n    }\r\n\r\n    // standard getters, hashcode and equals\r\n}\r\n```","```\r\nEmbeddedStorageManager storageManager = EmbeddedStorage.start(directory);\r\nstorageManager.setRoot(new RootInstance(\"baeldung-demo\"));\r\nstorageManager.storeRoot();\r\n```","```\r\nRootInstance rootInstance = (RootInstance) storageManager.root();\r\nassertThat(rootInstance.getName()).isEqualTo(\"baeldung-demo\");\r\nassertThat(rootInstance.getBooks()).isEmpty()\r\nstorageManager.shutdown();\r\n```","```\r\nRootInstance rootInstance = (RootInstance) storageManager.root();\r\nList<Book> books = rootInstance.getBooks();\r\nbooks.addAll(booksToStore);\r\nstorageManager.store(books);\r\nassertThat(books).hasSize(2);\r\n```","```\r\nEmbeddedStorageManager storageManager = EmbeddedStorage.start(directory);\r\nif (storageManager.root() == null) {\r\n    RootInstance rootInstance = new RootInstance(\"baeldung-demo\");\r\n    storageManager.setRoot(rootInstance);\r\n    storageManager.storeRoot();\r\n} else {\r\n    RootInstance rootInstance = (RootInstance) storageManager.root();\r\n    // Use existing root loaded from storage\r\n}\r\n```","```\r\nprivate final Lazy<List<Book>> books;\r\n```","```\r\nbooks = Lazy.Reference(new ArrayList<>());\r\n```","```\r\npublic List<Book> getBooks() {\r\n    return Lazy.get(books);\r\n}\r\n```","```\r\nList<Book> books = rootInstance.getBooks();\r\nbooks.remove(1);\r\nstorageManager.store(books);\r\n```","```\r\nList<Book> booksFrom1998 = rootInstance.getBooks().stream()\r\n    .filter(book -> book.getYear() == 1998)\r\n    .collect(Collectors.toList());\r\n```"]