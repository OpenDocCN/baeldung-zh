["```\r\n<dependency>\r\n    <groupId>org.hibernate.validator</groupId>\r\n    <artifactId>hibernate-validator</artifactId>\r\n    <version>6.0.16.Final</version>\r\n</dependency>\r\n```","```\r\n@CreditCardNumber(ignoreNonDigitCharacters = true)\r\nprivate String lenientCreditCardNumber;\r\n```","```\r\nvalidations.setLenientCreditCardNumber(\"7992-7398-713\");\r\nconstraintViolations = validator.validateProperty(validations, \"lenientCreditCardNumber\");\r\nassertTrue(constraintViolations.isEmpty());\r\n```","```\r\n@Currency(\"EUR\")\r\nprivate MonetaryAmount balance;\r\n```","```\r\nbean.setBalance(Money.of(new BigDecimal(100.0), Monetary.getCurrency(\"EUR\")));\r\nconstraintViolations = validator.validateProperty(bean, \"balance\");\r\nassertEquals(0, constraintViolations.size());\r\n```","```\r\n@Range(min = 0, max = 100)\r\nprivate BigDecimal percent;\r\n```","```\r\n@DurationMin(days = 1, hours = 2)\r\n@DurationMax(days = 2, hours = 1)\r\nprivate Duration duration;\r\n```","```\r\n@DurationMax(minutes = 30, inclusive = false)\r\n```","```\r\n@Length(min = 1, max = 3)\r\nprivate String someString;\r\n```","```\r\n@CodePointLength(min = 1, max = 3)\r\nprivate String someString;\r\n```","```\r\n@LuhnCheck(startIndex = 0, endIndex = Integer.MAX_VALUE, checkDigitIndex = -1)\r\nprivate String someString;\r\n```","```\r\n@URL(protocol = \"https\")\r\nprivate String url;\r\n```","```\r\n@SafeHtml\r\nprivate String html;\r\n```","```\r\n@ScriptAssert(lang = \"nashorn\", script = \"_this.valid\")\r\npublic class AdditionalValidations {\r\n    private boolean valid = true;\r\n    // standard getters and setters\r\n}\r\n```","```\r\nbean.setValid(false);\r\nconstraintViolations = validator.validate(bean);\r\nassertEquals(1, constraintViolations.size());\r\n```"]