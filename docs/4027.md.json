["```\r\npublic class MyBeanNotOfRequiredTypeFailureAnalyzer \r\n  extends AbstractFailureAnalyzer<BeanNotOfRequiredTypeException> {\r\n\r\n    @Override\r\n    protected FailureAnalysis analyze(Throwable rootFailure, \r\n      BeanNotOfRequiredTypeException cause) {\r\n        return new FailureAnalysis(getDescription(cause), getAction(cause), cause);\r\n    }\r\n\r\n    private String getDescription(BeanNotOfRequiredTypeException ex) {\r\n        return String.format(\"The bean %s could not be injected as %s \"\r\n          + \"because it is of type %s\",\r\n          ex.getBeanName(),\r\n          ex.getRequiredType().getName(),\r\n          ex.getActualType().getName());\r\n    }\r\n\r\n    private String getAction(BeanNotOfRequiredTypeException ex) {\r\n        return String.format(\"Consider creating a bean with name %s of type %s\",\r\n          ex.getBeanName(),\r\n          ex.getRequiredType().getName());\r\n    }\r\n}\r\n```","```\r\norg.springframework.boot.diagnostics.FailureAnalyzer=\\\r\n  com.baeldung.failureanalyzer.MyBeanNotOfRequiredTypeFailureAnalyzer\r\n```","```\r\npublic class MyDAO { }\r\n```","```\r\n@Repository(\"myDAO\")\r\npublic class MySecondDAO { }\r\n```","```\r\n@Service\r\npublic class MyService {\r\n\r\n    @Resource(name = \"myDAO\")\r\n    private MyDAO myDAO;\r\n}\r\n```","```\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nThe bean myDAO could not be injected as com.baeldung.failureanalyzer.MyDAO \r\n  because it is of type com.baeldung.failureanalyzer.MySecondDAO$$EnhancerBySpringCGLIB$$d902559e\r\n\r\nAction:\r\n\r\nConsider creating a bean with name myDAO of type com.baeldung.failureanalyzer.MyDAO\r\n```"]