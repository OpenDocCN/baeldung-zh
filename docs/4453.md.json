["```\r\n@Test\r\npublic void whenPositiveArgument_thenReturnIndentedString() {\r\n    String multilineStr = \"This is\\na multiline\\nstring.\";\r\n    String outputStr = \"   This is\\n   a multiline\\n   string.\\n\";\r\n\r\n    String postIndent = multilineStr.indent(3);\r\n\r\n    assertThat(postIndent, equalTo(outputStr));\r\n}\r\n```","```\r\n@Test\r\npublic void whenNegativeArgument_thenReturnReducedIndentedString() {\r\n    String multilineStr = \"   This is\\n   a multiline\\n   string.\";\r\n    String outputStr = \" This is\\n a multiline\\n string.\\n\";\r\n\r\n    String postIndent = multilineStr.indent(-2);\r\n\r\n    assertThat(postIndent, equalTo(outputStr));\r\n}\r\n```","```\r\n@Test\r\npublic void whenTransformUsingLamda_thenReturnTransformedString() {\r\n    String result = \"hello\".transform(input -> input + \" world!\");\r\n\r\n    assertThat(result, equalTo(\"hello world!\"));\r\n}\r\n```","```\r\n@Test\r\npublic void whenTransformUsingParseInt_thenReturnInt() {\r\n    int result = \"42\".transform(Integer::parseInt);\r\n\r\n    assertThat(result, equalTo(42));\r\n}\r\n```"]