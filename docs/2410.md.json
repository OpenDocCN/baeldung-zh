["```\r\n@Entity(name = \"users\")\r\npublic class User {\r\n\r\n    @Id\r\n    @GeneratedValue\r\n    private Long id;\r\n    private String name;\r\n\r\n    @ManyToMany\r\n    private List<Group> groups = new ArrayList<>();\r\n\r\n    // standard getters and setters\r\n\r\n} \r\n```","```\r\n@Entity\r\npublic class Group {\r\n\r\n    @Id\r\n    @GeneratedValue\r\n    private Long id;\r\n    private String name;\r\n\r\n    @ManyToMany(mappedBy = \"groups\")\r\n    private List<User> users = new ArrayList<>();\r\n\r\n    // standard getters and setters\r\n\r\n} \r\n```","```\r\n@Entity(name = \"r_user_group\")\r\npublic class UserGroupRelation implements Serializable {\r\n\r\n    @Id\r\n    @Column(name = \"user_id\", insertable = false, updatable = false)\r\n    private Long userId;\r\n\r\n    @Id\r\n    @Column(name = \"group_id\", insertable = false, updatable = false)\r\n    private Long groupId;\r\n\r\n} \r\n```","```\r\npublic enum UserGroupRole {\r\n    MEMBER, MODERATOR\r\n} \r\n```","```\r\n@Enumerated(EnumType.STRING)\r\nprivate UserGroupRole role; \r\n```","```\r\n@ManyToMany\r\n@JoinTable(\r\n    name = \"r_user_group\",\r\n    joinColumns = @JoinColumn(name = \"user_id\"),\r\n    inverseJoinColumns = @JoinColumn(name = \"group_id\")\r\n)\r\nprivate List<Group> groups = new ArrayList<>(); \r\n```","```\r\npublic void setUp() {\r\n    session = sessionFactory.openSession();\r\n    session.beginTransaction();\r\n\r\n    user1 = new User(\"user1\");\r\n    user2 = new User(\"user2\");\r\n    user3 = new User(\"user3\");\r\n\r\n    group1 = new Group(\"group1\");\r\n    group2 = new Group(\"group2\");\r\n\r\n    session.save(group1);\r\n    session.save(group2);\r\n\r\n    session.save(user1);\r\n    session.save(user2);\r\n    session.save(user3);\r\n\r\n    saveRelation(user1, group1, UserGroupRole.MODERATOR);\r\n    saveRelation(user2, group1, UserGroupRole.MODERATOR);\r\n    saveRelation(user3, group1, UserGroupRole.MEMBER);\r\n\r\n    saveRelation(user1, group2, UserGroupRole.MEMBER);\r\n    saveRelation(user2, group2, UserGroupRole.MODERATOR);\r\n}\r\n\r\nprivate void saveRelation(User user, Group group, UserGroupRole role) {\r\n\r\n    UserGroupRelation relation = new UserGroupRelation(user.getId(), group.getId(), role);\r\n\r\n    session.save(relation);\r\n    session.flush();\r\n    session.refresh(user);\r\n    session.refresh(group);\r\n}\r\n```","```\r\nList<Group> groups = user1.getGroups(); \r\n```","```\r\n[Group [name=group1], Group [name=group2]] \r\n```","```\r\n@WhereJoinTable(clause = \"role='MODERATOR'\")\r\n@ManyToMany\r\n@JoinTable(\r\n    name = \"r_user_group\",\r\n    joinColumns = @JoinColumn(name = \"user_id\"),\r\n    inverseJoinColumns = @JoinColumn(name = \"group_id\")\r\n)\r\nprivate List<Group> moderatorGroups = new ArrayList<>(); \r\n```","```\r\nList<Group> groups = user1.getModeratorGroups(); \r\n```","```\r\n[Group [name=group1]] \r\n```"]