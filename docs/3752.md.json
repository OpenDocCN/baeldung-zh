["```\r\npublic class Employee {\r\n    private String privateId;\r\n    private boolean manager;\r\n    //...\r\n}\r\n```","```\r\nprivate Employee(String id, String name, boolean managerAttribute) {\r\n    this.name = name;\r\n    this.privateId = id + \"_ID-MANAGER\";\r\n}\r\n```","```\r\npublic static Employee buildManager(String id, String name) {\r\n    return new Employee(id, name, true);\r\n}\r\n```","```\r\nEmployee manager = Employee.buildManager(\"123MAN\",\"Bob\");\r\n```","```\r\nprivate void setManager(boolean manager) {\r\n    this.manager = manager;\r\n}\r\n```","```\r\npublic void elevateToManager() {\r\n    if (\"Carl\".equals(this.name)) {\r\n        setManager(true);\r\n    }\r\n}\r\n```","```\r\npublic class ExampleClass {\r\n\r\n    public static void main(String[] args) {\r\n        Employee employee = new Employee(\"Bob\",\"ABC123\");\r\n        employee.setPrivateId(\"BCD234\");\r\n        System.out.println(employee.getPrivateId());\r\n    }\r\n}\r\n```","```\r\nBCD234_ID\r\n```","```\r\npublic class ExampleClass {\r\n\r\n    public static void main(String[] args) {\r\n        Employee employee = new Employee(\"Bob\",\"ABC123\",true);\r\n        employee.setManager(true);\r\n        employee.privateId = \"ABC234\";\r\n    }\r\n}\r\n```","```\r\nThe constructor Employee(String, String, boolean) is not visible\r\nThe method setManager(boolean) from the type Employee is not visible\r\nThe field Employee.privateId is not visible\r\n```","```\r\npublic class PublicOuterClass {\r\n\r\n    public PrivateInnerClass getInnerClassInstance() {\r\n        PrivateInnerClass myPrivateClassInstance = this.new PrivateInnerClass();\r\n        myPrivateClassInstance.id = \"ID1\";\r\n        myPrivateClassInstance.name = \"Bob\";\r\n        return myPrivateClassInstance;\r\n    }\r\n\r\n    private class PrivateInnerClass {\r\n        public String name;\r\n        public String id;\r\n    }\r\n}\r\n```","```\r\nPrivateInnerClass cannot be resolved to a type\r\n```"]