["```\r\ntrait UserTrait {\r\n    String sayHello() {\r\n        return \"Hello!\"\r\n    }\r\n}\r\n```","```\r\nclass Employee implements UserTrait {}\r\n```","```\r\ndef 'Should return msg string when using Employee.sayHello method provided by User trait' () {\r\n    when:\r\n        def msg = employee.sayHello()\r\n    then:\r\n        msg\r\n        msg instanceof String\r\n        assert msg == \"Hello!\"\r\n}\r\n```","```\r\nprivate String greetingMessage() {\r\n    return 'Hello, from a private method!'\r\n}\r\n\r\nString greet() {\r\n    def msg = greetingMessage()\r\n    println msg\r\n    return msg\r\n} \r\n```","```\r\ndef 'Should return MissingMethodException when using Employee.greetingMessage method' () {\r\n    when:\r\n        def exception\r\n        try {\r\n            employee.greetingMessage()\r\n        } catch(Exception e) {\r\n            exception = e\r\n        }\r\n\r\n    then:\r\n        exception\r\n        exception instanceof groovy.lang.MissingMethodException\r\n        assert exception.message == \"No signature of method: com.baeldung.traits.Employee.greetingMessage()\"\r\n          + \" is applicable for argument types: () values: []\"\r\n}\r\n```","```\r\ntrait UserTrait {\r\n    abstract String name()\r\n\r\n    String showName() {\r\n       return \"Hello, ${name()}!\"\r\n    }\r\n}\r\n```","```\r\nclass Employee implements UserTrait {\r\n    String name() {\r\n        return 'Bob'\r\n    }\r\n} \r\n```","```\r\ntrait SpeakingTrait {\r\n    String speak() {\r\n        return \"Speaking!!\"\r\n    }\r\n} \r\n```","```\r\nclass Dog implements SpeakingTrait {\r\n    String speak() {\r\n        return \"Bow Bow!!\"\r\n    }\r\n} \r\n```","```\r\ntrait UserTrait {\r\n    def self() {\r\n        return this \r\n    }\r\n}\r\n```","```\r\ninterface Human {\r\n    String lastName()\r\n}\r\n```","```\r\ntrait UserTrait implements Human {\r\n    String showLastName() {\r\n        return \"Hello, ${lastName()}!\"\r\n    }\r\n}\r\n```","```\r\nclass Employee implements UserTrait {\r\n    String lastName() {\r\n        return \"Marley\"\r\n    }\r\n}\r\n```","```\r\ntrait UserTrait implements Human { \r\n    String email\r\n    String address\r\n}\r\n```","```\r\ntrait WheelTrait {\r\n    int noOfWheels\r\n}\r\n\r\ntrait VehicleTrait extends WheelTrait {\r\n    String showWheels() {\r\n        return \"Num of Wheels $noOfWheels\" \r\n    } \r\n}\r\n\r\nclass Car implements VehicleTrait {}\r\n```","```\r\ntrait AddressTrait {                                      \r\n    String residentialAddress\r\n}\r\n\r\ntrait EmailTrait {                                    \r\n    String email\r\n}\r\n\r\ntrait Person implements AddressTrait, EmailTrait {}\r\n```","```\r\ntrait WalkingTrait {\r\n    String basicAbility() {\r\n        return \"Walking!!\"\r\n    }\r\n}\r\n\r\ntrait SpeakingTrait {\r\n    String basicAbility() {\r\n        return \"Speaking!!\"\r\n    }\r\n} \r\n```","```\r\nclass Dog implements WalkingTrait, SpeakingTrait {} \r\n```","```\r\nString speakAndWalk() {\r\n    return \"Walk and speak!!\"\r\n}\r\n```","```\r\nString speakAndWalk() {\r\n    return \"Speak and walk!!\"\r\n}\r\n```","```\r\nclass Dog implements WalkingTrait, SpeakingTrait {\r\n    String speakAndWalk() {\r\n        WalkingTrait.super.speakAndWalk()\r\n    }\r\n}\r\n```","```\r\ntrait AnimalTrait {\r\n    String basicBehavior() {\r\n        return \"Animalistic!!\"\r\n    }\r\n}\r\n```","```\r\ndef dog = new Dog()\r\ndef dogWithTrait = dog.withTraits SpeakingTrait, WalkingTrait, AnimalTrait\r\n```"]