["```\r\n<dependency>\r\n    <groupId>com.google.auto.factory</groupId>\r\n    <artifactId>auto-factory</artifactId>\r\n    <version>1.0-beta5</version>\r\n</dependency>\r\n```","```\r\n@AutoFactory\r\npublic class Phone {\r\n\r\n    private final Camera camera;\r\n\r\n    private final String otherParts;\r\n\r\n    PhoneAssembler(@Provided Camera camera, String otherParts) {\r\n        this.camera = camera;\r\n        this.otherParts = otherParts;\r\n    }\r\n\r\n    //...\r\n\r\n}\r\n```","```\r\n@Generated(\"com.google.auto.factory.processor.AutoFactoryProcessor\")\r\npublic final class PhoneFactory {\r\n\r\n    private final Provider<Camera> cameraProvider;\r\n\r\n    @Inject\r\n    PhoneAssemblerFactory(Provider<Camera> cameraProvider) {\r\n        this.cameraProvider = checkNotNull(cameraProvider, 1);\r\n    }\r\n\r\n    PhoneAssembler create(String otherParts) {\r\n      return new PhoneAssembler(\r\n        checkNotNull(cameraProvider.get(), 1),\r\n        checkNotNull(otherParts, 2));\r\n    }\r\n\r\n    // ...\r\n\r\n}\r\n```","```\r\nPhoneFactory phoneFactory = new PhoneFactory(\r\n  () -> new Camera(\"Unknown\", \"XXX\"));\r\nPhone simplePhone = phoneFactory.create(\"other parts\");\r\n```","```\r\npublic class ClassicPhone {\r\n\r\n    private final String dialpad;\r\n    private final String ringer;\r\n    private String otherParts;\r\n\r\n    @AutoFactory\r\n    public ClassicPhone(\r\n      @Provided String dialpad, @Provided String ringer) {\r\n        this.dialpad = dialpad;\r\n        this.ringer = ringer;\r\n    }\r\n\r\n    @AutoFactory\r\n    public ClassicPhone(String otherParts) {\r\n        this(\"defaultDialPad\", \"defaultRinger\");\r\n        this.otherParts = otherParts;\r\n    }\r\n\r\n    //...\r\n\r\n}\r\n```","```\r\n@Generated(value = \"com.google.auto.factory.processor.AutoFactoryProcessor\")\r\npublic final class ClassicPhoneFactory {\r\n    private final Provider<String> java_lang_StringProvider;\r\n\r\n    @Inject\r\n    public ClassicPhoneFactory(Provider<String> java_lang_StringProvider) {\r\n        this.java_lang_StringProvider =\r\n          checkNotNull(java_lang_StringProvider, 1);\r\n    }\r\n\r\n    public ClassicPhone create() {\r\n        return new ClassicPhone(\r\n          checkNotNull(java_lang_StringProvider.get(), 1),\r\n          checkNotNull(java_lang_StringProvider.get(), 2));\r\n    }\r\n\r\n    public ClassicPhone create(String otherParts) {\r\n        return new ClassicPhone(checkNotNull(otherParts, 1));\r\n    }\r\n\r\n    //...\r\n\r\n}\r\n```","```\r\n@AutoFactory\r\npublic class Phone {\r\n\r\n    PhoneAssembler(\r\n      @Provided @Named(\"Sony\") Camera camera, String otherParts) {\r\n        this.camera = camera;\r\n        this.otherParts = otherParts;\r\n    }\r\n\r\n    //...\r\n\r\n}\r\n```","```\r\n@Generated(\"com.google.auto.factory.processor.AutoFactoryProcessor\")\r\npublic final class PhoneFactory {\r\n\r\n    private final Provider<Camera> cameraProvider;\r\n\r\n    @Inject\r\n    PhoneAssemblerFactory(@Named(\"Sony\") Provider<Camera> cameraProvider) {\r\n      this.cameraProvider = checkNotNull(cameraProvider, 1);\r\n    }\r\n\r\n    //...\r\n\r\n}\r\n```","```\r\n@AutoFactory(className = \"SamsungFactory\")\r\npublic class SmartPhone {\r\n\r\n    //...\r\n\r\n}\r\n```","```\r\n@Generated(\"com.google.auto.factory.processor.AutoFactoryProcessor\")\r\npublic final class SamsungFactory {\r\n\r\n    //...\r\n\r\n}\r\n```","```\r\n@AutoFactory(\r\n  className = \"SamsungFactory\", \r\n  allowSubclasses = true)\r\npublic class SmartPhone {\r\n\r\n    //...\r\n\r\n}\r\n```","```\r\n@Generated(\"com.google.auto.factory.processor.AutoFactoryProcessor\")\r\npublic class SamsungFactory {\r\n\r\n    //...\r\n\r\n}\r\n```","```\r\npublic interface CustomStorage {\r\n    SmartPhone customROMInGB(int romSize);\r\n}\r\n```","```\r\n@AutoFactory(\r\n  className = \"SamsungFactory\",\r\n  allowSubclasses = true,\r\n  implementing = CustomStorage.class)\r\npublic class SmartPhone {\r\n\r\n    public SmartPhone(int romSize){\r\n        //...\r\n    }\r\n\r\n    //...\r\n\r\n}\r\n```","```\r\n@Generated(\"com.google.auto.factory.processor.AutoFactoryProcessor\")\r\npublic class SamsungFactory implements CustomStorage {\r\n\r\n    //...\r\n\r\n    public SmartPhone create(int romSize) {\r\n        return new SmartPhone(romSize);\r\n    }\r\n\r\n    @Override\r\n    public SmartPhone customROMInGB(int romSize) {\r\n        return create(romSize);\r\n    }\r\n}\r\n```","```\r\npublic abstract class AbstractFactory {\r\n    abstract CustomPhone newInstance(String brand);\r\n}\r\n\r\n@AutoFactory(extending = AbstractFactory.class)\r\npublic class CustomPhone {\r\n\r\n    private final String brand;\r\n\r\n    public CustomPhone(String brand) {\r\n        this.brand = brand;\r\n    }\r\n}\r\n```","```\r\n@Generated(\"com.google.auto.factory.processor.AutoFactoryProcessor\")\r\npublic final class CustomPhoneFactory extends AbstractFactory {\r\n\r\n    @Inject\r\n    public CustomPhoneFactory() {\r\n    }\r\n\r\n    public CustomPhone create(String brand) {\r\n        return new CustomPhone(checkNotNull(brand, 1));\r\n    }\r\n\r\n    @Override\r\n    public CustomPhone newInstance(String brand) {\r\n        return create(brand);\r\n    }\r\n\r\n    //...\r\n\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>com.google.inject</groupId>\r\n    <artifactId>guice</artifactId>\r\n    <version>4.2.0</version>\r\n</dependency>\r\n```","```\r\n@Generated(\"com.google.auto.factory.processor.AutoFactoryProcessor\")\r\npublic final class PhoneFactory {\r\n\r\n    private final Provider<Camera> cameraProvider;\r\n\r\n    @Inject\r\n    public PhoneFactory(@Named(\"Sony\") Provider<Camera> cameraProvider) {\r\n        this.cameraProvider = checkNotNull(cameraProvider, 1);\r\n    }\r\n\r\n    //...\r\n\r\n}\r\n```","```\r\npublic class SonyCameraModule extends AbstractModule {\r\n\r\n    private static int SONY_CAMERA_SERIAL = 1;\r\n\r\n    @Named(\"Sony\")\r\n    @Provides\r\n    Camera cameraProvider() {\r\n        return new Camera(\r\n          \"Sony\", String.format(\"%03d\", SONY_CAMERA_SERIAL++));\r\n    }\r\n\r\n}\r\n```","```\r\nInjector injector = Guice.createInjector(new SonyCameraModule());\r\nPhoneFactory injectedFactory = injector.getInstance(PhoneFactory.class);\r\nPhone xperia = injectedFactory.create(\"Xperia\");\r\n```"]