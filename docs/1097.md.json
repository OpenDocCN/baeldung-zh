["```\r\npublic void processFoo(Flux<Foo> flux) {\r\n    flux.map(FooNameHelper::concatFooName)\r\n      .map(FooNameHelper::substringFooName)\r\n      .map(FooReporter::reportResult)\r\n      .subscribe();\r\n}\r\n\r\npublic void processFooInAnotherScenario(Flux<Foo> flux) {\r\n    flux.map(FooNameHelper::substringFooName)\r\n      .map(FooQuantityHelper::divideFooQuantity)\r\n      .subscribe();\r\n}\r\n```","```\r\nCaused by: java.lang.StringIndexOutOfBoundsException: String index out of range: 15\r\n    at j.l.String.substring(String.java:1963)\r\n    at com.baeldung.debugging.consumer.service.FooNameHelper\r\n      .lambda$1(FooNameHelper.java:38)\r\n    at r.c.p.FluxMap$MapSubscriber.onNext(FluxMap.java:100)\r\n    at r.c.p.FluxMap$MapSubscriber.onNext(FluxMap.java:114)\r\n    at r.c.p.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:275)\r\n    at r.c.p.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:849)\r\n    at r.c.p.Operators$MonoSubscriber.complete(Operators.java:1476)\r\n    at r.c.p.MonoDelayUntil$DelayUntilCoordinator.signal(MonoDelayUntil.java:211)\r\n    at r.c.p.MonoDelayUntil$DelayUntilTrigger.onComplete(MonoDelayUntil.java:290)\r\n    at r.c.p.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:118)\r\n    at r.c.s.SchedulerTask.call(SchedulerTask.java:50)\r\n    at r.c.s.SchedulerTask.call(SchedulerTask.java:27)\r\n    at j.u.c.FutureTask.run(FutureTask.java:266)\r\n    at j.u.c.ScheduledThreadPoolExecutor$ScheduledFutureTask\r\n      .access$201(ScheduledThreadPoolExecutor.java:180)\r\n    at j.u.c.ScheduledThreadPoolExecutor$ScheduledFutureTask\r\n      .run(ScheduledThreadPoolExecutor.java:293)\r\n    at j.u.c.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n    at j.u.c.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n    at j.l.Thread.run(Thread.java:748)\r\n```","```\r\npublic void processFoo(Flux<Foo> flux) {\r\n\r\n    // ...\r\n\r\n    flux.subscribe(foo -> {\r\n        logger.debug(\"Finished processing Foo with Id {}\", foo.getId());\r\n    }, error -> {\r\n        logger.error(\r\n          \"The following error happened on processFoo method!\",\r\n           error);\r\n    });\r\n}\r\n```","```\r\nflux.doOnError(error -> {\r\n    logger.error(\"The following error happened on processFoo method!\", error);\r\n}).subscribe();\r\n```","```\r\nHooks.onOperatorDebug();\r\n```","```\r\n16:06:35.334 [parallel-1] ERROR c.b.d.consumer.service.FooService\r\n  - The following error happened on processFoo method!\r\njava.lang.StringIndexOutOfBoundsException: String index out of range: 15\r\n    at j.l.String.substring(String.java:1963)\r\n    at c.d.b.c.s.FooNameHelper.lambda$1(FooNameHelper.java:38)\r\n    ...\r\n    at j.l.Thread.run(Thread.java:748)\r\n    Suppressed: r.c.p.FluxOnAssembly$OnAssemblyException: \r\nAssembly trace from producer [reactor.core.publisher.FluxMapFuseable] :\r\n    reactor.core.publisher.Flux.map(Flux.java:5653)\r\n    c.d.b.c.s.FooNameHelper.substringFooName(FooNameHelper.java:32)\r\n    c.d.b.c.s.FooService.processFoo(FooService.java:24)\r\n    c.d.b.c.c.ChronJobs.consumeInfiniteFlux(ChronJobs.java:46)\r\n    o.s.s.s.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)\r\n    o.s.s.s.DelegatingErrorHandlingRunnable\r\n      .run(DelegatingErrorHandlingRunnable.java:54)\r\n    o.u.c.Executors$RunnableAdapter.call(Executors.java:511)\r\n    o.u.c.FutureTask.runAndReset(FutureTask.java:308)\r\nError has been observed by the following operator(s):\r\n    |_    Flux.map ⇢ c.d.b.c.s.FooNameHelper\r\n            .substringFooName(FooNameHelper.java:32)\r\n    |_    Flux.map ⇢ c.d.b.c.s.FooReporter.reportResult(FooReporter.java:15)\r\n```","```\r\npublic void processFoo(Flux<Foo> flux) {\r\n    flux.publishOn(Schedulers.newSingle(\"foo-thread\"))\r\n       // ...\r\n      .publishOn(Schedulers.newSingle(\"bar-thread\"))\r\n      .map(FooReporter::reportResult)\r\n      .subscribeOn(Schedulers.newSingle(\"starter-thread\"))\r\n      .subscribe();\r\n}\r\n```","```\r\npublic void processFoo(Flux<Foo> flux) {\r\n\r\n    // ...\r\n\r\n    flux.checkpoint(\"Observed error on processFoo\", true)\r\n      .subscribe();\r\n}\r\n```","```\r\nCaused by: java.lang.StringIndexOutOfBoundsException: String index out of range: 15\r\n\t...\r\nAssembly trace from producer [reactor.core.publisher.FluxMap],\r\n  described as [Observed error on processFoo] :\r\n    r.c.p.Flux.checkpoint(Flux.java:3096)\r\n    c.b.d.c.s.FooService.processFoo(FooService.java:26)\r\n    c.b.d.c.c.ChronJobs.consumeInfiniteFlux(ChronJobs.java:46)\r\n    o.s.s.s.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)\r\n    o.s.s.s.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)\r\n    j.u.c.Executors$RunnableAdapter.call(Executors.java:511)\r\n    j.u.c.FutureTask.runAndReset(FutureTask.java:308)\r\nError has been observed by the following operator(s):\r\n    |_    Flux.checkpoint ⇢ c.b.d.c.s.FooService.processFoo(FooService.java:26)\r\n```","```\r\npublic void processFoo(Flux<Foo> flux) {\r\n    flux.map(FooNameHelper::concatFooName)\r\n      .map(FooNameHelper::substringFooName)\r\n      .log();\r\n      .map(FooReporter::reportResult)\r\n      .doOnError(error -> {\r\n        logger.error(\"The following error happened on processFoo method!\", error);\r\n      })\r\n      .subscribe();\r\n}\r\n```","```\r\nINFO  reactor.Flux.OnAssembly.1 - onSubscribe(FluxMap.MapSubscriber)\r\nINFO  reactor.Flux.OnAssembly.1 - request(unbounded)\r\nINFO  reactor.Flux.OnAssembly.1 - onNext(Foo(id=0, formattedName=theFo, quantity=8))\r\nINFO  reactor.Flux.OnAssembly.1 - onNext(Foo(id=1, formattedName=theFo, quantity=3))\r\nINFO  reactor.Flux.OnAssembly.1 - onNext(Foo(id=2, formattedName=theFo, quantity=5))\r\nINFO  reactor.Flux.OnAssembly.1 - onNext(Foo(id=3, formattedName=theFo, quantity=6))\r\nINFO  reactor.Flux.OnAssembly.1 - onNext(Foo(id=4, formattedName=theFo, quantity=6))\r\nINFO  reactor.Flux.OnAssembly.1 - cancel()\r\nERROR c.b.d.consumer.service.FooService \r\n  - The following error happened on processFoo method!\r\n...\r\n```"]