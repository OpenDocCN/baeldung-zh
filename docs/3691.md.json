["```\r\npublic class EmployeeDAO {\r\n    private JdbcTemplate jdbcTemplate;\r\n\r\n    public void setDataSource(DataSource dataSource) {\r\n        jdbcTemplate = new JdbcTemplate(dataSource);\r\n    }\r\n\r\n    public int getCountOfEmployees() {\r\n        return jdbcTemplate.queryForObject(\"SELECT COUNT(*) FROM EMPLOYEE\", Integer.class);\r\n    }\r\n}\r\n```","```\r\n@Test\r\npublic void whenInjectInMemoryDataSource_thenReturnCorrectEmployeeCount() {\r\n    DataSource dataSource = new EmbeddedDatabaseBuilder().setType(EmbeddedDatabaseType.H2)\r\n      .addScript(\"classpath:jdbc/schema.sql\")\r\n      .addScript(\"classpath:jdbc/test-data.sql\")\r\n      .build();\r\n\r\n    EmployeeDAO employeeDAO = new EmployeeDAO();\r\n    employeeDAO.setDataSource(dataSource);\r\n\r\n    assertEquals(4, employeeDAO.getCountOfEmployees());\r\n}\r\n```","```\r\nCREATE TABLE EMPLOYEE\r\n(\r\n    ID int NOT NULL PRIMARY KEY,\r\n    FIRST_NAME varchar(255),\r\n    LAST_NAME varchar(255),\r\n    ADDRESS varchar(255)\r\n);\r\n```","```\r\nINSERT INTO EMPLOYEE VALUES (1, 'James', 'Gosling', 'Canada');\r\nINSERT INTO EMPLOYEE VALUES (2, 'Donald', 'Knuth', 'USA');\r\nINSERT INTO EMPLOYEE VALUES (3, 'Linus', 'Torvalds', 'Finland');\r\nINSERT INTO EMPLOYEE VALUES (4, 'Dennis', 'Ritchie', 'USA');\r\n```","```\r\npublic class EmployeeDAOUnitTest {\r\n    @Mock\r\n    JdbcTemplate jdbcTemplate;\r\n\r\n    @Test\r\n    public void whenMockJdbcTemplate_thenReturnCorrectEmployeeCount() {\r\n        EmployeeDAO employeeDAO = new EmployeeDAO();\r\n        ReflectionTestUtils.setField(employeeDAO, \"jdbcTemplate\", jdbcTemplate);\r\n        Mockito.when(jdbcTemplate.queryForObject(\"SELECT COUNT(*) FROM EMPLOYEE\", Integer.class))\r\n          .thenReturn(4);\r\n\r\n        assertEquals(4, employeeDAO.getCountOfEmployees());\r\n    }\r\n}\r\n```","```\r\nMockito.when(jdbcTemplate.queryForObject(Mockito.anyString(), Mockito.eq(Integer.class)))\r\n  .thenReturn(3);\r\nassertEquals(3, employeeDAO.getCountOfEmployees());\r\n```","```\r\n@JdbcTest\r\n@Sql({\"schema.sql\", \"test-data.sql\"})\r\nclass EmployeeDAOIntegrationTest {\r\n    @Autowired\r\n    private JdbcTemplate jdbcTemplate;\r\n\r\n    @Test\r\n    void whenInjectInMemoryDataSource_thenReturnCorrectEmployeeCount() {\r\n        EmployeeDAO employeeDAO = new EmployeeDAO();\r\n        employeeDAO.setJdbcTemplate(jdbcTemplate);\r\n\r\n        assertEquals(4, employeeDAO.getCountOfEmployees());\r\n    }\r\n}\r\n```"]