["```\r\n<dependency>\r\n    <groupId>org.hibernate</groupId>\r\n    <artifactId>hibernate-search-orm</artifactId>\r\n    <version>5.8.2.Final</version>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>com.h2database</groupId> \r\n    <artifactId>h2</artifactId>\r\n    <version>1.4.196</version>\r\n</dependency>\r\n```","```\r\nhibernate.search.default.directory_provider = filesystem\r\nhibernate.search.default.indexBase = /data/index/default\r\n```","```\r\n@Entity\r\n@Indexed\r\n@Table(name = \"product\")\r\npublic class Product {\r\n\r\n    @Id\r\n    private int id;\r\n\r\n    @Field(termVector = TermVector.YES)\r\n    private String productName;\r\n\r\n    @Field(termVector = TermVector.YES)\r\n    private String description;\r\n\r\n    @Field\r\n    private int memory;\r\n\r\n    // getters, setters, and constructors\r\n}\r\n```","```\r\nFullTextEntityManager fullTextEntityManager \r\n  = Search.getFullTextEntityManager(entityManager);\r\nfullTextEntityManager.createIndexer().startAndWait();\r\n```","```\r\nFullTextEntityManager fullTextEntityManager \r\n  = Search.getFullTextEntityManager(entityManager);\r\n\r\nQueryBuilder queryBuilder = fullTextEntityManager.getSearchFactory() \r\n  .buildQueryBuilder()\r\n  .forEntity(Product.class)\r\n  .get();\r\n```","```\r\norg.apache.lucene.search.Query query = queryBuilder\r\n  .keyword()\r\n  .onField(\"productName\")\r\n  .matching(\"iphone\")\r\n  .createQuery();\r\n```","```\r\norg.hibernate.search.jpa.FullTextQuery jpaQuery\r\n  = fullTextEntityManager.createFullTextQuery(query, Product.class);\r\n```","```\r\nList<Product> results = jpaQuery.getResultList();\r\n```","```\r\nQuery keywordQuery = queryBuilder\r\n  .keyword()\r\n  .onField(\"productName\")\r\n  .matching(\"iphone\")\r\n  .createQuery();\r\n```","```\r\nQuery fuzzyQuery = queryBuilder\r\n  .keyword()\r\n  .fuzzy()\r\n  .withEditDistanceUpTo(2)\r\n  .withPrefixLength(0)\r\n  .onField(\"productName\")\r\n  .matching(\"iPhaen\")\r\n  .createQuery();\r\n```","```\r\nQuery wildcardQuery = queryBuilder\r\n  .keyword()\r\n  .wildcard()\r\n  .onField(\"productName\")\r\n  .matching(\"Z*\")\r\n  .createQuery();\r\n```","```\r\nQuery phraseQuery = queryBuilder\r\n  .phrase()\r\n  .withSlop(1)\r\n  .onField(\"description\")\r\n  .sentence(\"with wireless charging\")\r\n  .createQuery();\r\n```","```\r\nQuery simpleQueryStringQuery = queryBuilder\r\n  .simpleQueryString()\r\n  .onFields(\"productName\", \"description\")\r\n  .matching(\"Aple~2 + \\\"iPhone X\\\" + (256 | 128)\")\r\n  .createQuery();\r\n```","```\r\nQuery rangeQuery = queryBuilder\r\n  .range()\r\n  .onField(\"memory\")\r\n  .from(64).to(256)\r\n  .createQuery();\r\n```","```\r\nQuery moreLikeThisQuery = queryBuilder\r\n  .moreLikeThis()\r\n  .comparingField(\"productName\").boostedTo(10f)\r\n  .andField(\"description\").boostedTo(1f)\r\n  .toEntity(entity)\r\n  .createQuery();\r\nList<Object[]> results = (List<Object[]>) fullTextEntityManager\r\n  .createFullTextQuery(moreLikeThisQuery, Product.class)\r\n  .setProjection(ProjectionConstants.THIS, ProjectionConstants.SCORE)\r\n  .getResultList();\r\n```","```\r\nQuery luceneQuery = queryBuilder\r\n  .keyword()\r\n  .onFields(\"productName\", \"description\")\r\n  .matching(text)\r\n  .createQuery();\r\n```","```\r\nQuery moreLikeThisQuery = queryBuilder\r\n  .moreLikeThis()\r\n  .comparingField(\"productName\").boostedTo(10f)\r\n  .andField(\"description\").boostedTo(1f)\r\n  .toEntity(entity)\r\n  .createQuery();\r\n```","```\r\nQuery combinedQuery = queryBuilder\r\n  .bool()\r\n  .must(queryBuilder.keyword()\r\n    .onField(\"productName\").matching(\"apple\")\r\n    .createQuery())\r\n  .must(queryBuilder.range()\r\n    .onField(\"memory\").from(64).to(256)\r\n    .createQuery())\r\n  .should(queryBuilder.phrase()\r\n    .onField(\"description\").sentence(\"face id\")\r\n    .createQuery())\r\n  .must(queryBuilder.keyword()\r\n    .onField(\"productName\").matching(\"samsung\")\r\n    .createQuery())\r\n  .not()\r\n  .createQuery();\r\n```"]