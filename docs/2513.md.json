["```\r\n@Column(nullable = false)\r\nprivate String name;\r\n```","```\r\n@Test(expected = DataIntegrityViolationException.class)\r\npublic void whenSavingNullValue_thenDataIntegrityException() {\r\n    Foo fooEntity = new Foo();\r\n    fooService.create(fooEntity);\r\n}\r\n```","```\r\n@Test(expected = DuplicateKeyException.class)\r\npublic void whenSavingDuplicateKeyValues_thenDuplicateKeyException() {\r\n    JdbcTemplate jdbcTemplate = new JdbcTemplate(restDataSource);\r\n    jdbcTemplate.execute(\"insert into foo(id,name) values (1,'a')\");\r\n    jdbcTemplate.execute(\"insert into foo(id,name) values (1,'b')\");\r\n}\r\n```","```\r\n@Test(expected = DataRetrievalFailureException.class)\r\npublic void whenRetrievingNonExistentValue_thenDataRetrievalException() {\r\n    JdbcTemplate jdbcTemplate = new JdbcTemplate(restDataSource);\r\n\r\n    jdbcTemplate.queryForObject(\"select * from foo where id = 3\", Integer.class);\r\n}\r\n```","```\r\n@Test(expected = IncorrectResultSetColumnCountException.class)\r\npublic void whenRetrievingMultipleColumns_thenIncorrectResultSetColumnCountException() {\r\n    JdbcTemplate jdbcTemplate = new JdbcTemplate(restDataSource);\r\n\r\n    jdbcTemplate.execute(\"insert into foo(id,name) values (1,'a')\");\r\n    jdbcTemplate.queryForList(\"select id,name from foo where id=1\", Foo.class);\r\n}\r\n```","```\r\n@Test(expected = IncorrectResultSizeDataAccessException.class)\r\npublic void whenRetrievingMultipleValues_thenIncorrectResultSizeException() {\r\n    JdbcTemplate jdbcTemplate = new JdbcTemplate(restDataSource);\r\n\r\n    jdbcTemplate.execute(\"insert into foo(name) values ('a')\");\r\n    jdbcTemplate.execute(\"insert into foo(name) values ('a')\");\r\n\r\n    jdbcTemplate.queryForObject(\"select id from foo where name='a'\", Integer.class);\r\n}\r\n```","```\r\n@Test(expected = DataSourceLookupFailureException.class)\r\npublic void whenLookupNonExistentDataSource_thenDataSourceLookupFailureException() {\r\n    JndiDataSourceLookup dsLookup = new JndiDataSourceLookup();\r\n    dsLookup.setResourceRef(true);\r\n    DataSource dataSource = dsLookup.getDataSource(\"java:comp/env/jdbc/example_db\");\r\n}\r\n```","```\r\n@Test(expected = InvalidDataAccessResourceUsageException.class)\r\npublic void whenRetrievingDataUserNoSelectRights_thenInvalidResourceUsageException() {\r\n    JdbcTemplate jdbcTemplate = new JdbcTemplate(restDataSource);\r\n    jdbcTemplate.execute(\"revoke select from tutorialuser\");\r\n\r\n    try {\r\n        fooService.findAll();\r\n    } finally {\r\n        jdbcTemplate.execute(\"grant select to tutorialuser\");\r\n    }\r\n}\r\n```","```\r\n@Test(expected = BadSqlGrammarException.class)\r\npublic void whenIncorrectSql_thenBadSqlGrammarException() {\r\n    JdbcTemplate jdbcTemplate = new JdbcTemplate(restDataSource);\r\n    jdbcTemplate.queryForObject(\"select * fro foo where id=3\", Integer.class);\r\n}\r\n```","```\r\njdbc.url=jdbc:mysql:3306://localhost/spring_hibernate4_exceptions?createDatabaseIfNotExist=true\r\n```","```\r\n@Test(expected = CannotGetJdbcConnectionException.class)\r\npublic void whenJdbcUrlIncorrect_thenCannotGetJdbcConnectionException() {\r\n    JdbcTemplate jdbcTemplate = new JdbcTemplate(restDataSource);\r\n    jdbcTemplate.execute(\"select * from foo\");\r\n}\r\n```"]