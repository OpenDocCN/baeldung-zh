["```\r\npublic boolean isAutomorphicUsingLoop(int number) {\r\n    int square = number * number;\r\n\r\n    while (number > 0) {\r\n        if (number % 10 != square % 10) {\r\n            return false;\r\n        }\r\n        number /= 10;\r\n        square /= 10;\r\n    }\r\n\r\n    return true;\r\n}\r\n```","```\r\nassertTrue(AutomorphicNumber.isAutomorphicUsingLoop(76));\r\nassertFalse(AutomorphicNumber.isAutomorphicUsingLoop(9));\r\n```","```\r\npublic boolean isAutomorphicUsingMath(int number) {\r\n    int square = number * number;\r\n\r\n    int numberOfDigits = (int) Math.floor(Math.log10(number) + 1);\r\n    int lastDigits = (int) (square % (Math.pow(10, numberOfDigits)));\r\n\r\n    return number == lastDigits;\r\n}\r\n```","```\r\nassertTrue(AutomorphicNumber.isAutomorphicUsingMath(76));\r\nassertFalse(AutomorphicNumber.isAutomorphicUsingMath(9));\r\n```"]