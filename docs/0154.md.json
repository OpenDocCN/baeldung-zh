["```\r\n@MappedSuperclass\r\npublic class Person {\r\n\r\n    @Id\r\n    private long personId;\r\n    private String name;\r\n\r\n    // constructor, getters, setters\r\n}\r\n```","```\r\n@Entity\r\npublic class MyEmployee extends Person {\r\n    private String company;\r\n    // constructor, getters, setters \r\n}\r\n```","```\r\n@Entity\r\n@Inheritance(strategy = InheritanceType.SINGLE_TABLE)\r\npublic class MyProduct {\r\n    @Id\r\n    private long productId;\r\n    private String name;\r\n\r\n    // constructor, getters, setters\r\n}\r\n```","```\r\n@Entity\r\npublic class Book extends MyProduct {\r\n    private String author;\r\n}\r\n```","```\r\n@Entity\r\npublic class Pen extends MyProduct {\r\n    private String color;\r\n}\r\n```","```\r\n@Entity(name=\"products\")\r\n@Inheritance(strategy = InheritanceType.SINGLE_TABLE)\r\n@DiscriminatorColumn(name=\"product_type\", \r\n  discriminatorType = DiscriminatorType.INTEGER)\r\npublic class MyProduct {\r\n    // ...\r\n}\r\n```","```\r\n@Entity\r\n@DiscriminatorValue(\"1\")\r\npublic class Book extends MyProduct {\r\n    // ...\r\n}\r\n```","```\r\n@Entity\r\n@DiscriminatorValue(\"2\")\r\npublic class Pen extends MyProduct {\r\n    // ...\r\n}\r\n```","```\r\n@Entity\r\n@Inheritance(strategy = InheritanceType.SINGLE_TABLE)\r\n@DiscriminatorFormula(\"case when author is not null then 1 else 2 end\")\r\npublic class MyProduct { ... }\r\n```","```\r\n@Entity\r\n@Inheritance(strategy = InheritanceType.JOINED)\r\npublic class Animal {\r\n    @Id\r\n    private long animalId;\r\n    private String species;\r\n\r\n    // constructor, getters, setters \r\n}\r\n```","```\r\n@Entity\r\npublic class Pet extends Animal {\r\n    private String name;\r\n\r\n    // constructor, getters, setters\r\n}\r\n```","```\r\n@Entity\r\n@PrimaryKeyJoinColumn(name = \"petId\")\r\npublic class Pet extends Animal {\r\n    // ...\r\n}\r\n```","```\r\n@Entity\r\n@Inheritance(strategy = InheritanceType.TABLE_PER_CLASS)\r\npublic class Vehicle {\r\n    @Id\r\n    private long vehicleId;\r\n\r\n    private String manufacturer;\r\n\r\n    // standard constructor, getters, setters\r\n}\r\n```","```\r\n@Test\r\npublic void givenSubclasses_whenQuerySuperclass_thenOk() {\r\n    Book book = new Book(1, \"1984\", \"George Orwell\");\r\n    session.save(book);\r\n    Pen pen = new Pen(2, \"my pen\", \"blue\");\r\n    session.save(pen);\r\n\r\n    assertThat(session.createQuery(\"from MyProduct\")\r\n      .getResultList()).hasSize(2);\r\n}\r\n```","```\r\n@Test\r\npublic void givenSubclasses_whenQueryMappedSuperclass_thenOk() {\r\n    MyEmployee emp = new MyEmployee(1, \"john\", \"baeldung\");\r\n    session.save(emp);\r\n\r\n    assertThat(session.createQuery(\r\n      \"from com.baeldung.hibernate.pojo.inheritance.Person\")\r\n      .getResultList())\r\n      .hasSize(1);\r\n}\r\n```","```\r\n@Entity\r\n@Polymorphism(type = PolymorphismType.EXPLICIT)\r\npublic class Bag implements Item { ...}\r\n```"]