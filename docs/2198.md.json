["```\r\n<dependency>\r\n    <groupId>com.goldmansachs.reladomo</groupId>\r\n    <artifactId>reladomo</artifactId>\r\n    <version>16.5.1</version>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>com.h2database</groupId>\r\n    <artifactId>h2</artifactId>\r\n    <version>1.4.196</version>\r\n</dependency>\r\n```","```\r\n<plugin>\r\n    <artifactId>maven-antrun-plugin</artifactId>\r\n    <executions>\r\n        <execution>\r\n            <id>generateMithra</id>\r\n            <phase>generate-sources</phase>\r\n            <goals>\r\n                <goal>run</goal>\r\n            </goals>\r\n            <configuration>\r\n                <tasks>\r\n                    <property name=\"plugin_classpath\" \r\n                      refid=\"maven.plugin.classpath\"/>\r\n                    <taskdef name=\"gen-reladomo\" \r\n                      classpath=\"plugin_classpath\"\r\n                      classname=\"com.gs.fw.common.mithra.generator.MithraGenerator\"/>\r\n                    <gen-reladomo \r\n                      xml=\"${project.basedir}/src/main/resources/reladomo/ReladomoClassList.xml\"\r\n                      generateGscListMethod=\"true\"\r\n                      generatedDir=\"${project.build.directory}/generated-sources/reladomo\"\r\n                      nonGeneratedDir=\"${project.basedir}/src/main/java\"/>\r\n                </tasks>\r\n            </configuration>\r\n        </execution>\r\n    </executions>\r\n</plugin> \r\n```","```\r\n<taskdef \r\n  name=\"gen-ddl\"\r\n  classname = \"com.gs.fw.common.mithra.generator.dbgenerator.MithraDbDefinitionGenerator\"\r\n  loaderRef=\"reladomoGenerator\">\r\n    <classpath refid=\"maven.plugin.classpath\"/>\r\n</taskdef>\r\n<gen-ddl \r\n  xml=\"${project.basedir}/src/main/resources/reladomo/ReladomoClassList.xml\"\r\n  generatedDir=\"${project.build.directory}/generated-db/sql\"\r\n  databaseType=\"postgres\"/>\r\n```","```\r\n<plugin>\r\n    <artifactId>maven-antrun-plugin</artifactId>\r\n    <executions>\r\n    //...               \r\n    </executions>\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>com.goldmansachs.reladomo</groupId>\r\n            <artifactId>reladomogen</artifactId>\r\n            <version>16.5.1</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.goldmansachs.reladomo</groupId>\r\n            <artifactId>reladomo-gen-util</artifactId>\r\n            <version>16.5.1</version>\r\n        </dependency>\r\n    </dependencies>\r\n</plugin>\r\n```","```\r\n<plugin>\r\n    <groupId>org.codehaus.mojo</groupId>\r\n    <artifactId>build-helper-maven-plugin</artifactId>\r\n    <executions>\r\n        <execution>\r\n            <id>add-source</id>\r\n            <phase>generate-sources</phase>\r\n            <goals>\r\n                <goal>add-source</goal>\r\n            </goals>\r\n            <configuration>\r\n                <sources>\r\n                    <source>${project.build.directory}/generated-sources/reladomo</source>\r\n                </sources>\r\n            </configuration>\r\n        </execution>\r\n        <execution>\r\n            <id>add-resource</id>\r\n            <phase>generate-resources</phase>\r\n            <goals>\r\n                <goal>add-resource</goal>\r\n            </goals>\r\n            <configuration>\r\n                <resources>\r\n                    <resource>\r\n                        <directory>${project.build.directory}/generated-db/</directory>\r\n                    </resource>\r\n                </resources>\r\n            </configuration>\r\n        </execution>\r\n    </executions>\r\n</plugin>\r\n```","```\r\n<MithraObject objectType=\"transactional\">\r\n    <PackageName>com.baeldung.reladomo</PackageName>\r\n    <ClassName>Department</ClassName>\r\n    <DefaultTable>departments</DefaultTable>\r\n\r\n    <Attribute name=\"id\" javaType=\"long\" \r\n      columnName=\"department_id\" primaryKey=\"true\"/>\r\n    <Attribute name=\"name\" javaType=\"String\" \r\n      columnName=\"name\" maxLength=\"50\" truncate=\"true\"/>\r\n    <Relationship name=\"employees\" relatedObject=\"Employee\" \r\n      cardinality=\"one-to-many\" \r\n      reverseRelationshipName=\"department\" \r\n      relatedIsDependent=\"true\">\r\n         Employee.departmentId = this.id\r\n    </Relationship>\r\n</MithraObject>\r\n```","```\r\nEmployee.departmentId = this.id\r\n```","```\r\n<MithraObject objectType=\"transactional\">\r\n    <PackageName>com.baeldung.reladomo</PackageName>\r\n    <ClassName>Employee</ClassName>\r\n    <DefaultTable>employees</DefaultTable>\r\n\r\n    <Attribute name=\"id\" javaType=\"long\" \r\n      columnName=\"employee_id\" primaryKey=\"true\"/>\r\n    <Attribute name=\"name\" javaType=\"String\" \r\n      columnName=\"name\" maxLength=\"50\" truncate=\"true\"/>\r\n    <Attribute name=\"departmentId\" javaType=\"long\" \r\n      columnName=\"department_id\"/>\r\n</MithraObject>\r\n```","```\r\n<Mithra>\r\n    <MithraObjectResource name=\"Department\"/>\r\n    <MithraObjectResource name=\"Employee\"/>\r\n</Mithra>\r\n```","```\r\npublic class Department extends DepartmentAbstract {\r\n    public Department() {\r\n        super();\r\n        // You must not modify this constructor. Mithra calls this internally.\r\n        // You can call this constructor. You can also add new constructors.\r\n    }\r\n}\r\n```","```\r\npublic Department(long id, String name){\r\n    super();\r\n    this.setId(id);\r\n    this.setName(name);\r\n}\r\n```","```\r\npublic class ReladomoConnectionManager implements SourcelessConnectionManager {\r\n\r\n    private static ReladomoConnectionManager instance;\r\n    private XAConnectionManager xaConnectionManager;\r\n\r\n    public static synchronized ReladomoConnectionManager getInstance() {\r\n        if (instance == null) {\r\n            instance = new ReladomoConnectionManager();\r\n        }\r\n        return instance;\r\n    }\r\n\r\n    private ReladomoConnectionManager() {\r\n        this.createConnectionManager();\r\n    }\r\n    //...\r\n}\r\n```","```\r\nprivate XAConnectionManager createConnectionManager() {\r\n    xaConnectionManager = new XAConnectionManager();\r\n    xaConnectionManager.setDriverClassName(\"org.h2.Driver\");\r\n    xaConnectionManager.setJdbcConnectionString(\"jdbc:h2:mem:myDb\");\r\n    xaConnectionManager.setJdbcUser(\"sa\");\r\n    xaConnectionManager.setJdbcPassword(\"\");\r\n    xaConnectionManager.setPoolName(\"My Connection Pool\");\r\n    xaConnectionManager.setInitialSize(1);\r\n    xaConnectionManager.setPoolSize(10);\r\n    xaConnectionManager.initialisePool();\r\n    return xaConnectionManager;\r\n}\r\n```","```\r\n@Override\r\npublic Connection getConnection() {\r\n    return xaConnectionManager.getConnection();\r\n}\r\n\r\n@Override\r\npublic DatabaseType getDatabaseType() {\r\n    return H2DatabaseType.getInstance();\r\n}\r\n\r\n@Override\r\npublic TimeZone getDatabaseTimeZone() {\r\n    return TimeZone.getDefault();\r\n}\r\n\r\n@Override\r\npublic String getDatabaseIdentifier() {\r\n    return \"myDb\";\r\n}\r\n\r\n@Override \r\npublic BulkLoader createBulkLoader() throws BulkLoaderException { \r\n    return null; \r\n}\r\n```","```\r\npublic void createTables() throws Exception {\r\n    Path ddlPath = Paths.get(ClassLoader.getSystemResource(\"sql\").toURI());\r\n    try (\r\n      Connection conn = xaConnectionManager.getConnection();\r\n      Stream<Path> list = Files.list(ddlPath)) {\r\n\r\n        list.forEach(path -> {\r\n            try {\r\n                RunScript.execute(conn, Files.newBufferedReader(path));\r\n            } \r\n            catch (SQLException | IOException exc){\r\n                exc.printStackTrace();\r\n            }\r\n        });\r\n    }\r\n}\r\n```","```\r\n<MithraRuntime>\r\n    <ConnectionManager \r\n      className=\"com.baeldung.reladomo.ReladomoConnectionManager \">\r\n    <MithraObjectConfiguration \r\n      className=\"com.baeldung.reladomo.Department\" cacheType=\"partial\"/>\r\n    <MithraObjectConfiguration \r\n      className=\"com.baeldung.reladomo.Employee \" cacheType=\"partial\"/>\r\n    </ConnectionManager>\r\n</MithraRuntime>\r\n```","```\r\npublic class ReladomoApplication {\r\n    public static void main(String[] args) {\r\n        try {\r\n            ReladomoConnectionManager.getInstance().createTables();\r\n        } catch (Exception e1) {\r\n            e1.printStackTrace();\r\n        }\r\n        MithraManager mithraManager = MithraManagerProvider.getMithraManager();\r\n        mithraManager.setTransactionTimeout(120);\r\n\r\n        try (InputStream is = ReladomoApplication.class.getClassLoader()\r\n          .getResourceAsStream(\"ReladomoRuntimeConfig.xml\")) {\r\n            MithraManagerProvider.getMithraManager()\r\n              .readConfiguration(is);\r\n\r\n            //execute operations\r\n        }\r\n        catch (IOException exc){\r\n            exc.printStackTrace();\r\n        }     \r\n    }\r\n}\r\n```","```\r\nDepartment department = new Department(1, \"IT\");\r\nEmployee employee = new Employee(1, \"John\");\r\ndepartment.getEmployees().add(employee);\r\ndepartment.cascadeInsert();\r\n```","```\r\nDepartment depFound = DepartmentFinder\r\n  .findByPrimaryKey(1);\r\nEmployee empFound = EmployeeFinder\r\n  .findOne(EmployeeFinder.name().eq(\"John\"));\r\n```","```\r\nempFound.setName(\"Steven\");\r\n```","```\r\nDepartment depDetached = DepartmentFinder\r\n  .findByPrimaryKey(1).getDetachedCopy();\r\n```","```\r\nempFound.delete();\r\n```","```\r\nmithraManager.executeTransactionalCommand(tx -> {\r\n    Department dep = new Department(2, \"HR\");\r\n    Employee emp = new Employee(2, \"Jim\");\r\n    dep.getEmployees().add(emp);\r\n    dep.cascadeInsert();\r\n    return null;\r\n});\r\n```","```\r\n<dependency>\r\n    <groupId>com.goldmansachs.reladomo</groupId>\r\n    <artifactId>reladomo-test-util</artifactId>\r\n    <version>16.5.1</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>junit</groupId>\r\n    <artifactId>junit</artifactId>\r\n    <version>4.12</version>\r\n</dependency>\r\n```","```\r\n<MithraRuntime>\r\n    <ConnectionManager \r\n      className=\"com.gs.fw.common.mithra.test.ConnectionManagerForTests\">\r\n        <Property name=\"resourceName\" value=\"testDb\"/>\r\n        <MithraObjectConfiguration \r\n          className=\"com.baeldung.reladomo.Department\" cacheType=\"partial\"/>\r\n        <MithraObjectConfiguration \r\n          className=\"com.baeldung.reladomo.Employee \" cacheType=\"partial\"/>\r\n    </ConnectionManager>\r\n </MithraRuntime>\r\n```","```\r\nclass com.baeldung.reladomo.Department\r\nid, name\r\n1, \"Marketing\"\r\n\r\nclass com.baeldung.reladomo.Employee\r\nid, name\r\n1, \"Paul\"\r\n```","```\r\npublic class ReladomoTest {\r\n    private MithraTestResource mithraTestResource;\r\n\r\n    @Before\r\n    public void setUp() throws Exception {\r\n        this.mithraTestResource \r\n          = new MithraTestResource(\"reladomo/ReladomoTestConfig.xml\");\r\n\r\n        ConnectionManagerForTests connectionManager\r\n          = ConnectionManagerForTests.getInstanceForDbName(\"testDb\");\r\n        this.mithraTestResource.createSingleDatabase(connectionManager);\r\n        mithraTestResource.addTestDataToDatabase(\"reladomo/test-data.txt\", \r\n          connectionManager);\r\n\r\n        this.mithraTestResource.setUp();\r\n    }\r\n}\r\n```","```\r\n@Test\r\npublic void whenGetTestData_thenOk() {\r\n    Employee employee = EmployeeFinder.findByPrimaryKey(1);\r\n    assertEquals(employee.getName(), \"Paul\");\r\n}\r\n```","```\r\n@After\r\npublic void tearDown() throws Exception {\r\n    this.mithraTestResource.tearDown();\r\n}\r\n```"]