["```\r\nString[] strArray = { \"one\", \"two\", \"three\" };\r\nString joinedString = Arrays.toString(strArray);\r\nassertEquals(\"[one, two, three]\", joinedString);\r\n```","```\r\nint[] intArray = { 1,2,3,4,5 }; \r\njoinedString = Arrays.toString(intArray);\r\nassertEquals(\"[1, 2, 3, 4, 5]\", joinedString);\r\n```","```\r\nString[] strArray = { \"Convert\", \"Array\", \"With\", \"Java\" };\r\nStringBuilder stringBuilder = new StringBuilder();\r\nfor (int i = 0; i < strArray.length; i++) {\r\n    stringBuilder.append(strArray[i]);\r\n}\r\nString joinedString = stringBuilder.toString();\r\nassertEquals(\"ConvertArrayWithJava\", joinedString);\r\n```","```\r\nString joinedString = String.join(\"\", new String[]{ \"Convert\", \"With\", \"Java\", \"Streams\" });\r\nassertEquals(\"ConvertWithJavaStreams\", joinedString);\r\n```","```\r\nString joinedString = Arrays\r\n    .stream(new String[]{ \"Convert\", \"With\", \"Java\", \"Streams\" })\r\n    .collect(Collectors.joining());\r\nassertEquals(\"ConvertWithJavaStreams\", joinedString);\r\n```","```\r\nString joinedString = StringUtils.join(new String[]{ \"Convert\", \"With\", \"Apache\", \"Commons\" });\r\nassertEquals(\"ConvertWithApacheCommons\", joinedString);\r\n```","```\r\nString joinedString = Joiner.on(\"\")\r\n        .skipNulls()\r\n        .join(new String[]{ \"Convert\", \"With\", \"Guava\", null });\r\nassertEquals(\"ConvertWithGuava\", joinedString);\r\n```","```\r\nString[] strArray = \"loremipsum\".split(\"\");\r\n```","```\r\n[\"l\", \"o\", \"r\", \"e\", \"m\", \"i\", \"p\", \"s\", \"u\", \"m\"]\r\n```","```\r\nString[] splitted = StringUtils.split(\"lorem ipsum dolor sit amet\");\r\n```","```\r\n[\"lorem\", \"ipsum\", \"dolor\", \"sit\", \"amet\"]\r\n```","```\r\nList<String> resultList = Splitter.on(' ')\r\n    .trimResults()\r\n    .omitEmptyStrings()\r\n    .splitToList(\"lorem ipsum dolor sit amet\");   \r\nString[] strArray = resultList.toArray(new String[0]);\r\n```","```\r\n[\"lorem\", \"ipsum\", \"dolor\", \"sit\", \"amet\"]\r\n```"]