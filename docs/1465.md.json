["```\r\n# cat docker-compose.yml\r\nversion: '3.3'\r\nservices:\r\n### MySQL Container\r\n  mysql:\r\n    build:\r\n      context: /home/tools/bael/dung/B015\r\n      args:\r\n        - MYSQL_DATABASE=${MYSQL_DATABASE}\r\n        - MYSQL_USER=${MYSQL_USER}\r\n        - MYSQL_PASSWORD=${MYSQL_PASSWORD}\r\n        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}\r\n    ports:\r\n      - \"${MYSQL_PORT}:3306\"\r\n```","```\r\n# cat Dockerfile\r\nFROM mysql:latest\r\n\r\nMAINTAINER baeldung.com\r\n\r\nRUN chown -R mysql:root /var/lib/mysql/\r\n\r\nARG MYSQL_DATABASE\r\nARG MYSQL_USER\r\nARG MYSQL_PASSWORD\r\nARG MYSQL_ROOT_PASSWORD\r\n\r\nENV MYSQL_DATABASE=$MYSQL_DATABASE\r\nENV MYSQL_USER=$MYSQL_USER\r\nENV MYSQL_PASSWORD=$MYSQL_PASSWORD\r\nENV MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD\r\n\r\nADD data.sql /etc/mysql/data.sql\r\n\r\nRUN sed -i 's/MYSQL_DATABASE/'$MYSQL_DATABASE'/g' /etc/mysql/data.sql\r\nRUN cp /etc/mysql/data.sql /docker-entrypoint-initdb.d\r\n\r\nEXPOSE 3306\r\n```","```\r\n# cat .env\r\nMYSQL_DATABASE=my_db_name\r\nMYSQL_USER=baeldung\r\nMYSQL_PASSWORD=pass\r\nMYSQL_ROOT_PASSWORD=pass\r\nMYSQL_PORT=3306\r\n```","```\r\nmysql> select * from Customers;\r\n+--------------+-----------------+---------------+-----------+------------+---------+\r\n| CustomerName | ContactName     | Address       | City      | PostalCode | Country |\r\n+--------------+-----------------+---------------+-----------+------------+---------+\r\n| Cardinal     | Tom B. Erichsen | Skagen 21     | Stavanger | 4006       | Norway  |\r\n| Wilman Kala  | Matti Karttunen | Keskuskatu 45 | Helsinki  | 21240      | Finland |\r\n+--------------+-----------------+---------------+-----------+------------+---------+\r\n2 rows in set (0.00 sec)\r\n```","```\r\n# mysqldump -u [user name] –p [password] [database_name] > [dumpfilename.sql]\r\n\r\n# mysqldump -u root -p my_db_name > data.sql\r\nEnter password:\r\n```","```\r\n# cat data.sql\r\n-- MySQL dump 10.13  Distrib 8.0.26, for Linux (x86_64)\r\n...\r\n... output truncated ...\r\n...\r\nDROP TABLE IF EXISTS `Customers`;\r\n/*!40101 SET @saved_cs_client     = @@character_set_client */;\r\n/*!50503 SET character_set_client = utf8mb4 */;\r\nCREATE TABLE `Customers` (\r\n  `CustomerName` varchar(255) DEFAULT NULL,\r\n...\r\n... output truncated ...\r\n...\r\nINSERT INTO `Customers` VALUES ('Cardinal','Tom B. Erichsen','Skagen 21','Stavanger','4006','Norway'),('Wilman Kala','Matti Karttunen','Keskuskatu 45','Helsinki','21240','Finland');\r\n/*!40000 ALTER TABLE `Customers` ENABLE KEYS */;\r\nUNLOCK TABLES;\r\n...\r\n... output truncated ...\r\n...\r\n-- Dump completed on 2022-07-28  1:56:09\r\n```","```\r\n--\r\n-- Create a database using `MYSQL_DATABASE` placeholder\r\n--\r\nCREATE DATABASE IF NOT EXISTS `MYSQL_DATABASE`;\r\nUSE `MYSQL_DATABASE`;\r\n```","```\r\n# tree -a\r\n.\r\n├── data.sql\r\n├── docker-compose.yml\r\n├── Dockerfile\r\n└── .env\r\n```","```\r\n# docker-compose up\r\nBuilding mysql\r\nSending build context to Docker daemon  7.168kB\r\nStep 1/15 : FROM mysql:latest\r\n ---> c60d96bd2b77\r\nStep 2/15 : MAINTAINER baeldung.com\r\n ---> Running in a647bd02b91f\r\nRemoving intermediate container a647bd02b91f\r\n ---> fafa500c0fac\r\nStep 3/15 : RUN chown -R mysql:root /var/lib/mysql/\r\n ---> Running in b37e1d5ba079\r\n\r\n...\r\n... output truncated ...\r\n...\r\n\r\nStep 14/15 : RUN cp /etc/mysql/data.sql /docker-entrypoint-initdb.d\r\n ---> Running in 34f1d9807bad\r\nRemoving intermediate container 34f1d9807bad\r\n ---> 927b68a43976\r\nStep 15/15 : EXPOSE 3306\r\n ---> Running in defb868f4207\r\nRemoving intermediate container defb868f4207\r\n ---> 6c6f435f52a9\r\nSuccessfully built 6c6f435f52a9\r\nSuccessfully tagged b015_mysql:latest\r\nCreating b015_mysql_1 ... done\r\nAttaching to b015_mysql_1\r\nmysql_1  | 2022-07-28 00:49:03+00:00 [Note] [Entrypoint]: Entrypoint script for MySQL Server 8.0.26-1debian10 started.\r\n\r\n...\r\n... output truncated ...\r\n...\r\n\r\nmysql_1  | 2022-07-28 00:49:16+00:00 [Note] [Entrypoint]: Creating database my_db_name\r\nmysql_1  | 2022-07-28 00:49:16+00:00 [Note] [Entrypoint]: Creating user baeldung\r\nmysql_1  | 2022-07-28 00:49:16+00:00 [Note] [Entrypoint]: Giving user baeldung access to schema my_db_name\r\nmysql_1  |\r\nmysql_1  | 2022-07-28 00:49:16+00:00 [Note] [Entrypoint]: /usr/local/bin/docker-entrypoint.sh: running /docker-entrypoint-initdb.d/data.sql\r\n...\r\n... output truncated ...\r\n...\r\n```","```\r\n# docker-compose up -d\r\nBuilding mysql\r\nSending build context to Docker daemon  7.168kB\r\nStep 1/15 : FROM mysql:latest\r\n ---> c60d96bd2b77\r\n...\r\n... output truncated ...\r\n...\r\nStep 15/15 : EXPOSE 3306\r\n ---> Running in 958e1d4af340\r\nRemoving intermediate container 958e1d4af340\r\n ---> c3516657c4c8\r\nSuccessfully built c3516657c4c8\r\nSuccessfully tagged b015_mysql:latest\r\nCreating b015_mysql_1 ... done\r\n#\r\n```","```\r\n$ sudo apt install mysql-client -y\r\nReading package lists... Done\r\nBuilding dependency tree\r\nReading state information... Done\r\nmysql-client is already the newest version (5.7.37-0ubuntu0.18.04.1).\r\n...\r\n... output truncated ...\r\n...\r\n```","```\r\n$ which mysql\r\n/usr/bin/mysql\r\n$ mysql --version\r\nmysql  Ver 14.14 Distrib 5.7.37, for Linux (x86_64) using  EditLine wrapper\r\n```","```\r\n# docker ps | grep b015_mysql\r\n9ce4da8eb682   b015_mysql                \"docker-entrypoint.s…\"   21 minutes ago   Up 21 minutes         0.0.0.0:3306->3306/tcp, :::3306->3306/tcp, 33060/tcp                                                                    b015_mysql_1\r\n```","```\r\n# docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' 9ce4da8eb682\r\n172.19.0.2\r\n```","```\r\n# mysql -h 172.17.0.2 -P 3306 --protocol=tcp -u root -p\r\nEnter password:\r\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\r\n...\r\n... output truncated ...\r\n...\r\nmysql> show databases;\r\n+--------------------+\r\n| Database           |\r\n+--------------------+\r\n| information_schema |\r\n| my_db_name         |\r\n| mysql              |\r\n| performance_schema |\r\n| sys                |\r\n+--------------------+\r\n5 rows in set (0.00 sec)\r\nmysql> use my_db_name\r\n...\r\n... output truncated ...\r\n...\r\n\r\nDatabase changed \r\n```","```\r\nmysql> select * from Customers;\r\n+--------------+-----------------+---------------+-----------+------------+---------+\r\n| CustomerName | ContactName     | Address       | City      | PostalCode | Country |\r\n+--------------+-----------------+---------------+-----------+------------+---------+\r\n| Cardinal     | Tom B. Erichsen | Skagen 21     | Stavanger | 4006       | Norway  |\r\n| Wilman Kala  | Matti Karttunen | Keskuskatu 45 | Helsinki  | 21240      | Finland |\r\n+--------------+-----------------+---------------+-----------+------------+---------+\r\n2 rows in set (0.00 sec)\r\n```","```\r\nmysql> INSERT INTO Customers (CustomerName, ContactName, Address, City, PostalCode, Country) VALUES ('White Clover Markets', 'Karl Jablonski', '305 - 14th Ave. S. Suite 3B', 'Seattle', '98128', 'USA');\r\nQuery OK, 1 row affected (0.00 sec)\r\n```","```\r\nmysql> select * from Customers;\r\n+----------------------+-----------------+-----------------------------+-----------+------------+---------+\r\n| CustomerName         | ContactName     | Address                     | City      | PostalCode | Country |\r\n+----------------------+-----------------+-----------------------------+-----------+------------+---------+\r\n| Cardinal             | Tom B. Erichsen | Skagen 21                   | Stavanger | 4006       | Norway  |\r\n| Wilman Kala          | Matti Karttunen | Keskuskatu 45               | Helsinki  | 21240      | Finland |\r\n| White Clover Markets | Karl Jablonski  | 305 - 14th Ave. S. Suite 3B | Seattle   | 98128      | USA     |\r\n+----------------------+-----------------+-----------------------------+-----------+------------+---------+\r\n3 rows in set (0.00 sec)\r\n```","```\r\n# docker exec -it 9ce4da8eb682 /bin/bash\r\n[[email protected]](/web/20220928150307/https://www.baeldung.com/cdn-cgi/l/email-protection):/# mysql -h localhost -u root -p\r\nEnter password:\r\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\r\n...\r\n... output truncated ...\r\n...\r\nmysql>\r\n```"]