["```\r\nString[] seedArray(int length) {\r\n    String[] strings = new String[length];\r\n    Random value = new Random();\r\n    for (int i = 0; i < length; i++) {\r\n        strings[i] = String.valueOf(value.nextInt());\r\n    }\r\n    return strings;\r\n}\r\n```","```\r\n@State(Scope.Benchmark)\r\npublic static class SearchData {\r\n    static int count = 1000;\r\n    static String[] strings = seedArray(1000);\r\n} \r\n```","```\r\nboolean searchList(String[] strings, String searchString) {\r\n    return Arrays.asList(SearchData.strings)\r\n      .contains(searchString);\r\n}\r\n\r\nboolean searchSet(String[] strings, String searchString) {\r\n    Set<String> stringSet = new HashSet<>(Arrays.asList(SearchData.strings));\r\n\r\n    return stringSet.contains(searchString);\r\n}\r\n\r\nboolean searchLoop(String[] strings, String searchString) {\r\n    for (String string : SearchData.strings) {\r\n        if (string.equals(searchString))\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n```","```\r\n@BenchmarkMode(Mode.AverageTime)\r\n@Warmup(iterations = 5)\r\n@OutputTimeUnit(TimeUnit.MICROSECONDS) \r\n```","```\r\n@Benchmark\r\npublic void searchArrayLoop() {\r\n    for (int i = 0; i < SearchData.count; i++) {\r\n        searchLoop(SearchData.strings, \"T\");\r\n    }\r\n}\r\n\r\n@Benchmark\r\npublic void searchArrayAllocNewList() {\r\n    for (int i = 0; i < SearchData.count; i++) {\r\n        searchList(SearchData.strings, \"T\");\r\n    }\r\n}\r\n\r\n@Benchmark\r\npublic void searchArrayAllocNewSet() {\r\n    for (int i = 0; i < SearchData.count; i++) {\r\n        searchSet(SearchData.strings, \"S\");\r\n    }\r\n} \r\n```","```\r\nSearchArrayTest.searchArrayAllocNewList  avgt   20    937.851 ±  14.226  us/op\r\nSearchArrayTest.searchArrayAllocNewSet   avgt   20  14309.122 ± 193.844  us/op\r\nSearchArrayTest.searchArrayLoop          avgt   20    758.060 ±   9.433  us/op \r\n```","```\r\npublic void searchArrayReuseList() {\r\n    List asList = Arrays.asList(SearchData.strings);\r\n    for (int i = 0; i < SearchData.count; i++) {\r\n        asList.contains(\"T\");\r\n    }\r\n}\r\n\r\npublic void searchArrayReuseSet() {\r\n    Set asSet = new HashSet<>(Arrays.asList(SearchData.strings));\r\n    for (int i = 0; i < SearchData.count; i++) {\r\n        asSet.contains(\"T\");\r\n    }\r\n} \r\n```","```\r\nSearchArrayTest.searchArrayLoop          avgt   20    758.060 ±   9.433  us/op\r\nSearchArrayTest.searchArrayReuseList     avgt   20    837.265 ±  11.283  us/op\r\nSearchArrayTest.searchArrayReuseSet      avgt   20     14.030 ±   0.197  us/op \r\n```","```\r\n@Benchmark\r\npublic void searchArrayBinarySearch() {\r\n    Arrays.sort(SearchData.strings);\r\n    for (int i = 0; i < SearchData.count; i++) {\r\n        Arrays.binarySearch(SearchData.strings, \"T\");\r\n    }\r\n} \r\n```","```\r\nSearchArrayTest.searchArrayBinarySearch  avgt   20     26.527 ±   0.376  us/op \r\n```"]