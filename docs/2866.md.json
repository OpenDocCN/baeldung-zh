["```\r\nprivate AtomicBoolean enabled = new AtomicBoolean(true);\r\n\r\nprivate AtomicInteger batchRunCounter = new AtomicInteger(0);\r\n\r\n@Scheduled(fixedRate = 2000)\r\npublic void launchJob() throws Exception {\r\n    if (enabled.get()) {\r\n        Date date = new Date();\r\n        JobExecution jobExecution = jobLauncher()\r\n          .run(job(), new JobParametersBuilder()\r\n            .addDate(\"launchDate\", date)\r\n            .toJobParameters());\r\n        batchRunCounter.incrementAndGet();\r\n    }\r\n}\r\n\r\n// stop, start functions (changing the flag of enabled)\r\n```","```\r\n@Test\r\npublic void stopJobSchedulerWhenSchedulerDestroyed() throws Exception {\r\n    ScheduledAnnotationBeanPostProcessor bean = context\r\n      .getBean(ScheduledAnnotationBeanPostProcessor.class);\r\n    SpringBatchScheduler schedulerBean = context\r\n      .getBean(SpringBatchScheduler.class);\r\n    await().untilAsserted(() -> Assert.assertEquals(\r\n      2, \r\n      schedulerBean.getBatchRunCounter().get()));\r\n    bean.postProcessBeforeDestruction(\r\n      schedulerBean, \"SpringBatchScheduler\");\r\n    await().atLeast(3, SECONDS);\r\n\r\n    Assert.assertEquals(\r\n      2, \r\n      schedulerBean.getBatchRunCounter().get());\r\n}\r\n```","```\r\n@Bean\r\npublic TaskScheduler poolScheduler() {\r\n    return new CustomTaskScheduler();\r\n}\r\n\r\nprivate class CustomTaskScheduler \r\n  extends ThreadPoolTaskScheduler {\r\n\r\n    //\r\n\r\n    @Override\r\n    public ScheduledFuture<?> scheduleAtFixedRate(\r\n      Runnable task, long period) {\r\n        ScheduledFuture<?> future = super\r\n          .scheduleAtFixedRate(task, period);\r\n\r\n        ScheduledMethodRunnable runnable = (ScheduledMethodRunnable) task;\r\n        scheduledTasks.put(runnable.getTarget(), future);\r\n\r\n        return future;\r\n    }\r\n}\r\n```","```\r\npublic void cancelFutureSchedulerTasks() {\r\n    scheduledTasks.forEach((k, v) -> {\r\n        if (k instanceof SpringBatchScheduler) {\r\n            v.cancel(false);\r\n        }\r\n    });\r\n}\r\n```"]