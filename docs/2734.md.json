["```\r\nAudioFormat(AudioFormat.Encoding encoding, float sampleRate, int sampleSizeInBits, int channels, int frameSize, float frameRate, boolean bigEndian)\r\n```","```\r\nline = (TargetDataLine) AudioSystem.getLine(info);\r\n```","```\r\npublic static AudioFormat buildAudioFormatInstance() {\r\n    ApplicationProperties aConstants = new ApplicationProperties();\r\n    AudioFormat.Encoding encoding = aConstants.ENCODING;\r\n    float rate = aConstants.RATE;\r\n    int channels = aConstants.CHANNELS;\r\n    int sampleSize = aConstants.SAMPLE_SIZE;\r\n    boolean bigEndian = aConstants.BIG_ENDIAN;\r\n\r\n    return new AudioFormat(encoding, rate, sampleSize, channels, (sampleSize / 8) * channels, rate, bigEndian);\r\n}\r\n```","```\r\nprivate TargetDataLine getTargetDataLineForRecord() {\r\n    TargetDataLine line;\r\n    DataLine.Info info = new DataLine.Info(TargetDataLine.class, format);\r\n    if (!AudioSystem.isLineSupported(info)) {\r\n        return null;\r\n    }\r\n    line = (TargetDataLine) AudioSystem.getLine(info);\r\n    line.open(format, line.getBufferSize());\r\n    return line;\r\n}\r\n```","```\r\nint frameSizeInBytes = format.getFrameSize();\r\nint bufferLengthInFrames = line.getBufferSize() / 8;\r\nfinal int bufferLengthInBytes = bufferLengthInFrames * frameSizeInBytes;\r\n```","```\r\nbuildByteOutputStream(out, line, frameSizeInBytes, bufferLengthInBytes);\r\nthis.audioInputStream = new AudioInputStream(line);\r\n\r\nsetAudioInputStream(convertToAudioIStream(out, frameSizeInBytes));\r\naudioInputStream.reset();\r\n```","```\r\npublic void buildByteOutputStream(final ByteArrayOutputStream out, final TargetDataLine line, int frameSizeInBytes, final int bufferLengthInBytes) throws IOException {\r\n    final byte[] data = new byte[bufferLengthInBytes];\r\n    int numBytesRead;\r\n\r\n    line.start();\r\n    while (thread != null) {\r\n        if ((numBytesRead = line.read(data, 0, bufferLengthInBytes)) == -1) {\r\n            break;\r\n        }\r\n        out.write(data, 0, numBytesRead);\r\n    }\r\n}\r\n```","```\r\npublic AudioInputStream convertToAudioIStream(final ByteArrayOutputStream out, int frameSizeInBytes) {\r\n    byte audioBytes[] = out.toByteArray();\r\n    ByteArrayInputStream bais = new ByteArrayInputStream(audioBytes);\r\n    AudioInputStream audioStream = new AudioInputStream(bais, format, audioBytes.length / frameSizeInBytes);\r\n    long milliseconds = (long) ((audioInputStream.getFrameLength() * 1000) / format.getFrameRate());\r\n    duration = milliseconds / 1000.0;\r\n    return audioStream;\r\n}\r\n```","```\r\nwd.saveToFile(\"/SoundClip\", AudioFileFormat.Type.WAVE, soundRecorder.getAudioInputStream());\r\n```","```\r\nAudioSystem.write(audioInputStream, fileType, myFile);\r\n```"]