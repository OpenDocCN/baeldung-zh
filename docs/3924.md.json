["```\r\n<dependency>\r\n    <groupId>org.json</groupId>\r\n    <artifactId>json</artifactId>\r\n    <version>20200518</version>\r\n</dependency>\r\n```","```\r\n@Test\r\npublic void givenValidJson_whenUsingBufferedReader_thenJSONTokenerConverts() {\r\n    byte[] b = \"{ \\\"name\\\" : \\\"John\\\", \\\"age\\\" : 18 }\".getBytes(StandardCharsets.UTF_8);\r\n    InputStream is = new ByteArrayInputStream(b);\r\n    BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(is));\r\n    JSONTokener tokener = new JSONTokener(bufferedReader);\r\n    JSONObject json = new JSONObject(tokener);\r\n\r\n    assertNotNull(json);\r\n    assertEquals(\"John\", json.get(\"name\"));\r\n    assertEquals(18, json.get(\"age\"));\r\n} \r\n```","```\r\n@Test\r\npublic void givenValidJson_whenUsingString_thenJSONObjectConverts()\r\n  throws IOException {\r\n    // ... retrieve BufferedReader<br />\r\n    StringBuilder sb = new StringBuilder();\r\n    String line;\r\n    while ((line = bufferedReader.readLine()) != null) {\r\n        sb.append(line);\r\n    }\r\n    JSONObject json = new JSONObject(sb.toString());\r\n\r\n    // ... same checks as before\r\n} \r\n```"]