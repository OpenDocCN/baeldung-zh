["```\r\n@FrameworkEndpoint\r\npublic class RevokeTokenEndpoint {\r\n\r\n    @Resource(name = \"tokenServices\")\r\n    ConsumerTokenServices tokenServices;\r\n\r\n    @RequestMapping(method = RequestMethod.DELETE, value = \"/oauth/token\")\r\n    @ResponseBody\r\n    public void revokeToken(HttpServletRequest request) {\r\n        String authorization = request.getHeader(\"Authorization\");\r\n        if (authorization != null && authorization.contains(\"Bearer\")){\r\n            String tokenId = authorization.substring(\"Bearer\".length()+1);\r\n            tokenServices.revokeToken(tokenId);\r\n        }\r\n    }\r\n}\r\n```","```\r\n@Component\r\npublic class CustomPostZuulFilter extends ZuulFilter {\r\n    //...\r\n    @Override\r\n    public Object run() {\r\n        //...\r\n        String requestMethod = ctx.getRequest().getMethod();\r\n        if (requestURI.contains(\"oauth/token\") && requestMethod.equals(\"DELETE\")) {\r\n            Cookie cookie = new Cookie(\"refreshToken\", \"\");\r\n            cookie.setMaxAge(0);\r\n            cookie.setPath(ctx.getRequest().getContextPath() + \"/oauth/token\");\r\n            ctx.getResponse().addCookie(cookie);\r\n        }\r\n        //...\r\n    }\r\n}\r\n```","```\r\n$scope.logout = function() {\r\n    logout($scope.loginData);\r\n}\r\nfunction logout(params) {\r\n    var req = {\r\n        method: 'DELETE',\r\n        url: \"oauth/token\"\r\n    }\r\n    $http(req).then(\r\n        function(data){\r\n            $cookies.remove(\"access_token\");\r\n            window.location.href=\"login\";\r\n        },function(){\r\n            console.log(\"error\");\r\n        }\r\n    );\r\n}\r\n```","```\r\n<a class=\"btn btn-info\" href=\"#\" ng-click=\"logout()\">Logout</a>\r\n```"]