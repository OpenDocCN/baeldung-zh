["```\r\n<dependency>\r\n    <groupId>org.activiti</groupId>\r\n    <artifactId>activiti-engine</artifactId>\r\n</dependency>\r\n```","```\r\n<beans >\r\n    <bean id=\"processEngineConfiguration\" class=\r\n      \"org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration\">\r\n        <property name=\"jdbcUrl\" \r\n          value=\"jdbc:h2:mem:activiti;DB_CLOSE_DELAY=1000\" />\r\n        <property name=\"jdbcDriver\" value=\"org.h2.Driver\" />\r\n        <property name=\"jdbcUsername\" value=\"root\" />\r\n        <property name=\"jdbcPassword\" value=\"\" />\r\n        <property name=\"databaseSchemaUpdate\" value=\"true\" />\r\n    </bean>\r\n</beans> \r\n```","```\r\nProcessEngine processEngine = ProcessEngines.getDefaultProcessEngine();\r\n```","```\r\n@Test\r\npublic void givenXMLConfig_whenGetDefault_thenGotProcessEngine() {\r\n    ProcessEngine processEngine \r\n      = ProcessEngines.getDefaultProcessEngine();\r\n    assertNotNull(processEngine);\r\n    assertEquals(\"root\", processEngine.getProcessEngineConfiguration()\r\n      .getJdbcUsername());\r\n} \r\n```","```\r\n<startEvent id=\"startEvent\" name=\"request\" \r\n  activiti:initiator=\"employeeName\">\r\n    <extensionElements>\r\n        <activiti:formProperty id=\"numberOfDays\" \r\n          name=\"Number of days\" type=\"long\" required=\"true\"/>\r\n        <activiti:formProperty id=\"startDate\" \r\n          name=\"Vacation start date (MM-dd-yyyy)\" type=\"date\" \r\n          datePattern=\"MM-dd-yyyy hh:mm\" required=\"true\"/>\r\n        <activiti:formProperty id=\"reason\" name=\"Reason for leave\" \r\n          type=\"string\"/>\r\n     </extensionElements>\r\n</startEvent> \r\n```","```\r\n<userTask id=\"handle_vacation_request\" name=\r\n  \"Handle Request for Vacation\">\r\n    <documentation>${employeeName} would like to take ${numberOfDays} day(s)\r\n      of vacation (Motivation: ${reason}).</documentation>\r\n    <extensionElements>\r\n        <activiti:formProperty id=\"vacationApproved\" name=\"Do you approve\r\n          this vacation request?\" type=\"enum\" required=\"true\"/>\r\n        <activiti:formProperty id=\"comments\" name=\"Comments from Manager\"\r\n          type=\"string\"/>\r\n    </extensionElements>\r\n    <potentialOwner>\r\n      <resourceAssignmentExpression>\r\n        <formalExpression>management</formalExpression>\r\n      </resourceAssignmentExpression>\r\n    </potentialOwner>\r\n</userTask>\r\n```","```\r\n<serviceTask id=\"send-email-confirmation\" name=\"Send email confirmation\" \r\n  activiti:class=\r\n  \"com.example.activiti.servicetasks.SendEmailServiceTask.java\">\r\n</serviceTask>\r\n```","```\r\n<sequenceFlow id=\"flow3\" name=\"approved\" \r\n  sourceRef=\"sid-12A577AE-5227-4918-8DE1-DC077D70967C\" \r\n  targetRef=\"send-email-confirmation\">\r\n    <conditionExpression xsi:type=\"tFormalExpression\">\r\n      <![CDATA[${vacationApproved == 'true'}]]>\r\n    </conditionExpression>\r\n</sequenceFlow>\r\n```","```\r\n@Test \r\npublic void givenBPMN_whenDeployProcess_thenDeployed() {\r\n    ProcessEngine processEngine \r\n      = ProcessEngines.getDefaultProcessEngine();\r\n    RepositoryService repositoryService \r\n      = processEngine.getRepositoryService();\r\n    repositoryService.createDeployment()\r\n      .addClasspathResource(\r\n      \"org/activiti/test/vacationRequest.bpmn20.xml\")\r\n      .deploy();\r\n    Long count=repositoryService.createProcessDefinitionQuery().count();\r\n    assertEquals(\"1\", count.toString());\r\n}\r\n```","```\r\n@Test\r\npublic void givenDeployedProcess_whenStartProcessInstance_thenRunning() {\r\n    //deploy the process definition    \r\n    Map<String, Object> variables = new HashMap>();\r\n    variables.put(\"employeeName\", \"John\");\r\n    variables.put(\"numberOfDays\", 4);\r\n    variables.put(\"vacationMotivation\", \"I need a break!\");\r\n\r\n    RuntimeService runtimeService = processEngine.getRuntimeService();\r\n    ProcessInstance processInstance = runtimeService\r\n      .startProcessInstanceByKey(\"vacationRequest\", variables);\r\n    Long count=runtimeService.createProcessInstanceQuery().count();\r\n\r\n    assertEquals(\"1\", count.toString());\r\n}\r\n```","```\r\n@Test \r\npublic void givenProcessInstance_whenCompleteTask_thenGotNextTask() {\r\n    // deploy process and start process instance   \r\n    TaskService taskService = processEngine.getTaskService();\r\n    List<Task> tasks = taskService.createTaskQuery()\r\n      .taskCandidateGroup(\"management\").list();\r\n    Task task = tasks.get(0);\r\n\r\n    Map<String, Object> taskVariables = new HashMap<>();\r\n    taskVariables.put(\"vacationApproved\", \"false\");\r\n    taskVariables.put(\"comments\", \"We have a tight deadline!\");\r\n    taskService.complete(task.getId(), taskVariables);\r\n\r\n    Task currentTask = taskService.createTaskQuery()\r\n      .taskName(\"Modify vacation request\").singleResult();\r\n    assertNotNull(currentTask);\r\n}\r\n```","```\r\n@Test(expected = ActivitiException.class)\r\npublic void givenDeployedProcess_whenSuspend_thenNoProcessInstance() {\r\n    // deploy the process definition\r\n    repositoryService.suspendProcessDefinitionByKey(\"vacationRequest\");\r\n    runtimeService.startProcessInstanceByKey(\"vacationRequest\");\r\n} \r\n```"]