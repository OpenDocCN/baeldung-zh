["```\r\ncurl -H \"Accept: application/json\" -i http://localhost:8080/spring-boot-rest/foos/1\r\n```","```\r\nHTTP/1.1 200 OK\r\nETag: \"f88dd058fe004909615a64f01be66a7\"\r\nContent-Type: application/json;charset=UTF-8\r\nContent-Length: 52\r\n```","```\r\ncurl -H \"Accept: application/json\" -H 'If-None-Match: \"f88dd058fe004909615a64f01be66a7\"'\r\n -i http://localhost:8080/spring-boot-rest/foos/1\r\n```","```\r\nHTTP/1.1 304 Not Modified\r\nETag: \"f88dd058fe004909615a64f01be66a7\"\r\n```","```\r\ncurl -H \"Content-Type: application/json\" -i \r\n  -X PUT --data '{ \"id\":1, \"name\":\"Transformers2\"}' \r\n    http://localhost:8080/spring-boot-rest/foos/1\r\n```","```\r\nHTTP/1.1 200 OK\r\nETag: \"d41d8cd98f00b204e9800998ecf8427e\" \r\nContent-Length: 0\r\n```","```\r\ncurl -H \"Accept: application/json\" -H 'If-None-Match: \"f88dd058fe004909615a64f01be66a7\"' -i \r\n  http://localhost:8080/spring-boot-rest/foos/1\r\n```","```\r\nHTTP/1.1 200 OK\r\nETag: \"03cb37ca667706c68c0aad4cb04c3a211\"\r\nContent-Type: application/json;charset=UTF-8\r\nContent-Length: 56\r\n```","```\r\n<filter>\r\n   <filter-name>etagFilter</filter-name>\r\n   <filter-class>org.springframework.web.filter.ShallowEtagHeaderFilter</filter-class>\r\n</filter>\r\n<filter-mapping>\r\n   <filter-name>etagFilter</filter-name>\r\n   <url-pattern>/foos/*</url-pattern>\r\n</filter-mapping>\r\n```","```\r\n@Bean\r\npublic ShallowEtagHeaderFilter shallowEtagHeaderFilter() {\r\n    return new ShallowEtagHeaderFilter();\r\n}\r\n```","```\r\n@Bean\r\npublic FilterRegistrationBean<ShallowEtagHeaderFilter> shallowEtagHeaderFilter() {\r\n    FilterRegistrationBean<ShallowEtagHeaderFilter> filterRegistrationBean\r\n      = new FilterRegistrationBean<>( new ShallowEtagHeaderFilter());\r\n    filterRegistrationBean.addUrlPatterns(\"/foos/*\");\r\n    filterRegistrationBean.setName(\"etagFilter\");\r\n    return filterRegistrationBean;\r\n}\r\n```","```\r\n@GetMapping(value = \"/{id}/custom-etag\")\r\npublic ResponseEntity<Foo>\r\n  findByIdWithCustomEtag(@PathVariable(\"id\") final Long id) {\r\n\r\n    // ...Foo foo = ...\r\n\r\n    return ResponseEntity.ok()\r\n      .eTag(Long.toString(foo.getVersion()))\r\n      .body(foo);\r\n}\r\n```","```\r\n@Test\r\npublic void givenResourceExists_whenRetrievingResource_thenEtagIsAlsoReturned() {\r\n    // Given\r\n    String uriOfResource = createAsUri();\r\n\r\n    // When\r\n    Response findOneResponse = RestAssured.given().\r\n      header(\"Accept\", \"application/json\").get(uriOfResource);\r\n\r\n    // Then\r\n    assertNotNull(findOneResponse.getHeader(\"ETag\"));\r\n}\r\n```","```\r\n@Test\r\npublic void givenResourceWasRetrieved_whenRetrievingAgainWithEtag_thenNotModifiedReturned() {\r\n    // Given\r\n    String uriOfResource = createAsUri();\r\n    Response findOneResponse = RestAssured.given().\r\n      header(\"Accept\", \"application/json\").get(uriOfResource);\r\n    String etagValue = findOneResponse.getHeader(HttpHeaders.ETAG);\r\n\r\n    // When\r\n    Response secondFindOneResponse= RestAssured.given().\r\n      header(\"Accept\", \"application/json\").headers(\"If-None-Match\", etagValue)\r\n      .get(uriOfResource);\r\n\r\n    // Then\r\n    assertTrue(secondFindOneResponse.getStatusCode() == 304);\r\n}\r\n```","```\r\n@Test\r\npublic void \r\n  givenResourceWasRetrievedThenModified_whenRetrievingAgainWithEtag_thenResourceIsReturned() {\r\n    // Given\r\n    String uriOfResource = createAsUri();\r\n    Response findOneResponse = RestAssured.given().\r\n      header(\"Accept\", \"application/json\").get(uriOfResource);\r\n    String etagValue = findOneResponse.getHeader(HttpHeaders.ETAG);\r\n\r\n    existingResource.setName(randomAlphabetic(6));\r\n    update(existingResource);\r\n\r\n    // When\r\n    Response secondFindOneResponse= RestAssured.given().\r\n      header(\"Accept\", \"application/json\").headers(\"If-None-Match\", etagValue)\r\n      .get(uriOfResource);\r\n\r\n    // Then\r\n    assertTrue(secondFindOneResponse.getStatusCode() == 200);\r\n}\r\n```","```\r\n@Test\r\npublic void givenResourceExists_whenRetrievedWithIfMatchIncorrectEtag_then412IsReceived() {\r\n    // Given\r\n    T existingResource = getApi().create(createNewEntity());\r\n\r\n    // When\r\n    String uriOfResource = baseUri + \"/\" + existingResource.getId();\r\n    Response findOneResponse = RestAssured.given().header(\"Accept\", \"application/json\").\r\n      headers(\"If-Match\", randomAlphabetic(8)).get(uriOfResource);\r\n\r\n    // Then\r\n    assertTrue(findOneResponse.getStatusCode() == 412);\r\n}\r\n```"]