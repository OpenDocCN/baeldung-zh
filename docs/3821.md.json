["```\r\n<plugin>\r\n    <groupId>org.codehaus.mojo</groupId> \r\n    <artifactId>properties-maven-plugin</artifactId> \r\n    <version>1.0.0</version> \r\n    <executions> \r\n        <execution> \r\n            <phase>generate-resources</phase> \r\n            <goals> \r\n                <goal>write-project-properties</goal> \r\n            </goals> \r\n            <configuration> \r\n                <outputFile>${project.build.outputDirectory}/properties-from-pom.properties</outputFile> \r\n            </configuration> \r\n        </execution> \r\n    </executions> \r\n</plugin> \r\n```","```\r\n<properties> \r\n    <name>${project.name}</name> \r\n    <my.awesome.property>property-from-pom</my.awesome.property> \r\n</properties>\r\n```","```\r\npublic class PropertiesReader {\r\n    private Properties properties;\r\n\r\n    public PropertiesReader(String propertyFileName) throws IOException {\r\n        InputStream is = getClass().getClassLoader()\r\n            .getResourceAsStream(propertyFileName);\r\n        this.properties = new Properties();\r\n        this.properties.load(is);\r\n    }\r\n\r\n    public String getProperty(String propertyName) {\r\n        return this.properties.getProperty(propertyName);\r\n    }\r\n}\r\n```","```\r\nPropertiesReader reader = new PropertiesReader(\"properties-from-pom.properties\"); \r\nString property = reader.getProperty(\"my.awesome.property\");\r\nAssert.assertEquals(\"property-from-pom\", property);\r\n```"]