["```\r\n$ ss -xan | grep var\r\n\r\nu_str LISTEN 0      4096              /var/run/docker/libnetwork/dd677ae5f81a.sock 56352            * 0           \r\nu_dgr UNCONN 0      0                                 /var/run/chrony/chronyd.sock 24398            * 0           \r\nu_str LISTEN 0      4096                                      /var/run/nscd/socket 23131            * 0           \r\nu_str LISTEN 0      4096                              /var/run/docker/metrics.sock 42876            * 0           \r\nu_str LISTEN 0      4096                                      /var/run/docker.sock 53704            * 0    \r\n... \r\n```","```\r\n$ docker run -it -v /var/run/docker.sock:/var/run/docker.sock alpine\r\n\r\n(alpine) $\r\n```","```\r\n(alpine) $ apk add curl && apk add jq\r\n\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.11/community/x86_64/APKINDEX.tar.gz\r\n(1/4) Installing ca-certificates (20191127-r2)\r\n(2/4) Installing nghttp2-libs (1.40.0-r1)\r\n...\r\n```","```\r\n(alpine) $ curl -s --unix-socket /var/run/docker.sock http://dummy/containers/json | jq '.'\r\n\r\n[\r\n  {\r\n    \"Id\": \"483c5d4aa0280ca35f0dbca59b5d2381ad1aa455ebe0cf0ca604900b47210490\",\r\n    \"Names\": [\r\n      \"/wizardly_chatelet\"\r\n    ],\r\n    \"Image\": \"alpine\",\r\n    \"ImageID\": \"sha256:e7d92cdc71feacf90708cb59182d0df1b911f8ae022d29e8e95d75ca6a99776a\",\r\n    \"Command\": \"/bin/sh\",\r\n    \"Created\": 1595882408,\r\n    \"Ports\": [],\r\n...\r\n```","```\r\n$ docker network ls\r\n\r\na3b64ea758e1        bridge              bridge              local\r\ndfad5fbfc671        host                host                local\r\n1ee855939a2a        none                null                local \r\n```","```\r\n$ docker network inspect a3b64ea758e1\r\n\r\n[\r\n    {\r\n        \"Name\": \"bridge\",\r\n        \"Id\": \"a3b64ea758e1f02f4692fd5105d638c05c75d573301fd4c025f38d075ed2a158\",\r\n...\r\n        \"IPAM\": {\r\n            \"Driver\": \"default\",\r\n            \"Options\": null,\r\n            \"Config\": [\r\n                {\r\n                    \"Subnet\": \"172.17.0.0/16\",\r\n                    \"Gateway\": \"172.17.0.1\"\r\n                }\r\n            ]\r\n        },\r\n        \"Internal\": false,\r\n        \"Attachable\": false,\r\n...\r\n```","```\r\n$ systemctl status docker.service\r\n\r\ndocker.service - Docker Application Container Engine\r\n     Loaded: loaded (/usr/lib/systemd/system/docker.service; disabled; vendor preset: disabled)\r\n...\r\n     CGroup: /system.slice/docker.service\r\n             ├─6425 /usr/bin/dockerd --add-runtime oci=/usr/sbin/docker-runc\r\n             └─6452 docker-containerd --config /var/run/docker/containerd/containerd.toml --log-level warn \r\n```","```\r\n$ cat /usr/lib/systemd/system/docker.service\r\n\r\n[Unit]\r\nDescription=Docker Application Container Engine\r\nDocumentation=http://docs.docker.com\r\nAfter=network.target lvm2-monitor.service SuSEfirewall2.service\r\n\r\n[Service]\r\nEnvironmentFile=/etc/sysconfig/docker\r\n...\r\nType=notify\r\nExecStart=/usr/bin/dockerd --add-runtime oci=/usr/sbin/docker-runc $DOCKER_NETWORK_OPTIONS $DOCKER_OPTS\r\nExecReload=/bin/kill -s HUP $MAINPID\r\n...\r\n```","```\r\n$ cat /etc/sysconfig/docker \r\n\r\n## Path           : System/Management\r\n## Description    : Extra cli switches for docker daemon\r\n## Type           : string\r\n## Default        : \"\"\r\n## ServiceRestart : docker\r\n#\r\nDOCKER_OPTS=\"-H unix:///var/run/docker.sock -H tcp://172.17.0.1:2375\"\r\n```","```\r\n$ ip address show dev docker0\r\n\r\n3: docker0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default \r\n    link/ether 02:42:6c:7d:9c:8d brd ff:ff:ff:ff:ff:ff\r\n    inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0\r\n       valid_lft forever preferred_lft forever\r\n    inet6 fe80::42:6cff:fe7d:9c8d/64 scope link \r\n       valid_lft forever preferred_lft forever \r\n```","```\r\n$ iptables -I INPUT -i docker0 -j ACCEPT\r\n```","```\r\n$ systemctl restart docker.service\r\n$ systemctl status docker.service\r\n docker.service - Docker Application Container Engine\r\n     Loaded: loaded (/usr/lib/systemd/system/docker.service; disabled; vendor preset: disabled)\r\n...\r\n     CGroup: /system.slice/docker.service\r\n             ├─8110 /usr/bin/dockerd --add-runtime oci=/usr/sbin/docker-runc -H unix:///var/run/docker.sock -H tcp://172.17.0.1:2375\r\n             └─8137 docker-containerd --config /var/run/docker/containerd/containerd.toml --log-level wa\r\n```","```\r\n(alpine) $ curl -s http://172.17.0.1:2375/containers/json | jq '.'\r\n\r\n[\r\n  {\r\n    \"Id\": \"45f13902b710f7a5f324a7d4ec7f9b934057da4887650dc8fb4391c1d98f051c\",\r\n    \"Names\": [\r\n      \"/unruffled_cray\"\r\n    ],\r\n    \"Image\": \"alpine\",\r\n    \"ImageID\": \"sha256:a24bb4013296f61e89ba57005a7b3e52274d8edd3ae2077d04395f806b63d83e\",\r\n    \"Command\": \"/bin/sh\",\r\n    \"Created\": 1596046207,\r\n    \"Ports\": [],\r\n... \r\n```","```\r\n(alpine) $ curl -s http://172.17.0.1:2375/containers/\"$(hostname)\"/json | jq '.'\r\n\r\n{\r\n  \"Id\": \"45f13902b710f7a5f324a7d4ec7f9b934057da4887650dc8fb4391c1d98f051c\",\r\n  \"Created\": \"2020-07-29T18:10:07.261589135Z\",\r\n  \"Path\": \"/bin/sh\",\r\n  \"Args\": [],\r\n  \"State\": {\r\n    \"Status\": \"running\",\r\n... \r\n```","```\r\n(alpine) $ curl -s http://172.17.0.1:2375/events | jq '.'\r\n```","```\r\n$ docker run hello-world\r\n\r\nHello from Docker!\r\nThis message shows that your installation appears to be working correctly.\r\n... \r\n```","```\r\n{\r\n  \"status\": \"create\",\r\n  \"id\": \"abf881cbecfc0b022a3c1a6908559bb27406d0338a917fc91a77200d52a2553c\",\r\n  \"from\": \"hello-world\",\r\n  \"Type\": \"container\",\r\n  \"Action\": \"create\",\r\n...\r\n}\r\n{\r\n  \"status\": \"attach\",\r\n  \"id\": \"abf881cbecfc0b022a3c1a6908559bb27406d0338a917fc91a77200d52a2553c\",\r\n  \"from\": \"hello-world\",\r\n  \"Type\": \"container\",\r\n  \"Action\": \"attach\",\r\n...\r\n```","```\r\n(alpine) $ cat > create.json << EOF\r\n{\r\n  \"Image\": \"hello-world\",\r\n  \"Cmd\": [\"/hello\"]\r\n}\r\nEOF \r\n```","```\r\n(alpine) $ curl -X POST -H \"Content-Type: application/json\" -d @create.json http://172.17.0.1:2375/containers/create\r\n\r\n{\"Id\":\"f96a6360ad8e36271cc75a3cff05348761569cf2f089bbb30d826bd1e2d52f59\",\"Warnings\":[]}\r\n```","```\r\n(alpine) $ curl -X POST http://172.17.0.1:2375/containers/f96a6360ad8e36271cc75a3cff05348761569cf2f089bbb30d826bd1e2d52f59/start\r\n```","```\r\n(alpine) $ curl http://172.17.0.1:2375/containers/f96a6360ad8e36271cc75a3cff05348761569cf2f089bbb30d826bd1e2d52f59/logs?stdout=true --output -\r\n\r\nHello from Docker!\r\nKThis message shows that your installation appears to be working correctly.\r\n\r\n;To generate this message, Docker took the following steps:\r\n3 1\\. The Docker client contacted the Docker daemon.\r\n...\r\n```","```\r\n(alpine) $ cat create.json\r\n\r\n{\r\n  \"Tty\":true,\t\r\n  \"Image\": \"hello-world\",\r\n  \"Cmd\": [\"/hello\"]\r\n}\r\n```"]