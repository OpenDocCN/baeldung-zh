["```\r\n@Deployment(name=\"myname\" order = 1)\r\n```","```\r\n@Test @OperateOnDeployment(\"myname\")\r\n```","```\r\n<dependency>\r\n    <groupId>org.jboss.arquillian</groupId>\r\n    <artifactId>arquillian-bom</artifactId>\r\n    <version>1.1.13.Final</version>\r\n    <scope>import</scope>\r\n    <type>pom</type>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.glassfish.main.extras</groupId>\r\n    <artifactId>glassfish-embedded-all</artifactId>\r\n    <version>4.1.2</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.jboss.arquillian.container</groupId>\r\n    <artifactId>arquillian-glassfish-embedded-3.1</artifactId>\r\n    <version>1.0.0.Final</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n```","```\r\npublic class Component {\r\n    public void sendMessage(PrintStream to, String msg) {\r\n        to.println(message(msg));\r\n    }\r\n\r\n    public String message(String msg) {\r\n        return \"Message, \" + msg;\r\n    }\r\n}\r\n```","```\r\n@RunWith(Arquillian.class) \r\n```","```\r\n@Deployment\r\npublic static JavaArchive createDeployment() {\r\n    return ShrinkWrap.create(JavaArchive.class)\r\n      .addClass(Component.class)\r\n      .addAsManifestResource(EmptyAsset.INSTANCE, \"beans.xml\");\r\n}\r\n```","```\r\n@Inject\r\nprivate Component component;\r\n```","```\r\nassertEquals(\"Message, MESSAGE\",component.message((\"MESSAGE\")));\r\n\r\ncomponent.sendMessage(System.out, \"MESSAGE\");\r\n```","```\r\npublic class ConvertToLowerCase {\r\n    public String convert(String word){\r\n        return word.toLowerCase();\r\n    }\r\n}\r\n```","```\r\n@Stateless\r\npublic class CapsConvertor {\r\n    public ConvertToLowerCase getLowerCase(){\r\n        return new ConvertToLowerCase();\r\n    }\r\n}\r\n```","```\r\n@Stateless\r\npublic class CapsService {\r\n\r\n    @Inject\r\n    private CapsConvertor capsConvertor;\r\n\r\n    public String getConvertedCaps(final String word){\r\n        return capsConvertor.getLowerCase().convert(word);\r\n    }\r\n}\r\n```","```\r\n@Inject\r\nprivate CapsService capsService;\r\n\r\n@Test\r\npublic void givenWord_WhenUppercase_ThenLowercase(){\r\n    assertTrue(\"capitalize\".equals(capsService.getConvertedCaps(\"CAPITALIZE\")));\r\n    assertEquals(\"capitalize\", capsService.getConvertedCaps(\"CAPITALIZE\"));\r\n}\r\n```","```\r\n@Deployment\r\npublic static JavaArchive createDeployment() {\r\n    return ShrinkWrap.create(JavaArchive.class)\r\n      .addClasses(CapsService.class, CapsConvertor.class, ConvertToLowerCase.class)\r\n      .addAsManifestResource(EmptyAsset.INSTANCE, \"beans.xml\");\r\n}\r\n```","```\r\n@Entity\r\npublic class Car {\r\n\r\n    @Id\r\n    @GeneratedValue\r\n    private Long id;\r\n\r\n    @NotNull\r\n    private String name;\r\n\r\n    // getters and setters\r\n}\r\n```","```\r\n@Stateless\r\npublic class CarEJB {\r\n\r\n    @PersistenceContext(unitName = \"defaultPersistenceUnit\")\r\n    private EntityManager em;\r\n\r\n    public Car saveCar(Car car) {\r\n        em.persist(car);\r\n        return car;\r\n    }\r\n\r\n    public List<Car> findAllCars() {\r\n    Query query \r\n      = em.createQuery(\"SELECT b FROM Car b ORDER BY b.name ASC\");\r\n    List<Car> entries = query.getResultList();\r\n\r\n    return entries == null ? new ArrayList<>() : entries;    \r\n\r\n    public void deleteCar(Car car) {\r\n        car = em.merge(car);\r\n        em.remove(car);\r\n    }\r\n}\r\n```","```\r\n.addClasses(Car.class, CarEJB.class)\r\n.addAsResource(\"META-INF/persistence.xml\")\r\n```","```\r\n@Test\r\npublic void testCars() {\r\n    assertTrue(carEJB.findAllCars().isEmpty());\r\n    Car c1 = new Car();\r\n    c1.setName(\"Impala\");\r\n    Car c2 = new Car();\r\n    c2.setName(\"Lincoln\");\r\n    carEJB.saveCar(c1);\r\n    carEJB.saveCar(c2);\r\n\r\n    assertEquals(2, carEJB.findAllCars().size());\r\n\r\n    carEJB.deleteCar(c1);\r\n\r\n    assertEquals(1, carEJB.findAllCars().size());\r\n}\r\n```"]