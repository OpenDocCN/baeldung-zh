["```\r\npublic class AuthenticationFilter extends OncePerRequestFilter {\r\n    @Override\r\n    protected void doFilterInternal(\r\n            HttpServletRequest request,\r\n            HttpServletResponse response,\r\n            FilterChain filterChain) throws\r\n            ServletException, IOException {\r\n        String usrName = request.getHeader(“userName”);\r\n        logger.info(\"Successfully authenticated user  \" +\r\n                userName);\r\n        filterChain.doFilter(request, response);\r\n    }\r\n}\r\n```","```\r\n@Component\r\npublic class AuthenticationFilter extends OncePerRequestFilter {\r\n    @Override\r\n    protected void doFilterInternal(\r\n      HttpServletRequest request,\r\n      HttpServletResponse response,\r\n      FilterChain filterChain) throws ServletException, IOException {\r\n        String usrName = request.getHeader(\"userName\");\r\n        logger.info(\"Successfully authenticated user  \" +\r\n          usrName);\r\n        filterChain.doFilter(request, response);\r\n    }\r\n\r\n    @Override\r\n    protected boolean shouldNotFilterAsyncDispatch() {\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    protected boolean shouldNotFilterErrorDispatch() {\r\n        return false;\r\n    }\r\n}\r\n```","```\r\n@Override\r\nprotected boolean shouldNotFilter(HttpServletRequest request) throws ServletException {\r\n    return Boolean.TRUE.equals(request.getAttribute(SHOULD_NOT_FILTER));\r\n}\r\n```","```\r\n@Controller\r\npublic class HelloController  {\r\n    @GetMapping(path = \"/greeting\")\r\n    public DeferredResult<String> hello(HttpServletResponse response) throws Exception {\r\n        DeferredResult<String> deferredResult = new DeferredResult<>();\r\n        executorService.submit(() -> perform(deferredResult));\r\n        return deferredResult;\r\n    }\r\n    private void perform(DeferredResult<String> dr) {\r\n        // some processing \r\n        dr.setResult(\"OK\");\r\n    }\r\n}\r\n```","```\r\n@Component\r\npublic class MyOncePerRequestFilter extends OncePerRequestFilter {\r\n    @Override\r\n    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)\r\n      throws ServletException, IOException {\r\n        logger.info(\"Inside Once Per Request Filter originated by request {}\", request.getRequestURI());\r\n        filterChain.doFilter(request, response);\r\n    }\r\n\r\n    @Override\r\n    protected boolean shouldNotFilterAsyncDispatch() {\r\n        return true;\r\n    }\r\n}\r\n```","```\r\ncurl -X GET http://localhost:8082/greeting \r\n```","```\r\n10:23:24.175 [http-nio-8082-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'\r\n10:23:24.175 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'\r\n10:23:24.176 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms\r\n10:23:26.814 [http-nio-8082-exec-1] INFO  c.b.O.MyOncePerRequestFilter - Inside OncePer Request Filter originated by request /greeting\r\n```","```\r\n@Override\r\nprotected boolean shouldNotFilterAsyncDispatch() {\r\n    return false;\r\n}\r\n```","```\r\n2:53.616 [http-nio-8082-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'\r\n10:32:53.616 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'\r\n10:32:53.617 [http-nio-8082-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms\r\n10:32:53.633 [http-nio-8082-exec-1] INFO  c.b.O.MyOncePerRequestFilter - Inside OncePer Request Filter originated by request /greeting\r\n10:32:53.663 [http-nio-8082-exec-2] INFO  c.b.O.MyOncePerRequestFilter - Inside OncePer Request Filter originated by request /greeting\r\n```"]