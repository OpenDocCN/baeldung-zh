["```\r\nList<String> students = Arrays.asList(\"Foo\", \"Bar\", \"Baz\", \"Qux\");\r\nCollections.shuffle(students);\r\n```","```\r\nList<String> students_1 = Arrays.asList(\"Foo\", \"Bar\", \"Baz\", \"Qux\");\r\nList<String> students_2 = Arrays.asList(\"Foo\", \"Bar\", \"Baz\", \"Qux\");\r\n\r\nint seedValue = 10;\r\n\r\nCollections.shuffle(students_1, new Random(seedValue));\r\nCollections.shuffle(students_2, new Random(seedValue));\r\n\r\nassertThat(students_1).isEqualTo(students_2);\r\n```","```\r\nMap<Integer, String> studentsById = new HashMap<>();\r\nstudentsById.put(1, \"Foo\");\r\nstudentsById.put(2, \"Bar\");\r\nstudentsById.put(3, \"Baz\");\r\nstudentsById.put(4, \"Qux\");\r\n\r\nList<Map.Entry<Integer, String>> shuffledStudentEntries\r\n = new ArrayList<>(studentsById.entrySet());\r\nCollections.shuffle(shuffledStudentEntries);\r\n\r\nList<String> shuffledStudents = shuffledStudentEntries.stream()\r\n  .map(Map.Entry::getValue)\r\n  .collect(Collectors.toList());\r\n```","```\r\nSet<String> students = new HashSet<>(\r\n  Arrays.asList(\"Foo\", \"Bar\", \"Baz\", \"Qux\"));\r\nList<String> studentList = new ArrayList<>(students);\r\nCollections.shuffle(studentList);\r\n```"]