["```\r\n@Autowired\r\nprivate UserRepository repo;\r\n\r\n@PostConstruct\r\npublic void startupCheck() {\r\n    if (StringUtils.isBlank(accessTokenUri) || \r\n      StringUtils.isBlank(userAuthorizationUri) || \r\n      StringUtils.isBlank(clientID) || StringUtils.isBlank(clientSecret)) {\r\n        throw new RuntimeException(\"Incomplete reddit properties\");\r\n    }\r\n    repo.findAll();\r\n}\r\n```","```\r\npublic class UserAgentInterceptor implements ClientHttpRequestInterceptor {\r\n\r\n    @Override\r\n    public ClientHttpResponse intercept(\r\n      HttpRequest request, byte[] body, \r\n      ClientHttpRequestExecution execution) throws IOException {\r\n\r\n        HttpHeaders headers = request.getHeaders();\r\n        headers.add(\"User-Agent\", \"Schedule with Reddit\");\r\n        return execution.execute(request, body);\r\n    }\r\n}\r\n```","```\r\n@Bean\r\npublic OAuth2RestTemplate redditRestTemplate(OAuth2ClientContext clientContext) {\r\n    OAuth2RestTemplate template = new OAuth2RestTemplate(reddit(), clientContext);\r\n    List<ClientHttpRequestInterceptor> list = new ArrayList<ClientHttpRequestInterceptor>();\r\n    list.add(new UserAgentInterceptor());\r\n    template.setInterceptors(list);\r\n    return template;\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>com.h2database</groupId>\r\n    <artifactId>h2</artifactId>\r\n    <version>1.4.187</version>\r\n</dependency>\r\n```","```\r\n## DataSource Configuration ###\r\njdbc.driverClassName=org.h2.Driver\r\njdbc.url=jdbc:h2:mem:oauth_reddit;DB_CLOSE_DELAY=-1\r\njdbc.user=sa\r\njdbc.pass=\r\n## Hibernate Configuration ##\r\nhibernate.dialect=org.hibernate.dialect.H2Dialect\r\nhibernate.hbm2ddl.auto=update\r\n```","```\r\n<dependency>\r\n    <groupId>org.thymeleaf</groupId>\r\n    <artifactId>thymeleaf</artifactId>\r\n    <version>2.1.4.RELEASE</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.thymeleaf</groupId>\r\n    <artifactId>thymeleaf-spring4</artifactId>\r\n    <version>2.1.4.RELEASE</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.thymeleaf.extras</groupId>\r\n    <artifactId>thymeleaf-extras-springsecurity3</artifactId>\r\n    <version>2.1.2.RELEASE</version>\r\n</dependency>\r\n```","```\r\n@Configuration\r\npublic class ThymeleafConfig {\r\n    @Bean\r\n    public TemplateResolver templateResolver() {\r\n        ServletContextTemplateResolver templateResolver = new ServletContextTemplateResolver();\r\n        templateResolver.setPrefix(\"/WEB-INF/jsp/\");\r\n        templateResolver.setSuffix(\".jsp\");\r\n        return templateResolver;\r\n    }\r\n\r\n    @Bean\r\n    public SpringTemplateEngine templateEngine() {\r\n        SpringTemplateEngine templateEngine = new SpringTemplateEngine();\r\n        templateEngine.setTemplateResolver(templateResolver());\r\n        templateEngine.addDialect(new SpringSecurityDialect());\r\n        return templateEngine;\r\n    }\r\n\r\n    @Bean\r\n    public ViewResolver viewResolver() {\r\n        ThymeleafViewResolver viewResolver = new ThymeleafViewResolver();\r\n        viewResolver.setTemplateEngine(templateEngine());\r\n        viewResolver.setOrder(1);\r\n        return viewResolver;\r\n    }\r\n}\r\n```","```\r\n@Override\r\nprotected WebApplicationContext createServletApplicationContext() {\r\n    AnnotationConfigWebApplicationContext context = new AnnotationConfigWebApplicationContext();\r\n    context.register(PersistenceJPAConfig.class, WebConfig.class, \r\n      SecurityConfig.class, ThymeleafConfig.class);\r\n    return context;\r\n}\r\n```","```\r\n<html>\r\n<head>\r\n<title>Schedule to Reddit</title>\r\n</head>\r\n<body>\r\n<div class=\"container\">\r\n        <h1>Welcome, <small><span sec:authentication=\"principal.username\">Bob</span></small></h1>\r\n        <br/>\r\n        <a href=\"posts\" >My Scheduled Posts</a>\r\n        <a href=\"post\" >Post to Reddit</a>\r\n        <a href=\"postSchedule\" >Schedule Post to Reddit</a>\r\n</div>\r\n</body>\r\n</html>\r\n```","```\r\n@Override\r\nprotected void configure(HttpSecurity http) throws Exception {\r\n    http\r\n        .....\r\n        .and()\r\n        .logout()\r\n        .deleteCookies(\"JSESSIONID\")\r\n        .logoutUrl(\"/logout\")\r\n        .logoutSuccessUrl(\"/\");\r\n}\r\n```","```\r\n<input id=\"sr\" name=\"sr\"/>\r\n<script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js\"></script>\r\n<script src=\"https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.2/jquery-ui.min.js\"></script>\r\n<script>\r\n$(function() {\r\n    $( \"#sr\" ).autocomplete({\r\n        source: \"/subredditAutoComplete\"\r\n    });\r\n});\r\n</script>\r\n```","```\r\n@RequestMapping(value = \"/subredditAutoComplete\")\r\n@ResponseBody\r\npublic String subredditAutoComplete(@RequestParam(\"term\") String term) {\r\n    MultiValueMap<String, String> param = new LinkedMultiValueMap<String, String>();\r\n    param.add(\"query\", term);\r\n    JsonNode node = redditRestTemplate.postForObject(\r\n      \"https://oauth.reddit.com//api/search_reddit_names\", param, JsonNode.class);\r\n    return node.get(\"names\").toString();\r\n}\r\n```","```\r\n<input name=\"url\" />\r\n<input name=\"sr\">\r\n\r\n<a href=\"#\" onclick=\"checkIfAlreadySubmitted()\">Check if already submitted</a>\r\n<span id=\"checkResult\" style=\"display:none\"></span>\r\n\r\n<script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js\"></script>\r\n<script>\r\n$(function() {\r\n    $(\"input[name='url'],input[name='sr']\").focus(function (){\r\n        $(\"#checkResult\").hide();\r\n    });\r\n});\r\nfunction checkIfAlreadySubmitted(){\r\n    var url = $(\"input[name='url']\").val();\r\n    var sr = $(\"input[name='sr']\").val();\r\n    if(url.length >3 && sr.length > 3){\r\n        $.post(\"checkIfAlreadySubmitted\",{url: url, sr: sr}, function(data){\r\n            var result = JSON.parse(data);\r\n            if(result.length == 0){\r\n                $(\"#checkResult\").show().html(\"Not submitted before\");\r\n            }else{\r\n                $(\"#checkResult\").show().html(\r\n               'Already submitted <b><a target=\"_blank\" href=\"http://www.reddit.com'\r\n               +result[0].data.permalink+'\">here</a></b>');\r\n            }\r\n        });\r\n    }\r\n    else{\r\n        $(\"#checkResult\").show().html(\"Too short url and/or subreddit\");\r\n    }\r\n}           \r\n</script>\r\n```","```\r\n@RequestMapping(value = \"/checkIfAlreadySubmitted\", method = RequestMethod.POST)\r\n@ResponseBody\r\npublic String checkIfAlreadySubmitted(\r\n  @RequestParam(\"url\") String url, @RequestParam(\"sr\") String sr) {\r\n    JsonNode node = redditRestTemplate.getForObject(\r\n      \"https://oauth.reddit.com/r/\" + sr + \"/search?q=url:\" + url + \"&restrict;_sr=on\", JsonNode.class);\r\n    return node.get(\"data\").get(\"children\").toString();\r\n}\r\n```","```\r\n<plugin>\r\n    <groupId>org.apache.maven.plugins</groupId>\r\n    <artifactId>maven-dependency-plugin</artifactId>\r\n    <version>2.3</version>\r\n    <executions>\r\n        <execution>\r\n            <phase>package</phase>\r\n            <goals><goal>copy</goal></goals>\r\n            <configuration>\r\n                <artifactItems>\r\n                    <artifactItem>\r\n                        <groupId>com.github.jsimone</groupId>\r\n                        <artifactId>webapp-runner</artifactId>\r\n                        <version>7.0.57.2</version>\r\n                        <destFileName>webapp-runner.jar</destFileName>\r\n                    </artifactItem>\r\n                </artifactItems>\r\n            </configuration>\r\n        </execution>\r\n    </executions>\r\n</plugin>\r\n```","```\r\n<dependency>\r\n    <groupId>org.postgresql</groupId>\r\n    <artifactId>postgresql</artifactId>\r\n    <version>9.4-1201-jdbc41</version>\r\n</dependency>\r\n```","```\r\nweb:    java $JAVA_OPTS -jar target/dependency/webapp-runner.jar --port $PORT target/*.war\r\n```","```\r\ncd path_to_your_project\r\nheroku login\r\nheroku create\r\n```","```\r\n## DataSource Configuration ##\r\njdbc.driverClassName=org.postgresql.Driver\r\njdbc.url=jdbc:postgresql://hostname:5432/databasename\r\njdbc.user=xxxxxxxxxxxxxx\r\njdbc.pass=xxxxxxxxxxxxxxxxx\r\n\r\n## Hibernate Configuration ##\r\nhibernate.dialect=org.hibernate.dialect.PostgreSQLDialect\r\nhibernate.hbm2ddl.auto=update\r\n```","```\r\n@Entity\r\n@Table(name = \"APP_USER\")\r\npublic class User { .... }\r\n```","```\r\ngit add .\r\ngit commit -m \"init\"\r\ngit push heroku master\r\n```"]