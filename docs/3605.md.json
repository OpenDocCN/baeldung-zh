["```\r\nRedirectAttributes addFlashAttribute(String attributeName, @Nullable Object attributeValue);\r\n\r\nRedirectAttributes addFlashAttribute(Object attributeValue);\r\n\r\nMap<String, ?> getFlashAttributes();\r\n```","```\r\npublic final class FlashMap extends HashMap<String, Object> implements Comparable<FlashMap> {\r\n\r\n    @Nullable\r\n    private String targetRequestPath;\r\n\r\n    private final MultiValueMap<String, String> targetRequestParams \r\n      = new LinkedMultiValueMap<>(4);\r\n\r\n    private long expirationTime = -1;\r\n}\r\n```","```\r\npublic interface FlashMapManager {\r\n\r\n    @Nullable\r\n    FlashMap retrieveAndUpdate(HttpServletRequest request, HttpServletResponse response);\r\n\r\n    void saveOutputFlashMap(FlashMap flashMap, HttpServletRequest request, HttpServletResponse response);\r\n}\r\n```","```\r\npublic static Map<String, ?> getInputFlashMap(HttpServletRequest request);\r\n\r\npublic static FlashMap getOutputFlashMap(HttpServletRequest request);\r\n\r\npublic static FlashMapManager getFlashMapManager(HttpServletRequest request);\r\n\r\npublic static void saveOutputFlashMap(String location, \r\n  HttpServletRequest request, HttpServletResponse response);\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-thymeleaf</artifactId>\r\n    <version>2.2.1.RELEASE</version>\r\n</dependency>\r\n```","```\r\nspring.thymeleaf.cache=false\r\nspring.thymeleaf.enabled=true \r\nspring.thymeleaf.prefix=classpath:/templates/\r\nspring.thymeleaf.suffix=.html\r\n```","```\r\npublic class Poem {\r\n    private String title;\r\n    private String author;\r\n    private String body;\r\n}\r\n```","```\r\npublic static boolean isValidPoem(Poem poem) {\r\n    return poem != null && Strings.isNotBlank(poem.getAuthor()) \r\n      && Strings.isNotBlank(poem.getBody())\r\n      && Strings.isNotBlank(poem.getTitle());\r\n}\r\n```","```\r\n@GetMapping(\"/poem/submit\")\r\npublic String submitGet(Model model) {\r\n    model.addAttribute(\"poem\", new Poem());\r\n    return \"submit\";\r\n}\r\n```","```\r\n<form action=\"#\" method=\"post\" th:action=\"@{/poem/submit}\" th:object=\"${poem}\">\r\n    <!-- form fields for poem title, body, and author -->\r\n</form> \r\n```","```\r\n@PostMapping(\"/poem/submit\")\r\npublic RedirectView submitPost(\r\n    HttpServletRequest request, \r\n    @ModelAttribute Poem poem, \r\n    RedirectAttributes redirectAttributes) {\r\n    if (Poem.isValidPoem(poem)) {\r\n        redirectAttributes.addFlashAttribute(\"poem\", poem);\r\n        return new RedirectView(\"/poem/success\", true);\r\n    } else {\r\n        return new RedirectView(\"/poem/submit\", true);\r\n    }\r\n}\r\n```","```\r\n@GetMapping(\"/poem/success\")\r\npublic String getSuccess(HttpServletRequest request) {\r\n    Map<String, ?> inputFlashMap = RequestContextUtils.getInputFlashMap(request);\r\n    if (inputFlashMap != null) {\r\n        Poem poem = (Poem) inputFlashMap.get(\"poem\");\r\n        return \"success\";\r\n    } else {\r\n        return \"redirect:/poem/submit\";\r\n    }\r\n}\r\n```","```\r\n<h1 th:if=\"${poem}\">\r\n    <p th:text=\"${'You have successfully submitted poem titled - '+ poem?.title}\"/>\r\n    Click <a th:href=\"@{/poem/submit}\"> here</a> to submit more.\r\n</h1>\r\n```"]