["```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-data-jpa</artifactId>\r\n</dependency> \r\n<dependency>\r\n    <groupId>com.h2database</groupId>\r\n    <artifactId>h2</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-test</artifactId>\r\n</dependency>\r\n```","```\r\nspring.datasource.driver-class-name=org.h2.Driver\r\nspring.datasource.url=jdbc:h2:mem:db;DB_CLOSE_DELAY=-1\r\nspring.datasource.username=sa\r\nspring.datasource.password=sa\r\n```","```\r\n@Entity\r\npublic class GenericEntity {\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.AUTO)\r\n    private Long id;\r\n    private String value;\r\n\r\n    //standard constructors, getters, setters\r\n}\r\n```","```\r\npublic interface GenericEntityRepository\r\n  extends JpaRepository<GenericEntity, Long> { }\r\n```","```\r\n@RunWith(SpringRunner.class)\r\n@SpringBootTest(classes = Application.class)\r\npublic class SpringBootJPAIntegrationTest {\r\n\r\n    @Autowired\r\n    private GenericEntityRepository genericEntityRepository;\r\n\r\n    @Test\r\n    public void givenGenericEntityRepository_whenSaveAndRetreiveEntity_thenOK() {\r\n        GenericEntity genericEntity = genericEntityRepository\r\n          .save(new GenericEntity(\"test\"));\r\n        GenericEntity foundEntity = genericEntityRepository\r\n          .findOne(genericEntity.getId());\r\n\r\n        assertNotNull(foundEntity);\r\n        assertEquals(genericEntity.getValue(), foundEntity.getValue());\r\n    }\r\n}\r\n```","```\r\njdbc.driverClassName=org.h2.Driver\r\njdbc.url=jdbc:h2:mem:db;DB_CLOSE_DELAY=-1\r\njdbc.username=sa\r\njdbc.password=sa\r\n```","```\r\n@Configuration\r\n@EnableJpaRepositories(basePackages = \"org.baeldung.repository\")\r\n@PropertySource(\"persistence-generic-entity.properties\")\r\n@EnableTransactionManagement\r\npublic class H2JpaConfig {\r\n    // ...\r\n}\r\n```","```\r\n@RunWith(SpringRunner.class)\r\n@SpringBootTest(classes = {Application.class, H2JpaConfig.class})\r\npublic class SpringBootH2IntegrationTest {\r\n    // ...\r\n}\r\n```","```\r\n@Configuration\r\n@EnableJpaRepositories(basePackages = {\r\n  \"org.baeldung.repository\",\r\n  \"org.baeldung.boot.repository\"\r\n})\r\n@EnableTransactionManagement\r\npublic class H2TestProfileJPAConfig {\r\n\r\n    @Bean\r\n    @Profile(\"test\")\r\n    public DataSource dataSource() {\r\n        DriverManagerDataSource dataSource = new DriverManagerDataSource();\r\n        dataSource.setDriverClassName(\"org.h2.Driver\");\r\n        dataSource.setUrl(\"jdbc:h2:mem:db;DB_CLOSE_DELAY=-1\");\r\n        dataSource.setUsername(\"sa\");\r\n        dataSource.setPassword(\"sa\");\r\n\r\n        return dataSource;\r\n    }\r\n\r\n    // configure entityManagerFactory\r\n    // configure transactionManager\r\n    // configure additional Hibernate properties\r\n}\r\n```","```\r\n@RunWith(SpringRunner.class)\r\n@SpringBootTest(classes = {\r\n  Application.class, \r\n  H2TestProfileJPAConfig.class})\r\n@ActiveProfiles(\"test\")\r\npublic class SpringBootProfileIntegrationTest {\r\n    // ...\r\n}\r\n```"]