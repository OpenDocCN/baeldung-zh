["```\r\n<dependency>\r\n    <groupId>org.apache.deltaspike.modules</groupId>\r\n    <artifactId>deltaspike-data-module-api</artifactId>\r\n    <version>1.8.2</version>\r\n    <scope>compile</scope>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.apache.deltaspike.modules</groupId>\r\n    <artifactId>deltaspike-data-module-impl</artifactId>\r\n    <version>1.8.2</version>\r\n    <scope>runtime</scope>\r\n</dependency>\r\n```","```\r\nruntime 'org.apache.deltaspike.modules:deltaspike-data-module-impl'\r\ncompile 'org.apache.deltaspike.modules:deltaspike-data-module-api' \r\n```","```\r\npublic class EntityManagerProducer {\r\n\r\n    @PersistenceContext(unitName = \"primary\")\r\n    private EntityManager entityManager;\r\n\r\n    @ApplicationScoped\r\n    @Produces\r\n    public EntityManager getEntityManager() {\r\n        return entityManager;\r\n    }\r\n}\r\n```","```\r\n<persistence-unit name=\"primary\" transaction-type=\"JTA\">\r\n   <jta-data-source>java:jboss/datasources/baeldung-jee7-seedDS</jta-data-source>\r\n   <properties>\r\n      <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\r\n      <property name=\"hibernate.show_sql\" value=\"false\" />\r\n   </properties>\r\n</persistence-unit>\r\n```","```\r\nglobalAlternatives.org.apache.deltaspike.jpa.spi.transaction.TransactionStrategy=org.apache.deltaspike.jpa.impl.transaction.ContainerManagedTransactionStrategy\r\n```","```\r\n@Entity\r\npublic class User {\r\n    // ...\r\n}  \r\n\r\n@Repository(forEntity = User.class) \r\npublic interface SimpleUserRepository { \r\n    // ... \r\n}\r\n```","```\r\n@Repository(forEntity = User.class)\r\npublic abstract class SimpleUserRepository { \r\n    // ... \r\n} \r\n```","```\r\n(Entity|Optional<Entity>|List<Entity>|Stream<Entity>) (prefix)(Property[Comparator]){Operator Property [Comparator]} \r\n```","```\r\npublic abstract User findByFirstName(String firstName);\r\n```","```\r\npublic abstract Collection<User> findAnyByFirstName(String firstName);\r\n```","```\r\npublic abstract User findAnyByLastName(String lastName);\r\n```","```\r\npublic abstract int count();\r\n```","```\r\npublic abstract void remove(User user);\r\n```","```\r\npublic abstract Collection<User> findByFirstNameAndLastName(\r\n  String firstName, String lastName);\r\npublic abstract Collection<User> findByFirstNameOrLastName(\r\n  String firstName, String lastName); \r\n```","```\r\n@Entity\r\npublic class Address {\r\nprivate String city;\r\n    // ...\r\n}\r\n@Entity\r\npublic class User {\r\n    @OneToOne \r\n    private Address address;\r\n    // ...\r\n}\r\npublic abstract Collection<User> findByAddress_city(String city);\r\n```","```\r\npublic abstract List<User> findAllOrderByFirstNameAsc();\r\n```","```\r\npublic abstract List<User> findAllOrderByFirstNameAscLastNameDesc(); \r\n```","```\r\npublic abstract Collection<User> findTop2OrderByFirstNameAsc();\r\npublic abstract Collection<User> findFirst2OrderByFirstNameAsc();\r\n```","```\r\npublic abstract Collection<User> findAllOrderByFirstNameAsc(@FirstResult int start, @MaxResults int size);\r\n```","```\r\n@Repository\r\npublic interface UserRepository \r\n  extends FullEntityRepository<User, Long> {\r\n    // ...\r\n}\r\n```","```\r\n@Repository\r\npublic abstract class UserRepository extends AbstractEntityRepository<User, Long> {\r\n    // ...\r\n} \r\n```","```\r\npublic List<User> findByFirstName(String firstName) {\r\n    return typedQuery(\"select u from User u where u.firstName = ?1\")\r\n      .setParameter(1, firstName)\r\n      .getResultList();\r\n} \r\n```","```\r\n@Query(\"select u from User u where u.firstName = ?1\")\r\npublic abstract Collection<User> findUsersWithFirstName(String firstName); \r\n```","```\r\n@Query(value = \"select * from User where firstName = ?1\", isNative = true)\r\npublic abstract Collection<User> findUsersWithFirstNameNative(String firstName);\r\n```"]