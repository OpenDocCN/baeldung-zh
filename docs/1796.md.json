["```\r\nIterable<String> iterable = Arrays.asList(\"john\", \"tom\", \"jane\");\r\n```","```\r\nIterator<String> iterator = iterable.iterator();\r\n```","```\r\n@Test\r\npublic void whenConvertIterableToListUsingJava8_thenSuccess() {\r\n    List<String> result = new ArrayList<String>();\r\n    iterable.forEach(result::add);\r\n\r\n    assertThat(result, contains(\"john\", \"tom\", \"jane\"));\r\n}\r\n```","```\r\nList<String> result = \r\n  StreamSupport.stream(iterable.spliterator(), false)\r\n    .collect(Collectors.toList());\r\n```","```\r\n@Test\r\npublic void whenConvertIteratorToListUsingJava8_thenSuccess() {\r\n    List<String> result = new ArrayList<String>();\r\n    iterator.forEachRemaining(result::add);\r\n\r\n    assertThat(result, contains(\"john\", \"tom\", \"jane\"));\r\n}\r\n```","```\r\nList<String> result = \r\n  StreamSupport.stream(Spliterators.spliteratorUnknownSize(iterator, Spliterator.ORDERED), false)\r\n    .collect(Collectors.toList());\r\n```","```\r\n@Test\r\npublic void whenConvertIterableToListUsingJava_thenSuccess() {\r\n    List<String> result = new ArrayList<String>();\r\n    for (String str : iterable) {\r\n        result.add(str);\r\n    }\r\n\r\n    assertThat(result, contains(\"john\", \"tom\", \"jane\"));\r\n}\r\n```","```\r\n@Test\r\npublic void whenConvertIteratorToListUsingJava_thenSuccess() {\r\n    List<String> result = new ArrayList<String>();\r\n    while (iterator.hasNext()) {\r\n        result.add(iterator.next());\r\n    }\r\n\r\n    assertThat(result, contains(\"john\", \"tom\", \"jane\"));\r\n}\r\n```","```\r\nList<String> result = Lists.newArrayList(iterable);\r\n```","```\r\nList<String> result = ImmutableList.copyOf(iterable);\r\n```","```\r\nList<String> result = IterableUtils.toList(iterable);\r\n```","```\r\nList<String> result = IteratorUtils.toList(iterator);\r\n```"]