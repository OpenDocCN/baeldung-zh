["```\r\n<dependency>\r\n    <groupId>javax.validation</groupId>\r\n    <artifactId>validation-api</artifactId>\r\n    <version>2.0.1.Final</version>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>org.hibernate.validator</groupId>\r\n    <artifactId>hibernate-validator</artifactId>\r\n    <version>6.0.13.Final</version>\r\n</dependency> \r\n```","```\r\n<dependency>\r\n    <groupId>org.glassfish</groupId>\r\n    <artifactId>javax.el</artifactId>\r\n    <version>3.0.0</version>\r\n</dependency>\r\n```","```\r\nimport javax.validation.constraints.AssertTrue;\r\nimport javax.validation.constraints.Max;\r\nimport javax.validation.constraints.Min;\r\nimport javax.validation.constraints.NotNull;\r\nimport javax.validation.constraints.Size;\r\nimport javax.validation.constraints.Email;\r\n\r\npublic class User {\r\n\r\n    @NotNull(message = \"Name cannot be null\")\r\n    private String name;\r\n\r\n    @AssertTrue\r\n    private boolean working;\r\n\r\n    @Size(min = 10, max = 200, message \r\n      = \"About Me must be between 10 and 200 characters\")\r\n    private String aboutMe;\r\n\r\n    @Min(value = 18, message = \"Age should not be less than 18\")\r\n    @Max(value = 150, message = \"Age should not be greater than 150\")\r\n    private int age;\r\n\r\n    @Email(message = \"Email should be valid\")\r\n    private String email;\r\n\r\n    // standard setters and getters \r\n} \r\n```","```\r\nList<@NotBlank String> preferences;\r\n```","```\r\nprivate LocalDate dateOfBirth;\r\n\r\npublic Optional<@Past LocalDate> getDateOfBirth() {\r\n    return Optional.of(dateOfBirth);\r\n}\r\n```","```\r\nValidatorFactory factory = Validation.buildDefaultValidatorFactory();\r\nValidator validator = factory.getValidator(); \r\n```","```\r\nUser user = new User();\r\nuser.setWorking(true);\r\nuser.setAboutMe(\"Its all about me!\");\r\nuser.setAge(50); \r\n```","```\r\nSet<ConstraintViolation<User>> violations = validator.validate(user); \r\n```","```\r\nfor (ConstraintViolation<User> violation : violations) {\r\n    log.error(violation.getMessage()); \r\n} \r\n```"]