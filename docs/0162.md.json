["```\r\npublic class Person {\r\n\r\n    private final String name;\r\n    private final String address;\r\n\r\n    public Person(String name, String address) {\r\n        this.name = name;\r\n        this.address = address;\r\n    }\r\n\r\n    @Override\r\n    public int hashCode() {\r\n        return Objects.hash(name, address);\r\n    }\r\n\r\n    @Override\r\n    public boolean equals(Object obj) {\r\n        if (this == obj) {\r\n            return true;\r\n        } else if (!(obj instanceof Person)) {\r\n            return false;\r\n        } else {\r\n            Person other = (Person) obj;\r\n            return Objects.equals(name, other.name)\r\n              && Objects.equals(address, other.address);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"Person [name=\" + name + \", address=\" + address + \"]\";\r\n    }\r\n\r\n    // standard getters\r\n}\r\n```","```\r\npublic record Person (String name, String address) {}\r\n```","```\r\npublic Person(String name, String address) {\r\n    this.name = name;\r\n    this.address = address;\r\n}\r\n```","```\r\nPerson person = new Person(\"John Doe\", \"100 Linda Ln.\");\r\n```","```\r\n@Test\r\npublic void givenValidNameAndAddress_whenGetNameAndAddress_thenExpectedValuesReturned() {\r\n    String name = \"John Doe\";\r\n    String address = \"100 Linda Ln.\";\r\n\r\n    Person person = new Person(name, address);\r\n\r\n    assertEquals(name, person.name());\r\n    assertEquals(address, person.address());\r\n}\r\n```","```\r\n@Test\r\npublic void givenSameNameAndAddress_whenEquals_thenPersonsEqual() {\r\n    String name = \"John Doe\";\r\n    String address = \"100 Linda Ln.\";\r\n\r\n    Person person1 = new Person(name, address);\r\n    Person person2 = new Person(name, address);\r\n\r\n    assertTrue(person1.equals(person2));\r\n}\r\n```","```\r\n@Test\r\npublic void givenSameNameAndAddress_whenHashCode_thenPersonsEqual() {\r\n    String name = \"John Doe\";\r\n    String address = \"100 Linda Ln.\";\r\n\r\n    Person person1 = new Person(name, address);\r\n    Person person2 = new Person(name, address);\r\n\r\n    assertEquals(person1.hashCode(), person2.hashCode());\r\n} \r\n```","```\r\nPerson[name=John Doe, address=100 Linda Ln.]\r\n```","```\r\npublic record Person(String name, String address) {\r\n    public Person {\r\n        Objects.requireNonNull(name);\r\n        Objects.requireNonNull(address);\r\n    }\r\n}\r\n```","```\r\npublic record Person(String name, String address) {\r\n    public Person(String name) {\r\n        this(name, \"Unknown\");\r\n    }\r\n}\r\n```","```\r\npublic record Person(String name, String address) {\r\n    public Person(String name, String address) {\r\n        this.name = name;\r\n        this.address = address;\r\n    }\r\n}\r\n```","```\r\npublic record Person(String name, String address) {\r\n    public Person {\r\n        Objects.requireNonNull(name);\r\n        Objects.requireNonNull(address);\r\n    }\r\n\r\n    public Person(String name, String address) {\r\n        this.name = name;\r\n        this.address = address;\r\n    }\r\n}\r\n```","```\r\npublic record Person(String name, String address) {\r\n    public static String UNKNOWN_ADDRESS = \"Unknown\";\r\n}\r\n```","```\r\npublic record Person(String name, String address) {\r\n    public static Person unnamed(String address) {\r\n        return new Person(\"Unnamed\", address);\r\n    }\r\n}\r\n```","```\r\nPerson.UNKNOWN_ADDRESS\r\nPerson.unnamed(\"100 Linda Ln.\");\r\n```"]