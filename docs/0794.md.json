["```\r\n<dependency>\r\n    <groupId>org.apache.cxf</groupId>\r\n    <artifactId>cxf-rt-frontend-jaxws</artifactId>\r\n    <version>3.1.6</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.apache.cxf</groupId>\r\n    <artifactId>cxf-rt-transports-http</artifactId>\r\n    <version>3.1.6</version>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework</groupId>\r\n    <artifactId>spring-context</artifactId>\r\n    <version>4.3.1.RELEASE</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework</groupId>\r\n    <artifactId>spring-webmvc</artifactId>\r\n    <version>4.3.1.RELEASE</version>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>javax.servlet</groupId>\r\n    <artifactId>javax.servlet-api</artifactId>\r\n    <version>3.1.0</version>\r\n</dependency>\r\n```","```\r\npublic class AppInitializer implements WebApplicationInitializer {\r\n    @Override\r\n    public void onStartup(ServletContext container) {\r\n        // Method implementation\r\n    }\r\n}\r\n```","```\r\nAnnotationConfigWebApplicationContext context \r\n  = new AnnotationConfigWebApplicationContext();\r\ncontext.register(ServiceConfiguration.class);\r\n```","```\r\ncontainer.addListener(new ContextLoaderListener(context));\r\n```","```\r\nServletRegistration.Dynamic dispatcher \r\n  = container.addServlet(\"dispatcher\", new CXFServlet());\r\n```","```\r\ndispatcher.addMapping(\"/services\");\r\n```","```\r\n<servlet>\r\n    <servlet-name>cxf</servlet-name>\r\n    <servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>\r\n    <load-on-startup>1</load-on-startup>\r\n</servlet>\r\n    <servlet-mapping>\r\n    <servlet-name>cxf</servlet-name>\r\n    <url-pattern>/services/*</url-pattern>\r\n</servlet-mapping>\r\n```","```\r\n@Configuration\r\npublic class ServiceConfiguration {\r\n    // Bean definitions\r\n}\r\n```","```\r\n@Bean\r\npublic SpringBus springBus() {\r\n    return new SpringBus();\r\n}\r\n```","```\r\n@Bean\r\npublic Endpoint endpoint() {\r\n    EndpointImpl endpoint = new EndpointImpl(springBus(), new BaeldungImpl());\r\n    endpoint.publish(\"http://localhost:8080/services/baeldung\");\r\n    return endpoint;\r\n}\r\n```","```\r\n<jaxws:endpoint\r\n  id=\"baeldung\"\r\n  implementor=\"com.baeldung.cxf.spring.BaeldungImpl\"\r\n  address=\"http://localhost:8080/services/baeldung\" />\r\n```","```\r\n@WebService(endpointInterface = \"com.baeldung.cxf.spring.Baeldung\")\r\npublic class BaeldungImpl implements Baeldung {\r\n    private int counter;\r\n\r\n    public String hello(String name) {\r\n        return \"Hello \" + name + \"!\";\r\n    }\r\n\r\n    public String register(Student student) {\r\n        counter++;\r\n        return student.getName() + \" is registered student number \" + counter;\r\n    }\r\n}\r\n```","```\r\n@WebService\r\npublic interface Baeldung {\r\n    String hello(String name);\r\n    String register(Student student);\r\n}\r\n```","```\r\npublic class Student {\r\n    private String name;\r\n\r\n    // constructors, getters and setters\r\n}\r\n```","```\r\n@Configuration\r\npublic class ClientConfiguration {\r\n    // Bean definitions\r\n}\r\n```","```\r\n@Bean(name = \"client\")\r\npublic Object generateProxy() {\r\n    return proxyFactoryBean().create();\r\n}\r\n```","```\r\n@Bean\r\npublic JaxWsProxyFactoryBean proxyFactoryBean() {\r\n    JaxWsProxyFactoryBean proxyFactory = new JaxWsProxyFactoryBean();\r\n    proxyFactory.setServiceClass(Baeldung.class);\r\n    proxyFactory.setAddress(\"http://localhost:8080/services/baeldung\");\r\n    return proxyFactory;\r\n}\r\n```","```\r\n<bean id=\"client\" factory-bean=\"clientFactory\" factory-method=\"create\" />\r\n<bean id=\"clientFactory\" class=\"org.apache.cxf.jaxws.JaxWsProxyFactoryBean\">\r\n    <property name=\"serviceClass\" value=\"com.baeldung.cxf.spring.Baeldung\" />\r\n    <property name=\"address\" value=\"http://localhost:8080/services/baeldung\" />\r\n</bean>\r\n```","```\r\nprivate ApplicationContext context \r\n  = new AnnotationConfigApplicationContext(ClientConfiguration.class);\r\n```","```\r\nprivate Baeldung baeldungProxy = (Baeldung) context.getBean(\"client\");\r\n```","```\r\n@Test\r\npublic void whenUsingHelloMethod_thenCorrect() {\r\n    String response = baeldungProxy.hello(\"John Doe\");\r\n    assertEquals(\"Hello John Doe!\", response);\r\n}\r\n```","```\r\n@Test\r\npublic void whenUsingRegisterMethod_thenCorrect() {\r\n    Student student1 = new Student(\"Adam\");\r\n    Student student2 = new Student(\"Eve\");\r\n    String student1Response = baeldungProxy.register(student1);\r\n    String student2Response = baeldungProxy.register(student2);\r\n\r\n    assertEquals(\"Adam is registered student number 1\", student1Response);\r\n    assertEquals(\"Eve is registered student number 2\", student2Response);\r\n}\r\n```","```\r\n<packaging>war</packaging>\r\n```","```\r\n<plugin>\r\n    <artifactId>maven-war-plugin</artifactId>\r\n    <version>2.6</version>\r\n    <configuration>\r\n        <failOnMissingWebXml>false</failOnMissingWebXml>\r\n    </configuration>\r\n</plugin>\r\n```","```\r\n<plugin>\r\n    <artifactId>maven-surefire-plugin</artifactId>\r\n    <version>2.22.2</version>\r\n    <configuration>\r\n        <excludes>\r\n            <exclude>StudentTest.java</exclude>\r\n        </excludes>\r\n    </configuration>\r\n</plugin>\r\n```","```\r\n<profiles>\r\n   <profile>\r\n      <id>integration</id>\r\n      <build>\r\n         <plugins>\r\n            ...\r\n         </plugins>\r\n      </build>\r\n   </profile>\r\n</profiles>\r\n```","```\r\n<plugin>\r\n    <groupId>org.codehaus.cargo</groupId>\r\n    <artifactId>cargo-maven2-plugin</artifactId>\r\n    <version>1.5.0</version>\r\n    <configuration>\r\n        <container>\r\n            <containerId>jetty9x</containerId>\r\n            <type>embedded</type>\r\n        </container>\r\n        <configuration>\r\n            <properties>\r\n                <cargo.hostname>localhost</cargo.hostname>\r\n                <cargo.servlet.port>8080</cargo.servlet.port>\r\n            </properties>\r\n        </configuration>\r\n    </configuration>\r\n    <executions>\r\n        <execution>\r\n            <id>start-server</id>\r\n            <phase>pre-integration-test</phase>\r\n            <goals>\r\n                <goal>start</goal>\r\n            </goals>\r\n        </execution>\r\n        <execution>\r\n            <id>stop-server</id>\r\n            <phase>post-integration-test</phase>\r\n            <goals>\r\n                <goal>stop</goal>\r\n            </goals>\r\n        </execution>\r\n    </executions>\r\n</plugin>\r\n```","```\r\n<plugin>\r\n    <artifactId>maven-surefire-plugin</artifactId>\r\n    <version>2.22.2</version>\r\n    <executions>\r\n        <execution>\r\n            <phase>integration-test</phase>\r\n            <goals>\r\n                <goal>test</goal>\r\n            </goals>\r\n            <configuration>\r\n                <excludes>\r\n                    <exclude>none</exclude>\r\n                </excludes>\r\n            </configuration>\r\n        </execution>\r\n    </executions>\r\n</plugin>\r\n```"]