["```\r\npublic static List<String> baseScanner(String input) {\r\n    try (Scanner scan = new Scanner(input)) {\r\n        List<String> result = new ArrayList<String>();\r\n        scan.forEachRemaining(result::add);\r\n        return result;\r\n    }\r\n}\r\n```","```\r\n@Test\r\nvoid whenBaseScanner_ThenWhitespacesAreUsedAsDelimiters() {\r\n    assertEquals(List.of(\"Welcome\", \"to\", \"Baeldung\"), baseScanner(\"Welcome to Baeldung\"));\r\n}\r\n```","```\r\npublic static List<String> scannerWithDelimiter(String input, String delimiter) {\r\n    try (Scanner scan = new Scanner(input)) {\r\n        scan.useDelimiter(delimiter); \r\n        List<String> result = new ArrayList<String>();\r\n        scan.forEachRemaining(result::add);\r\n        return result;\r\n    }\r\n}\r\n```","```\r\n@Test\r\nvoid givenSimpleCharacterDelimiter_whenScannerWithDelimiter_ThenInputIsCorrectlyParsed() {\r\n    assertEquals(List.of(\"Welcome\", \"to\", \"Baeldung\"), scannerWithDelimiter(\"Welcome to Baeldung\", \"\\\\s\"));\r\n}\r\n```","```\r\npublic static List<String> scannerWithDelimiterUsingPattern(String input, Pattern delimiter) {\r\n    try (Scanner scan = new Scanner(input)) {\r\n        scan.useDelimiter(delimiter); \r\n        List<String> result = new ArrayList<String>();\r\n        scan.forEachRemaining(result::add);\r\n        return result;\r\n    }\r\n}\r\n```","```\r\n@Test\r\nvoid givenStringDelimiter_whenScannerWithDelimiterUsingPattern_ThenInputIsCorrectlyParsed() {\r\n    assertEquals(List.of(\"Welcome\", \"to\", \"Baeldung\"), DelimiterDemo.scannerWithDelimiterUsingPattern(\"Welcome to Baeldung\", Pattern.compile(\"\\\\s\")));\r\n}\r\n```"]