["```\r\n<parent>\r\n    <groupId>org.wso2.msf4j</groupId>\r\n    <artifactId>msf4j-service</artifactId>\r\n    <version>2.6.0</version>\r\n</parent>\r\n\r\n<properties>\r\n    <microservice.mainClass>\r\n        com.baeldung.msf4j.Application\r\n    </microservice.mainClass>\r\n</properties>\r\n```","```\r\n@Path(\"/\")\r\npublic class SimpleService {\r\n\r\n    @GET\r\n    public String index() {\r\n        return \"Default content\";\r\n    }\r\n\r\n    @GET\r\n    @Path(\"/say/{name}\")\r\n    public String say(@PathParam(\"name\") String name) {\r\n        return \"Hello \" + name;\r\n    }\r\n}\r\n```","```\r\npublic class Application {\r\n    public static void main(String[] args) {\r\n        new MicroservicesRunner()\r\n          .deploy(new SimpleService())\r\n          .start();\r\n    }\r\n}\r\n```","```\r\nnew MicroservicesRunner()\r\n  .deploy(new SimpleService())\r\n  .deploy(new ComplexService())\r\n  .start()\r\n```","```\r\nnew MicroservicesRunner()\r\n  .addInterceptor(new MetricsInterceptor())\r\n  .deploy(new SimpleService())\r\n  .start();\r\n```","```\r\nnew MicroservicesRunner()\r\n  .addGlobalRequestInterceptor(newUsernamePasswordSecurityInterceptor())\r\n  .deploy(new SimpleService())\r\n  .start();\r\n```","```\r\nnew MicroservicesRunner()\r\n  .deploy(new SimpleService())\r\n  .setSessionManager(new PersistentSessionManager()) \r\n  .start();\r\n```","```\r\npublic class Meal {\r\n    private String name;\r\n    private Float price;\r\n\r\n    // getters and setters\r\n}\r\n```","```\r\n@Path(\"/menu\")\r\npublic class MenuService {\r\n\r\n    private List<Meal> meals = new ArrayList<Meal>();\r\n\r\n    @GET\r\n    @Path(\"/\")\r\n    @Produces({ \"application/json\" })\r\n    public Response index() {\r\n        return Response.ok()\r\n          .entity(meals)\r\n          .build();\r\n    }\r\n\r\n    @GET\r\n    @Path(\"/{id}\")\r\n    @Produces({ \"application/json\" })\r\n    public Response meal(@PathParam(\"id\") int id) {\r\n        return Response.ok()\r\n          .entity(meals.get(id))\r\n          .build();\r\n    }\r\n\r\n    @POST\r\n    @Path(\"/\")\r\n    @Consumes(\"application/json\")\r\n    @Produces({ \"application/json\" })\r\n    public Response create(Meal meal) {\r\n        meals.add(meal);\r\n        return Response.ok()\r\n          .entity(meal)\r\n          .build();\r\n    }\r\n\r\n    // ... other CRUD operations\r\n}\r\n```","```\r\n@GET\r\n@Path(\"/{id}\")\r\n@Produces({ \"application/json\" })\r\npublic String meal(@PathParam(\"id\") int id) {\r\n    Gson gson = new Gson();\r\n    return gson.toJson(meals.get(id));\r\n}\r\n```","```\r\n<dependencies>\r\n    <dependency>\r\n        <groupId>org.wso2.msf4j</groupId>\r\n        <artifactId>msf4j-spring</artifactId>\r\n        <version>2.6.1</version>\r\n    </dependency>\r\n    <dependency>\r\n        <groupId>org.wso2.msf4j</groupId>\r\n        <artifactId>msf4j-mustache-template</artifactId>\r\n        <version>2.6.1</version>\r\n    </dependency>\r\n</dependencies>\r\n```","```\r\n@Service\r\npublic class MealService {\r\n\r\n    @Autowired\r\n    private MealRepository mealRepository;\r\n\r\n    public Meal find(int id) {\r\n        return mealRepository.find(id);\r\n    }\r\n\r\n    public List<Meal> findAll() {\r\n        return mealRepository.findAll();\r\n    }\r\n\r\n    public void create(Meal meal) {\r\n        mealRepository.create(meal);\r\n    }\r\n}\r\n```","```\r\n@Component\r\n@Path(\"/meal\")\r\npublic class MealResource {\r\n\r\n    @Autowired\r\n    private MealService mealService;\r\n\r\n    @GET\r\n    @Path(\"/\")\r\n    public Response all() {\r\n        Map map = Collections.singletonMap(\"meals\", mealService.findAll());\r\n        String html = MustacheTemplateEngine.instance()\r\n          .render(\"meals.mustache\", map);\r\n        return Response.ok()\r\n          .type(MediaType.TEXT_HTML)\r\n          .entity(html)\r\n          .build();\r\n    }\r\n\r\n    @GET\r\n    @Path(\"/{id}\")\r\n    @Produces({ \"application/json\" })\r\n    public Response meal(@PathParam(\"id\") int id) {\r\n        return Response.ok()\r\n          .entity(mealService.find(id))\r\n          .build();\r\n    }\r\n\r\n}\r\n```","```\r\npublic class Application {\r\n\r\n    public static void main(String[] args) {\r\n        MSF4JSpringApplication.run(Application.class, args);\r\n    }\r\n}\r\n```","```\r\n@Configuration\r\npublic class PortConfiguration {\r\n\r\n    @Bean\r\n    public HTTPTransportConfig http() {\r\n        return new HTTPTransportConfig(9090);\r\n    }\r\n\r\n}\r\n```"]