["```\r\n@Table\r\npublic class Person {\r\n\r\n    @PrimaryKey\r\n    private UUID id;\r\n    private String firstName;\r\n    private String lastName;\r\n\r\n    public Person(UUID id, String firstName, String lastName) {\r\n        this.id = id;\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n    }\r\n\r\n    // getters, setters, equals and hash code\r\n}\r\n```","```\r\n@Repository\r\npublic interface PersonRepository extends CassandraRepository<Person, UUID> {}\r\n```","```\r\nspring.data.cassandra.schema-action=create_if_not_exists\r\nspring.data.cassandra.local-datacenter=datacenter1\r\n```","```\r\n@Container\r\npublic static final CassandraContainer cassandra = \r\n  (CassandraContainer) new CassandraContainer(\"cassandra:3.11.2\").withExposedPorts(9042);\r\n```","```\r\nTestPropertyValues.of(\r\n  \"spring.data.cassandra.keyspace-name=\" + KEYSPACE_NAME,\r\n  \"spring.data.cassandra.contact-points=\" + cassandra.getContainerIpAddress(),\r\n  \"spring.data.cassandra.port=\" + cassandra.getMappedPort(9042)\r\n).applyTo(configurableApplicationContext.getEnvironment());\r\n\r\ncreateKeyspace(cassandra.getCluster());\r\n```","```\r\n@Test\r\nvoid givenExistingPersonRecord_whenUpdatingIt_thenRecordIsUpdated() {\r\n    UUID personId = UUIDs.timeBased();\r\n    Person existingPerson = new Person(personId, \"Luka\", \"Modric\");\r\n    personRepository.save(existingPerson);\r\n    existingPerson.setFirstName(\"Marko\");\r\n    personRepository.save(existingPerson);\r\n\r\n    List<Person> savedPersons = personRepository.findAllById(List.of(personId));\r\n    assertThat(savedPersons.get(0).getFirstName()).isEqualTo(\"Marko\");\r\n}\r\n```","```\r\n@Test\r\nvoid givenExistingPersonRecord_whenDeletingIt_thenRecordIsDeleted() {\r\n    UUID personId = UUIDs.timeBased();\r\n    Person existingPerson = new Person(personId, \"Luka\", \"Modric\");\r\n\r\n    personRepository.delete(existingPerson);\r\n\r\n    List<Person> savedPersons = personRepository.findAllById(List.of(personId));\r\n    assertThat(savedPersons.isEmpty()).isTrue();\r\n}\r\n```","```\r\nlogging.level.org.springframework.data.cassandra.core.cql.CqlTemplate=DEBUG\r\n```","```\r\n2021-09-25 12:41:58.679 DEBUG 17856 --- [           main] o.s.data.cassandra.core.cql.CqlTemplate:\r\n  Executing CQL statement [CREATE TABLE IF NOT EXISTS person\r\n  (birthdate date, firstname text, id uuid, lastname text, lastpurchaseddate timestamp, lastvisiteddate timestamp, PRIMARY KEY (id));]\r\n2021-09-25 12:42:01.204 DEBUG 17856 --- [           main] o.s.data.cassandra.core.cql.CqlTemplate:\r\n  Preparing statement [INSERT INTO person (birthdate,firstname,id,lastname,lastpurchaseddate,lastvisiteddate)\r\n  VALUES (?,?,?,?,?,?)] using org.springframework[[email protected]](/web/20221208143830/https://www.baeldung.com/cdn-cgi/l/email-protection)4d16975b\r\n2021-09-25 12:42:01.253 DEBUG 17856 --- [           main] o.s.data.cassandra.core.cql.CqlTemplate:\r\n  Executing prepared statement [INSERT INTO person (birthdate,firstname,id,lastname,lastpurchaseddate,lastvisiteddate) VALUES (?,?,?,?,?,?)]\r\n2021-09-25 12:42:01.279 DEBUG 17856 --- [           main] o.s.data.cassandra.core.cql.CqlTemplate:\r\n  Preparing statement [INSERT INTO person (birthdate,firstname,id,lastname,lastpurchaseddate,lastvisiteddate)\r\n  VALUES (?,?,?,?,?,?)] using org.springframework[[email protected]](/web/20221208143830/https://www.baeldung.com/cdn-cgi/l/email-protection)539dd2d0\r\n2021-09-25 12:42:01.290 DEBUG 17856 --- [           main] o.s.data.cassandra.core.cql.CqlTemplate:\r\n  Executing prepared statement [INSERT INTO person (birthdate,firstname,id,lastname,lastpurchaseddate,lastvisiteddate) VALUES (?,?,?,?,?,?)]\r\n2021-09-25 12:42:01.351 DEBUG 17856 --- [           main] o.s.data.cassandra.core.cql.CqlTemplate:\r\n  Preparing statement [SELECT * FROM person WHERE id IN (371bb4a0-1ded-11ec-8cad-934f1aec79e6)]\r\n  using org.springframework[[email protected]](/web/20221208143830/https://www.baeldung.com/cdn-cgi/l/email-protection)3e61cffd\r\n2021-09-25 12:42:01.370 DEBUG 17856 --- [           main] o.s.data.cassandra.core.cql.CqlTemplate:\r\n  Executing prepared statement [SELECT * FROM person WHERE id IN (371bb4a0-1ded-11ec-8cad-934f1aec79e6)]\r\n```","```\r\nSystem.setProperty(\"datastax-java-driver.advanced.request-tracker.class\", \"NoopRequestTracker\");\r\n```","```\r\nSystem.setProperty(\"datastax-java-driver.advanced.request-tracker.class\", \"RequestLogger\");\r\nSystem.setProperty(\"datastax-java-driver.advanced.request-tracker.logs.success.enabled\", \"true\");\r\nSystem.setProperty(\"datastax-java-driver.advanced.request-tracker.logs.slow.enabled\", \"true\");\r\nSystem.setProperty(\"datastax-java-driver.advanced.request-tracker.logs.error.enabled\", \"true\");\r\n```","```\r\n2021-09-25 13:06:31.799  INFO 11172 --- [        s0-io-4] c.d.o.d.i.core.tracker.RequestLogger:\r\n  [s0|90232530][Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:49281, hostId=c50413d5-03b6-4037-9c46-29f0c0da595a, hashCode=68c305fe)]\r\n  Success (6 ms) [6 values] INSERT INTO person (birthdate,firstname,id,lastname,lastpurchaseddate,lastvisiteddate)\r\n  VALUES (?,?,?,?,?,?) [birthdate=NULL, firstname='Luka', id=a3ad6890-1df0-11ec-a295-7d319da1858a, lastname='Modric', lastpurchaseddate=NULL, lastvisiteddate=NULL]\r\n2021-09-25 13:06:31.811  INFO 11172 --- [        s0-io-4] c.d.o.d.i.core.tracker.RequestLogger:\r\n  [s0|778232359][Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:49281, hostId=c50413d5-03b6-4037-9c46-29f0c0da595a, hashCode=68c305fe)]\r\n  Success (4 ms) [6 values] INSERT INTO person (birthdate,firstname,id,lastname,lastpurchaseddate,lastvisiteddate)\r\n  VALUES (?,?,?,?,?,?) [birthdate=NULL, firstname='Marko', id=a3ad6890-1df0-11ec-a295-7d319da1858a, lastname='Modric', lastpurchaseddate=NULL, lastvisiteddate=NULL]\r\n2021-09-25 13:06:31.847  INFO 11172 --- [        s0-io-4] c.d.o.d.i.core.tracker.RequestLogger:\r\n  [s0|1947131919][Node(endPoint=localhost/[0:0:0:0:0:0:0:1]:49281, hostId=c50413d5-03b6-4037-9c46-29f0c0da595a, hashCode=68c305fe)]\r\n  Success (5 ms) [0 values] SELECT * FROM person WHERE id IN (a3ad6890-1df0-11ec-a295-7d319da1858a)\r\n```","```\r\nSystem.setProperty(\"datastax-java-driver.advanced.request-tracker.logs.show-values\", \"true\");\r\nSystem.setProperty(\"datastax-java-driver.advanced.request-tracker.logs.max-value-length\", \"100\");\r\nSystem.setProperty(\"datastax-java-driver.advanced.request-tracker.logs.max-values\", \"100\");\r\n```","```\r\nSystem.setProperty(\"datastax-java-driver.advanced.request-tracker.logs.slow.threshold \", \"1 second\");\r\n```","```\r\nSystem.setProperty(\"datastax-java-driver.advanced.request-tracker.logs.show-stack-trace\", \"true\");\r\n```"]