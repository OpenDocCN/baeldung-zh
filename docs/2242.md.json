["```\r\n0010 = 2 (base 10) = 2 (base 16)\r\n1101 = 13 (base 10) = d (base 16)\r\n\r\nTherefore: 45 = 0010 1101 = 0x2d \r\n```","```\r\npublic String byteToHex(byte num) {\r\n    char[] hexDigits = new char[2];\r\n    hexDigits[0] = Character.forDigit((num >> 4) & 0xF, 16);\r\n    hexDigits[1] = Character.forDigit((num & 0xF), 16);\r\n    return new String(hexDigits);\r\n}\r\n```","```\r\nchar[] hexDigits = new char[2];\r\n```","```\r\nhexDigits[0] = Character.forDigit((num >> 4) & 0xF, 16);\r\n```","```\r\nhexDigits[1] = Character.forDigit((num & 0xF), 16);\r\n```","```\r\nhexDigits[0]:\r\n1111 1100 >> 4 = 1111 1111 1111 1111 1111 1111 1111 1111\r\n1111 1111 1111 1111 1111 1111 1111 1111 & 0xF = 0000 0000 0000 0000 0000 0000 0000 1111 = 0xf\r\n\r\nhexDigits[1]:\r\n1111 1100 & 0xF = 0000 1100 = 0xc\r\n\r\nTherefore: -4 (base 10) = 1111 1100 (base 2) = fc (base 16)\r\n```","```\r\nHexadecimal: 2d\r\n2 = 0010 (base 2)\r\nd = 1101 (base 2)\r\n\r\nTherefore: 2d = 0010 1101 (base 2) = 45\r\n```","```\r\npublic byte hexToByte(String hexString) {\r\n    int firstDigit = toDigit(hexString.charAt(0));\r\n    int secondDigit = toDigit(hexString.charAt(1));\r\n    return (byte) ((firstDigit << 4) + secondDigit);\r\n}\r\n\r\nprivate int toDigit(char hexChar) {\r\n    int digit = Character.digit(hexChar, 16);\r\n    if(digit == -1) {\r\n        throw new IllegalArgumentException(\r\n          \"Invalid Hexadecimal Character: \"+ hexChar);\r\n    }\r\n    return digit;\r\n}\r\n```","```\r\nint firstDigit = toDigit(hexString.charAt(0));\r\nint secondDigit = toDigit(hexString.charAt(1));\r\n```","```\r\nreturn (byte) ((firstDigit << 4) + secondDigit);\r\n```","```\r\npublic String encodeHexString(byte[] byteArray) {\r\n    StringBuffer hexStringBuffer = new StringBuffer();\r\n    for (int i = 0; i < byteArray.length; i++) {\r\n        hexStringBuffer.append(byteToHex(byteArray[i]));\r\n    }\r\n    return hexStringBuffer.toString();\r\n}\r\n```","```\r\npublic byte[] decodeHexString(String hexString) {\r\n    if (hexString.length() % 2 == 1) {\r\n        throw new IllegalArgumentException(\r\n          \"Invalid hexadecimal String supplied.\");\r\n    }\r\n\r\n    byte[] bytes = new byte[hexString.length() / 2];\r\n    for (int i = 0; i < hexString.length(); i += 2) {\r\n        bytes[i / 2] = hexToByte(hexString.substring(i, i + 2));\r\n    }\r\n    return bytes;\r\n}\r\n```","```\r\npublic String encodeUsingBigIntegerStringFormat(byte[] bytes) {\r\n    BigInteger bigInteger = new BigInteger(1, bytes);\r\n    return String.format(\r\n      \"%0\" + (bytes.length << 1) + \"x\", bigInteger);\r\n}\r\n```","```\r\npublic String encodeUsingBigIntegerToString(byte[] bytes) {\r\n    BigInteger bigInteger = new BigInteger(1, bytes);\r\n    return bigInteger.toString(16);\r\n}\r\n```","```\r\npublic byte[] decodeUsingBigInteger(String hexString) {\r\n    byte[] byteArray = new BigInteger(hexString, 16)\r\n      .toByteArray();\r\n    if (byteArray[0] == 0) {\r\n        byte[] output = new byte[byteArray.length - 1];\r\n        System.arraycopy(\r\n          byteArray, 1, output, \r\n          0, output.length);\r\n        return output;\r\n    }\r\n    return byteArray;\r\n}\r\n```","```\r\npublic String encodeUsingDataTypeConverter(byte[] bytes) {\r\n    return DatatypeConverter.printHexBinary(bytes);\r\n}\r\n\r\npublic byte[] decodeUsingDataTypeConverter(String hexString) {\r\n    return DatatypeConverter.parseHexBinary(hexString);\r\n}\r\n```","```\r\npublic String encodeUsingApacheCommons(byte[] bytes) \r\n  throws DecoderException {\r\n    return Hex.encodeHexString(bytes);\r\n}\r\n\r\npublic byte[] decodeUsingApacheCommons(String hexString) \r\n  throws DecoderException {\r\n    return Hex.decodeHex(hexString);\r\n}\r\n```","```\r\npublic String encodeUsingGuava(byte[] bytes) {\r\n    return BaseEncoding.base16().encode(bytes);\r\n}\r\n\r\npublic byte[] decodeUsingGuava(String hexString) {\r\n    return BaseEncoding.base16()\r\n      .decode(hexString.toUpperCase());\r\n} \r\n```"]