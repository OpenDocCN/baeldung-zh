["```\r\ndouble value = 4.2352989244d;\r\nassertThat(String.format(\"%.2f\", value)).isEqualTo(\"4.24\");\r\nassertThat(String.format(\"%.3f\", value)).isEqualTo(\"4.235\");\r\n```","```\r\ndouble myDouble = 7.8723d;\r\nfloat myFloat = 7.8723f;\r\n```","```\r\npublic static double withBigDecimal(double value, int places) {\r\n    BigDecimal bigDecimal = new BigDecimal(value);\r\n    bigDecimal = bigDecimal.setScale(places, RoundingMode.HALF_UP);\r\n    return bigDecimal.doubleValue();\r\n}\r\n```","```\r\ndouble D = 4.2352989244d;\r\nassertThat(withBigDecimal(D, 2)).isEqualTo(4.24);\r\nassertThat(withBigDecimal(D, 3)).isEqualTo(4.235);\r\n```","```\r\npublic static double withMathRound(double value, int places) {\r\n    double scale = Math.pow(10, places);\r\n    return Math.round(value * scale) / scale;\r\n}\r\n```","```\r\nassertThat(withMathRound(D, 2)).isEqualTo(4.24);\r\nassertThat(withMathRound(D, 3)).isEqualTo(4.235);\r\n```","```\r\nSystem.out.println(withMathRound(1000.0d, 17));\r\n// Gives: 92.23372036854776 !!\r\nSystem.out.println(withMathRound(260.775d, 2));\r\n// Gives: 260.77 instead of expected 260.78 \r\n```","```\r\npublic static String withLargeIntegers(double value) {\r\n    DecimalFormat df = new DecimalFormat(\"###,###,###\");\r\n    return df.format(value);\r\n}\r\n\r\nint value = 123456789;\r\nassertThat(withLargeIntegers(value)).isEqualTo(\"123,456,789\");\r\n```","```\r\npublic static String byPaddingZeros(int value, int paddingLength) {\r\n    return String.format(\"%0\" + paddingLength + \"d\", value);\r\n}\r\n\r\nint value = 1;\r\nassertThat(byPaddingOutZeros(value, 3)).isEqualTo(\"001\");\r\n```","```\r\npublic static double withTwoDecimalPlaces(double value) {\r\n    DecimalFormat df = new DecimalFormat(\"#.00\");\r\n    return new Double(df.format(value));\r\n}\r\n\r\nint value = 12; \r\nassertThat(withTwoDecimalPlaces(value)).isEqualTo(12.00);\r\n```","```\r\npublic static String forPercentages(double value, Locale locale) {\r\n    NumberFormat nf = NumberFormat.getPercentInstance(locale);\r\n    return nf.format(value);\r\n}\r\n\r\ndouble value = 25f / 100f;\r\nassertThat(forPercentages(value, new Locale(\"en\", \"US\"))).isEqualTo(\"25%\");\r\n```","```\r\npublic static String currencyWithChosenLocalisation(double value, Locale locale) {\r\n    NumberFormat nf = NumberFormat.getCurrencyInstance(locale);\r\n    return nf.format(value);\r\n}\r\n```","```\r\ndouble value = 23_500;\r\nassertThat(currencyWithChosenLocalisation(value, new Locale(\"en\", \"US\"))).isEqualTo(\"$23,500.00\");\r\nassertThat(currencyWithChosenLocalisation(value, new Locale(\"zh\", \"CN\"))).isEqualTo(\"￥23,500.00\");\r\nassertThat(currencyWithChosenLocalisation(value, new Locale(\"pl\", \"PL\"))).isEqualTo(\"23 500 zł\");\r\n```","```\r\npublic static double withDecimalFormatLocal(double value) {\r\n    DecimalFormat df = (DecimalFormat) NumberFormat.getNumberInstance(Locale.getDefault());\r\n    return new Double(df.format(value));\r\n}\r\n```","```\r\ndouble D = 4.2352989244d;\r\nassertThat(withDecimalFormatLocal(D)).isEqualTo(4.235);\r\n```","```\r\npublic static double withDecimalFormatPattern(double value, int places) {\r\n    DecimalFormat df2 = new DecimalFormat(\"#,###,###,##0.00\");\r\n    DecimalFormat df3 = new DecimalFormat(\"#,###,###,##0.000\");\r\n    if (places == 2)\r\n        return new Double(df2.format(value));\r\n    else if (places == 3)\r\n        return new Double(df3.format(value));\r\n    else\r\n        throw new IllegalArgumentException();\r\n}\r\n\r\nassertThat(withDecimalFormatPattern(D, 2)).isEqualTo(4.24); \r\nassertThat(withDecimalFormatPattern(D, 3)).isEqualTo(4.235);\r\n```"]