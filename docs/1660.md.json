["```\r\napply plugin: \"java\"\r\ndescription = \"Gradle Command Line Arguments examples\"\r\n\r\ntask propertyTypes(){\r\n    doLast{\r\n        if (project.hasProperty(\"args\")) {\r\n            println \"Our input argument with project property [\"+project.getProperty(\"args\")+\"]\"\r\n        }\r\n        println \"Our input argument with system property [\"+System.getProperty(\"args\")+\"]\"\r\n    }\r\n} \r\n```","```\r\n$ ./gradlew propertyTypes -Dargs=lorem -Pargs=ipsum\r\n\r\n> Task :cmd-line-args:propertyTypes\r\nOur input argument with project property [ipsum]\r\nOur input argument with system property [lorem] \r\n```","```\r\napply plugin: \"java\"\r\napply plugin: \"application\"\r\ndescription = \"Gradle Command Line Arguments examples\"\r\n\r\n// previous declarations\r\n\r\next.javaMainClass = \"com.baeldung.cmd.MainClass\"\r\n\r\napplication {\r\n    mainClassName = javaMainClass\r\n} \r\n```","```\r\npublic class MainClass {\r\n    public static void main(String[] args) {\r\n        System.out.println(\"Gradle command line arguments example\");\r\n        for (String arg : args) {\r\n            System.out.println(\"Got argument [\" + arg + \"]\");\r\n        }\r\n    }\r\n} \r\n```","```\r\n$ ./gradlew :cmd-line-args:run --args=\"lorem ipsum dolor\"\r\n\r\n> Task :cmd-line-args:run\r\nGradle command line arguments example\r\nGot argument [lorem]\r\nGot argument [ipsum]\r\nGot argument [dolor]\r\n```","```\r\next.javaMainClass = \"com.baeldung.cmd.MainClass\"\r\nif (project.hasProperty(\"args\")) {\r\n    ext.cmdargs = project.getProperty(\"args\")\r\n} else { \r\n    ext.cmdargs = \"\"\r\n}\r\ntask cmdLineJavaExec(type: JavaExec) {\r\n    group = \"Execution\"\r\n    description = \"Run the main class with JavaExecTask\"\r\n    classpath = sourceSets.main.runtimeClasspath\r\n    main = javaMainClass\r\n    args cmdargs.split()\r\n} \r\n```","```\r\n$ ./gradlew cmdLineJavaExec -Pargs=\"lorem ipsum dolor\"\r\n\r\n> Task :cmd-line-args:cmdLineJavaExec\r\nGradle command line arguments example\r\nGot argument [lorem]\r\nGot argument [ipsum]\r\nGot argument [dolor] \r\n```","```\r\nif (project.hasProperty(\"args\")) {\r\n    ext.cmdargs = project.getProperty(\"args\")\r\n} else { \r\n    ext.cmdargs = \"ls\"\r\n}\r\n\r\ntask cmdLineExec(type: Exec) {\r\n    group = \"Execution\"\r\n    description = \"Run an external program with ExecTask\"\r\n    commandLine cmdargs.split()\r\n} \r\n```","```\r\n$ ./gradlew cmdLineExec -Pargs=\"ls -ll\"\r\n\r\n> Task :cmd-line-args:cmdLineExec\r\ntotal 4\r\ndrwxr-xr-x 1 user 1049089    0 Sep  1 17:59 bin\r\ndrwxr-xr-x 1 user 1049089    0 Sep  1 18:30 build\r\n-rw-r--r-- 1 user 1049089 1016 Sep  3 15:32 build.gradle\r\ndrwxr-xr-x 1 user 1049089    0 Sep  1 17:52 src\r\n```"]