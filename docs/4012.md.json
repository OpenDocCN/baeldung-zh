["```\r\npublic <K, V> K getKey(Map<K, V> map, V value) {\r\n    for (Entry<K, V> entry : map.entrySet()) {\r\n        if (entry.getValue().equals(value)) {\r\n            return entry.getKey();\r\n        }\r\n    }\r\n    return null;\r\n}\r\n```","```\r\npublic <K, V> Set<K> getKeys(Map<K, V> map, V value) {\r\n    Set<K> keys = new HashSet<>();\r\n    for (Entry<K, V> entry : map.entrySet()) {\r\n        if (entry.getValue().equals(value)) {\r\n            keys.add(entry.getKey());\r\n        }\r\n    }\r\n    return keys;\r\n}\r\n```","```\r\npublic <K, V> Stream<K> keys(Map<K, V> map, V value) {\r\n    return map\r\n      .entrySet()\r\n      .stream()\r\n      .filter(entry -> value.equals(entry.getValue()))\r\n      .map(Map.Entry::getKey);\r\n}\r\n```","```\r\nStream<String> keyStream1 = keys(capitalCountryMap, \"South Africa\");\r\nString capital = keyStream1.findFirst().get();\r\n\r\nStream<String> keyStream2 = keys(capitalCountryMap, \"South Africa\");\r\nSet<String> capitals = keyStream2.collect(Collectors.toSet());\r\n```","```\r\nBidiMap<String, String> capitalCountryMap = new DualHashBidiMap<>();\r\ncapitalCountryMap.put(\"Berlin\", \"Germany\");\r\ncapitalCountryMap.put(\"Cape Town\", \"South Africa\");\r\nString capitalOfGermany = capitalCountryMap.getKey(\"Germany\");\r\n```","```\r\nHashBiMap<String, String> capitalCountryMap = HashBiMap.create();\r\ncapitalCountryMap.put(\"Berlin\", \"Germany\");\r\ncapitalCountryMap.put(\"Cape Town\", \"South Africa\");\r\nString capitalOfGermany = capitalCountryMap.inverse().get(\"Germany\");\r\n```"]