["```\r\n<baeldung>\r\n    <articles>\r\n        <article>\r\n            <title>Parsing an XML File Using SAX Parser</title>\r\n            <content>SAX Parser's Lorem ipsum...</content>\r\n        </article>\r\n        <article>\r\n            <title>Parsing an XML File Using DOM Parser</title>\r\n            <content>DOM Parser's Lorem ipsum...</content>\r\n        </article>\r\n        <article>\r\n            <title>Parsing an XML File Using StAX Parser</title>\r\n            <content>StAX's Lorem ipsum...</content>\r\n        </article>\r\n    </articles>\r\n</baeldung>\r\n```","```\r\npublic class Baeldung {\r\n    private List<BaeldungArticle> articleList;\r\n    // usual getters and setters\r\n} \r\n```","```\r\npublic class BaeldungArticle {\r\n    private String title;\r\n    private String content;\r\n    // usual getters and setters\r\n} \r\n```","```\r\npublic class BaeldungHandler extends DefaultHandler {\r\n    private static final String ARTICLES = \"articles\";\r\n    private static final String ARTICLE = \"article\";\r\n    private static final String TITLE = \"title\";\r\n    private static final String CONTENT = \"content\";\r\n\r\n    private Baeldung website;\r\n    private StringBuilder elementValue;\r\n\r\n    @Override\r\n    public void characters(char[] ch, int start, int length) throws SAXException {\r\n        if (elementValue == null) {\r\n            elementValue = new StringBuilder();\r\n        } else {\r\n            elementValue.append(ch, start, length);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void startDocument() throws SAXException {\r\n        website = new Baeldung();\r\n    }\r\n\r\n    @Override\r\n    public void startElement(String uri, String lName, String qName, Attributes attr) throws SAXException {\r\n        switch (qName) {\r\n            case ARTICLES:\r\n                website.articleList = new ArrayList<>();\r\n                break;\r\n            case ARTICLE:\r\n                website.articleList.add(new BaeldungArticle());\r\n                break;\r\n            case TITLE:\r\n                elementValue = new StringBuilder();\r\n                break;\r\n            case CONTENT:\r\n                elementValue = new StringBuilder();\r\n                break;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void endElement(String uri, String localName, String qName) throws SAXException {\r\n        switch (qName) {\r\n            case TITLE:\r\n                latestArticle().setTitle(elementValue.toString());\r\n                break;\r\n            case CONTENT:\r\n                latestArticle().setContent(elementValue.toString());\r\n                break;\r\n        }\r\n    }\r\n\r\n    private BaeldungArticle latestArticle() {\r\n        List<BaeldungArticle> articleList = website.articleList;\r\n        int latestArticleIndex = articleList.size() - 1;\r\n        return articleList.get(latestArticleIndex);\r\n    }\r\n\r\n    public Baeldung getWebsite() {\r\n        return website;\r\n    }\r\n} \r\n```","```\r\nSAXParserFactory factory = SAXParserFactory.newInstance();\r\nSAXParser saxParser = factory.newSAXParser();\r\nSaxParserMain.BaeldungHandler baeldungHandler = new SaxParserMain.BaeldungHandler(); \r\n```","```\r\nsaxParser.parse(\"src/test/resources/sax/baeldung.xml\", baeldungHandler);\r\n\r\nSaxParserMain.Baeldung result = baeldungHandler.getWebsite();\r\n\r\nassertNotNull(result);\r\nList<SaxParserMain.BaeldungArticle> articles = result.getArticleList();\r\n\r\nassertNotNull(articles);\r\nassertEquals(3, articles.size());\r\n\r\nSaxParserMain.BaeldungArticle articleOne = articles.get(0);\r\nassertEquals(\"Parsing an XML File Using SAX Parser\", articleOne.getTitle());\r\nassertEquals(\"SAX Parser's Lorem ipsum...\", articleOne.getContent());\r\n\r\nSaxParserMain.BaeldungArticle articleTwo = articles.get(1);\r\nassertEquals(\"Parsing an XML File Using DOM Parser\", articleTwo.getTitle());\r\nassertEquals(\"DOM Parser's Lorem ipsum...\", articleTwo.getContent());\r\n\r\nSaxParserMain.BaeldungArticle articleThree = articles.get(2);\r\nassertEquals(\"Parsing an XML File Using StAX Parser\", articleThree.getTitle());\r\nassertEquals(\"StAX Parser's Lorem ipsum...\", articleThree.getContent()); \r\n```"]