["```\r\n@Bean\r\npublic PasswordEncoder encoder() {\r\n    return new BCryptPasswordEncoder();\r\n}\r\n```","```\r\n$2a$10$ZLhnHxdpHETcxmtEStgpI./Ri1mksgJ9iDP36FmfMdYyVg9g0b2dq\r\n```","```\r\n@Autowired\r\nprivate PasswordEncoder passwordEncoder;\r\n\r\n@Override\r\npublic User registerNewUserAccount(UserDto accountDto) throws EmailExistsException {\r\n    if (emailExist(accountDto.getEmail())) {\r\n        throw new EmailExistsException(\r\n          \"There is an account with that email adress:\" + accountDto.getEmail());\r\n    }\r\n    User user = new User();\r\n    user.setFirstName(accountDto.getFirstName());\r\n    user.setLastName(accountDto.getLastName());\r\n\r\n    user.setPassword(passwordEncoder.encode(accountDto.getPassword()));\r\n\r\n    user.setEmail(accountDto.getEmail());\r\n    user.setRole(new Role(Integer.valueOf(1), user));\r\n    return repository.save(user);\r\n}\r\n```","```\r\n@Autowired\r\nprivate UserDetailsService userDetailsService;\r\n\r\n@Bean\r\npublic DaoAuthenticationProvider authProvider() {\r\n    DaoAuthenticationProvider authProvider = new DaoAuthenticationProvider();\r\n    authProvider.setUserDetailsService(userDetailsService);\r\n    authProvider.setPasswordEncoder(encoder());\r\n    return authProvider;\r\n}\r\n```","```\r\n<authentication-manager>\r\n    <authentication-provider ref=\"authProvider\" />\r\n</authentication-manager>\r\n```","```\r\n@Configuration\r\n@ComponentScan(basePackages = { \"com.baeldung.security\" })\r\n@EnableWebSecurity\r\npublic class SecSecurityConfig extends WebSecurityConfigurerAdapter {\r\n\r\n    @Override\r\n    protected void configure(AuthenticationManagerBuilder auth) throws Exception {\r\n        auth.authenticationProvider(authProvider());\r\n    }\r\n\r\n    ...\r\n}\r\n```"]