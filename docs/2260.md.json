["```\r\nSimpleGeneticAlgorithm.runAlgorithm(50,\r\n  \"1011000100000100010000100000100111001000000100000100000000001111\");\r\n```","```\r\nsetSolution(solution);\r\nPopulation myPop = new Population(populationSize, true);\r\n```","```\r\nwhile (myPop.getFittest().getFitness() < getMaxFitness()) {\r\n    System.out.println(\r\n      \"Generation: \" + generationCount\r\n      + \" Correct genes found: \" + myPop.getFittest().getFitness());\r\n\r\n    myPop = evolvePopulation(myPop);\r\n    generationCount++;\r\n}\r\n```","```\r\npublic int getFitness(Individual individual) {\r\n    int fitness = 0;\r\n    for (int i = 0; i < individual.getDefaultGeneLength()\r\n      && i < solution.length; i++) {\r\n        if (individual.getSingleGene(i) == solution[i]) {\r\n            fitness++;\r\n        }\r\n    }\r\n    return fitness;\r\n}\r\n```","```\r\nif (elitism) {\r\n    newPopulation.getIndividuals().add(0, pop.getFittest());\r\n    elitismOffset = 1;\r\n} else {\r\n    elitismOffset = 0;\r\n}\r\n```","```\r\nprivate Individual tournamentSelection(Population pop) {\r\n    Population tournament = new Population(tournamentSize, false);\r\n    for (int i = 0; i < tournamentSize; i++) {\r\n        int randomId = (int) (Math.random() * pop.getIndividuals().size());\r\n        tournament.getIndividuals().add(i, pop.getIndividual(randomId));\r\n    }\r\n    Individual fittest = tournament.getFittest();\r\n    return fittest;\r\n}\r\n```","```\r\nprivate Individual crossover(Individual indiv1, Individual indiv2) {\r\n    Individual newSol = new Individual();\r\n    for (int i = 0; i < newSol.getDefaultGeneLength(); i++) {\r\n        if (Math.random() <= uniformRate) {\r\n            newSol.setSingleGene(i, indiv1.getSingleGene(i));\r\n        } else {\r\n            newSol.setSingleGene(i, indiv2.getSingleGene(i));\r\n        }\r\n    }\r\n    return newSol;\r\n}\r\n```","```\r\nfor (int i = elitismOffset; i < pop.getIndividuals().size(); i++) {\r\n    Individual indiv1 = tournamentSelection(pop);\r\n    Individual indiv2 = tournamentSelection(pop);\r\n    Individual newIndiv = crossover(indiv1, indiv2);\r\n    newPopulation.getIndividuals().add(i, newIndiv);\r\n}\r\n```","```\r\nprivate void mutate(Individual indiv) {\r\n    for (int i = 0; i < indiv.getDefaultGeneLength(); i++) {\r\n        if (Math.random() <= mutationRate) {\r\n            byte gene = (byte) Math.round(Math.random());\r\n            indiv.setSingleGene(i, gene);\r\n        }\r\n    }\r\n}\r\n```"]