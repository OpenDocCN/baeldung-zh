["```\r\n<plugin> \r\n    <groupId>org.jacoco</groupId>\r\n    <artifactId>jacoco-maven-plugin</artifactId>\r\n    <configuration>\r\n        <excludes>\r\n            <exclude>com/baeldung/**/ExcludedPOJO.class</exclude>\r\n            <exclude>com/baeldung/**/*DTO.*</exclude>\r\n            <exclude>**/config/*</exclude>\r\n        </excludes>\r\n     </configuration>\r\n     ...\r\n</plugin>\r\n```","```\r\njacocoTestReport {\r\n    dependsOn test // tests are required to run before generating the report\r\n\r\n    afterEvaluate {\r\n        classDirectories.setFrom(files(classDirectories.files.collect {\r\n            fileTree(dir: it, exclude: [\r\n                \"com/baeldung/**/ExcludedPOJO.class\",\r\n                \"com/baeldung/**/*DTO.*\",\r\n                \"**/config/*\"\r\n            ])\r\n        }))\r\n    }\r\n}\r\n```","```\r\n@Documented\r\n@Retention(RUNTIME)\r\n@Target({TYPE, METHOD})\r\npublic @interface Generated {\r\n}\r\n```","```\r\n@Generated\r\npublic class Customer {\r\n    // everything in this class will be excluded from jacoco report because of @Generated\r\n}\r\n```","```\r\npublic class CustomerService {\r\n\r\n    @Generated\r\n    public String getCustomerId() {\r\n        // method excluded form coverage report\r\n    }\r\n\r\n    public String getCustomerName() {\r\n        // method included in test coverage report\r\n    }\r\n}\r\n```","```\r\nlombok.addLombokGeneratedAnnotation = true\r\n```"]