["```\r\n<parent>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-parent</artifactId>\r\n    <version>2.4.0</version>\r\n    <relativePath/>\r\n</parent>\r\n\r\n<dependencies>\r\n    <dependency>\r\n        <groupId>org.springframework.boot</groupId>\r\n        <artifactId>spring-boot-starter</artifactId>\r\n    </dependency>\r\n\r\n    <dependency>\r\n        <groupId>org.springframework.boot</groupId>\r\n        <artifactId>spring-boot-starter-web</artifactId>\r\n    </dependency>\r\n</dependencies> \r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n    <exclusions>\r\n        <exclusion>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-tomcat</artifactId>\r\n        </exclusion>\r\n    </exclusions>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-jetty</artifactId>\r\n</dependency> \r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n    <exclusions>\r\n        <exclusion>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-tomcat</artifactId>\r\n        </exclusion>\r\n    </exclusions>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-undertow</artifactId>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-actuator</artifactId>\r\n</dependency>\r\n```","```\r\n$ apt-get install apache2-utils\r\n```","```\r\n@Component\r\npublic class StartupEventHandler {\r\n\r\n    // logger, constructor\r\n\r\n    private String[] METRICS = {\r\n      \"jvm.memory.used\", \r\n      \"jvm.classes.loaded\", \r\n      \"jvm.threads.live\"};\r\n    private String METRIC_MSG_FORMAT = \"Startup Metric >> {}={}\";\r\n\r\n    private MeterRegistry meterRegistry;\r\n\r\n    @EventListener\r\n    public void getAndLogStartupMetrics(\r\n      ApplicationReadyEvent event) {\r\n        Arrays.asList(METRICS)\r\n          .forEach(this::getAndLogActuatorMetric);\r\n    }\r\n\r\n    private void processMetric(String metric) {\r\n        Meter meter = meterRegistry.find(metric).meter();\r\n        Map<Statistic, Double> stats = getSamples(meter);\r\n\r\n        logger.info(METRIC_MSG_FORMAT, metric, stats.get(Statistic.VALUE).longValue());\r\n    }\r\n\r\n    // other methods\r\n}\r\n```","```\r\nab -n 10000 -c 10 http://localhost:8080/actuator/metrics\r\n```"]