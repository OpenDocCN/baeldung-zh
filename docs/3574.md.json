["```\r\npublic static byte[] compress(byte[] body) throws IOException {\r\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n    try (GZIPOutputStream gzipOutputStream = new GZIPOutputStream(baos)) {\r\n        gzipOutputStream.write(body);\r\n    }\r\n    return baos.toByteArray();\r\n}\r\n```","```\r\npublic ClientHttpResponse intercept(HttpRequest req, byte[] body, ClientHttpRequestExecution exec)\r\n  throws IOException {\r\n    HttpHeaders httpHeaders = req.getHeaders();\r\n    httpHeaders.add(HttpHeaders.CONTENT_ENCODING, \"gzip\");\r\n    httpHeaders.add(HttpHeaders.ACCEPT_ENCODING, \"gzip\");\r\n    return exec.execute(req, compress(body));\r\n} \r\n```","```\r\n@Bean\r\npublic RestTemplate getRestTemplate() {\r\n    RestTemplate restTemplate = new RestTemplate();\r\n    restTemplate.getInterceptors().add(new CompressingClientHttpRequestInterceptor());\r\n    return restTemplate;\r\n} \r\n```","```\r\n@Bean\r\npublic JettyServletWebServerFactory jettyServletWebServerFactory() {\r\n    JettyServletWebServerFactory factory = new JettyServletWebServerFactory();\r\n    factory.addServerCustomizers(server -> {\r\n        GzipHandler gzipHandler = new GzipHandler();\r\n        gzipHandler.setInflateBufferSize(1);\r\n        gzipHandler.setHandler(server.getHandler());\r\n\r\n        HandlerCollection handlerCollection = new HandlerCollection(gzipHandler);\r\n        server.setHandler(handlerCollection);\r\n    });\r\n    return factory;\r\n}\r\n```","```\r\n@Bean\r\npublic UndertowServletWebServerFactory undertowServletWebServerFactory() {\r\n    UndertowServletWebServerFactory factory = new UndertowServletWebServerFactory();\r\n    factory.addDeploymentInfoCustomizers((deploymentInfo) -> {\r\n        deploymentInfo.addInitialHandlerChainWrapper(handler -> new RequestEncodingHandler(handler)\r\n          .addEncoding(\"gzip\", GzipStreamSourceConduit.WRAPPER));\r\n    });\r\n    return factory;\r\n}\r\n```"]