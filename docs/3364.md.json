["```\r\n@Test(expected = ConcurrentModificationException.class)\r\npublic void whilstRemovingDuringIteration_shouldThrowException() throws InterruptedException {\r\n\r\n    List<Integer> integers = newArrayList(1, 2, 3);\r\n\r\n    for (Integer integer : integers) {\r\n        integers.remove(1);\r\n    }\r\n}\r\n```","```\r\nfor (Iterator<Integer> iterator = integers.iterator(); iterator.hasNext();) {\r\n    Integer integer = iterator.next();\r\n    if(integer == 2) {\r\n        iterator.remove();\r\n    }\r\n}\r\n```","```\r\nList<Integer> integers = newArrayList(1, 2, 3);\r\nList<Integer> toRemove = newArrayList();\r\n\r\nfor (Integer integer : integers) {\r\n    if(integer == 2) {\r\n        toRemove.add(integer);\r\n    }\r\n}\r\nintegers.removeAll(toRemove);\r\n\r\nassertThat(integers).containsExactly(1, 3); \r\n```","```\r\nList<Integer> integers = newArrayList(1, 2, 3);\r\n\r\nintegers.removeIf(i -> i == 2);\r\n\r\nassertThat(integers).containsExactly(1, 3);\r\n```","```\r\nCollection<Integer> integers = newArrayList(1, 2, 3);\r\n\r\nList<String> collected = integers\r\n  .stream()\r\n  .filter(i -> i != 2)\r\n  .map(Object::toString)\r\n  .collect(toList());\r\n\r\nassertThat(collected).containsExactly(\"1\", \"3\");\r\n```"]