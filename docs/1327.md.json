["```\r\n@GetMapping(\"/http-servlet-response\")\r\npublic String usingHttpServletResponse(HttpServletResponse response) {\r\n    response.addHeader(\"Baeldung-Example-Header\", \"Value-HttpServletResponse\");\r\n    return \"Response with header using HttpServletResponse\";\r\n}\r\n```","```\r\n@GetMapping(\"/response-entity-builder-with-http-headers\")\r\npublic ResponseEntity<String> usingResponseEntityBuilderAndHttpHeaders() {\r\n    HttpHeaders responseHeaders = new HttpHeaders();\r\n    responseHeaders.set(\"Baeldung-Example-Header\", \r\n      \"Value-ResponseEntityBuilderWithHttpHeaders\");\r\n\r\n    return ResponseEntity.ok()\r\n      .headers(responseHeaders)\r\n      .body(\"Response with header using ResponseEntity\");\r\n}\r\n```","```\r\n@WebFilter(\"/filter-response-header/*\")\r\npublic class AddResponseHeaderFilter implements Filter {\r\n\r\n    @Override\r\n    public void doFilter(ServletRequest request, ServletResponse response, \r\n      FilterChain chain) throws IOException, ServletException {\r\n        HttpServletResponse httpServletResponse = (HttpServletResponse) response;\r\n        httpServletResponse.setHeader(\r\n          \"Baeldung-Example-Filter-Header\", \"Value-Filter\");\r\n        chain.doFilter(request, response);\r\n    }\r\n\r\n    @Override\r\n    public void init(FilterConfig filterConfig) throws ServletException {\r\n        // ...\r\n    }\r\n\r\n    @Override\r\n    public void destroy() {\r\n        // ...\r\n    }\r\n}\r\n```","```\r\n@ServletComponentScan\r\n@SpringBootApplication\r\npublic class ResponseHeadersApplication {\r\n\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(ResponseHeadersApplication.class, args);\r\n    }\r\n}\r\n```","```\r\n@GetMapping(\"/server-http-response\")\r\npublic Mono<String> usingServerHttpResponse(ServerHttpResponse response) {\r\n    response.getHeaders().add(\"Baeldung-Example-Header\", \"Value-ServerHttpResponse\");\r\n    return Mono.just(\"Response with header using ServerHttpResponse\");\r\n}\r\n```","```\r\n@GetMapping(\"/response-entity\")\r\npublic Mono<ResponseEntity<String>> usingResponseEntityBuilder() {\r\n    String responseHeaderKey = \"Baeldung-Example-Header\";\r\n    String responseHeaderValue = \"Value-ResponseEntityBuilder\";\r\n    String responseBody = \"Response with header using ResponseEntity (builder)\";\r\n\r\n    return Mono.just(ResponseEntity.ok()\r\n      .header(responseHeaderKey, responseHeaderValue)\r\n      .body(responseBody));\r\n}\r\n```","```\r\npublic Mono<ServerResponse> useHandler(final ServerRequest request) {\r\n     return ServerResponse.ok()\r\n        .header(\"Baeldung-Example-Header\", \"Value-Handler\")\r\n        .body(Mono.just(\"Response with header using Handler\"),String.class);\r\n}\r\n```","```\r\n@Component\r\npublic class AddResponseHeaderWebFilter implements WebFilter {\r\n\r\n    @Override\r\n    public Mono<Void> filter(ServerWebExchange exchange, WebFilterChain chain) {\r\n        exchange.getResponse()\r\n          .getHeaders()\r\n          .add(\"Baeldung-Example-Filter-Header\", \"Value-Filter\");\r\n        return chain.filter(exchange);\r\n    }\r\n}\r\n```"]