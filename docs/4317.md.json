["```\r\npublic class CarDTO {\r\n    private int id;\r\n    private String name;\r\n}\r\n```","```\r\npublic class Car {\r\n    private int id;\r\n    private String name;\r\n}\r\n```","```\r\n@Mapper\r\npublic interface CarMapper {\r\n    CarMapper INSTANCE = Mappers.getMapper(CarMapper.class);\r\n    CarDTO carToCarDTO(Car car);\r\n}\r\n```","```\r\n@Test\r\npublic void givenCarEntitytoCar_whenMaps_thenCorrect() {\r\n    Car entity = new Car();\r\n    entity.setId(1);\r\n    entity.setName(\"Toyota\");\r\n\r\n    CarDTO carDto = CarMapper.INSTANCE.carToCarDTO(entity);\r\n\r\n    assertThat(carDto.getId()).isEqualTo(entity.getId());\r\n    assertThat(carDto.getName()).isEqualTo(entity.getName());\r\n}\r\n```","```\r\nWarning:(X,X) java: Unmapped target property: \"propertyName\".\r\n```","```\r\npublic class DocumentDTO {\r\n    private int id;\r\n    private String title;\r\n    private String text;\r\n    private List<String> comments;\r\n    private String author;\r\n}\r\n```","```\r\npublic class Document {\r\n    private int id;\r\n    private String title;\r\n    private String text;\r\n    private Date modificationTime;\r\n}\r\n```","```\r\n@Mapper\r\npublic interface DocumentMapper {\r\n    DocumentMapper INSTANCE = Mappers.getMapper(DocumentMapper.class);\r\n\r\n    DocumentDTO documentToDocumentDTO(Document entity);\r\n    Document documentDTOToDocument(DocumentDTO dto);\r\n}\r\n```","```\r\n@Mapper\r\npublic interface DocumentMapperMappingIgnore {\r\n\r\n    DocumentMapperMappingIgnore INSTANCE =\r\n      Mappers.getMapper(DocumentMapperMappingIgnore.class);\r\n\r\n    @Mapping(target = \"comments\", ignore = true)\r\n    @Mapping(target = \"author\", ignore = true)\r\n    DocumentDTO documentToDocumentDTO(Document entity);\r\n\r\n    @Mapping(target = \"modificationTime\", ignore = true)\r\n    Document documentDTOToDocument(DocumentDTO dto);\r\n}\r\n```","```\r\n@Mapper(unmappedTargetPolicy = ReportingPolicy.IGNORE)\r\npublic interface DocumentMapperUnmappedPolicy {\r\n    // mapper methods\r\n}\r\n```","```\r\n@MapperConfig(unmappedTargetPolicy = ReportingPolicy.IGNORE)\r\npublic interface IgnoreUnmappedMapperConfig {\r\n}\r\n```","```\r\n@Mapper(config = IgnoreUnmappedMapperConfig.class)\r\npublic interface DocumentMapperWithConfig { \r\n    // mapper methods \r\n}\r\n```","```\r\n<build>\r\n    <plugins>\r\n        <plugin>\r\n            <groupId>org.apache.maven.plugins</groupId>\r\n            <artifactId>maven-compiler-plugin</artifactId>\r\n            <version>${maven-compiler-plugin.version}</version>\r\n            <configuration>\r\n                <source>${maven.compiler.source}</source>\r\n                <target>${maven.compiler.target}</target>\r\n                <annotationProcessorPaths>\r\n                    <path>\r\n                        <groupId>org.mapstruct</groupId>\r\n                        <artifactId>mapstruct-processor</artifactId>\r\n                        <version>${org.mapstruct.version}</version>\r\n                    </path>\r\n                </annotationProcessorPaths>\r\n                <compilerArgs>\r\n                    <compilerArg>\r\n                        -Amapstruct.unmappedTargetPolicy=IGNORE\r\n                    </compilerArg>\r\n                </compilerArgs>\r\n            </configuration>\r\n        </plugin>\r\n    </plugins>\r\n</build>\r\n```"]