["```\r\nBasicCookieStore cookieStore = new BasicCookieStore();\r\nBasicClientCookie cookie = new BasicClientCookie(\"JSESSIONID\", \"1234\");\r\ncookie.setDomain(\".github.com\");\r\ncookie.setPath(\"/\");\r\ncookieStore.addCookie(cookie);\r\n```","```\r\n@Test\r\npublic void whenSettingCookiesOnTheHttpClient_thenCookieSentCorrectly() \r\n  throws ClientProtocolException, IOException {\r\n    BasicCookieStore cookieStore = new BasicCookieStore();\r\n    BasicClientCookie cookie = new BasicClientCookie(\"JSESSIONID\", \"1234\");\r\n    cookie.setDomain(\".github.com\");\r\n    cookie.setPath(\"/\");\r\n    cookieStore.addCookie(cookie);\r\n    HttpClient client = HttpClientBuilder.create().setDefaultCookieStore(cookieStore).build();\r\n\r\n    final HttpGet request = new HttpGet(\"http://www.github.com\");\r\n\r\n    response = client.execute(request);\r\n    assertThat(response.getStatusLine().getStatusCode(), equalTo(200));\r\n}\r\n```","```\r\ncookie.setAttribute(ClientCookie.DOMAIN_ATTR, \"true\"); \r\n```","```\r\n@Test\r\npublic void givenUsingDeprecatedApi_whenSettingCookiesOnTheHttpClient_thenCorrect() \r\n  throws ClientProtocolException, IOException {\r\n    BasicCookieStore cookieStore = new BasicCookieStore();\r\n    BasicClientCookie cookie = new BasicClientCookie(\"JSESSIONID\", \"1234\");\r\n    cookie.setDomain(\".github.com\");\r\n    cookie.setPath(\"/\");\r\n    cookieStore.addCookie(cookie);\r\n    DefaultHttpClient client = new DefaultHttpClient();\r\n    client.setCookieStore(cookieStore);\r\n\r\n    HttpGet request = new HttpGet(\"http://www.github.com\");\r\n\r\n    response = client.execute(request);\r\n    assertThat(response.getStatusLine().getStatusCode(), equalTo(200));\r\n}\r\n```","```\r\n@Test\r\npublic void whenSettingCookiesOnTheRequest_thenCookieSentCorrectly() \r\n  throws ClientProtocolException, IOException {\r\n    BasicCookieStore cookieStore = new BasicCookieStore();\r\n    BasicClientCookie cookie = new BasicClientCookie(\"JSESSIONID\", \"1234\");\r\n    cookie.setDomain(\".github.com\");\r\n    cookie.setPath(\"/\");\r\n    cookieStore.addCookie(cookie);\r\n    instance = HttpClientBuilder.create().build();\r\n\r\n    HttpGet request = new HttpGet(\"http://www.github.com\");\r\n\r\n    HttpContext localContext = new BasicHttpContext();\r\n    localContext.setAttribute(HttpClientContext.COOKIE_STORE, cookieStore);\r\n    // localContext.setAttribute(ClientContext.COOKIE_STORE, cookieStore); // before 4.3\r\n    response = instance.execute(request, localContext);\r\n\r\n    assertThat(response.getStatusLine().getStatusCode(), equalTo(200));\r\n}\r\n```","```\r\n@Test\r\npublic void whenSettingCookiesOnARequest_thenCorrect() \r\n  throws ClientProtocolException, IOException {\r\n    instance = HttpClientBuilder.create().build();\r\n    HttpGet request = new HttpGet(\"http://www.github.com\");\r\n    request.setHeader(\"Cookie\", \"JSESSIONID=1234\");\r\n\r\n    response = instance.execute(request);\r\n\r\n    assertThat(response.getStatusLine().getStatusCode(), equalTo(200));\r\n}\r\n```"]