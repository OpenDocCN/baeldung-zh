["```\r\npublic static ExecutorService newCachedThreadPool() {\r\n    return new ThreadPoolExecutor(0, Integer.MAX_VALUE, 60L, TimeUnit.SECONDS, \r\n      new SynchronousQueue<Runnable>());\r\n}\r\n```","```\r\nCallable<String> task = () -> {\r\n    long oneHundredMicroSeconds = 100_000;\r\n    long startedAt = System.nanoTime();\r\n    while (System.nanoTime() - startedAt <= oneHundredMicroSeconds);\r\n\r\n    return \"Done\";\r\n};\r\n\r\nvar cachedPool = Executors.newCachedThreadPool();\r\nvar tasks = IntStream.rangeClosed(1, 1_000_000).mapToObj(i -> task).collect(toList());\r\nvar result = cachedPool.invokeAll(tasks);\r\n```","```\r\npublic static ExecutorService newFixedThreadPool(int nThreads) {\r\n    return new ThreadPoolExecutor(nThreads, nThreads, 0L, TimeUnit.MILLISECONDS, \r\n      new LinkedBlockingQueue<Runnable>());\r\n}\r\n```","```\r\nvar boundedQueue = new ArrayBlockingQueue<Runnable>(1000);\r\nnew ThreadPoolExecutor(10, 20, 60, SECONDS, boundedQueue, new AbortPolicy()); \r\n```"]