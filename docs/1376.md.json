["```\r\nstatic Integer readFromFile(Integer integer) throws IOException {\r\n    // logic to read from file which throws IOException\r\n} \r\n```","```\r\nList<Integer> integers = Arrays.asList(3, 9, 7, 0, 10, 20);\r\n\r\nCheckedFunction1<Integer, Integer> readFunction = i -> readFromFile(i);\r\nintegers.stream()\r\n .map(readFunction.unchecked());\r\n```","```\r\nList<Integer> integers = Arrays.asList(3, 9, 7, 0, 10, 20);\r\n\r\nintegers.stream()\r\n  .map(API.unchecked(i -> readFromFile(i)));\r\n```","```\r\nList<Integer> integers = Arrays.asList(3, 9, 7, 0, 10, 20);\r\n\r\nintegers.stream()\r\n  .map(CheckedFunction1.lift(i -> readFromFile(i)))\r\n  .map(k -> k.getOrElse(-1));\r\n```","```\r\nList<Integer> integers = Arrays.asList(3, 9, 7, 0, 10, 20); \r\n```","```\r\nintegers.stream()\r\n  .map(CheckedFunction1.liftTry(i -> readFromFile(i)))\r\n  .flatMap(Value::toJavaStream)\r\n  .forEach(i -> processValidValue(i));\r\n```"]