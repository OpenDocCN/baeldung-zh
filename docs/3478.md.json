["```\r\n@RequestMapping(value = \"/image-manual-response\", method = RequestMethod.GET)\r\npublic void getImageAsByteArray(HttpServletResponse response) throws IOException {\r\n    InputStream in = servletContext.getResourceAsStream(\"/WEB-Iimg/image-example.jpg\");\r\n    response.setContentType(MediaType.IMAGE_JPEG_VALUE);\r\n    IOUtils.copy(in, response.getOutputStream());\r\n}\r\n```","```\r\nhttp://localhost:8080/spring-mvc-xml/image-manual-response.jpg\r\n```","```\r\n<mvc:annotation-driven>\r\n    <mvc:message-converters>\r\n        <bean class=\"org.springframework.http.converter.ByteArrayHttpMessageConverter\">\r\n            <property name=\"supportedMediaTypes\">\r\n                <list>\r\n                    <value>image/jpeg</value>\r\n                    <value>image/png</value>\r\n                </list>\r\n            </property>\r\n        </bean>\r\n    </mvc:message-converters>\r\n</mvc:annotation-driven>\r\n```","```\r\n@Override\r\npublic void configureMessageConverters(List<HttpMessageConverter<?>> converters) {\r\n    converters.add(byteArrayHttpMessageConverter());\r\n}\r\n\r\n@Bean\r\npublic ByteArrayHttpMessageConverter byteArrayHttpMessageConverter() {\r\n    ByteArrayHttpMessageConverter arrayHttpMessageConverter = new ByteArrayHttpMessageConverter();\r\n    arrayHttpMessageConverter.setSupportedMediaTypes(getSupportedMediaTypes());\r\n    return arrayHttpMessageConverter;\r\n}\r\n\r\nprivate List<MediaType> getSupportedMediaTypes() {\r\n    List<MediaType> list = new ArrayList<MediaType>();\r\n    list.add(MediaType.IMAGE_JPEG);\r\n    list.add(MediaType.IMAGE_PNG);\r\n    list.add(MediaType.APPLICATION_OCTET_STREAM);\r\n    return list;\r\n}\r\n```","```\r\n@RequestMapping(value = \"/image-byte-array\", method = RequestMethod.GET)\r\npublic @ResponseBody byte[] getImageAsByteArray() throws IOException {\r\n    InputStream in = servletContext.getResourceAsStream(\"/WEB-Iimg/image-example.jpg\");\r\n    return IOUtils.toByteArray(in);\r\n}\r\n```","```\r\nhttp://localhost:8080/spring-mvc-xml/image-byte-array.jpg\r\n```","```\r\n@RequestMapping(value = \"/image-response-entity\", method = RequestMethod.GET)\r\npublic ResponseEntity<byte[]> getImageAsResponseEntity() {\r\n    HttpHeaders headers = new HttpHeaders();\r\n    InputStream in = servletContext.getResourceAsStream(\"/WEB-Iimg/image-example.jpg\");\r\n    byte[] media = IOUtils.toByteArray(in);\r\n    headers.setCacheControl(CacheControl.noCache().getHeaderValue());\r\n\r\n    ResponseEntity<byte[]> responseEntity = new ResponseEntity<>(media, headers, HttpStatus.OK);\r\n    return responseEntity;\r\n}\r\n```","```\r\n@ResponseBody\r\n@RequestMapping(value = \"/image-resource\", method = RequestMethod.GET)\r\npublic Resource getImageAsResource() {\r\n   return new ServletContextResource(servletContext, \"/WEB-Iimg/image-example.jpg\");\r\n}\r\n```","```\r\n@RequestMapping(value = \"/image-resource\", method = RequestMethod.GET)\r\n@ResponseBody\r\npublic ResponseEntity<Resource> getImageAsResource() {\r\n    HttpHeaders headers = new HttpHeaders();\r\n    Resource resource = \r\n      new ServletContextResource(servletContext, \"/WEB-Iimg/image-example.jpg\");\r\n    return new ResponseEntity<>(resource, headers, HttpStatus.OK);\r\n}\r\n```"]