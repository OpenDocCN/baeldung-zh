["```\r\n@Entity\r\npublic class User {\r\n    @Id\r\n    @GeneratedValue\r\n    private Long id;\r\n    private String name;\r\n    private String email;\r\n    // ...\r\n}\r\n```","```\r\npublic interface CustomUserRepository {\r\n    User customFindMethod(Long id);\r\n}\r\n```","```\r\npublic class CustomUserRepositoryImpl implements CustomUserRepository {\r\n\r\n    @PersistenceContext\r\n    private EntityManager entityManager;\r\n\r\n    @Override\r\n    public User customFindMethod(Long id) {\r\n        return (User) entityManager.createQuery(\"FROM User u WHERE u.id = :id\")\r\n          .setParameter(\"id\", id)\r\n          .getSingleResult();\r\n    }\r\n}\r\n```","```\r\n@Repository\r\npublic interface UserRepository extends JpaRepository<User, Long>, CustomUserRepository {\r\n}\r\n```","```\r\n@SpringBootTest(classes = CustomRepositoryApplication.class)\r\nclass CustomRepositoryUnitTest {\r\n\r\n    @Autowired\r\n    private UserRepository userRepository;\r\n\r\n    @Test\r\n    public void givenCustomRepository_whenInvokeCustomFindMethod_thenEntityIsFound() {\r\n        User user = new User();\r\n        user.setEmail(\"[[emailÂ protected]](/web/20220707143816/https://www.baeldung.com/cdn-cgi/l/email-protection)\");\r\n        user.setName(\"userName\");\r\n\r\n        User persistedUser = userRepository.save(user);\r\n\r\n        assertEquals(persistedUser, userRepository.customFindMethod(user.getId()));\r\n    }\r\n}\r\n```"]