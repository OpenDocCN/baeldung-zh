["```\r\npublic class HibernatePersistenceUnitInfo implements PersistenceUnitInfo {\r\n\r\n    public static String JPA_VERSION = \"2.1\";\r\n    private String persistenceUnitName;\r\n    private PersistenceUnitTransactionType transactionType\r\n      = PersistenceUnitTransactionType.RESOURCE_LOCAL;\r\n    private List<String> managedClassNames;\r\n    private List<String> mappingFileNames = new ArrayList<>();\r\n    private Properties properties;\r\n    private DataSource jtaDataSource;\r\n    private DataSource nonjtaDataSource;\r\n    private List<ClassTransformer> transformers = new ArrayList<>();\r\n\r\n    public HibernatePersistenceUnitInfo(\r\n      String persistenceUnitName, List<String> managedClassNames, Properties properties) {\r\n        this.persistenceUnitName = persistenceUnitName;\r\n        this.managedClassNames = managedClassNames;\r\n        this.properties = properties;\r\n    }\r\n\r\n    // standard setters / getters   \r\n}\r\n```","```\r\npublic class JpaEntityManagerFactory {\r\n    private String DB_URL = \"jdbc:mysql://databaseurl\";\r\n    private String DB_USER_NAME = \"username\";\r\n    private String DB_PASSWORD = \"password\";\r\n    private Class[] entityClasses;\r\n\r\n    public JpaEntityManagerFactory(Class[] entityClasses) {\r\n        this.entityClasses = entityClasses;\r\n    }\r\n\r\n    public EntityManager getEntityManager() {\r\n        return getEntityManagerFactory().createEntityManager();\r\n    }\r\n\r\n    protected EntityManagerFactory getEntityManagerFactory() {\r\n        PersistenceUnitInfo persistenceUnitInfo = getPersistenceUnitInfo(\r\n          getClass().getSimpleName());\r\n        Map<String, Object> configuration = new HashMap<>();\r\n        return new EntityManagerFactoryBuilderImpl(\r\n          new PersistenceUnitInfoDescriptor(persistenceUnitInfo), configuration)\r\n          .build();\r\n    }\r\n\r\n    protected HibernatePersistenceUnitInfo getPersistenceUnitInfo(String name) {\r\n        return new HibernatePersistenceUnitInfo(name, getEntityClassNames(), getProperties());\r\n    }\r\n\r\n    // additional methods\r\n} \r\n```","```\r\npublic class JpaEntityManagerFactory {\r\n    //...\r\n\r\n    protected List<String> getEntityClassNames() {\r\n        return Arrays.asList(getEntities())\r\n          .stream()\r\n          .map(Class::getName)\r\n          .collect(Collectors.toList());\r\n    }\r\n\r\n    protected Properties getProperties() {\r\n        Properties properties = new Properties();\r\n        properties.put(\"hibernate.dialect\", \"org.hibernate.dialect.MySQLDialect\");\r\n        properties.put(\"hibernate.id.new_generator_mappings\", false);\r\n        properties.put(\"hibernate.connection.datasource\", getMysqlDataSource());\r\n        return properties;\r\n    }\r\n\r\n    protected Class[] getEntities() {\r\n        return entityClasses;\r\n    }\r\n\r\n    protected DataSource getMysqlDataSource() {\r\n        MysqlDataSource mysqlDataSource = new MysqlDataSource();\r\n        mysqlDataSource.setURL(DB_URL);\r\n        mysqlDataSource.setUser(DB_USER_NAME);\r\n        mysqlDataSource.setPassword(DB_PASSWORD);\r\n        return mysqlDataSource;\r\n    }\r\n} \r\n```","```\r\npublic static void main(String[] args) {\r\n    EntityManager entityManager = getJpaEntityManager();\r\n    User user = entityManager.find(User.class, 1);\r\n\r\n    entityManager.getTransaction().begin();\r\n    user.setName(\"John\");\r\n    user.setEmail(\"[[email protected]](/web/20221128051852/https://www.baeldung.com/cdn-cgi/l/email-protection)\");\r\n    entityManager.merge(user);\r\n    entityManager.getTransaction().commit();\r\n\r\n    entityManager.getTransaction().begin();\r\n    entityManager.persist(new User(\"Monica\", \"[[email protected]](/web/20221128051852/https://www.baeldung.com/cdn-cgi/l/email-protection)\"));\r\n    entityManager.getTransaction().commit();\r\n\r\n    // additional CRUD operations\r\n}\r\n\r\nprivate static class EntityManagerHolder {\r\n    private static final EntityManager ENTITY_MANAGER = new JpaEntityManagerFactory(\r\n      new Class[]{User.class})\r\n      .getEntityManager();\r\n}\r\n\r\npublic static EntityManager getJpaEntityManager() {\r\n    return EntityManagerHolder.ENTITY_MANAGER;\r\n}\r\n```"]