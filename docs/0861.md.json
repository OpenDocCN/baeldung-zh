["```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-webflux</artifactId>\r\n    <version>2.7.2</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-oauth2-client</artifactId>\r\n    <version>2.7.2</version>\r\n</dependency> \r\n```","```\r\n@Bean\r\npublic SecurityWebFilterChain pkceFilterChain(ServerHttpSecurity http,\r\n  ServerOAuth2AuthorizationRequestResolver resolver) {\r\n    http.authorizeExchange(r -> r.anyExchange().authenticated());\r\n    http.oauth2Login(auth -> auth.authorizationRequestResolver(resolver));\r\n    return http.build();\r\n} \r\n```","```\r\n@Bean\r\npublic ServerOAuth2AuthorizationRequestResolver pkceResolver(ReactiveClientRegistrationRepository repo) {\r\n    var resolver = new DefaultServerOAuth2AuthorizationRequestResolver(repo);\r\n    resolver.setAuthorizationRequestCustomizer(OAuth2AuthorizationRequestCustomizers.withPkce());\r\n    return resolver;\r\n} \r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n    <version>2.7.2</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.security</groupId>\r\n    <artifactId>spring-security-oauth2-authorization-server</artifactId>\r\n    <version>0.3.1</version>\r\n</dependency> \r\n```","```\r\n@Bean \r\npublic RegisteredClientRepository registeredClientRepository() {      \r\n    var pkceClient = RegisteredClient\r\n      .withId(UUID.randomUUID().toString())\r\n      .clientId(\"pkce-client\")\r\n      .clientSecret(\"{noop}obscura\")\r\n      .clientAuthenticationMethod(ClientAuthenticationMethod.CLIENT_SECRET_BASIC)\r\n      .authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE)\r\n      .authorizationGrantType(AuthorizationGrantType.REFRESH_TOKEN)\r\n      .authorizationGrantType(AuthorizationGrantType.CLIENT_CREDENTIALS)\r\n      .scope(OidcScopes.OPENID)          \r\n      .scope(OidcScopes.EMAIL)          \r\n      .scope(OidcScopes.PROFILE)\r\n      .clientSettings(ClientSettings.builder()\r\n        .requireAuthorizationConsent(false)\r\n        .requireProofKey(true)\r\n        .build())\r\n      .redirectUri(\"http://127.0.0.1:8080/login/oauth2/code/pkce\")\r\n      .build();\r\n\r\n    return new InMemoryRegisteredClientRepository(pkceClient);\r\n} \r\n```","```\r\nserver.port=8085\r\n```","```\r\nLocation: http://localhost:8085/oauth2/authorize?\r\n  response_type=code&\r\n  client_id=pkce-client&\r\n  scope=openid email&\r\n  state=sUmww5GH14yatTwnv2V5Xs0rCCJ0vz0Sjyp4tK1tsdI=&\r\n  redirect_uri=http://127.0.0.1:8080/login/oauth2/code/pkce&\r\n  nonce=FVO5cA3_UNVVIjYnZ9ZrNq5xCTfDnlPERAvPCm0w0ek&\r\n  code_challenge=g0bA5_PNDxy-bdf2t9H0ximVovLqMdbuTVxmGnXjdnQ&\r\n  code_challenge_method=S256\r\n```"]