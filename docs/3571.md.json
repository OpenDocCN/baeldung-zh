["```\r\n<dependency>\r\n    <groupId>org.apache.tiles</groupId>\r\n    <artifactId>tiles-jsp</artifactId>\r\n    <version>3.0.8</version>\r\n</dependency>\r\n```","```\r\n<tiles-definitions>\r\n    <definition name=\"template-def\" \r\n           template=\"/WEB-INF/views/tiles/layouts/defaultLayout.jsp\">  \r\n        <put-attribute name=\"title\" value=\"\" />  \r\n        <put-attribute name=\"header\" \r\n           value=\"/WEB-INF/views/tiles/templates/defaultHeader.jsp\" />  \r\n        <put-attribute name=\"menu\" \r\n           value=\"/WEB-INF/views/tiles/templates/defaultMenu.jsp\" />  \r\n        <put-attribute name=\"body\" value=\"\" />  \r\n        <put-attribute name=\"footer\" \r\n           value=\"/WEB-INF/views/tiles/templates/defaultFooter.jsp\" />  \r\n    </definition>  \r\n    <definition name=\"home\" extends=\"template-def\">  \r\n        <put-attribute name=\"title\" value=\"Welcome\" />  \r\n        <put-attribute name=\"body\" \r\n           value=\"/WEB-INF/views/pages/home.jsp\" />  \r\n    </definition>  \r\n</tiles-definitions>\r\n```","```\r\n@Controller\r\n@RequestMapping(\"/\")\r\npublic class TilesController {\r\n    @RequestMapping(\r\n      value = { \"/\"}, \r\n      method = RequestMethod.GET)\r\n    public String homePage(ModelMap model) {\r\n        return \"home\";\r\n    }\r\n    @RequestMapping(\r\n      value = { \"/apachetiles\"}, \r\n      method = RequestMethod.GET)\r\n    public String productsPage(ModelMap model) {\r\n        return \"apachetiles\";\r\n    }\r\n\r\n    @RequestMapping(\r\n      value = { \"/springmvc\"},\r\n      method = RequestMethod.GET)\r\n    public String contactUsPage(ModelMap model) {\r\n        return \"springmvc\";\r\n    }\r\n}\r\n```","```\r\npublic class WebInitializer implements WebApplicationInitializer {\r\n public void onStartup(ServletContext container) throws ServletException {\r\n\r\n        AnnotationConfigWebApplicationContext ctx = new AnnotationConfigWebApplicationContext();\r\n\r\n        ctx.register(TilesApplicationConfiguration.class);\r\n\r\n        container.addListener(new ContextLoaderListener(ctx));\r\n\r\n        ServletRegistration.Dynamic servlet = container.addServlet(\r\n          \"dispatcher\", new DispatcherServlet(ctx));\r\n        servlet.setLoadOnStartup(1);\r\n        servlet.addMapping(\"/\");\r\n    }\r\n}\r\n```","```\r\n@Configuration\r\n@EnableWebMvc\r\n@ComponentScan(basePackages = \"com.baeldung.spring.controller.tiles\")\r\npublic class TilesApplicationConfiguration implements WebMvcConfigurer {\r\n    @Bean\r\n    public TilesConfigurer tilesConfigurer() {\r\n        TilesConfigurer tilesConfigurer = new TilesConfigurer();\r\n        tilesConfigurer.setDefinitions(\r\n          new String[] { \"/WEB-INF/views/**/tiles.xml\" });\r\n        tilesConfigurer.setCheckRefresh(true);\r\n\r\n        return tilesConfigurer;\r\n    }\r\n\r\n    @Override\r\n    public void configureViewResolvers(ViewResolverRegistry registry) {\r\n        TilesViewResolver viewResolver = new TilesViewResolver();\r\n        registry.viewResolver(viewResolver);\r\n    }\r\n\r\n    @Override\r\n    public void addResourceHandlers(ResourceHandlerRegistry registry) {\r\n        registry.addResourceHandler(\"/static/**\")\r\n          .addResourceLocations(\"/static/\");\r\n    }\r\n}\r\n```","```\r\n<html>\r\n    <head>\r\n        <meta \r\n          http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n        <title><tiles:getAsString name=\"title\" /></title>\r\n        <link href=\"<c:url value='/static/css/app.css' />\" \r\n            rel=\"stylesheet\">\r\n        </link>\r\n    </head>\r\n    <body>\r\n        <div class=\"flex-container\">\r\n            <tiles:insertAttribute name=\"header\" />\r\n            <tiles:insertAttribute name=\"menu\" />\r\n        <article class=\"article\">\r\n            <tiles:insertAttribute name=\"body\" />\r\n        </article>\r\n        <tiles:insertAttribute name=\"footer\" />\r\n        </div>\r\n    </body>\r\n</html>\r\n```"]