["```\r\n<bean id=\"persistenceExceptionTranslationPostProcessor\" \r\n   class=\"org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor\" />\r\n```","```\r\n@Configuration\r\npublic class PersistenceHibernateConfig{\r\n   @Bean\r\n   public PersistenceExceptionTranslationPostProcessor exceptionTranslation(){\r\n      return new PersistenceExceptionTranslationPostProcessor();\r\n   }\r\n}\r\n```","```\r\n@Test(expected = DataIntegrityViolationException.class)\r\npublic void whenChildIsDeletedWhileParentStillHasForeignKeyToIt_thenDataException() {\r\n   Child childEntity = new Child();\r\n   childService.create(childEntity);\r\n\r\n   Parent parentEntity = new Parent(childEntity);\r\n   service.create(parentEntity);\r\n\r\n   childService.delete(childEntity);\r\n}\r\n```","```\r\norg.springframework.dao.DataIntegrityViolationException: \r\ncould not execute statement; SQL [n/a]; constraint [null]; \r\nnested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement\r\n    at o.s.orm.h.SessionFactoryUtils.convertHibernateAccessException(SessionFactoryUtils.java:138)\r\nCaused by: org.hibernate.exception.ConstraintViolationException: could not execute statement\r\n```","```\r\n@Test\r\npublic void whenChildIsDeletedAfterTheParent_thenNoExceptions() {\r\n   Child childEntity = new Child();\r\n   childService.create(childEntity);\r\n\r\n   Parent parentEntity = new Parent(childEntity);\r\n   service.create(parentEntity);\r\n\r\n   service.delete(parentEntity);\r\n   childService.delete(childEntity);\r\n}\r\n```","```\r\n@Entity\r\npublic class Foo {\r\n   ...\r\n\r\n   @Column(nullable = false)\r\n   private String name;\r\n\r\n   ...\r\n}\r\n```","```\r\n@Test(expected = DataIntegrityViolationException.class)\r\npublic void whenInvalidEntityIsCreated_thenDataException() {\r\n   fooService.create(new Foo());\r\n}\r\n```","```\r\norg.springframework.dao.DataIntegrityViolationException: \r\nnot-null property references a null or transient value: \r\norg.baeldung.spring.persistence.model.Foo.name; \r\nnested exception is org.hibernate.PropertyValueException: \r\nnot-null property references a null or transient value: \r\norg.baeldung.spring.persistence.model.Foo.name\r\n\tat o.s.orm.h.SessionFactoryUtils.convertHibernateAccessException(SessionFactoryUtils.java:160)\r\n...\r\nCaused by: org.hibernate.PropertyValueException: \r\nnot-null property references a null or transient value: \r\norg.baeldung.spring.persistence.model.Foo.name\r\n\tat o.h.e.i.Nullability.checkNullability(Nullability.java:103)\r\n...\r\n```","```\r\n@Test(expected = DataIntegrityViolationException.class)\r\npublic final void whenEntityWithLongNameIsCreated_thenDataException() {\r\n   service.create(new Foo(randomAlphabetic(2048)));\r\n}\r\n```","```\r\norg.springframework.dao.DataIntegrityViolationException: \r\ncould not execute statement; SQL [n/a]; \r\nnested exception is org.hibernate.exception.DataException: could not execute statement\r\n   at o.s.o.h.SessionFactoryUtils.convertHibernateAccessException(SessionFactoryUtils.java:143)\r\n...\r\nCaused by: org.hibernate.exception.DataException: could not execute statement\r\n\tat o.h.e.i.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:71)\r\n```","```\r\n@Column(nullable = false, length = 4096)\r\n```","```\r\n@Entity\r\npublic class Foo {\r\n    ...\r\n    @Column(nullable = false)\r\n    @NotNull\r\n    private String name;\r\n\r\n    ...\r\n}\r\n```","```\r\njavax.validation.ConstraintViolationException: \r\nValidation failed for classes [org.baeldung.spring.persistence.model.Foo] \r\nduring persist time for groups [javax.validation.groups.Default, ]\r\nList of constraint violations:[ ConstraintViolationImpl{\r\n    interpolatedMessage='may not be null', propertyPath=name, \r\n    rootBeanClass=class org.baeldung.spring.persistence.model.Foo, \r\n    messageTemplate='{javax.validation.constraints.NotNull.message}'}\r\n]\r\n    at o.h.c.b.BeanValidationEventListener.validate(BeanValidationEventListener.java:159)\r\n    at o.h.c.b.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:94)\r\n```"]