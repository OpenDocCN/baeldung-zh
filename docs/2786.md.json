["```\r\npublic class ControlSubThread implements Runnable {\r\n\r\n    private Thread worker;\r\n    private final AtomicBoolean running = new AtomicBoolean(false);\r\n    private int interval;\r\n\r\n    public ControlSubThread(int sleepInterval) {\r\n        interval = sleepInterval;\r\n    }\r\n\r\n    public void start() {\r\n        worker = new Thread(this);\r\n        worker.start();\r\n    }\r\n\r\n    public void stop() {\r\n        running.set(false);\r\n    }\r\n\r\n    public void run() { \r\n        running.set(true);\r\n        while (running.get()) {\r\n            try { \r\n                Thread.sleep(interval); \r\n            } catch (InterruptedException e){ \r\n                Thread.currentThread().interrupt();\r\n                System.out.println(\r\n                  \"Thread was interrupted, Failed to complete operation\");\r\n            }\r\n            // do something here \r\n         } \r\n    } \r\n}\r\n```","```\r\npublic class ControlSubThread implements Runnable {\r\n\r\n    private Thread worker;\r\n    private AtomicBoolean running = new AtomicBoolean(false);\r\n    private int interval;\r\n\r\n    // ...\r\n\r\n    public void interrupt() {\r\n        running.set(false);\r\n        worker.interrupt();\r\n    }\r\n\r\n    boolean isRunning() {\r\n        return running.get();\r\n    }\r\n\r\n    boolean isStopped() {\r\n        return stopped.get();\r\n    }\r\n\r\n    public void run() {\r\n        running.set(true);\r\n        stopped.set(false);\r\n        while (running.get()) {\r\n            try {\r\n                Thread.sleep(interval);\r\n            } catch (InterruptedException e){\r\n                Thread.currentThread().interrupt();\r\n                System.out.println(\r\n                  \"Thread was interrupted, Failed to complete operation\");\r\n            }\r\n            // do something\r\n        }\r\n        stopped.set(true);\r\n    }\r\n} \r\n```"]