["```\r\npublic class EchoServer extends Thread {\r\n\r\n    private DatagramSocket socket;\r\n    private boolean running;\r\n    private byte[] buf = new byte[256];\r\n\r\n    public EchoServer() {\r\n        socket = new DatagramSocket(4445);\r\n    }\r\n\r\n    public void run() {\r\n        running = true;\r\n\r\n        while (running) {\r\n            DatagramPacket packet \r\n              = new DatagramPacket(buf, buf.length);\r\n            socket.receive(packet);\r\n\r\n            InetAddress address = packet.getAddress();\r\n            int port = packet.getPort();\r\n            packet = new DatagramPacket(buf, buf.length, address, port);\r\n            String received \r\n              = new String(packet.getData(), 0, packet.getLength());\r\n\r\n            if (received.equals(\"end\")) {\r\n                running = false;\r\n                continue;\r\n            }\r\n            socket.send(packet);\r\n        }\r\n        socket.close();\r\n    }\r\n}\r\n```","```\r\npublic class EchoClient {\r\n    private DatagramSocket socket;\r\n    private InetAddress address;\r\n\r\n    private byte[] buf;\r\n\r\n    public EchoClient() {\r\n        socket = new DatagramSocket();\r\n        address = InetAddress.getByName(\"localhost\");\r\n    }\r\n\r\n    public String sendEcho(String msg) {\r\n        buf = msg.getBytes();\r\n        DatagramPacket packet \r\n          = new DatagramPacket(buf, buf.length, address, 4445);\r\n        socket.send(packet);\r\n        packet = new DatagramPacket(buf, buf.length);\r\n        socket.receive(packet);\r\n        String received = new String(\r\n          packet.getData(), 0, packet.getLength());\r\n        return received;\r\n    }\r\n\r\n    public void close() {\r\n        socket.close();\r\n    }\r\n}\r\n```","```\r\npublic class UDPTest {\r\n    EchoClient client;\r\n\r\n    @Before\r\n    public void setup(){\r\n        new EchoServer().start();\r\n        client = new EchoClient();\r\n    }\r\n\r\n    @Test\r\n    public void whenCanSendAndReceivePacket_thenCorrect() {\r\n        String echo = client.sendEcho(\"hello server\");\r\n        assertEquals(\"hello server\", echo);\r\n        echo = client.sendEcho(\"server is working\");\r\n        assertFalse(echo.equals(\"hello server\"));\r\n    }\r\n\r\n    @After\r\n    public void tearDown() {\r\n        client.sendEcho(\"end\");\r\n        client.close();\r\n    }\r\n}\r\n```"]