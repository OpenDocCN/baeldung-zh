["```\r\n@Entity\r\n@Table(name = \"app_admin\")\r\npublic class Admin {\r\n\r\n    @Id\r\n    @GeneratedValue\r\n    private Long id;\r\n\r\n    @Column(name = \"admin_name\")\r\n    private String name;\r\n\r\n    // standard getters and setters\r\n}\r\n```","```\r\n@Entity\r\n@Table(name = \"app_user\")\r\npublic class User {\r\n\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n    private Long id;\r\n\r\n    @Column(name = \"user_name\")\r\n    private String name;\r\n\r\n    // standard getters and setters\r\n}\r\n```","```\r\n@Test\r\npublic void givenIdentityStrategy_whenCommitTransction_thenReturnPrimaryKey() {\r\n    User user = new User();\r\n    user.setName(\"TestName\");\r\n\r\n    entityManager.getTransaction().begin();\r\n    entityManager.persist(user);\r\n    Assert.assertNull(user.getId());\r\n    entityManager.getTransaction().commit();\r\n\r\n    Long expectPrimaryKey = 1L;\r\n    Assert.assertEquals(expectPrimaryKey, user.getId());\r\n}\r\n```","```\r\nCREATE SEQUENCE article_seq\r\n  MINVALUE 1\r\n  START WITH 50\r\n  INCREMENT BY 50\r\n```","```\r\n@Entity\r\n@Table(name = \"article\")\r\npublic class Article {\r\n\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = \"article_gen\")\r\n    @SequenceGenerator(name=\"article_gen\", sequenceName=\"article_seq\")\r\n    private Long id;\r\n\r\n    @Column(name = \"article_name\")\r\n    private String name\r\n\r\n    // standard getters and setters\r\n}\r\n```","```\r\n@Test\r\npublic void givenSequenceStrategy_whenPersist_thenReturnPrimaryKey() {\r\n    Article article = new Article();\r\n    article.setName(\"Test Name\");\r\n\r\n    entityManager.getTransaction().begin();\r\n    entityManager.persist(article);\r\n    Long expectPrimaryKey = 51L;\r\n    Assert.assertEquals(expectPrimaryKey, article.getId());\r\n\r\n    entityManager.getTransaction().commit();\r\n}\r\n```","```\r\n@Table(name = \"id_gen\")\r\n@Entity\r\npublic class IdGenerator {\r\n\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n    private Long id;\r\n\r\n    @Column(name = \"gen_name\")\r\n    private String gen_name;\r\n\r\n    @Column(name = \"gen_value\")\r\n    private Long gen_value;\r\n\r\n    // standard getters and setters\r\n}\r\n```","```\r\nINSERT INTO id_gen (gen_name, gen_val) VALUES ('id_generator', 0);\r\nINSERT INTO id_gen (gen_name, gen_val) VALUES ('task_gen', 10000);\r\n```","```\r\n@Entity\r\n@Table(name = \"task\")\r\npublic class Task {\r\n\r\n    @TableGenerator(name = \"id_generator\", table = \"id_gen\", pkColumnName = \"gen_name\", valueColumnName = \"gen_value\",\r\n        pkColumnValue=\"task_gen\", initialValue=10000, allocationSize=10)\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.TABLE, generator = \"id_generator\")\r\n    private Long id;\r\n\r\n    @Column(name = \"name\")\r\n    private String name;\r\n\r\n    // standard getters and setters\r\n}\r\n```","```\r\n@Test\r\npublic void givenTableStrategy_whenPersist_thenReturnPrimaryKey() {\r\n    Task task = new Task();\r\n    task.setName(\"Test Task\");\r\n\r\n    entityManager.getTransaction().begin();\r\n    entityManager.persist(task);\r\n    Long expectPrimaryKey = 10000L;\r\n    Assert.assertEquals(expectPrimaryKey, task.getId());\r\n\r\n    entityManager.getTransaction().commit();\r\n}\r\n```"]