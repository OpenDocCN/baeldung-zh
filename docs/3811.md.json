["```\r\n@Entity\r\npublic class Person {\r\n\r\n    @Id\r\n    private Long id;\r\n    private String firstName;\r\n    private String lastName;\r\n\r\n    // standard getters and setters, default and all-args constructors\r\n}\r\n```","```\r\n@Repository\r\npublic class PersonInsertRepository {\r\n\r\n    @PersistenceContext\r\n    private EntityManager entityManager;\r\n\r\n}\r\n```","```\r\n@Transactional\r\npublic void insertWithQuery(Person person) {\r\n    entityManager.createNativeQuery(\"INSERT INTO person (id, first_name, last_name) VALUES (?,?,?)\")\r\n      .setParameter(1, person.getId())\r\n      .setParameter(2, person.getFirstName())\r\n      .setParameter(3, person.getLastName())\r\n      .executeUpdate();\r\n}\r\n```","```\r\n@Test\r\npublic void givenPersonEntity_whenInsertedTwiceWithNativeQuery_thenPersistenceExceptionExceptionIsThrown() {\r\n    Person person = new Person(1L, \"firstname\", \"lastname\");\r\n\r\n    assertThatExceptionOfType(PersistenceException.class).isThrownBy(() -> {\r\n        personInsertRepository.insertWithQuery(PERSON);\r\n        personInsertRepository.insertWithQuery(PERSON);\r\n    });\r\n}\r\n```","```\r\n@Transactional\r\npublic void insertWithEntityManager(Person person) {\r\n    this.entityManager.persist(person);\r\n}\r\n```","```\r\n@Test\r\npublic void givenPersonEntity_whenInsertedTwiceWithEntityManager_thenEntityExistsExceptionIsThrown() {\r\n    assertThatExceptionOfType(EntityExistsException.class).isThrownBy(() -> {\r\n        personInsertRepository.insertWithEntityManager(new Person(1L, \"firstname\", \"lastname\"));\r\n        personInsertRepository.insertWithEntityManager(new Person(1L, \"firstname\", \"lastname\"));\r\n    });\r\n}\r\n```"]