["```\r\nmvn spring-boot:run -Drun.arguments=--customArgument=custom\r\n```","```\r\nmvn spring-boot:run -Drun.arguments=--spring.main.banner-mode=off,--customArgument=custom\r\n```","```\r\nmvn spring-boot:run -Dspring-boot.run.arguments=--spring.main.banner-mode=off,--customArgument=custom\r\n```","```\r\nbootRun {\r\n    if (project.hasProperty('args')) {\r\n        args project.args.split(',')\r\n    }\r\n}\r\n```","```\r\n./gradlew bootRun -Pargs=--spring.main.banner-mode=off,--customArgument=custom\r\n```","```\r\nserver.port=8081\r\nspring.application.name=SampleApp\r\n```","```\r\nmvn spring-boot:run -Drun.arguments=--server.port=8085\r\n```","```\r\nmvn spring-boot:run -Dspring-boot.run.arguments=--server.port=8085\r\n```","```\r\n    server.port=${port:8080}\r\n    ```","```\r\n@SpringBootApplication\r\npublic class Application extends SpringBootServletInitializer {\r\n    public static void main(String[] args) {\r\n        SpringApplication application = new SpringApplication(Application.class);\r\n        application.setAddCommandLineProperties(false);\r\n        application.run(args);\r\n    }\r\n}\r\n```","```\r\n@SpringBootApplication\r\npublic class Application extends SpringBootServletInitializer {\r\n    public static void main(String[] args) {\r\n        for(String arg:args) {\r\n            System.out.println(arg);\r\n        }\r\n        SpringApplication.run(Application.class, args);\r\n    }\r\n}\r\n```","```\r\n@SpringBootTest(args = \"--spring.main.banner-mode=off\")\r\npublic class ApplicationTest {\r\n\r\n    @Test\r\n    public void whenUsingSpringBootTestArgs_thenCommandLineArgSet(@Autowired Environment env) {\r\n        Assertions.assertThat(env.getProperty(\"spring.main.banner-mode\")).isEqualTo(\"off\");\r\n    }\r\n}\r\n```"]