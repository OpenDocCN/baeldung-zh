["```\r\n> az login\r\nTo sign in, use a web browser to open the page \\\r\nhttps://microsoft.com/devicelogin and enter the code XXXXXXXX to authenticate.\r\n```","```\r\n> az ad sp create-for-rbac --name \"app-name\" --password \"password\"\r\n{\r\n    \"appId\": \"aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa\",\r\n    \"displayName\": \"app-name\",\r\n    \"name\": \"http://app-name\",\r\n    \"password\": \"password\",\r\n    \"tenant\": \"tttttttt-tttt-tttt-tttt-tttttttttttt\"\r\n}\r\n```","```\r\n<server>\r\n    <id>azure-auth</id>\r\n    <configuration>\r\n        <client>aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa</client>\r\n        <tenant>tttttttt-tttt-tttt-tttt-tttttttttttt</tenant>\r\n        <key>password</key>\r\n        <environment>AZURE</environment>\r\n    </configuration>\r\n</server>\r\n```","```\r\n<plugin>\r\n    <groupId>com.microsoft.azure</groupId>\r\n    <artifactId>azure-webapp-maven-plugin</artifactId>\r\n    <version>1.1.0</version>\r\n    <configuration>\r\n        <!-- ... -->\r\n    </configuration>\r\n</plugin>\r\n```","```\r\n@GetMapping(\"/hello\")\r\npublic String hello() {\r\n    return \"hello azure!\";\r\n}\r\n```","```\r\n<configuration>\r\n    <javaVersion>1.8</javaVersion>\r\n    <javaWebContainer>tomcat 8.5</javaWebContainer>\r\n    <!-- ... -->\r\n</configuration>\r\n```","```\r\n<configuration>\r\n    <linuxRuntime>tomcat 8.5-jre8</linuxRuntime>\r\n    <!-- ... -->\r\n</configuration>\r\n```","```\r\n<configuration>\r\n    <authentication>\r\n        <serverId>azure-auth</serverId>\r\n    </authentication>\r\n    <appName>spring-azure</appName>\r\n    <resourceGroup>baeldung</resourceGroup>\r\n    <!-- ... -->\r\n</configuration>\r\n```","```\r\n> mvn clean package azure-webapp:deploy\r\n...\r\n[INFO] Start deploying to Web App spring-baeldung...\r\n[INFO] Authenticate with ServerId: azure-auth\r\n[INFO] [Correlation ID: cccccccc-cccc-cccc-cccc-cccccccccccc] \\\r\nInstance discovery was successful\r\n[INFO] Target Web App doesn't exist. Creating a new one...\r\n[INFO] Creating App Service Plan 'ServicePlanssssssss-bbbb-0000'...\r\n[INFO] Successfully created App Service Plan.\r\n[INFO] Successfully created Web App.\r\n[INFO] Starting to deploy the war file...\r\n[INFO] Successfully deployed Web App at \\\r\nhttps://spring-baeldung.azurewebsites.net\r\n...\r\n```","```\r\n<configuration>\r\n    <!-- ... -->\r\n    <appServicePlanName>ServicePlanssssssss-bbbb-0000</appServicePlanName>\r\n</configuration>\r\n```","```\r\n<configuration>\r\n    <authentication>\r\n        <serverId>azure-auth</serverId>\r\n    </authentication>\r\n    <appName>spring-baeldung</appName>\r\n    <resourceGroup>baeldung</resourceGroup>\r\n    <javaVersion>1.8</javaVersion>\r\n\r\n    <deploymentType>ftp</deploymentType>\r\n    <resources>\r\n        <resource>\r\n            <directory>${project.basedir}/target</directory>\r\n            <targetPath>webapps</targetPath>\r\n            <includes>\r\n                <include>*.war</include>\r\n            </includes>\r\n        </resource>\r\n    </resources>\r\n</configuration>\r\n```","```\r\n> mvn clean package azure-webapp:deploy\r\n...\r\n[INFO] Start deploying to Web App spring-baeldung...\r\n[INFO] Authenticate with ServerId: azure-auth\r\n[INFO] [Correlation ID: cccccccc-cccc-cccc-cccc-cccccccccccc] \\\r\nInstance discovery was successful\r\n[INFO] Target Web App doesn't exist. Creating a new one...\r\n[INFO] Creating App Service Plan 'ServicePlanxxxxxxxx-xxxx-xxxx'...\r\n[INFO] Successfully created App Service Plan.\r\n[INFO] Successfully created Web App.\r\n...\r\n[INFO] Finished uploading directory: \\\r\n/xxx/.../target/azure-webapps/spring-baeldung --> /site/wwwroot\r\n[INFO] Successfully uploaded files to FTP server: \\\r\nxxxx-xxxx-xxx-xxx.ftp.azurewebsites.windows.net\r\n[INFO] Successfully deployed Web App at \\\r\nhttps://spring-baeldung.azurewebsites.net\r\n```","```\r\naz group create --location japanwest --name bealdung-group\r\naz appservice plan create --name baeldung-plan --resource-group bealdung-group --sku B1\r\naz webapp create --name baeldung-webapp --resource-group baeldung-group \\\r\n  --plan baeldung-plan --runtime java|1.8|Tomcat|8.5\r\n```","```\r\n@PostMapping(\"/user\")\r\npublic String register(@RequestParam String name) {\r\n    userRepository.save(userNamed(name));\r\n    return \"registered\";\r\n}\r\n\r\n@GetMapping(\"/user\")\r\npublic Iterable<User> userlist() {\r\n    return userRepository.findAll();\r\n}\r\n```","```\r\nspring.datasource.url=jdbc:h2:file:~/test\r\nspring.datasource.username=sa\r\nspring.datasource.password=\r\n```","```\r\n<configuration>\r\n    <authentication>\r\n        <serverId>azure-auth</serverId>\r\n    </authentication>\r\n    <javaVersion>1.8</javaVersion>\r\n    <resourceGroup>baeldung-group</resourceGroup>\r\n    <appName>baeldung-webapp</appName>\r\n    <appServicePlanName>bealdung-plan</appServicePlanName>\r\n    <appSettings>\r\n        <property>\r\n            <name>spring.datasource.url</name>\r\n            <value>jdbc:mysql://127.0.0.1:55738/localdb</value>\r\n        </property>\r\n        <property>\r\n            <name>spring.datasource.username</name>\r\n            <value>uuuuuu</value>\r\n        </property>\r\n        <property>\r\n            <name>spring.datasource.password</name>\r\n            <value>pppppp</value>\r\n        </property>\r\n    </appSettings>\r\n</configuration>\r\n```","```\r\n> mvn clean package azure-webapp:deploy\r\n...\r\n[INFO] Start deploying to Web App custom-webapp...\r\n[INFO] Authenticate with ServerId: azure-auth\r\n[INFO] [Correlation ID: cccccccc-cccc-cccc-cccc-cccccccccccc] \\\r\nInstance discovery was successful\r\n[INFO] Updating target Web App...\r\n[INFO] Successfully updated Web App.\r\n[INFO] Starting to deploy the war file...\r\n[INFO] Successfully deployed Web App at \\\r\nhttps://baeldung-webapp.azurewebsites.net\r\n```","```\r\n> curl -d \"\" -X POST https://baeldung-webapp.azurewebsites.net/user\\?name\\=baeldung\r\nregistered\r\n\r\n> curl https://baeldung-webapp.azurewebsites.net/user\r\n[{\"id\":1,\"name\":\"baeldung\"}]\r\n```","```\r\n<plugin>\r\n    <groupId>com.spotify</groupId>\r\n    <artifactId>docker-maven-plugin</artifactId>\r\n    <version>1.1.0</version>\r\n    <configuration>\r\n        <!-- ... -->\r\n    </configuration>\r\n</plugin>\r\n```","```\r\naz acr create --admin-enabled --resource-group baeldung-group \\\r\n  --location japanwest --name baeldungadr --sku Basic\r\n```","```\r\n> az acr credential show --name baeldungadr --query passwords[0]\r\n{\r\n  \"additionalProperties\": {},\r\n  \"name\": \"password\",\r\n  \"value\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\r\n}\r\n```","```\r\n<server>\r\n    <id>baeldungadr</id>\r\n    <username>baeldungadr</username>\r\n    <password>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</password>\r\n</server>\r\n```","```\r\n<properties>\r\n    <!-- ... -->\r\n    <azure.containerRegistry>baeldungadr</azure.containerRegistry>\r\n    <docker.image.prefix>${azure.containerRegistry}.azurecr.io</docker.image.prefix>\r\n</properties>\r\n\r\n<build>\r\n    <plugins>\r\n        <plugin>\r\n            <groupId>com.spotify</groupId>\r\n            <artifactId>docker-maven-plugin</artifactId>\r\n            <version>1.0.0</version>\r\n            <configuration>\r\n                <imageName>${docker.image.prefix}/${project.artifactId}</imageName>\r\n                <registryUrl>https://${docker.image.prefix}</registryUrl>\r\n                <serverId>${azure.containerRegistry}</serverId>\r\n                <dockerDirectory>docker</dockerDirectory>\r\n                <resources>\r\n                    <resource>\r\n                        <targetPath>/</targetPath>\r\n                        <directory>${project.build.directory}</directory>\r\n                        <include>${project.build.finalName}.jar</include>\r\n                    </resource>\r\n                </resources>\r\n            </configuration>\r\n        </plugin>\r\n        <!-- ... -->\r\n    </plugins>\r\n</build>\r\n```","```\r\nFROM frolvlad/alpine-oraclejdk8:slim\r\nVOLUME /tmp\r\nADD azure-0.1.jar app.jar\r\nRUN sh -c 'touch /app.jar'\r\nEXPOSE 8080\r\nENTRYPOINT [ \"sh\", \"-c\", \"java -Djava.security.egd=file:/dev/./urandom -jar /app.jar\" ]\r\n```","```\r\n> mvn docker:build -DpushImage\r\n...\r\n[INFO] Building image baeldungadr.azurecr.io/azure-0.1\r\n...\r\nSuccessfully built aaaaaaaaaaaa\r\nSuccessfully tagged baeldungadr.azurecr.io/azure-0.1:latest\r\n[INFO] Built baeldungadr.azurecr.io/azure-0.1\r\n[INFO] Pushing baeldungadr.azurecr.io/azure-0.1\r\nThe push refers to repository [baeldungadr.azurecr.io/azure-0.1]\r\n...\r\nlatest: digest: sha256:0f0f... size: 1375\r\n```","```\r\n> curl http://a.x.y.z:8080/hello\r\nhello azure!\r\n```","```\r\n<configuration>\r\n    <containerSettings>\r\n        <imageName>${docker.image.prefix}/${project.artifactId}</imageName>\r\n        <registryUrl>https://${docker.image.prefix}</registryUrl>\r\n        <serverId>${azure.containerRegistry}</serverId>\r\n    </containerSettings>\r\n    <!-- ... -->\r\n</configuration>\r\n```"]