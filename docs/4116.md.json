["```\r\nnew CompletableFuture().defaultExecutor()\r\n```","```\r\nnew CompletableFuture().newIncompleteFuture()\r\n```","```\r\nnew CompletableFuture().copy()\r\n```","```\r\nnew CompletableFuture().minimalCompletionStage()\r\n```","```\r\nCompletableFuture<T> completeAsync(Supplier<? extends T> supplier, Executor executor)\r\nCompletableFuture<T> completeAsync(Supplier<? extends T> supplier)\r\n```","```\r\nnew CompletableFuture().orTimeout(1, TimeUnit.SECONDS)\r\n```","```\r\nnew CompletableFuture().completeOnTimeout(value, 1, TimeUnit.SECONDS)\r\n```","```\r\nExecutor delayedExecutor(long delay, TimeUnit unit, Executor executor)\r\nExecutor delayedExecutor(long delay, TimeUnit unit)\r\n```","```\r\n<U> CompletionStage<U> completedStage(U value)\r\n<U> CompletionStage<U> failedStage(Throwable ex)\r\n```","```\r\nCompletableFuture<Object> future = new CompletableFuture<>();\r\nfuture.completeAsync(() -> input, CompletableFuture.delayedExecutor(1, TimeUnit.SECONDS));\r\n```","```\r\nCompletableFuture<Object> future = new CompletableFuture<>();\r\nfuture.completeOnTimeout(input, 1, TimeUnit.SECONDS);\r\n```","```\r\nCompletableFuture<Object> future = new CompletableFuture<>();\r\nfuture.orTimeout(1, TimeUnit.SECONDS);\r\n```"]