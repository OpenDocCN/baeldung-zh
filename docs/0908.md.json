["```\r\nList<Integer> integers = Arrays.asList(3, 9, 7, 6, 10, 20);\r\nintegers.forEach(i -> System.out.println(50 / i));\r\n```","```\r\nList<Integer> integers = Arrays.asList(3, 9, 7, 0, 10, 20);\r\nintegers.forEach(i -> {\r\n    try {\r\n        System.out.println(50 / i);\r\n    } catch (ArithmeticException e) {\r\n        System.err.println(\r\n          \"Arithmetic Exception occured : \" + e.getMessage());\r\n    }\r\n});\r\n```","```\r\nstatic Consumer<Integer> lambdaWrapper(Consumer<Integer> consumer) {\r\n    return i -> {\r\n        try {\r\n            consumer.accept(i);\r\n        } catch (ArithmeticException e) {\r\n            System.err.println(\r\n              \"Arithmetic Exception occured : \" + e.getMessage());\r\n        }\r\n    };\r\n}\r\n```","```\r\nList<Integer> integers = Arrays.asList(3, 9, 7, 0, 10, 20);\r\nintegers.forEach(lambdaWrapper(i -> System.out.println(50 / i)));\r\n```","```\r\nstatic <T, E extends Exception> Consumer<T>\r\n  consumerWrapper(Consumer<T> consumer, Class<E> clazz) {\r\n\r\n    return i -> {\r\n        try {\r\n            consumer.accept(i);\r\n        } catch (Exception ex) {\r\n            try {\r\n                E exCast = clazz.cast(ex);\r\n                System.err.println(\r\n                  \"Exception occured : \" + exCast.getMessage());\r\n            } catch (ClassCastException ccEx) {\r\n                throw ex;\r\n            }\r\n        }\r\n    };\r\n}\r\n```","```\r\nList<Integer> integers = Arrays.asList(3, 9, 7, 0, 10, 20);\r\nintegers.forEach(\r\n  consumerWrapper(\r\n    i -> System.out.println(50 / i), \r\n    ArithmeticException.class));\r\n```","```\r\nstatic void writeToFile(Integer integer) throws IOException {\r\n    // logic to write to file which throws IOException\r\n}\r\n```","```\r\nList<Integer> integers = Arrays.asList(3, 9, 7, 0, 10, 20);\r\nintegers.forEach(i -> writeToFile(i));\r\n```","```\r\njava.lang.Error: Unresolved compilation problem: Unhandled exception type IOException\r\n```","```\r\npublic static void main(String[] args) throws IOException {\r\n    List<Integer> integers = Arrays.asList(3, 9, 7, 0, 10, 20);\r\n    integers.forEach(i -> writeToFile(i));\r\n}\r\n```","```\r\njava.lang.Error: Unresolved compilation problem: Unhandled exception type IOException\r\n```","```\r\n@FunctionalInterface\r\npublic interface Consumer<T> {\r\n    void accept(T t);\r\n}\r\n```","```\r\nList<Integer> integers = Arrays.asList(3, 9, 7, 0, 10, 20);\r\nintegers.forEach(i -> {\r\n    try {\r\n        writeToFile(i);\r\n    } catch (IOException e) {\r\n        throw new RuntimeException(e);\r\n    }\r\n}); \r\n```","```\r\n@FunctionalInterface\r\npublic interface ThrowingConsumer<T, E extends Exception> {\r\n    void accept(T t) throws E;\r\n}\r\n```","```\r\nstatic <T> Consumer<T> throwingConsumerWrapper(\r\n  ThrowingConsumer<T, Exception> throwingConsumer) {\r\n\r\n    return i -> {\r\n        try {\r\n            throwingConsumer.accept(i);\r\n        } catch (Exception ex) {\r\n            throw new RuntimeException(ex);\r\n        }\r\n    };\r\n}\r\n```","```\r\nList<Integer> integers = Arrays.asList(3, 9, 7, 0, 10, 20);\r\nintegers.forEach(throwingConsumerWrapper(i -> writeToFile(i)));\r\n```","```\r\nstatic <T, E extends Exception> Consumer<T> handlingConsumerWrapper(\r\n  ThrowingConsumer<T, E> throwingConsumer, Class<E> exceptionClass) {\r\n\r\n    return i -> {\r\n        try {\r\n            throwingConsumer.accept(i);\r\n        } catch (Exception ex) {\r\n            try {\r\n                E exCast = exceptionClass.cast(ex);\r\n                System.err.println(\r\n                  \"Exception occured : \" + exCast.getMessage());\r\n            } catch (ClassCastException ccEx) {\r\n                throw new RuntimeException(ex);\r\n            }\r\n        }\r\n    };\r\n}\r\n```","```\r\nList<Integer> integers = Arrays.asList(3, 9, 7, 0, 10, 20);\r\nintegers.forEach(handlingConsumerWrapper(\r\n  i -> writeToFile(i), IOException.class));\r\n```"]