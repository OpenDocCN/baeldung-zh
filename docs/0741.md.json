["```\r\n{\r\n    \"falcon\": {\r\n\t\"realName\": \"Sam Wilson\",\r\n\t\"location\": \"New York\",\r\n\t\"status\": \"INJURED\",\r\n\t\"name\": \"Falcon\"\r\n    },\r\n    \"wanda\": {\r\n        \"realName\": \"Wanda Maximoff\",\r\n        \"location\": \"New York\",\r\n        \"status\": \"HEALTHY\"\r\n    }\r\n}\r\n```","```\r\nASTRA_DB_ID=e26d52c6-fb2d-4951-b606-4ea11f7309ba\r\nASTRA_DB_REGION=us-east-1\r\nASTRA_DB_KEYSPACE=avengers\r\nASTRA_DB_APPLICATION_TOKEN=AstraCS:xxx-token-here \r\n```","```\r\n@Repository\r\npublic class DocumentClient {\r\n  @Value(\"https://${ASTRA_DB_ID}-${ASTRA_DB_REGION}.apps.astra.datastax.com/api/rest/v2/namespaces/${ASTRA_DB_KEYSPACE}\")\r\n  private String baseUrl;\r\n\r\n  @Value(\"${ASTRA_DB_APPLICATION_TOKEN}\")\r\n  private String token;\r\n\r\n  @Autowired\r\n  private ObjectMapper objectMapper;\r\n\r\n  private RestTemplate restTemplate;\r\n\r\n  public DocumentClient() {\r\n    this.restTemplate = new RestTemplate();\r\n    this.restTemplate.setRequestFactory(new HttpComponentsClientHttpRequestFactory());\r\n  }\r\n\r\n  public <T> T getDocument(String collection, String id, Class<T> cls) {\r\n    var uri = UriComponentsBuilder.fromHttpUrl(baseUrl)\r\n      .pathSegment(\"collections\", collection, id)\r\n      .build()\r\n      .toUri();\r\n    var request = RequestEntity.get(uri)\r\n      .header(\"X-Cassandra-Token\", token)\r\n      .build();\r\n    var response = restTemplate.exchange(request, cls);\r\n    return response.getBody();\r\n  }\r\n\r\n  public void patchSubDocument(String collection, String id, String key, Map<String, Object> updates) {\r\n    var updateUri = UriComponentsBuilder.fromHttpUrl(baseUrl)\r\n      .pathSegment(\"collections\", collection, id, key)\r\n      .build()\r\n      .toUri();\r\n    var updateRequest = RequestEntity.patch(updateUri)\r\n      .header(\"X-Cassandra-Token\", token)\r\n      .body(updates);\r\n    restTemplate.exchange(updateRequest, Map.class);\r\n  } \r\n} \r\n```","```\r\npublic record Status(String avenger, \r\n  String name, \r\n  String realName, \r\n  String status, \r\n  String location) {}\r\n```","```\r\npublic record Statuses(Map<String, Status> data) {}\r\n```","```\r\n@Service\r\npublic class StatusesService {\r\n  @Autowired\r\n  private DocumentClient client;\r\n\r\n  public List<Status> getStatuses() {\r\n    var collection = client.getDocument(\"statuses\", \"latest\", Statuses.class);\r\n\r\n    var result = new ArrayList<Status>();\r\n    for (var entry : collection.data().entrySet()) {\r\n      var status = entry.getValue();\r\n      result.add(new Status(entry.getKey(), status.name(), status.realName(), status.status(), status.location()));\r\n    }\r\n\r\n    return result;\r\n  }  \r\n} \r\n```","```\r\n@Controller\r\npublic class StatusesController {\r\n  @Autowired\r\n  private StatusesService statusesService;\r\n\r\n  @GetMapping(\"/\")\r\n  public ModelAndView getStatuses() {\r\n    var result = new ModelAndView(\"dashboard\");\r\n    result.addObject(\"statuses\", statusesService.getStatuses());\r\n\r\n    return result;\r\n  }\r\n} \r\n```","```\r\n<!doctype html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"utf-8\" />\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n  <link href=\"https://cdn.jsdelivr.net/npm/[[email protected]](/web/20220625170842/https://www.baeldung.com/cdn-cgi/l/email-protection)/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\r\n    integrity=\"sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6\" crossorigin=\"anonymous\" />\r\n  <title>Avengers Status Dashboard</title>\r\n</head>\r\n<body>\r\n  <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n    <div class=\"container-fluid\">\r\n      <a class=\"navbar-brand\" href=\"#\">Avengers Status Dashboard</a>\r\n    </div>\r\n  </nav>\r\n\r\n  <div class=\"container-fluid mt-4\">\r\n    <div class=\"row row-cols-4 g-4\">\r\n      <div class=\"col\" th:each=\"data, iterstat: ${statuses}\">\r\n        <th:block th:switch=\"${data.status}\">\r\n          <div class=\"card text-white bg-danger\" th:case=\"DECEASED\" th:insert=\"~{common/status}\"></div>\r\n          <div class=\"card text-dark bg-warning\" th:case=\"INJURED\" th:insert=\"~{common/status}\"></div>\r\n          <div class=\"card text-dark bg-warning\" th:case=\"UNKNOWN\" th:insert=\"~{common/status}\"></div>\r\n          <div class=\"card text-white bg-secondary\" th:case=\"RETIRED\" th:insert=\"~{common/status}\"></div>\r\n          <div class=\"card text-dark bg-light\" th:case=\"*\" th:insert=\"~{common/status}\"></div>\r\n        </th:block>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <script src=\"https://cdn.jsdelivr.net/npm/[[email protected]](/web/20220625170842/https://www.baeldung.com/cdn-cgi/l/email-protection)/dist/js/bootstrap.bundle.min.js\"\r\n    integrity=\"sha384-JEW9xMcG8R+pH31jmWH6WWP0WintQrMb4s7ZOdauHnUtxwoG2vI5DkLtS3qm9Ekf\"\r\n    crossorigin=\"anonymous\"></script>\r\n</body>\r\n</html>\r\n```","```\r\n<div class=\"card-body\">\r\n  <h5 class=\"card-title\" th:text=\"${data.name}\"></h5>\r\n  <h6 class=\"card-subtitle\"><span th:if=\"${data.realName}\" th:text=\"${data.realName}\"></span> </h6>\r\n  <p class=\"card-text\"><span th:if=\"${data.location}\">Location: <span th:text=\"${data.location}\"></span></span> </p>\r\n</div>\r\n<div class=\"card-footer\">Status: <span th:text=\"${data.status}\"></span></div> \r\n```","```\r\npublic void updateStatus(String avenger, String location, String status) throws Exception {\r\n  client.patchSubDocument(\"statuses\", \"latest\", avenger, \r\n    Map.of(\"location\", location, \"status\", status));\r\n} \r\n```","```\r\n@RestController\r\npublic class UpdateController {\r\n  @Autowired\r\n  private StatusesService statusesService;\r\n\r\n  @PostMapping(\"/update/{avenger}\")\r\n  public void update(@PathVariable String avenger, @RequestBody UpdateBody body) throws Exception {\r\n    statusesService.updateStatus(avenger, lookupLocation(body.lat(), body.lng()), getStatus(body.status()));\r\n  }\r\n\r\n  private String lookupLocation(Double lat, Double lng) {\r\n    return \"New York\";\r\n  }\r\n\r\n  private String getStatus(Double status) {\r\n    if (status == 0) {\r\n      return \"DECEASED\";\r\n    } else if (status > 0.9) {\r\n      return \"HEALTHY\";\r\n    } else {\r\n      return \"INJURED\";\r\n    }\r\n  }\r\n\r\n  private static record UpdateBody(Double lat, Double lng, Double status) {}\r\n}\r\n```"]