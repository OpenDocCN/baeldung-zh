["```\r\n@Entity\r\npublic class Student {\r\n\r\n    @Id\r\n    @GeneratedValue\r\n    private Long id;\r\n\r\n    private String firstName;\r\n    private String lastName;\r\n\r\n    // consturctor, getters and setters\r\n\r\n}\r\n```","```\r\n@Repository\r\npublic interface StudentRepository extends JpaRepository<Student, Long> {\r\n    Slice<Student> findAllByFirstName(String firstName, Pageable page);\r\n}\r\n```","```\r\nvoid processStudentsByFirstName(String firstName) {\r\n    Slice<Student> slice = repository.findAllByFirstName(firstName, PageRequest.of(0, BATCH_SIZE));\r\n    List<Student> studentsInBatch = slice.getContent();\r\n    studentsInBatch.forEach(emailService::sendEmailToStudent);\r\n\r\n    while(slice.hasNext()) {\r\n        slice = repository.findAllByFirstName(firstName, slice.nextPageable());\r\n        slice.get().forEach(emailService::sendEmailToStudent);\r\n    }\r\n}\r\n```","```\r\n[main] DEBUG org.hibernate.SQL - select student0_.id as id1_0_, student0_.first_name as first_na2_0_, student0_.last_name as last_nam3_0_ from student student0_ where student0_.first_name=? limit ?\r\n[main] DEBUG org.hibernate.SQL - select student0_.id as id1_0_, student0_.first_name as first_na2_0_, student0_.last_name as last_nam3_0_ from student student0_ where student0_.first_name=? limit ? offset ?\r\n[main] DEBUG org.hibernate.SQL - select student0_.id as id1_0_, student0_.first_name as first_na2_0_, student0_.last_name as last_nam3_0_ from student student0_ where student0_.first_name=? limit ? offset ?\r\n```","```\r\n@Repository\r\npublic interface StudentRepository extends JpaRepository<Student, Long> {\r\n    Slice<Student> findAllByFirstName(String firstName, Pageable page);\r\n    Page<Student> findAllByLastName(String lastName, Pageable page);\r\n}\r\n```","```\r\n[main] DEBUG org.hibernate.SQL - select student0_.id as id1_0_, student0_.first_name as first_na2_0_, student0_.last_name as last_nam3_0_ from student student0_ where student0_.last_name=? limit ?\r\n[main] DEBUG org.hibernate.SQL - select count(student0_.id) as col_0_0_ from student student0_ where student0_.last_name=?\r\n[main] DEBUG org.hibernate.SQL - select student0_.id as id1_0_, student0_.first_name as first_na2_0_, student0_.last_name as last_nam3_0_ from student student0_ where student0_.last_name=? limit ? offset ?\r\n[main] DEBUG org.hibernate.SQL - select count(student0_.id) as col_0_0_ from student student0_ where student0_.last_name=?\r\n[main] DEBUG org.hibernate.SQL - select student0_.id as id1_0_, student0_.first_name as first_na2_0_, student0_.last_name as last_nam3_0_ from student student0_ where student0_.last_name=? limit ? offset ? \r\n```","```\r\nStream<Student> findAllByFirstName(String firstName);\r\n```","```\r\nprivate final EntityManager entityManager;\r\n\r\n@Transactional(readOnly = true)\r\npublic void processStudentsByFirstNameUsingStreams(String firstName) {\r\n    try (Stream<Student> students = repository.findAllByFirstName(firstName)) {\r\n        students.peek(entityManager::detach)\r\n            .forEach(emailService::sendEmailToStudent);\r\n    }\r\n}\r\n```"]