["```\r\n<dependency>\r\n    <groupId>org.apache.commons</groupId>\r\n    <artifactId>commons-lang3</artifactId>\r\n    <version>3.12.0</version>\r\n</dependency>\r\n```","```\r\npublic static boolean isNumeric(String strNum) {\r\n    if (strNum == null) {\r\n        return false;\r\n    }\r\n    try {\r\n        double d = Double.parseDouble(strNum);\r\n    } catch (NumberFormatException nfe) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n```","```\r\nassertThat(isNumeric(\"22\")).isTrue();\r\nassertThat(isNumeric(\"5.05\")).isTrue();\r\nassertThat(isNumeric(\"-200\")).isTrue(); \r\nassertThat(isNumeric(\"10.0d\")).isTrue();\r\nassertThat(isNumeric(\"   22   \")).isTrue();\r\n\r\nassertThat(isNumeric(null)).isFalse();\r\nassertThat(isNumeric(\"\")).isFalse();\r\nassertThat(isNumeric(\"abc\")).isFalse();\r\n```","```\r\nprivate Pattern pattern = Pattern.compile(\"-?\\\\d+(\\\\.\\\\d+)?\");\r\n\r\npublic boolean isNumeric(String strNum) {\r\n    if (strNum == null) {\r\n        return false; \r\n    }\r\n    return pattern.matcher(strNum).matches();\r\n}\r\n```","```\r\nassertThat(isNumeric(\"22\")).isTrue();\r\nassertThat(isNumeric(\"5.05\")).isTrue();\r\nassertThat(isNumeric(\"-200\")).isTrue();\r\n\r\nassertThat(isNumeric(null)).isFalse();\r\nassertThat(isNumeric(\"abc\")).isFalse();\r\n```","```\r\nassertThat(NumberUtils.isCreatable(\"22\")).isTrue();\r\nassertThat(NumberUtils.isCreatable(\"5.05\")).isTrue();\r\nassertThat(NumberUtils.isCreatable(\"-200\")).isTrue();\r\nassertThat(NumberUtils.isCreatable(\"10.0d\")).isTrue();\r\nassertThat(NumberUtils.isCreatable(\"1000L\")).isTrue();\r\nassertThat(NumberUtils.isCreatable(\"0xFF\")).isTrue();\r\nassertThat(NumberUtils.isCreatable(\"07\")).isTrue();\r\nassertThat(NumberUtils.isCreatable(\"2.99e+8\")).isTrue();\r\n\r\nassertThat(NumberUtils.isCreatable(null)).isFalse();\r\nassertThat(NumberUtils.isCreatable(\"\")).isFalse();\r\nassertThat(NumberUtils.isCreatable(\"abc\")).isFalse();\r\nassertThat(NumberUtils.isCreatable(\" 22 \")).isFalse();\r\nassertThat(NumberUtils.isCreatable(\"09\")).isFalse();\r\n```","```\r\nassertThat(NumberUtils.isParsable(\"22\")).isTrue();\r\nassertThat(NumberUtils.isParsable(\"-23\")).isTrue();\r\nassertThat(NumberUtils.isParsable(\"2.2\")).isTrue();\r\nassertThat(NumberUtils.isParsable(\"09\")).isTrue();\r\n\r\nassertThat(NumberUtils.isParsable(null)).isFalse();\r\nassertThat(NumberUtils.isParsable(\"\")).isFalse();\r\nassertThat(NumberUtils.isParsable(\"6.2f\")).isFalse();\r\nassertThat(NumberUtils.isParsable(\"9.8d\")).isFalse();\r\nassertThat(NumberUtils.isParsable(\"22L\")).isFalse();\r\nassertThat(NumberUtils.isParsable(\"0xFF\")).isFalse();\r\nassertThat(NumberUtils.isParsable(\"2.99e+8\")).isFalse();\r\n```","```\r\nassertThat(StringUtils.isNumeric(\"123\")).isTrue();\r\nassertThat(StringUtils.isNumeric(\"١٢٣\")).isTrue();\r\nassertThat(StringUtils.isNumeric(\"१२३\")).isTrue();\r\n\r\nassertThat(StringUtils.isNumeric(null)).isFalse();\r\nassertThat(StringUtils.isNumeric(\"\")).isFalse();\r\nassertThat(StringUtils.isNumeric(\"  \")).isFalse();\r\nassertThat(StringUtils.isNumeric(\"12 3\")).isFalse();\r\nassertThat(StringUtils.isNumeric(\"ab2c\")).isFalse();\r\nassertThat(StringUtils.isNumeric(\"12.3\")).isFalse();\r\nassertThat(StringUtils.isNumeric(\"-123\")).isFalse();\r\n```","```\r\nassertThat(StringUtils.isNumericSpace(\"123\")).isTrue();\r\nassertThat(StringUtils.isNumericSpace(\"١٢٣\")).isTrue();\r\nassertThat(StringUtils.isNumericSpace(\"\")).isTrue();\r\nassertThat(StringUtils.isNumericSpace(\"  \")).isTrue();\r\nassertThat(StringUtils.isNumericSpace(\"12 3\")).isTrue();\r\n\r\nassertThat(StringUtils.isNumericSpace(null)).isFalse();\r\nassertThat(StringUtils.isNumericSpace(\"ab2c\")).isFalse();\r\nassertThat(StringUtils.isNumericSpace(\"12.3\")).isFalse();\r\nassertThat(StringUtils.isNumericSpace(\"-123\")).isFalse();\r\n```","```\r\nBenchmark                                     Mode  Cnt    Score   Error  Units\r\nBenchmarking.usingCoreJava                    avgt   20   57.241 ± 0.792  ns/op\r\nBenchmarking.usingNumberUtils_isCreatable     avgt   20   26.711 ± 1.110  ns/op\r\nBenchmarking.usingNumberUtils_isParsable      avgt   20   46.577 ± 1.973  ns/op\r\nBenchmarking.usingRegularExpressions          avgt   20  101.580 ± 4.244  ns/op\r\nBenchmarking.usingStringUtils_isNumeric       avgt   20   35.885 ± 1.691  ns/op\r\nBenchmarking.usingStringUtils_isNumericSpace  avgt   20   31.979 ± 1.393  ns/op\r\n```","```\r\nBenchmark                                     Mode  Cnt      Score     Error  Units\r\nBenchmarking.usingCoreJava                    avgt   20  10162.872 ± 798.387  ns/op\r\nBenchmarking.usingNumberUtils_isCreatable     avgt   20   1703.243 ± 108.244  ns/op\r\nBenchmarking.usingNumberUtils_isParsable      avgt   20   1589.915 ± 203.052  ns/op\r\nBenchmarking.usingRegularExpressions          avgt   20   7168.761 ± 344.597  ns/op\r\nBenchmarking.usingStringUtils_isNumeric       avgt   20   1071.753 ±   8.657  ns/op\r\nBenchmarking.usingStringUtils_isNumericSpace  avgt   20   1157.722 ±  24.139  ns/op\r\n```"]