["```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-data-jpa</artifactId>\r\n    <version>2.5.1</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n    <version>2.5.1</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.codehaus.groovy</groupId>\r\n    <artifactId>groovy</artifactId>\r\n    <version>3.0.3</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-test</artifactId>\r\n    <version>2.5.1</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n<dependency>\r\n    <groupId>com.h2database</groupId>\r\n    <artifactId>h2</artifactId>\r\n    <version>1.4.200</version>\r\n    <scope>runtime</scope>\r\n</dependency>\r\n```","```\r\n<build>\r\n    <plugins>\r\n        //...\r\n        <plugin>\r\n            <groupId>org.codehaus.gmavenplus</groupId>\r\n            <artifactId>gmavenplus-plugin</artifactId>\r\n            <version>1.9.0</version>\r\n            <executions>\r\n                <execution>\r\n                    <goals>\r\n                        <goal>addSources</goal>\r\n                        <goal>addTestSources</goal>\r\n                        <goal>generateStubs</goal>\r\n                        <goal>compile</goal>\r\n                        <goal>generateTestStubs</goal>\r\n                        <goal>compileTests</goal>\r\n                        <goal>removeStubs</goal>\r\n                        <goal>removeTestStubs</goal>\r\n                    </goals>\r\n                </execution>\r\n            </executions>\r\n        </plugin>\r\n    </plugins>\r\n</build>\r\n```","```\r\n@Entity\r\n@Table(name = 'todo')\r\nclass Todo {\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n    Integer id\r\n\r\n    @Column\r\n    String task\r\n\r\n    @Column\r\n    Boolean isCompleted\r\n}\r\n```","```\r\n@Repository\r\ninterface TodoRepository extends JpaRepository<Todo, Integer> {}\r\n```","```\r\ninterface TodoService {\r\n\r\n    List<Todo> findAll()\r\n\r\n    Todo findById(Integer todoId)\r\n\r\n    Todo saveTodo(Todo todo)\r\n\r\n    Todo updateTodo(Todo todo)\r\n\r\n    Todo deleteTodo(Integer todoId)\r\n}\r\n```","```\r\n@Service\r\nclass TodoServiceImpl implements TodoService {\r\n\r\n    //...\r\n\r\n    @Override\r\n    List<Todo> findAll() {\r\n        todoRepository.findAll()\r\n    }\r\n\r\n    @Override\r\n    Todo findById(Integer todoId) {\r\n        todoRepository.findById todoId get()\r\n    }\r\n\r\n    @Override\r\n    Todo saveTodo(Todo todo){\r\n        todoRepository.save todo\r\n    }\r\n\r\n    @Override\r\n    Todo updateTodo(Todo todo){\r\n        todoRepository.save todo\r\n    }\r\n\r\n    @Override\r\n    Todo deleteTodo(Integer todoId){\r\n        todoRepository.deleteById todoId\r\n    }\r\n}\r\n```","```\r\n@RestController\r\n@RequestMapping('todo')\r\npublic class TodoController {\r\n\r\n    @Autowired\r\n    TodoService todoService\r\n\r\n    @GetMapping\r\n    List<Todo> getAllTodoList(){\r\n        todoService.findAll()\r\n    }\r\n\r\n    @PostMapping\r\n    Todo saveTodo(@RequestBody Todo todo){\r\n        todoService.saveTodo todo\r\n    }\r\n\r\n    @PutMapping\r\n    Todo updateTodo(@RequestBody Todo todo){\r\n        todoService.updateTodo todo\r\n    }\r\n\r\n    @DeleteMapping('/{todoId}')\r\n    deleteTodo(@PathVariable Integer todoId){\r\n        todoService.deleteTodo todoId\r\n    }\r\n\r\n    @GetMapping('/{todoId}')\r\n    Todo getTodoById(@PathVariable Integer todoId){\r\n        todoService.findById todoId\r\n    }\r\n}\r\n```","```\r\n@SpringBootApplication\r\nclass SpringBootGroovyApplication {\r\n    static void main(String[] args) {\r\n        SpringApplication.run SpringBootGroovyApplication, args\r\n    }\r\n}\r\n```","```\r\n<properties>\r\n    <start-class>com.baeldung.app.SpringBootGroovyApplication</start-class>\r\n</properties>\r\n```","```\r\nspring-boot:run\r\n```","```\r\nstatic API_ROOT = \"http://localhost:8080/todo\"\r\nstatic readingTodoId\r\nstatic writingTodoId\r\n```","```\r\n@BeforeClass\r\nstatic void populateDummyData() {\r\n    Todo readingTodo = new Todo(task: 'Reading', isCompleted: false)\r\n    Todo writingTodo = new Todo(task: 'Writing', isCompleted: false)\r\n\r\n    final Response readingResponse = \r\n      RestAssured.given()\r\n        .contentType(MediaType.APPLICATION_JSON_VALUE)\r\n        .body(readingTodo).post(API_ROOT)\r\n\r\n    Todo cookingTodoResponse = readingResponse.as Todo.class\r\n    readingTodoId = cookingTodoResponse.getId()\r\n\r\n    final Response writingResponse = \r\n      RestAssured.given()\r\n        .contentType(MediaType.APPLICATION_JSON_VALUE)\r\n        .body(writingTodo).post(API_ROOT)\r\n\r\n    Todo writingTodoResponse = writingResponse.as Todo.class\r\n    writingTodoId = writingTodoResponse.getId()\r\n}\r\n```","```\r\n@Test\r\nvoid whenGetAllTodoList_thenOk(){\r\n    final Response response = RestAssured.get(API_ROOT)\r\n\r\n    assertEquals HttpStatus.OK.value(),response.getStatusCode()\r\n    assertTrue response.as(List.class).size() > 0\r\n}\r\n```","```\r\n@Test\r\nvoid whenGetTodoById_thenOk(){\r\n    final Response response = \r\n      RestAssured.get(\"$API_ROOT/$readingTodoId\")\r\n\r\n    assertEquals HttpStatus.OK.value(),response.getStatusCode()\r\n    Todo todoResponse = response.as Todo.class\r\n    assertEquals readingTodoId,todoResponse.getId()\r\n}\r\n```","```\r\n@Test\r\nvoid whenUpdateTodoById_thenOk(){\r\n    Todo todo = new Todo(id:readingTodoId, isCompleted: true)\r\n    final Response response = \r\n      RestAssured.given()\r\n        .contentType(MediaType.APPLICATION_JSON_VALUE)\r\n        .body(todo).put(API_ROOT)\r\n\r\n    assertEquals HttpStatus.OK.value(),response.getStatusCode()\r\n    Todo todoResponse = response.as Todo.class\r\n    assertTrue todoResponse.getIsCompleted()\r\n}\r\n```","```\r\n@Test\r\nvoid whenDeleteTodoById_thenOk(){\r\n    final Response response = \r\n      RestAssured.given()\r\n        .delete(\"$API_ROOT/$writingTodoId\")\r\n\r\n    assertEquals HttpStatus.OK.value(),response.getStatusCode()\r\n}\r\n```","```\r\n@Test\r\nvoid whenSaveTodo_thenOk(){\r\n    Todo todo = new Todo(task: 'Blogging', isCompleted: false)\r\n    final Response response = \r\n      RestAssured.given()\r\n        .contentType(MediaType.APPLICATION_JSON_VALUE)\r\n        .body(todo).post(API_ROOT)\r\n\r\n    assertEquals HttpStatus.OK.value(),response.getStatusCode()\r\n}\r\n```"]