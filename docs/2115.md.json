["```\r\ndef \"pattern operator example\"() {\r\n    given: \"a pattern\"\r\n    def p = ~'foo'\r\n\r\n    expect:\r\n    p instanceof Pattern\r\n\r\n    and: \"you can use slashy strings to avoid escaping of blackslash\"\r\n    def digitPattern = ~/\\d*/\r\n    digitPattern.matcher('4711').matches()\r\n}\r\n```","```\r\ndef \"match operator example\"() {\r\n    expect:\r\n    'foobar' ==~ /.*oba.*/\r\n\r\n    and: \"matching is strict\"\r\n    !('foobar' ==~ /foo/)\r\n}\r\n```","```\r\ndef \"find operator example\"() {\r\n    when: \"using the find operator\"\r\n    def matcher = 'foo and bar, baz and buz' =~ /(\\w+) and (\\w+)/\r\n\r\n    then: \"will find groups\"\r\n    matcher.size() == 2\r\n\r\n    and: \"can access groups using array\"\r\n    matcher[0][0] == 'foo and bar'\r\n    matcher[1][2] == 'buz'\r\n\r\n    and: \"you can use it as a predicate\"\r\n    'foobarbaz' =~ /bar/\r\n}\r\n```"]