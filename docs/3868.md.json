["```\r\npublic class OuterClass1 {\r\n\r\n    public class InnerClass {\r\n\r\n        public OuterClass1 getOuterInstance() {\r\n            return OuterClass1.this;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n```","```\r\nOuterClass1 outerClass1 = new OuterClass1();\r\nOuterClass1.InnerClass innerClass = outerClass1.new InnerClass();\r\n```","```\r\npublic class OuterClass2 {\r\n\r\n    public static class StaticNestedClass {\r\n    }\r\n\r\n}\r\n```","```\r\nOuterClass2.StaticNestedClass staticNestedClass = new OuterClass2.StaticNestedClass();\r\n```","```\r\nList<Integer> list = new ArrayList<>();\r\nlist.add(new Integer(5));\r\n```","```\r\nList<Integer> list = new ArrayList<>();\r\nlist.add(5);\r\nint value = list.get(0);\r\n```","```\r\nString string1 = new String(\"Hello\");\r\nString string2 = new String(\"Hello\");\r\n\r\nassertFalse(string1 == string2);\r\n```","```\r\nint i1 = 5;\r\nint i2 = 5;\r\n\r\nassertTrue(i1 == i2);\r\n```","```\r\nString string1 = new String(\"Hello\");\r\nString string2 = new String(\"Hello\");\r\n\r\nassertTrue(string1.equals(string2));\r\n```","```\r\nClass<?> integerClass = new Integer(5).getClass();\r\nassertTrue(integerClass.isInstance(new Integer(4)));\r\n```","```\r\nMap<String, Integer> ages = new HashMap<String, Integer>(){{\r\n    put(\"David\", 30);\r\n    put(\"John\", 25);\r\n    put(\"Mary\", 29);\r\n    put(\"Sophie\", 22);\r\n}};\r\n```"]