["```\r\npublic class Product {\r\n\r\n    private int id;\r\n    private String name;\r\n    private double price;\r\n\r\n    // default constructor + getters + setters\r\n\r\n}\r\n```","```\r\n@PostMapping(\"/create\")\r\n@ResponseBody\r\npublic Product createProduct(@RequestBody Product product) {\r\n    // custom logic\r\n    return product;\r\n}\r\n```","```\r\ncurl -i \\\r\n-H \"Accept: application/json\" \\\r\n-H \"Content-Type: application/json\" \\\r\n-X POST --data \\\r\n  '{\"id\": 1,\"name\": \"Asus Zenbook\",\"price\": 800}' \"http://localhost:8080/spring-mvc-basics-4/products/create\"\r\n```","```\r\n@GetMapping(\"/get\")\r\n@ResponseBody\r\npublic Product getProduct(@RequestParam String product) throws JsonMappingException, JsonProcessingException {\r\n    Product prod = objectMapper.readValue(product, Product.class);\r\n    return prod;\r\n}\r\n```","```\r\npublic class ProductEditor extends PropertyEditorSupport {\r\n\r\n    private ObjectMapper objectMapper;\r\n\r\n    public ProductEditor(ObjectMapper objectMapper) {\r\n        this.objectMapper = objectMapper;\r\n    }\r\n\r\n    @Override\r\n    public void setAsText(String text) throws IllegalArgumentException {\r\n        if (StringUtils.isEmpty(text)) {\r\n            setValue(null);\r\n        } else {\r\n            Product prod = new Product();\r\n            try {\r\n                prod = objectMapper.readValue(text, Product.class);\r\n            } catch (JsonProcessingException e) {\r\n                throw new IllegalArgumentException(e);\r\n            }\r\n            setValue(prod);\r\n        }\r\n    }\r\n\r\n}\r\n```","```\r\n@GetMapping(\"/get2\")\r\n@ResponseBody\r\npublic Product get2Product(@RequestParam Product product) {\r\n    // custom logic\r\n    return product;\r\n}\r\n```","```\r\n@InitBinder\r\npublic void initBinder(WebDataBinder binder) {\r\n    binder.registerCustomEditor(Product.class, new ProductEditor(objectMapper));\r\n}\r\n```","```\r\nGET /spring-mvc-basics-4/products/get2?product={\"id\": 1,\"name\": \"Asus Zenbook\",\"price\": 800}\r\n```","```\r\nGET /spring-mvc-basics-4/products/get2?product=%7B%22id%22%3A%201%2C%22name%22%3A%20%22Asus%20Zenbook%22%2C%22price%22%3A%20800%7D\r\n```"]