["```\r\n@Entity\r\npublic class Movie {\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.SEQUENCE)\r\n    private Long id;\r\n    private String title;\r\n    private String director;\r\n    private String rating;\r\n    private int duration;\r\n\r\n    // standard getters and setters\r\n}\r\n```","```\r\nINSERT INTO movie(id, title, director, rating, duration) \r\n    VALUES(1, 'Godzilla: King of the Monsters', ' Michael Dougherty', 'PG-13', 132);\r\nINSERT INTO movie(id, title, director, rating, duration) \r\n    VALUES(2, 'Avengers: Endgame', 'Anthony Russo', 'PG-13', 181);\r\nINSERT INTO movie(id, title, director, rating, duration) \r\n    VALUES(3, 'Captain Marvel', 'Anna Boden', 'PG-13', 123);\r\nINSERT INTO movie(id, title, director, rating, duration) \r\n    VALUES(4, 'Dumbo', 'Tim Burton', 'PG', 112);\r\nINSERT INTO movie(id, title, director, rating, duration) \r\n    VALUES(5, 'Booksmart', 'Olivia Wilde', 'R', 102);\r\nINSERT INTO movie(id, title, director, rating, duration) \r\n    VALUES(6, 'Aladdin', 'Guy Ritchie', 'PG', 128);\r\nINSERT INTO movie(id, title, director, rating, duration) \r\n    VALUES(7, 'The Sun Is Also a Star', 'Ry Russo-Young', 'PG-13', 100);\r\n```","```\r\nSELECT * FROM movie WHERE title LIKE '%in%';\r\n```","```\r\nList<Movie> findByTitleContaining(String title);\r\nList<Movie> findByTitleContains(String title);\r\nList<Movie> findByTitleIsContaining(String title);\r\n```","```\r\nList<Movie> results = movieRepository.findByTitleContaining(\"in\");\r\nassertEquals(3, results.size());\r\n\r\nresults = movieRepository.findByTitleIsContaining(\"in\");\r\nassertEquals(3, results.size());\r\n\r\nresults = movieRepository.findByTitleContains(\"in\");\r\nassertEquals(3, results.size());\r\n```","```\r\nList<Movie> findByTitleLike(String title);\r\n```","```\r\nresults = movieRepository.findByTitleLike(\"%in%\");\r\nassertEquals(3, results.size());\r\n```","```\r\nSELECT * FROM Movie WHERE Rating LIKE 'PG%';\r\n```","```\r\nList<Movie> findByRatingStartsWith(String rating);\r\n```","```\r\nList<Movie> results = movieRepository.findByRatingStartsWith(\"PG\");\r\nassertEquals(6, results.size());\r\n```","```\r\nSELECT * FROM Movie WHERE director LIKE '%Burton';\r\n```","```\r\nList<Movie> findByDirectorEndsWith(String director);\r\n```","```\r\nList<Movie> results = movieRepository.findByDirectorEndsWith(\"Burton\");\r\nassertEquals(1, results.size());\r\n```","```\r\nList<Movie> findByTitleContainingIgnoreCase(String title);\r\n```","```\r\nList<Movie> results = movieRepository.findByTitleContainingIgnoreCase(\"the\");\r\nassertEquals(2, results.size());\r\n```","```\r\nList<Movie> findByRatingNotContaining(String rating);\r\n```","```\r\nList<Movie> results = movieRepository.findByRatingNotContaining(\"PG\");\r\nassertEquals(1, results.size());\r\n```","```\r\nList<Movie> findByDirectorNotLike(String director);\r\n```","```\r\nList<Movie> results = movieRepository.findByDirectorNotLike(\"An%\");\r\nassertEquals(5, results.size());\r\n```","```\r\n@Query(\"SELECT m FROM Movie m WHERE m.title LIKE %:title%\")\r\nList<Movie> searchByTitleLike(@Param(\"title\") String title);\r\n```","```\r\n@Query(\"SELECT m FROM Movie m WHERE m.rating LIKE ?1%\")\r\nList<Movie> searchByRatingStartsWith(String rating);\r\n```","```\r\nList<Movie> results = movieRepository.searchByRatingStartsWith(\"PG\");\r\nassertEquals(6, results.size());\r\n```","```\r\n@Query(\"SELECT m FROM Movie m WHERE m.director LIKE %?#{escape([0])} escape ?#{escapeCharacter()}\")\r\nList<Movie> searchByDirectorEndsWith(String director);\r\n```","```\r\nList<Movie> results = movieRepository.searchByDirectorEndsWith(\"Burton\");\r\nassertEquals(1, results.size());\r\n```"]