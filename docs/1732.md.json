["```\r\nLocalDate localDate = LocalDate.now();\r\n```","```\r\nLocalDate.of(2015, 02, 20);\r\n\r\nLocalDate.parse(\"2015-02-20\");\r\n```","```\r\nLocalDate tomorrow = LocalDate.now().plusDays(1);\r\n```","```\r\nLocalDate previousMonthSameDay = LocalDate.now().minus(1, ChronoUnit.MONTHS);\r\n```","```\r\nDayOfWeek sunday = LocalDate.parse(\"2016-06-12\").getDayOfWeek();\r\n\r\nint twelve = LocalDate.parse(\"2016-06-12\").getDayOfMonth();\r\n```","```\r\nboolean leapYear = LocalDate.now().isLeapYear();\r\n```","```\r\nboolean notBefore = LocalDate.parse(\"2016-06-12\")\r\n  .isBefore(LocalDate.parse(\"2016-06-11\"));\r\n\r\nboolean isAfter = LocalDate.parse(\"2016-06-12\")\r\n  .isAfter(LocalDate.parse(\"2016-06-11\"));\r\n```","```\r\nLocalDateTime beginningOfDay = LocalDate.parse(\"2016-06-12\").atStartOfDay();\r\nLocalDate firstDayOfMonth = LocalDate.parse(\"2016-06-12\")\r\n  .with(TemporalAdjusters.firstDayOfMonth());\r\n```","```\r\nLocalTime now = LocalTime.now();\r\n```","```\r\nLocalTime sixThirty = LocalTime.parse(\"06:30\");\r\n```","```\r\nLocalTime sixThirty = LocalTime.of(6, 30);\r\n```","```\r\nLocalTime sevenThirty = LocalTime.parse(\"06:30\").plus(1, ChronoUnit.HOURS);\r\n```","```\r\nint six = LocalTime.parse(\"06:30\").getHour();\r\n```","```\r\nboolean isbefore = LocalTime.parse(\"06:30\").isBefore(LocalTime.parse(\"07:30\"));\r\n```","```\r\nLocalTime maxTime = LocalTime.MAX\r\n```","```\r\nLocalDateTime.now();\r\n```","```\r\nLocalDateTime.of(2015, Month.FEBRUARY, 20, 06, 30);\r\n```","```\r\nLocalDateTime.parse(\"2015-02-20T06:30:00\");\r\n```","```\r\nlocalDateTime.plusDays(1);\r\n```","```\r\nlocalDateTime.minusHours(2);\r\n```","```\r\nlocalDateTime.getMonth();\r\n```","```\r\nZoneId zoneId = ZoneId.of(\"Europe/Paris\"); \r\n```","```\r\nSet<String> allZoneIds = ZoneId.getAvailableZoneIds();\r\n```","```\r\nZonedDateTime zonedDateTime = ZonedDateTime.of(localDateTime, zoneId);\r\n```","```\r\nZonedDateTime.parse(\"2015-05-03T10:15:30+01:00[Europe/Paris]\");\r\n```","```\r\nLocalDateTime localDateTime = LocalDateTime.of(2015, Month.FEBRUARY, 20, 06, 30);\r\n```","```\r\nZoneOffset offset = ZoneOffset.of(\"+02:00\");\r\n\r\nOffsetDateTime offSetByTwo = OffsetDateTime\r\n  .of(localDateTime, offset);\r\n```","```\r\nLocalDate initialDate = LocalDate.parse(\"2007-05-10\");\r\n```","```\r\nLocalDate finalDate = initialDate.plus(Period.ofDays(5));\r\n```","```\r\nint five = Period.between(initialDate, finalDate).getDays();\r\n```","```\r\nlong five = ChronoUnit.DAYS.between(initialDate, finalDate);\r\n```","```\r\nLocalTime initialTime = LocalTime.of(6, 30, 0);\r\n\r\nLocalTime finalTime = initialTime.plus(Duration.ofSeconds(30));\r\n```","```\r\nlong thirty = Duration.between(initialTime, finalTime).getSeconds();\r\n```","```\r\nlong thirty = ChronoUnit.SECONDS.between(initialTime, finalTime);\r\n```","```\r\nLocalDateTime.ofInstant(date.toInstant(), ZoneId.systemDefault());\r\nLocalDateTime.ofInstant(calendar.toInstant(), ZoneId.systemDefault());\r\n```","```\r\nLocalDateTime.ofEpochSecond(1465817690, 0, ZoneOffset.UTC);\r\n```","```\r\nLocalDateTime localDateTime = LocalDateTime.of(2015, Month.JANUARY, 25, 6, 30);\r\n```","```\r\nString localDateString = localDateTime.format(DateTimeFormatter.ISO_DATE);\r\n```","```\r\nlocalDateTime.format(DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"));\r\n```","```\r\nlocalDateTime\r\n  .format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM)\r\n  .withLocale(Locale.UK));\r\n```","```\r\n<dependency>\r\n    <groupId>org.threeten</groupId>\r\n    <artifactId>threetenbp</artifactId>\r\n    <version>1.3.1</version>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>joda-time</groupId>\r\n    <artifactId>joda-time</artifactId>\r\n    <version>2.9.4</version>\r\n</dependency> \r\n```"]