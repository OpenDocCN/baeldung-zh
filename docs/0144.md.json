["```\r\npublic interface CalculatorMBean {\r\n\r\n    Integer sum();\r\n\r\n    Integer getA();\r\n\r\n    void setA(Integer a);\r\n\r\n    Integer getB();\r\n\r\n    void setB(Integer b);\r\n}\r\n```","```\r\npublic class Calculator implements CalculatorMBean {\r\n\r\n    private Integer a = 0;\r\n    private Integer b = 0;\r\n\r\n    // getters and setters\r\n\r\n    @Override\r\n    public Integer sum() {\r\n        return a + b;\r\n    }\r\n}\r\n```","```\r\npublic class JmxCalculatorMain {\r\n\r\n    public static void main(String[] args) throws Exception {\r\n        MBeanServer server = ManagementFactory.getPlatformMBeanServer();\r\n        server.registerMBean(\r\n          new Calculator(), new ObjectName(\"com.baeldung.jxmshell:type=basic,name=calculator\")\r\n        );\r\n\r\n        // ...\r\n    }\r\n} \r\n```","```\r\ntry (Scanner scanner = new Scanner(System.in)) {\r\n    System.out.println(\"<press enter to terminate>\");\r\n    scanner.nextLine();\r\n}\r\n```","```\r\n-Dcom.sun.management.jmxremote.port=11234\r\n-Dcom.sun.management.jmxremote.authenticate=false\r\n-Dcom.sun.management.jmxremote.ssl=false\r\n```","```\r\n#!/bin/sh\r\n\r\njar='/tmp/jmxterm-1.0.4-uber.jar'\r\naddress='localhost:11234'\r\n\r\nmbean='com.baeldung.jxmshell:name=calculator,type=basic'\r\noperation='sum'\r\ncommand=\"info -b $mbean\"\r\n```","```\r\nwhile test $# -gt 0\r\ndo\r\n    case \"$1\" in\r\n    --run)\r\n        shift; operation=$1\r\n        command=\"run -b ${mbean} ${operation}\"\r\n    ;;\r\n    --set)\r\n        shift; operation=\"$1\"\r\n        shift; attribute_value=\"$1\"\r\n\r\n        command=\"set -b ${mbean} ${operation} ${attribute_value}\"\r\n    ;;\r\n    --get)\r\n        shift; operation=\"$1\"\r\n\r\n        command=\"get -b ${mbean} ${operation}\"\r\n    ;;\r\n    esac\r\n    shift\r\ndone\r\n```","```\r\necho $command | java -jar $jar -l $address -n -v silent \r\n```","```\r\n./jmxterm.sh\r\n```","```\r\n# attributes\r\n  %0   - A (java.lang.Integer, rw)\r\n  %1   - B (java.lang.Integer, rw)\r\n# operations\r\n  %0   - java.lang.Integer sum()\r\n```","```\r\n./jmxterm.sh --set A 1\r\n```","```\r\n./jmxterm.sh --get A\r\n```","```\r\nA = 1;\r\n```","```\r\n./jmxter.sh --set B 2\r\n./jmxter.sh --run sum\r\n```","```\r\n3\r\n```","```\r\njar=cmdline-jmxclient-0.10.3.jar\r\naddress=localhost:11234\r\nmbean=com.baeldung.jxmshell:name=calculator,type=basic\r\njava -jar $jar - $address $mbean A=1\r\njava -jar $jar - $address $mbean B=1\r\njava -jar $jar - $address $mbean sum\r\n```","```\r\n11/11/2022 22:10:15 -0300 org.archive.jmx.Client sum: 2\r\n```","```\r\npublic class JmxConnectionWrapper {\r\n\r\n    private final Map<String, MBeanAttributeInfo> attributeMap;\r\n    private final MBeanServerConnection connection;\r\n    private final ObjectName objectName;\r\n\r\n    public JmxConnectionWrapper(String url, String beanName) throws Exception {\r\n        objectName = new ObjectName(beanName);\r\n\r\n        connection = JMXConnectorFactory.connect(new JMXServiceURL(url))\r\n          .getMBeanServerConnection();\r\n\r\n        MBeanInfo bean = connection.getMBeanInfo(objectName);\r\n        MBeanAttributeInfo[] attributes = bean.getAttributes();\r\n\r\n        attributeMap = Stream.of(attributes)\r\n          .collect(Collectors.toMap(MBeanAttributeInfo::getName, Function.identity()));\r\n    }\r\n\r\n    // ...\r\n}\r\n```","```\r\npublic Object attributeValue(String name, String value) throws Exception {\r\n    if (value != null)\r\n        connection.setAttribute(objectName, new Attribute(name, Integer.valueOf(value)));\r\n\r\n    return connection.getAttribute(objectName, name);\r\n}\r\n```","```\r\npublic Object invoke(String operation) throws Exception {\r\n    Object[] params = new Object[] {};\r\n    String[] signature = new String[] {};\r\n    return connection.invoke(objectName, operation, params, signature);\r\n}\r\n```","```\r\npublic class JmxInvoker {\r\n\r\n    public static void main(String... args) throws Exception {\r\n        String attributeValue = null;\r\n        if (args.length > 3) {\r\n            attributeValue = args[3];\r\n        }\r\n\r\n        String result = execute(args[0], args[1], args[2], attributeValue);\r\n        System.out.println(result);\r\n    }\r\n\r\n    public static String execute(\r\n      String url, String mBeanName, String operation, String attributeValue) {\r\n        JmxConnectionWrapper connection = new JmxConnectionWrapper(url, mBeanName);\r\n\r\n        // ...\r\n    }\r\n}\r\n```","```\r\nif (connection.hasAttribute(operation)) {\r\n    Object value = connection.attributeValue(operation, attributeValue);\r\n    return operation + \"=\" + value;\r\n} else {\r\n    Object result = connection.invoke(operation);\r\n    return operation + \"(): \" + result;\r\n}\r\n```","```\r\njar=/tmp/jmx-invoker.jar\r\naddress='service:jmx:rmi:///jndi/rmi://localhost:11234/jmxrmi'\r\ninvoker='com.baeldung.jmxshell.custom.JmxInvoker'\r\nmbean='com.baeldung.jxmshell:name=calculator,type=basic' \r\n```","```\r\n$ java -cp $jar $invoker $address $mbean A 1\r\nA=1\r\n\r\n$ java -cp $jar $invoker $address $mbean B 1\r\nB=1\r\n$ java -cp $jar $invoker $address $mbean sum\r\nsum(): 2\r\n```"]