["```\r\n@Test\r\nvoid whenUsingPlusOperatorANull_thenAssertEquals() {\r\n    String stringOne = \"Hello \";\r\n    String stringTwo = null;\r\n    assertEquals(\"Hello null\", stringOne + stringTwo);\r\n}\r\n```","```\r\n@Test\r\nvoid whenUsingConcat_thenAssertEquals() {\r\n    String stringOne = \"Hello\";\r\n    String stringTwo = \" World\";\r\n    assertEquals(\"Hello World\", stringOne.concat(stringTwo));\r\n}\r\n```","```\r\n@Test\r\nvoid whenUsingConcatWithOutAssignment_thenAssertNotEquals() {\r\n    String stringOne = \"Hello\";\r\n    String stringTwo = \" World\";\r\n    stringOne.concat(stringTwo);\r\n    assertNotEquals(\"Hello World\", stringOne); // we get only Hello\r\n}\r\n```","```\r\nstringOne = stringOne.concat(stringTwo);\r\nassertEquals(\"Hello World\", stringOne);\r\n```","```\r\n@Test\r\nvoid whenUsingConcatToMultipleStringConcatenation_thenAssertEquals() {\r\n    String stringOne = \"Hello\";\r\n    String stringTwo = \"World\";\r\n    String stringThree = \", in Jav\";\r\n    stringOne = stringOne.concat(\" \").concat(stringTwo).concat(stringThree).concat(\"@\");\r\n    assertEquals(\"Hello World, in [[emailÂ protected]](/web/20221118160122/https://www.baeldung.com/cdn-cgi/l/email-protection)\", stringOne);\r\n}\r\n```","```\r\n@Test\r\nvoid whenUsingConcatAppendANull_thenAssertEquals() {\r\n    String stringOne = \"Hello\";\r\n    String stringTwo = null;\r\n    assertThrows(NullPointerException.class, () -> stringOne.concat(stringTwo));\r\n}\r\n```","```\r\n@Test\r\nvoid whenUsingStringBuilder_thenAssertEquals() {\r\n    StringBuilder builderOne = new StringBuilder(\"Hello\");\r\n    StringBuilder builderTwo = new StringBuilder(\" World\");\r\n    StringBuilder builder = builderOne.append(builderTwo);\r\n    assertEquals(\"Hello World\", builder.toString());\r\n}\r\n```","```\r\n@Test\r\nvoid whenUsingStringFormat_thenAssertEquals() {\r\n    String stringOne = \"Hello\";\r\n    String stringTwo = \" World\";\r\n    assertEquals(\"Hello World\", String.format(\"%s%s\", stringOne, stringTwo));\r\n}\r\n```","```\r\n@Test\r\nvoid whenUsingStringJoin_thenAssertEquals() {\r\n    String stringOne = \"Hello\";\r\n    String stringTwo = \" World\";\r\n    assertEquals(\"Hello World\", String.join(\"\", stringOne, stringTwo));\r\n}\r\n```","```\r\n@Test\r\nvoid whenUsingStringJoiner_thenAssertEquals() {\r\n    StringJoiner joiner = new StringJoiner(\", \");\r\n    joiner.add(\"Hello\");\r\n    joiner.add(\"World\");\r\n    assertEquals(\"Hello, World\", joiner.toString());\r\n}\r\n```","```\r\n@Test\r\nvoid whenUsingCollectors_thenAssertEquals() {\r\n    List<String> words = Arrays.asList(\"Hello\", \"World\");\r\n    String collect = words.stream().collect(Collectors.joining(\", \"));\r\n    assertEquals(\"Hello, World\", collect);\r\n}\r\n```"]