["```\r\n<dependency>\r\n  <groupId>io.reactivex</groupId>\r\n  <artifactId>rxjava-string</artifactId>\r\n  <version>1.1.1</version>\r\n</dependency>\r\n```","```\r\nTestSubscriber testSubscriber = new TestSubscriber();\r\nByteArrayInputStream is = new ByteArrayInputStream(\"Lorem ipsum loream, Lorem ipsum lore\".getBytes());\r\nObservable<byte[]> observableByteStream = StringObservable.from(is);\r\n\r\n// emits 8 byte array items\r\nobservableByteStream.subscribe(testSubscriber);\r\n```","```\r\nTestSubscriber testSubscriber = new TestSubscriber();\r\nByteArrayInputStream is = new ByteArrayInputStream(\r\n  \"Lorem ipsum loream, Lorem ipsum lore\".getBytes());\r\nObservable<byte[]> byteArrayObservable = StringObservable.from(is);\r\nObservable<String> stringObservable = StringObservable\r\n  .decode(byteArrayObservable, StandardCharsets.UTF_8);\r\n\r\n// emits UTF-8 decoded strings,\"Lorem ipsum loream, Lorem ipsum lore\"\r\nstringObservable.subscribe(testSubscriber);\r\n```","```\r\nTestSubscriber testSubscriber = new TestSubscriber();\r\nObservable<String> sourceObservable = Observable.just(\"Lorem ipsum loream,Lorem ipsum \", \"lore\");\r\nObservable<String> splittedObservable = StringObservable.split(sourceObservable, \",\");\r\n\r\n// emits 2 strings \"Lorem ipsum loream\", \"Lorem ipsum lore\"\r\nsplittedObservable.subscribe(testSubscriber);\r\n```","```\r\nTestSubscriber testSubscriber = new TestSubscriber();\r\nObservable<String> sourceObservable = Observable.just(\"Lorem ipsum loream\", \"Lorem ipsum lore\");\r\nObservable<String> joinedObservable = StringObservable.join(sourceObservable, \",\");\r\n\r\n// emits single string \"Lorem ipsum loream,Lorem ipsum lore\"\r\njoinedObservable.subscribe(testSubscriber);\r\n```"]