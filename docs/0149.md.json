["```\r\n@Test\r\npublic void givenTwoString_thenInterpolateWithPlusSign() {\r\n    String EXPECTED_STRING = \"String Interpolation in Java with some Java examples.\";\r\n    String first = \"Interpolation\";\r\n    String second = \"Java\";\r\n    String result = \"String \" + first + \" in \" + second + \" with some \" + second + \" examples.\";\r\n    assertEquals(EXPECTED_STRING, result);\r\n}\r\n```","```\r\n@Test\r\npublic void givenTwoString_thenInterpolateWithFormat() {\r\n    String EXPECTED_STRING = \"String Interpolation in Java with some Java examples.\";\r\n    String first = \"Interpolation\";\r\n    String second = \"Java\";\r\n    String result = String.format(\"String %s in %s with some %s examples.\", first, second, second);\r\n    assertEquals(EXPECTED_STRING, result);\r\n}\r\n```","```\r\n@Test\r\npublic void givenTwoString_thenInterpolateWithFormatStringReference() {\r\n    String EXPECTED_STRING = \"String Interpolation in Java with some Java examples.\";\r\n    String first = \"Interpolation\";\r\n    String second = \"Java\";\r\n    String result = String.format(\"String %1$s in %2$s with some %2$s examples.\", first, second);\r\n    assertEquals(EXPECTED_STRING, result);\r\n}\r\n```","```\r\n@Test\r\npublic void givenTwoString_thenInterpolateWithStringBuilder() {\r\n    String EXPECTED_STRING = \"String Interpolation in Java with some Java examples.\";\r\n    String first = \"Interpolation\";\r\n    String second = \"Java\";\r\n    StringBuilder builder = new StringBuilder();\r\n    builder.append(\"String \")\r\n      .append(first)\r\n      .append(\" in \")\r\n      .append(second)\r\n      .append(\" with some \")\r\n      .append(second)\r\n      .append(\" examples.\");\r\n    String result = builder.toString();\r\n    assertEquals(EXPECTED_STRING, result);\r\n}\r\n```","```\r\n@Test\r\npublic void givenTwoString_thenInterpolateWithMessageFormat() {\r\n    String EXPECTED_STRING = \"String Interpolation in Java with some Java examples.\";\r\n    String first = \"Interpolation\";\r\n    String second = \"Java\";\r\n    String result = MessageFormat.format(\"String {0} in {1} with some {1} examples.\", first, second);\r\n    assertEquals(EXPECTED_STRING, result);\r\n}\r\n```","```\r\n@Test\r\npublic void givenTwoString_thenInterpolateWithStringSubstitutor() {\r\n    String EXPECTED_STRING = \"String Interpolation in Java with some Java examples.\";\r\n    String baseString = \"String ${first} in ${second} with some ${second} examples.\";\r\n    String first = \"Interpolation\";\r\n    String second = \"Java\";\r\n    Map<String, String> parameters = new HashMap<>();\r\n    parameters.put(\"first\", first);\r\n    parameters.put(\"second\", second);\r\n    StringSubstitutor substitutor = new StringSubstitutor(parameters);\r\n    String result = substitutor.replace(baseString);\r\n    assertEquals(EXPECTED_STRING, result);\r\n}\r\n```"]