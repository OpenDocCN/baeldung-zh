["```\r\nnotAllEqualList = Arrays.asList(\"Jack\", \"James\", \"Sam\", \"James\");\r\nemptyList = Arrays.asList();\r\nallEqualList = Arrays.asList(\"Jack\", \"Jack\", \"Jack\", \"Jack\");\r\n```","```\r\npublic boolean verifyAllEqualUsingALoop(List<String> list) {\r\n    for (String s : list) {\r\n        if (!s.equals(list.get(0)))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n```","```\r\npublic boolean verifyAllEqualUsingHashSet(List<String> list) {\r\n    return new HashSet<String>(list).size() <= 1;\r\n}\r\n```","```\r\npublic boolean verifyAllEqualUsingFrequency(List<String> list) {\r\n    return list.isEmpty() || Collections.frequency(list, list.get(0)) == list.size();\r\n}\r\n```","```\r\npublic boolean verifyAllEqualUsingStream(List<String> list) {\r\n    return list.stream()\r\n      .distinct()\r\n      .count() <= 1;\r\n}\r\n```","```\r\npublic boolean verifyAllEqualAnotherUsingStream(List<String> list) {\r\n    return list.isEmpty() || list.stream()\r\n      .allMatch(list.get(0)::equals);\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>com.google.guava</groupId>\r\n    <artifactId>guava</artifactId>\r\n    <version>31.0.1-jre</version>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>org.apache.commons</groupId>\r\n    <artifactId>commons-collections4</artifactId>\r\n    <version>4.1</version>\r\n</dependency>\r\n```","```\r\npublic boolean verifyAllEqualUsingGuava(List<String> list) {\r\n    return Iterables.all(list, new Predicate<String>() {\r\n        public boolean apply(String s) {\r\n            return s.equals(list.get(0));\r\n        }\r\n    });\r\n}\r\n```","```\r\npublic boolean verifyAllEqualUsingApacheCommon(List<String> list) {\r\n    return IterableUtils.matchesAll(list, new org.apache.commons.collections4.Predicate<String>() {\r\n        public boolean evaluate(String s) {\r\n            return s.equals(list.get(0));\r\n        }\r\n    });\r\n} \r\n```"]