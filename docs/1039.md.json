["```\r\n{bcrypt}$2b$12$FaLabMRystU4MLAasNOKb.HUElBAabuQdX59RWHq5X.9Ghm692NEi\r\n```","```\r\n@Bean\r\npublic PasswordEncoder delegatingPasswordEncoder() {\r\n    PasswordEncoder defaultEncoder = new StandardPasswordEncoder();\r\n    Map<String, PasswordEncoder> encoders = new HashMap<>();\r\n    encoders.put(\"bcrypt\", new BCryptPasswordEncoder());\r\n    encoders.put(\"scrypt\", new SCryptPasswordEncoder());\r\n\r\n    DelegatingPasswordEncoder passworEncoder = new DelegatingPasswordEncoder(\r\n      \"bcrypt\", encoders);\r\n    passworEncoder.setDefaultPasswordEncoderForMatches(defaultEncoder);\r\n\r\n    return passworEncoder;\r\n}\r\n```","```\r\n@Bean\r\npublic ApplicationListener<AuthenticationSuccessEvent>\r\n  authenticationSuccessListener( PasswordEncoder encoder) {\r\n    return (AuthenticationSuccessEvent event) -> {\r\n        Authentication auth = event.getAuthentication();\r\n\r\n        if (auth instanceof UsernamePasswordAuthenticationToken\r\n          && auth.getCredentials() != null) {\r\n\r\n            CharSequence clearTextPass = (CharSequence) auth.getCredentials();\r\n            String newPasswordHash = encoder.encode(clearTextPass);\r\n\r\n            // [...] Update user's password\r\n\r\n            ((UsernamePasswordAuthenticationToken) auth).eraseCredentials();\r\n        }\r\n    };\r\n}\r\n```","```\r\n@Configuration\r\npublic class PasswordStorageWebSecurityConfigurer {\r\n\r\n    @Bean\r\n    public AuthenticationManager authManager(HttpSecurity http) throws Exception {\r\n        AuthenticationManagerBuilder authenticationManagerBuilder = \r\n            http.getSharedObject(AuthenticationManagerBuilder.class);\r\n        authenticationManagerBuilder.eraseCredentials(false)\r\n            .userDetailsService(getUserDefaultDetailsService())\r\n            .passwordEncoder(passwordEncoder());\r\n        return authenticationManagerBuilder.build();\r\n    }\r\n\r\n   // ...\r\n}\r\n```"]