["```\r\n<dependency>\r\n    <groupId>org.springframework.cloud</groupId>\r\n    <artifactId>spring-cloud-starter-openfeign</artifactId>\r\n</dependency>\r\n```","```\r\n <dependencyManagement>\r\n     <dependencies>\r\n         <dependency>\r\n            <groupId>org.springframework.cloud</groupId>\r\n            <artifactId>spring-cloud-dependencies</artifactId>\r\n            <version>${spring-cloud.version}</version>\r\n            <type>pom</type>\r\n            <scope>import</scope>\r\n        </dependency>\r\n    </dependencies>\r\n</dependencyManagement>\r\n```","```\r\n@SpringBootApplication\r\n@EnableFeignClients\r\npublic class ExampleApplication {\r\n\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(ExampleApplication.class, args);\r\n    }\r\n}\r\n```","```\r\n@FeignClient(value = \"jplaceholder\", url = \"https://jsonplaceholder.typicode.com/\")\r\npublic interface JSONPlaceHolderClient {\r\n\r\n    @RequestMapping(method = RequestMethod.GET, value = \"/posts\")\r\n    List<Post> getPosts();\r\n\r\n    @RequestMapping(method = RequestMethod.GET, value = \"/posts/{postId}\", produces = \"application/json\")\r\n    Post getPostById(@PathVariable(\"postId\") Long postId);\r\n}\r\n```","```\r\n@FeignClient(value = \"jplaceholder\",\r\n  url = \"https://jsonplaceholder.typicode.com/\",\r\n  configuration = MyClientConfiguration.class)\r\n```","```\r\n@Configuration\r\npublic class MyClientConfiguration {\r\n\r\n    @Bean\r\n    public OkHttpClient client() {\r\n        return new OkHttpClient();\r\n    }\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>io.github.openfeign</groupId>\r\n    <artifactId>feign-okhttp</artifactId>\r\n</dependency>\r\n\r\n<dependency>\r\n    <groupId>io.github.openfeign</groupId>\r\n    <artifactId>feign-httpclient</artifactId>\r\n</dependency>\r\n```","```\r\nfeign:\r\n  client:\r\n    config:\r\n      default:\r\n        connectTimeout: 5000\r\n        readTimeout: 5000\r\n        loggerLevel: basic\r\n```","```\r\nfeign:\r\n  client:\r\n    config:\r\n      jplaceholder:\r\n```","```\r\n@Bean\r\npublic RequestInterceptor requestInterceptor() {\r\n  return requestTemplate -> {\r\n      requestTemplate.header(\"user\", username);\r\n      requestTemplate.header(\"password\", password);\r\n      requestTemplate.header(\"Accept\", ContentType.APPLICATION_JSON.getMimeType());\r\n  };\r\n}\r\n```","```\r\nfeign:\r\n  client:\r\n    config:\r\n      default:\r\n        requestInterceptors:\r\n          com.baeldung.cloud.openfeign.JSONPlaceHolderInterceptor\r\n```","```\r\n@Bean\r\npublic BasicAuthRequestInterceptor basicAuthRequestInterceptor() {\r\n    return new BasicAuthRequestInterceptor(\"username\", \"password\");\r\n}\r\n```","```\r\n@Component\r\npublic class JSONPlaceHolderFallback implements JSONPlaceHolderClient {\r\n\r\n    @Override\r\n    public List<Post> getPosts() {\r\n        return Collections.emptyList();\r\n    }\r\n\r\n    @Override\r\n    public Post getPostById(Long postId) {\r\n        return null;\r\n    }\r\n}\r\n```","```\r\n@FeignClient(value = \"jplaceholder\",\r\n  url = \"https://jsonplaceholder.typicode.com/\",\r\n  fallback = JSONPlaceHolderFallback.class)\r\npublic interface JSONPlaceHolderClient {\r\n    // APIs\r\n}\r\n```","```\r\nlogging.level.com.baeldung.cloud.openfeign.client: DEBUG\r\n```","```\r\nlogging.level.com.baeldung.cloud.openfeign.client.JSONPlaceHolderClient: DEBUG\r\n```","```\r\n@Configuration\r\npublic class ClientConfiguration {\r\n\r\n    @Bean\r\n    Logger.Level feignLoggerLevel() {\r\n        return Logger.Level.BASIC;\r\n    }\r\n}\r\n```","```\r\npublic class CustomErrorDecoder implements ErrorDecoder {\r\n    @Override\r\n    public Exception decode(String methodKey, Response response) {\r\n\r\n        switch (response.status()){\r\n            case 400:\r\n                return new BadRequestException();\r\n            case 404:\r\n                return new NotFoundException();\r\n            default:\r\n                return new Exception(\"Generic error\");\r\n        }\r\n    }\r\n}\r\n```","```\r\n@Configuration\r\npublic class ClientConfiguration {\r\n\r\n    @Bean\r\n    public ErrorDecoder errorDecoder() {\r\n        return new CustomErrorDecoder();\r\n    }\r\n}\r\n```"]