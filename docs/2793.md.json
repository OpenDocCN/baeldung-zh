["```\r\nSemaphore binarySemaphore = new Semaphore(1);\r\ntry {\r\n    binarySemaphore.acquire();\r\n    assertEquals(0, binarySemaphore.availablePermits());\r\n} catch (InterruptedException e) {\r\n    e.printStackTrace();\r\n} finally {\r\n    binarySemaphore.release();\r\n    assertEquals(1, binarySemaphore.availablePermits());\r\n}\r\n```","```\r\nSemaphore binarySemaphore = new Semaphore(1, true);\r\n```","```\r\nReentrantLock reentrantLock = new ReentrantLock();\r\ntry {\r\n    reentrantLock.lock();\r\n    assertEquals(1, reentrantLock.getHoldCount());\r\n    assertEquals(true, reentrantLock.isLocked());\r\n} finally {\r\n    reentrantLock.unlock();\r\n    assertEquals(0, reentrantLock.getHoldCount());\r\n    assertEquals(false, reentrantLock.isLocked());\r\n}\r\n```","```\r\nreentrantLock.lock();\r\nreentrantLock.lock();\r\nassertEquals(2, reentrantLock.getHoldCount());\r\nassertEquals(true, reentrantLock.isLocked());\r\n\r\nreentrantLock.unlock();\r\nassertEquals(1, reentrantLock.getHoldCount());\r\nassertEquals(true, reentrantLock.isLocked());\r\n\r\nreentrantLock.unlock();\r\nassertEquals(0, reentrantLock.getHoldCount());\r\nassertEquals(false, reentrantLock.isLocked());\r\n```","```\r\nReentrantLock reentrantLock = new ReentrantLock(true);\r\n```"]