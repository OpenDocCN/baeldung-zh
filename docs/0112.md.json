["```\r\n@RestController\r\npublic class WelcomeController {\r\n\r\n    @GetMapping(value = \"/welcome\")\r\n    public String welcome() {\r\n       return \"Welcome To Secured REST Service\";\r\n    }\r\n} \r\n```","```\r\nserver.port=8443\r\nserver.servlet.context-path=/\r\n# The format used for the keystore\r\nserver.ssl.key-store-type=PKCS12\r\n# The path to the keystore containing the certificate\r\nserver.ssl.key-store=classpath:keystore/baeldung.p12\r\n# The password used to generate the certificate\r\nserver.ssl.key-store-password=password\r\n# The alias mapped to the certificate\r\nserver.ssl.key-alias=baeldung\r\n```","```\r\n@RestController\r\npublic class RestTemplateClientController {\r\n    private static final String WELCOME_URL = \"https://localhost:8443/welcome\";\r\n\r\n    @Autowired\r\n    private RestTemplate restTemplate;\r\n\r\n    @GetMapping(\"/welcomeclient\")\r\n    public String greetMessage() {\r\n        String response = restTemplate.getForObject(WELCOME_URL, String.class);\r\n        return response;\r\n    }\r\n}\r\n```","```\r\n`javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: \r\nsun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested \r\ntarget at sun.security.ssl.Alerts.getSSLException(Alerts.java:192)`\r\n```","```\r\nserver.port=8082\r\n#trust store location\r\ntrust.store=classpath:keystore/baeldung.p12\r\n#trust store password\r\ntrust.store.password=password \r\n```","```\r\n@Configuration\r\npublic class CustomRestTemplateConfiguration {\r\n\r\n    @Value(\"${trust.store}\")\r\n    private Resource trustStore;\r\n\r\n    @Value(\"${trust.store.password}\")\r\n    private String trustStorePassword;\r\n\r\n    @Bean\r\n    public RestTemplate restTemplate() throws KeyManagementException, NoSuchAlgorithmException, KeyStoreException,\r\n      CertificateException, MalformedURLException, IOException {\r\n\r\n        SSLContext sslContext = new SSLContextBuilder()\r\n          .loadTrustMaterial(trustStore.getURL(), trustStorePassword.toCharArray()).build();\r\n        SSLConnectionSocketFactory sslConFactory = new SSLConnectionSocketFactory(sslContext);\r\n\r\n        CloseableHttpClient httpClient = HttpClients.custom().setSSLSocketFactory(sslConFactory).build();\r\n        ClientHttpRequestFactory requestFactory = new HttpComponentsClientHttpRequestFactory(httpClient);\r\n        return new RestTemplate(requestFactory);\r\n    }\r\n}\r\n```"]