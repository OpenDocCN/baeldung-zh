["```\r\npublic void printClassLoaders() throws ClassNotFoundException {\r\n\r\n    System.out.println(\"Classloader of this class:\"\r\n        + PrintClassLoader.class.getClassLoader());\r\n\r\n    System.out.println(\"Classloader of Logging:\"\r\n        + Logging.class.getClassLoader());\r\n\r\n    System.out.println(\"Classloader of ArrayList:\"\r\n        + ArrayList.class.getClassLoader());\r\n}\r\n```","```\r\nClass loader of this class:[[email protected]](/web/20221103080026/https://www.baeldung.com/cdn-cgi/l/email-protection)\r\nClass loader of Logging:[[email protected]](/web/20221103080026/https://www.baeldung.com/cdn-cgi/l/email-protection)\r\nClass loader of ArrayList:null\r\n```","```\r\njava.lang.ClassNotFoundException: com.baeldung.classloader.SampleClassLoader    \r\n    at java.net.URLClassLoader.findClass(URLClassLoader.java:381)    \r\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:424)    \r\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:357)    \r\n    at java.lang.Class.forName0(Native Method)    \r\n    at java.lang.Class.forName(Class.java:348)\r\n```","```\r\npublic class CustomClassLoader extends ClassLoader {\r\n\r\n    @Override\r\n    public Class findClass(String name) throws ClassNotFoundException {\r\n        byte[] b = loadClassFromFile(name);\r\n        return defineClass(name, b, 0, b.length);\r\n    }\r\n\r\n    private byte[] loadClassFromFile(String fileName)  {\r\n        InputStream inputStream = getClass().getClassLoader().getResourceAsStream(\r\n                fileName.replace('.', File.separatorChar) + \".class\");\r\n        byte[] buffer;\r\n        ByteArrayOutputStream byteStream = new ByteArrayOutputStream();\r\n        int nextValue = 0;\r\n        try {\r\n            while ( (nextValue = inputStream.read()) != -1 ) {\r\n                byteStream.write(nextValue);\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        buffer = byteStream.toByteArray();\r\n        return buffer;\r\n    }\r\n}\r\n```","```\r\npublic Class<?> loadClass(String name, boolean resolve) throws ClassNotFoundException {\r\n```","```\r\nprotected Class<?> loadClass(String name, boolean resolve)\r\n  throws ClassNotFoundException {\r\n\r\n    synchronized (getClassLoadingLock(name)) {\r\n        // First, check if the class has already been loaded\r\n        Class<?> c = findLoadedClass(name);\r\n        if (c == null) {\r\n            long t0 = System.nanoTime();\r\n                try {\r\n                    if (parent != null) {\r\n                        c = parent.loadClass(name, false);\r\n                    } else {\r\n                        c = findBootstrapClassOrNull(name);\r\n                    }\r\n                } catch (ClassNotFoundException e) {\r\n                    // ClassNotFoundException thrown if class not found\r\n                    // from the non-null parent class loader\r\n                }\r\n\r\n                if (c == null) {\r\n                    // If still not found, then invoke findClass in order\r\n                    // to find the class.\r\n                    c = findClass(name);\r\n                }\r\n            }\r\n            if (resolve) {\r\n                resolveClass(c);\r\n            }\r\n            return c;\r\n        }\r\n    }\r\n```","```\r\nprotected final Class<?> defineClass(\r\n  String name, byte[] b, int off, int len) throws ClassFormatError\r\n```","```\r\nprotected Class<?> findClass(\r\n  String name) throws ClassNotFoundException\r\n```","```\r\npublic final ClassLoader getParent()\r\n```","```\r\npublic URL getResource(String name)\r\n```"]