["```\r\n<dependency>\r\n  <groupId>org.springframework.boot</groupId>\r\n  <artifactId>spring-boot-starter-actuator</artifactId>\r\n</dependency>\r\n```","```\r\nmanagement.endpoints.web.exposure.include=httptrace\r\n```","```\r\n{\r\n  \"_links\": {\r\n    \"self\": {\r\n      \"href\": \"http://localhost:8080/actuator\",\r\n      \"templated\": false\r\n    },\r\n    \"httptrace\": {\r\n      \"href\": \"http://localhost:8080/actuator/httptrace\",\r\n      \"templated\": false\r\n    }\r\n  }\r\n}\r\n```","```\r\n{\r\n  \"traces\": [\r\n    {\r\n      \"timestamp\": \"2019-08-05T19:28:36.353Z\",\r\n      \"principal\": null,\r\n      \"session\": null,\r\n      \"request\": {\r\n        \"method\": \"GET\",\r\n        \"uri\": \"http://localhost:8080/echo?msg=test\",\r\n        \"headers\": {\r\n          \"accept-language\": [\r\n            \"en-GB,en-US;q=0.9,en;q=0.8\"\r\n          ],\r\n          \"upgrade-insecure-requests\": [\r\n            \"1\"\r\n          ],\r\n          \"host\": [\r\n            \"localhost:8080\"\r\n          ],\r\n          \"connection\": [\r\n            \"keep-alive\"\r\n          ],\r\n          \"accept-encoding\": [\r\n            \"gzip, deflate, br\"\r\n          ],\r\n          \"accept\": [\r\n            \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\"\r\n          ],\r\n          \"user-agent\": [\r\n            \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36 OPR/62.0.3331.66\"\r\n          ]\r\n        },\r\n        \"remoteAddress\": null\r\n      },\r\n      \"response\": {\r\n        \"status\": 200,\r\n        \"headers\": {\r\n          \"Content-Length\": [\r\n            \"12\"\r\n          ],\r\n          \"Date\": [\r\n            \"Mon, 05 Aug 2019 19:28:36 GMT\"\r\n          ],\r\n          \"Content-Type\": [\r\n            \"text/html;charset=UTF-8\"\r\n          ]\r\n        }\r\n      },\r\n      \"timeTaken\": 82\r\n    }\r\n  ]\r\n}\r\n```","```\r\nmanagement.trace.http.include=RESPONSE_HEADERS\r\n```","```\r\n{\r\n  \"traces\": [\r\n    {\r\n      \"timestamp\": \"2019-08-05T20:23:01.397Z\",\r\n      \"principal\": null,\r\n      \"session\": null,\r\n      \"request\": {\r\n        \"method\": \"GET\",\r\n        \"uri\": \"http://localhost:8080/echo?msg=test\",\r\n        \"headers\": {},\r\n        \"remoteAddress\": null\r\n      },\r\n      \"response\": {\r\n        \"status\": 200,\r\n        \"headers\": {\r\n          \"Content-Length\": [\r\n            \"12\"\r\n          ],\r\n          \"Date\": [\r\n            \"Mon, 05 Aug 2019 20:23:01 GMT\"\r\n          ],\r\n          \"Content-Type\": [\r\n            \"text/html;charset=UTF-8\"\r\n          ]\r\n        }\r\n      },\r\n      \"timeTaken\": null\r\n    }\r\n  ]\r\n}\r\n```","```\r\n@Repository\r\npublic class CustomTraceRepository implements HttpTraceRepository {\r\n\r\n    AtomicReference<HttpTrace> lastTrace = new AtomicReference<>();\r\n\r\n    @Override\r\n    public List<HttpTrace> findAll() {\r\n        return Collections.singletonList(lastTrace.get());\r\n    }\r\n\r\n    @Override\r\n    public void add(HttpTrace trace) {\r\n        if (\"GET\".equals(trace.getRequest().getMethod())) {\r\n            lastTrace.set(trace);\r\n        }\r\n    }\r\n\r\n}\r\n```","```\r\n{\r\n  \"traces\": [\r\n    {\r\n      \"timestamp\": \"2019-07-28T13:56:36.998Z\",\r\n      \"principal\": null,\r\n      \"session\": null,\r\n      \"request\": {\r\n        \"method\": \"GET\",\r\n        \"uri\": \"http://localhost:8080/actuator/\",\r\n         // ...\r\n}\r\n```","```\r\n@Component\r\npublic class TraceRequestFilter extends HttpTraceFilter {\r\n\r\n  public TraceRequestFilter(HttpTraceRepository repository, HttpExchangeTracer tracer) {\r\n      super(repository, tracer);\r\n  }\r\n\r\n  @Override\r\n  protected boolean shouldNotFilter(HttpServletRequest request) throws ServletException {\r\n      return request.getServletPath().contains(\"actuator\");\r\n  }\r\n}\r\n```"]