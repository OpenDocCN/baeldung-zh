["```\r\n<dependency>\r\n    <groupId>com.orientechnologies</groupId>\r\n    <artifactId>orientdb-core</artifactId>\r\n    <version>2.2.31</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>com.orientechnologies</groupId>\r\n    <artifactId>orientdb-graphdb</artifactId>\r\n    <version>2.2.31</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>com.orientechnologies</groupId>\r\n    <artifactId>orientdb-object</artifactId>\r\n    <version>2.2.31</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>com.tinkerpop.blueprints</groupId>\r\n    <artifactId>blueprints-core</artifactId>\r\n    <version>2.6.0</version>\r\n</dependency>\r\n```","```\r\n@BeforeClass\r\npublic static void setup() {\r\n    String orientDBFolder = System.getenv(\"ORIENTDB_HOME\");\r\n    graph = new OrientGraphNoTx(\"plocal:\" + orientDBFolder + \r\n      \"/databases/BaeldungDB\", \"admin\", \"admin\");\r\n}\r\n```","```\r\n@BeforeClass\r\npublic static void init() {\r\n    graph.createVertexType(\"Article\");\r\n\r\n    OrientVertexType writerType\r\n      = graph.createVertexType(\"Writer\");\r\n    writerType.setStrictMode(true);\r\n    writerType.createProperty(\"firstName\", OType.STRING);\r\n    // ...\r\n\r\n    OrientVertexType authorType \r\n      = graph.createVertexType(\"Author\", \"Writer\");\r\n    authorType.createProperty(\"level\", OType.INTEGER).setMax(\"3\");\r\n\r\n    OrientVertexType editorType\r\n      = graph.createVertexType(\"Editor\", \"Writer\");\r\n    editorType.createProperty(\"level\", OType.INTEGER).setMin(\"3\");\r\n\r\n    Vertex vEditor = graph.addVertex(\"class:Editor\");\r\n    vEditor.setProperty(\"firstName\", \"Maxim\");\r\n    // ...\r\n\r\n    Vertex vAuthor = graph.addVertex(\"class:Author\");\r\n    vAuthor.setProperty(\"firstName\", \"Jerome\");\r\n    // ...\r\n\r\n    Vertex vArticle = graph.addVertex(\"class:Article\");\r\n    vArticle.setProperty(\"title\", \"Introduction to ...\");\r\n    // ...\r\n\r\n    graph.addEdge(null, vAuthor, vEditor, \"has\");\r\n    graph.addEdge(null, vAuthor, vArticle, \"wrote\");\r\n}\r\n```","```\r\nlong size = graph.countVertices();\r\n```","```\r\n@Test\r\npublic void givenBaeldungDB_checkWeHaveTwoWriters() {\r\n    long size = graph.countVertices(\"Writer\");\r\n\r\n    assertEquals(2, size);\r\n}\r\n```","```\r\nIterable<Vertex> writers = graph.getVerticesOfClass(\"Writer\");\r\n```","```\r\n@Test\r\npublic void givenBaeldungDB_getEditorWithLevelSeven() {\r\n    String onlyEditor = \"\";\r\n    for(Vertex v : graph.getVertices(\"Editor.level\", 7)) {\r\n        onlyEditor = v.getProperty(\"firstName\").toString();\r\n    }\r\n\r\n    assertEquals(\"Maxim\", onlyEditor);\r\n}\r\n```","```\r\n@BeforeClass\r\npublic static void setup() {\r\n    String orientDBFolder = System.getenv(\"ORIENTDB_HOME\");\r\n    db = new ODatabaseDocumentTx(\"plocal:\" \r\n      + orientDBFolder + \"/databases/BaeldungDBTwo\")\r\n      .open(\"admin\", \"admin\");\r\n}\r\n```","```\r\n@Test\r\npublic void givenDB_whenSavingDocument_thenClassIsAutoCreated() {\r\n    ODocument doc = new ODocument(\"Author\");\r\n    doc.field(\"name\", \"Paul\");\r\n    doc.save();\r\n\r\n    assertEquals(\"Author\", doc.getSchemaClass().getName());\r\n}\r\n```","```\r\nlong size = db.countClass(\"Author\");\r\n```","```\r\n@Test\r\npublic void givenDB_whenSavingAuthors_thenWeGetOnesWithLevelSeven() {\r\n    for (ODocument author : db.browseClass(\"Author\")) author.delete();\r\n\r\n    ODocument authorOne = new ODocument(\"Author\");\r\n    authorOne.field(\"firstName\", \"Leo\");\r\n    authorOne.field(\"level\", 7);\r\n    authorOne.save();\r\n\r\n    ODocument authorTwo = new ODocument(\"Author\");\r\n    authorTwo.field(\"firstName\", \"Lucien\");\r\n    authorTwo.field(\"level\", 9);\r\n    authorTwo.save();\r\n\r\n    List<ODocument> result = db.query(\r\n      new OSQLSynchQuery<ODocument>(\"select * from Author where level = 7\"));\r\n\r\n    assertEquals(1, result.size());\r\n}\r\n```","```\r\nfor (ODocument author : db.browseClass(\"Author\")) {\r\n    author.delete();\r\n}\r\n```","```\r\n@BeforeClass\r\npublic static void setup() {\r\n    String orientDBFolder = System.getenv(\"ORIENTDB_HOME\");\r\n    db = new OObjectDatabaseTx(\"plocal:\" \r\n      + orientDBFolder + \"/databases/BaeldungDBThree\")\r\n      .open(\"admin\", \"admin\");\r\n}\r\n```","```\r\ndb.getEntityManager().registerEntityClass(Author.class);\r\n```","```\r\nAuthor author = db.newInstance(Author.class);\r\nauthor.setFirstName(\"Luke\");\r\nauthor.setLastName(\"Sky\");\r\nauthor.setLevel(9);\r\ndb.save(author);\r\n```","```\r\nAuthor author = db.newInstance(Author.class, \"Luke\", \"Sky\", 9);\r\ndb.save(author);\r\n```","```\r\nfor (Author author : db.browseClass(Author.class)) {\r\n    db.delete(author);\r\n}\r\n```","```\r\nlong authorsCount = db.countClass(Author.class);\r\n```","```\r\n@Test\r\npublic void givenDB_whenSavingAuthors_thenWeGetOnesWithLevelSeven() {\r\n    for (Author author : db.browseClass(Author.class)) {\r\n        db.delete(author);\r\n    }\r\n\r\n    Author authorOne \r\n      = db.newInstance(Author.class, \"Leo\", \"Marta\", 7);\r\n    db.save(authorOne);\r\n\r\n    Author authorTwo\r\n      = db.newInstance(Author.class, \"Lucien\", \"Aurelien\", 9);\r\n    db.save(authorTwo);\r\n\r\n    List<Author> result\r\n      = db.query(new OSQLSynchQuery<Author>(\r\n      \"select * from Author where level = 7\"));\r\n\r\n    assertEquals(1, result.size());\r\n}\r\n```"]