["```\r\n<dependency>\r\n    <groupId>com.squareup.moshi</groupId>\r\n    <artifactId>moshi</artifactId>\r\n    <version>1.9.2</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>com.squareup.moshi</groupId>\r\n    <artifactId>moshi-adapters</artifactId>\r\n    <version>1.9.2</version>\r\n</dependency>\r\n```","```\r\npublic class Post {\r\n    private String title;\r\n    private String author;\r\n    private String text;\r\n    // constructor, getters and setters\r\n}\r\n\r\nMoshi moshi = new Moshi.Builder().build();\r\nJsonAdapter<Post> jsonAdapter = moshi.adapter(Post.class);\r\n```","```\r\nPost post = new Post(\"My Post\", \"Baeldung\", \"This is my post\");\r\nString json = jsonAdapter.toJson(post);\r\n// {\"author\":\"Baeldung\",\"text\":\"This is my post\",\"title\":\"My Post\"}\r\n```","```\r\nPost post = jsonAdapter.fromJson(json);\r\n// new Post(\"My Post\", \"Baeldung\", \"This is my post\");\r\n```","```\r\nMoshi moshi = new Moshi.builder()\r\n  .add(new Rfc3339DateJsonAdapter())\r\n  .add(CurrencyCode.class, EnumJsonAdapter.create(CurrencyCode.class).withUnknownFallback(CurrencyCode.USD))\r\n  .build()\r\n```","```\r\npublic class Author {\r\n    private String name;\r\n    private String email;\r\n    // constructor, getters and setters\r\n}\r\n```","```\r\npublic class AuthorAdapter {\r\n    @ToJson\r\n    public String toJson(Author author) {\r\n        return author.name + \" <\" + author.email + \">\";\r\n    }\r\n}\r\n```","```\r\n@FromJson\r\npublic Author fromJson(String author) {\r\n    Pattern pattern = Pattern.compile(\"^(.*) <(.*)>$\");\r\n    Matcher matcher = pattern.matcher(author);\r\n    return matcher.find() ? new Author(matcher.group(1), matcher.group(2)) : null;\r\n}\r\n```","```\r\nMoshi moshi = new Moshi.Builder()\r\n  .add(new AuthorAdapter())\r\n  .build();\r\nJsonAdapter<Post> jsonAdapter = moshi.adapter(Post.class);\r\n```","```\r\nPost post = new Post(\"My Post\", new Author(\"Baeldung\", \"[[email protected]](/web/20221022081830/https://www.baeldung.com/cdn-cgi/l/email-protection)\"), \"This is my post\");\r\nString json = jsonAdapter.toJson(post);\r\n// {\"author\":\"Baeldung <[[email protected]](/web/20221022081830/https://www.baeldung.com/cdn-cgi/l/email-protection)>\",\"text\":\"This is my post\",\"title\":\"My Post\"}\r\n\r\nPost post = jsonAdapter.fromJson(json);\r\n// new Post(\"My Post\", new Author(\"Baeldung\", \"[[email protected]](/web/20221022081830/https://www.baeldung.com/cdn-cgi/l/email-protection)\"), \"This is my post\");\r\n```","```\r\npublic class JsonDateTime {\r\n    private String date;\r\n    private String time;\r\n    private String timezone;\r\n\r\n    // constructor, getters and setters\r\n}\r\npublic class JsonDateTimeAdapter {\r\n    @ToJson\r\n    public JsonDateTime toJson(ZonedDateTime input) {\r\n        String date = input.toLocalDate().toString();\r\n        String time = input.toLocalTime().toString();\r\n        String timezone = input.getZone().toString();\r\n        return new JsonDateTime(date, time, timezone);\r\n    }\r\n}\r\n```","```\r\n@FromJson\r\npublic ZonedDateTime fromJson(JsonDateTime input) {\r\n    LocalDate date = LocalDate.parse(input.getDate());\r\n    LocalTime time = LocalTime.parse(input.getTime());\r\n    ZoneId timezone = ZoneId.of(input.getTimezone());\r\n    return ZonedDateTime.of(date, time, timezone);\r\n}\r\n```","```\r\nMoshi moshi = new Moshi.Builder()\r\n  .add(new JsonDateTimeAdapter())\r\n  .build();\r\nJsonAdapter<ZonedDateTime> jsonAdapter = moshi.adapter(ZonedDateTime.class);\r\n\r\nString json = jsonAdapter.toJson(ZonedDateTime.now());\r\n// {\"date\":\"2020-02-17\",\"time\":\"07:53:27.064\",\"timezone\":\"Europe/London\"}\r\n\r\nZonedDateTime now = jsonAdapter.fromJson(json);\r\n// 2020-02-17T07:53:27.064Z[Europe/London]\r\n```","```\r\n@Retention(RUNTIME)\r\n@Target({ElementType.FIELD, ElementType.PARAMETER, ElementType.METHOD})\r\n@JsonQualifier\r\npublic @interface EpochMillis {}\r\n```","```\r\npublic class EpochMillisAdapter {\r\n    @ToJson\r\n    public Long toJson(@EpochMillis Instant input) {\r\n        return input.toEpochMilli();\r\n    }\r\n    @FromJson\r\n    @EpochMillis\r\n    public Instant fromJson(Long input) {\r\n        return Instant.ofEpochMilli(input);\r\n    }\r\n}\r\n```","```\r\npublic class Post {\r\n    private String title;\r\n    private String author;\r\n    @EpochMillis Instant posted;\r\n    // constructor, getters and setters\r\n}\r\n```","```\r\nMoshi moshi = new Moshi.Builder()\r\n  .add(new EpochMillisAdapter())\r\n  .build();\r\nJsonAdapter<Post> jsonAdapter = moshi.adapter(Post.class);\r\n\r\nString json = jsonAdapter.toJson(new Post(\"Introduction to Moshi Json\", \"Baeldung\", Instant.now()));\r\n// {\"author\":\"Baeldung\",\"posted\":1582095384793,\"title\":\"Introduction to Moshi Json\"}\r\n\r\nPost post = jsonAdapter.fromJson(json);\r\n// new Post(\"Introduction to Moshi Json\", \"Baeldung\", Instant.now())\r\n```","```\r\npublic class Post {\r\n    private String title;\r\n    @Json(name = \"authored_by\")\r\n    private String author;\r\n    // constructor, getters and setters\r\n}\r\n```","```\r\nMoshi moshi = new Moshi.Builder()\r\n  .build();\r\nJsonAdapter<Post> jsonAdapter = moshi.adapter(Post.class);\r\n\r\nPost post = new Post(\"My Post\", \"Baeldung\");\r\n\r\nString json = jsonAdapter.toJson(post);\r\n// {\"authored_by\":\"Baeldung\",\"title\":\"My Post\"}\r\n\r\nPost post = jsonAdapter.fromJson(json);\r\n// new Post(\"My Post\", \"Baeldung\")\r\n```","```\r\npublic static class Post {\r\n    private String title;\r\n    private transient String author;\r\n    // constructor, getters and setters\r\n}\r\n```","```\r\nMoshi moshi = new Moshi.Builder()\r\n  .build();\r\nJsonAdapter<Post> jsonAdapter = moshi.adapter(Post.class);\r\n\r\nPost post = new Post(\"My Post\", \"Baeldung\");\r\n\r\nString json = jsonAdapter.toJson(post);\r\n// {\"title\":\"My Post\"}\r\n\r\nPost post = jsonAdapter.fromJson(json);\r\n// new Post(\"My Post\", null)\r\n\r\nPost post = jsonAdapter.fromJson(\"{\\\"author\\\":\\\"Baeldung\\\",\\\"title\\\":\\\"My Post\\\"}\");\r\n// new Post(\"My Post\", null)\r\n```","```\r\npublic class Post {\r\n    private String title;\r\n    private String author;\r\n    private String posted;\r\n\r\n    public Post() {\r\n        posted = Instant.now().toString();\r\n    }\r\n    // getters and setters\r\n}\r\n```","```\r\nMoshi moshi = new Moshi.Builder()\r\n  .build();\r\nJsonAdapter<Post> jsonAdapter = moshi.adapter(Post.class);\r\n\r\nString json = \"{\\\"title\\\":\\\"My Post\\\"}\";\r\nPost post = jsonAdapter.fromJson(json);\r\n// new Post(\"My Post\", null, \"2020-02-19T07:27:01.141Z\");\r\n```","```\r\nMoshi moshi = new Moshi.Builder()\r\n  .build();\r\nType type = Types.newParameterizedType(List.class, String.class);\r\nJsonAdapter<List<String>> jsonAdapter = moshi.adapter(type);\r\n```","```\r\nString json = jsonAdapter.toJson(Arrays.asList(\"One\", \"Two\", \"Three\"));\r\n// [\"One\", \"Two\", \"Three\"]\r\n\r\nList<String> result = jsonAdapter.fromJson(json);\r\n// Arrays.asList(\"One\", \"Two\", \"Three\");\r\n```"]