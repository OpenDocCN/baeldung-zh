["```\r\n<dependency> \r\n    <groupId>org.springframework.boot</groupId> \r\n    <artifactId>spring-boot-starter-web</artifactId> \r\n</dependency>\r\n<dependency> \r\n    <groupId>org.springframework.boot</groupId> \r\n    <artifactId>spring-boot-starter-data-jpa</artifactId> \r\n</dependency>\r\n<dependency>\r\n    <groupId>com.h2database</groupId>\r\n    <artifactId>h2</artifactId>\r\n    <scope>runtime</scope>\r\n</dependency>\r\n```","```\r\n@Entity\r\npublic class User {\r\n\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.AUTO)\r\n    private long id;\r\n    private final String name;\r\n    private final String email;\r\n\r\n    // standard constructors / setters / getters / toString\r\n} \r\n```","```\r\n@Repository\r\npublic interface UserRepository extends CrudRepository<User, Long>{} \r\n```","```\r\n@RestController\r\n@CrossOrigin(origins = \"http://localhost:4200\")\r\npublic class UserController {\r\n\r\n    // standard constructors\r\n\r\n    private final UserRepository userRepository;\r\n\r\n    @GetMapping(\"/users\")\r\n    public List<User> getUsers() {\r\n        return (List<User>) userRepository.findAll();\r\n    }\r\n\r\n    @PostMapping(\"/users\")\r\n    void addUser(@RequestBody User user) {\r\n        userRepository.save(user);\r\n    }\r\n} \r\n```","```\r\n@SpringBootApplication\r\npublic class Application {\r\n\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(Application.class, args);\r\n    }\r\n\r\n    @Bean\r\n    CommandLineRunner init(UserRepository userRepository) {\r\n        return args -> {\r\n            Stream.of(\"John\", \"Julie\", \"Jennifer\", \"Helen\", \"Rachel\").forEach(name -> {\r\n                User user = new User(name, name.toLowerCase() + \"@domain.com\");\r\n                userRepository.save(user);\r\n            });\r\n            userRepository.findAll().forEach(System.out::println);\r\n        };\r\n    }\r\n}\r\n```","```\r\nUser{id=1, name=John, [[email protected]](/web/20220923002451/https://www.baeldung.com/cdn-cgi/l/email-protection)}\r\nUser{id=2, name=Julie, [[email protected]](/web/20220923002451/https://www.baeldung.com/cdn-cgi/l/email-protection)}\r\nUser{id=3, name=Jennifer, [[email protected]](/web/20220923002451/https://www.baeldung.com/cdn-cgi/l/email-protection)}\r\nUser{id=4, name=Helen, [[email protected]](/web/20220923002451/https://www.baeldung.com/cdn-cgi/l/email-protection)}\r\nUser{id=5, name=Rachel, [[email protected]](/web/20220923002451/https://www.baeldung.com/cdn-cgi/l/email-protection)}\r\n```","```\r\nnpm install -g @angular/[[email protected]](/web/20220923002451/https://www.baeldung.com/cdn-cgi/l/email-protection)\r\n```","```\r\nng new angularclient\r\n```","```\r\n<!doctype html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"utf-8\">\r\n  <title>Spring Boot - Angular Application</title>\r\n  <base href=\"/\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\r\n  <link rel=\"stylesheet\" \r\n    href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" \r\n    integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\"\r\n    crossorigin=\"anonymous\">\r\n</head>\r\n<body>\r\n  <app-root></app-root>\r\n</body>\r\n</html>\r\n```","```\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n  title: string;\r\n\r\n  constructor() {\r\n    this.title = 'Spring Boot - Angular Application';\r\n  }\r\n}\r\n```","```\r\n<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"card bg-dark my-5\">\r\n        <div class=\"card-body\">\r\n          <h2 class=\"card-title text-center text-white py-3\">{{ title }}</h2>\r\n          <ul class=\"text-center list-inline py-3\">\r\n            <li class=\"list-inline-item\">\r\n              <a routerLink=\"/users\" class=\"btn btn-info\">List Users</a>\r\n                </li>\r\n            <li class=\"list-inline-item\">\r\n              <a routerLink=\"/adduser\" class=\"btn btn-info\">Add User</a>\r\n                </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>\r\n```","```\r\nng generate class user\r\n```","```\r\nexport class User {\r\n    id: string;\r\n    name: string;\r\n    email: string;\r\n}\r\n```","```\r\nng generate service user-service\r\n```","```\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { User } from '../model/user';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n  private usersUrl: string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.usersUrl = 'http://localhost:8080/users';\r\n  }\r\n\r\n  public findAll(): Observable<User[]> {\r\n    return this.http.get<User[]>(this.usersUrl);\r\n  }\r\n\r\n  public save(user: User) {\r\n    return this.http.post<User>(this.usersUrl, user);\r\n  }\r\n}\r\n```","```\r\nng generate component user-list\r\n```","```\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { User } from '../model/user';\r\nimport { UserService } from '../service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.css']\r\n})\r\nexport class UserListComponent implements OnInit {\r\n\r\n  users: User[];\r\n\r\n  constructor(private userService: UserService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userService.findAll().subscribe(data => {\r\n      this.users = data;\r\n    });\r\n  }\r\n} \r\n```","```\r\n<div class=\"card my-5\">\r\n  <div class=\"card-body\">\r\n    <table class=\"table table-bordered table-striped\">\r\n      <thead class=\"thead-dark\">\r\n        <tr>\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">Name</th>\r\n          <th scope=\"col\">Email</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let user of users\">\r\n          <td>{{ user.id }}</td>\r\n          <td>{{ user.name }}</td>\r\n          <td><a href=\"mailto:{{ user.email }}\">{{ user.email }}</a></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n```","```\r\nng generate component user-form \r\n```","```\r\nimport { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService } from '../service/user.service';\r\nimport { User } from '../model/user';\r\n\r\n@Component({\r\n  selector: 'app-user-form',\r\n  templateUrl: './user-form.component.html',\r\n  styleUrls: ['./user-form.component.css']\r\n})\r\nexport class UserFormComponent {\r\n\r\n  user: User;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute, \r\n      private router: Router, \r\n        private userService: UserService) {\r\n    this.user = new User();\r\n  }\r\n\r\n  onSubmit() {\r\n    this.userService.save(this.user).subscribe(result => this.gotoUserList());\r\n  }\r\n\r\n  gotoUserList() {\r\n    this.router.navigate(['/users']);\r\n  }\r\n}\r\n```","```\r\n<div class=\"card my-5\">\r\n  <div class=\"card-body\">\r\n    <form (ngSubmit)=\"onSubmit()\" #userForm=\"ngForm\">\r\n      <div class=\"form-group\">\r\n        <label for=\"name\">Name</label>\r\n        <input type=\"text\" [(ngModel)]=\"user.name\" \r\n          class=\"form-control\" \r\n          id=\"name\" \r\n          name=\"name\" \r\n          placeholder=\"Enter your name\"\r\n          required #name=\"ngModel\">\r\n      </div>\r\n      <div [hidden]=\"!name.pristine\" class=\"alert alert-danger\">Name is required</div>\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email</label>\r\n        <input type=\"text\" [(ngModel)]=\"user.email\" \r\n          class=\"form-control\" \r\n          id=\"email\" \r\n          name=\"email\" \r\n          placeholder=\"Enter your email address\"\r\n          required #email=\"ngModel\">\r\n        <div [hidden]=\"!email.pristine\" class=\"alert alert-danger\">Email is required</div>\r\n      </div>\r\n      <button type=\"submit\" [disabled]=\"!userForm.form.valid\" \r\n        class=\"btn btn-info\">Submit</button>\r\n    </form>\r\n  </div>\r\n</div> \r\n```","```\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UserListComponent } from './user-list/user-list.component';\r\nimport { UserFormComponent } from './user-form/user-form.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'users', component: UserListComponent },\r\n  { path: 'adduser', component: UserFormComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { } \r\n```","```\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport { UserListComponent } from './user-list/user-list.component';\r\nimport { UserFormComponent } from './user-form/user-form.component';\r\nimport { UserService } from './service/user.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UserListComponent,\r\n    UserFormComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule\r\n  ],\r\n  providers: [UserService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n```","```\r\nng serve --open\r\n```"]