["```\r\npublic int pow(int number) {\r\n    int pow = number * number;\r\n}\r\n```","```\r\njava: missing return statement\r\n```","```\r\npublic int pow(int number) {\r\n    int pow = number * number;\r\n    return pow;\r\n}\r\n```","```\r\npublic static String checkNumber(int number) {\r\n    if (number == 0) {\r\n        return \"It's equals to zero\";\r\n    }\r\n    for (int i = 0; i < number; i++) {\r\n        if (i > 100) {\r\n            return \"It's a big number\";\r\n        }\r\n    }\r\n}\r\n```","```\r\npublic static String checkNumber(int number) {\r\n    if (number == 0) {\r\n        return \"It's equals to zero\";\r\n    }\r\n    for (int i = 0; i < number; i++) {\r\n        if (i > 100) {\r\n            return \"It's a big number\";\r\n        }\r\n    }\r\n    return \"It's a negative number\";\r\n}\r\n```","```\r\npublic Map<String, Integer> createDictionary() {\r\n    List<String> words = Arrays.asList(\"Hello\", \"World\");\r\n    Map<String, Integer> dictionary = new HashMap<>();\r\n    words.stream().map(s -> {dictionary.put(s, 1);});\r\n    return dictionary;\r\n}\r\n```","```\r\nwords.forEach(s -> {dictionary.put(s, 1);});\r\n```","```\r\ndictionary = words.stream().collect(Collectors.toMap(s -> s, s -> 1))\r\n```","```\r\npublic pow(int number) {\r\n    int pow = number * number;\r\n    return pow;\r\n}\r\n```","```\r\npublic int pow(int number) {\r\n    int pow = number * number;\r\n    return pow;\r\n}\r\n```"]