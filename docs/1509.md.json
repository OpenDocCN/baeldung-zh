["```\r\nList<Article> articles = Lists.newArrayList(\r\n  new Article(\"Baeldung\", true),\r\n  new Article(\"Baeldung\", false),\r\n  new Article(\"Programming Daily\", false),\r\n  new Article(\"The Code\", false));\r\n```","```\r\nMap<Boolean, List<Article>> groupedArticles = articles.stream()\r\n  .collect(Collectors.partitioningBy(a -> a.target.equals(\"Baeldung\"))); \r\n```","```\r\nassertThat(groupedArticles.get(true)).containsExactly(\r\n  new Article(\"Baeldung\", true),\r\n  new Article(\"Baeldung\", false));\r\nassertThat(groupedArticles.get(false)).containsExactly(\r\n  new Article(\"Programming Daily\", false),\r\n  new Article(\"The Code\", false));\r\n```","```\r\nMap<String, List<Article>> groupedArticles = articles.stream()\r\n  .collect(Collectors.groupingBy(a -> a.target));\r\nassertThat(groupedArticles.get(\"Baeldung\")).containsExactly(\r\n  new Article(\"Baeldung\", true),\r\n  new Article(\"Baeldung\", false));\r\nassertThat(groupedArticles.get(\"Programming Daily\")).containsExactly(new Article(\"Programming Daily\", false));\r\nassertThat(groupedArticles.get(\"The Code\")).containsExactly(new Article(\"The Code\", false));\r\n```","```\r\nList<Long> countedArticles = articles.stream().collect(Collectors.teeing(\r\n  Collectors.filtering(article -> article.target.equals(\"Baeldung\"), Collectors.counting()),\r\n  Collectors.filtering(article -> !article.target.equals(\"Baeldung\"), Collectors.counting()),\r\n  List::of));\r\nassertThat(countedArticles.get(0)).isEqualTo(2);\r\nassertThat(countedArticles.get(1)).isEqualTo(2);\r\n```","```\r\nList<List<Article>> groupedArticles = articles.stream().collect(Collectors.teeing(\r\n  Collectors.filtering(article -> article.target.equals(\"Baeldung\"), Collectors.toList()),\r\n  Collectors.filtering(article -> article.featured, Collectors.toList()),\r\n  List::of));\r\n\r\nassertThat(groupedArticles.get(0)).hasSize(2);\r\nassertThat(groupedArticles.get(1)).hasSize(1);\r\n\r\nassertThat(groupedArticles.get(0)).containsExactly(\r\n  new Article(\"Baeldung\", true),\r\n  new Article(\"Baeldung\", false));\r\nassertThat(groupedArticles.get(1)).containsExactly(new Article(\"Baeldung\", true)); \r\n```","```\r\nObservable<Article> observableArticles = Observable.from(articles);\r\n```","```\r\nObservable<Article> baeldungObservable = observableArticles.filter(\r\n  article -> article.target.equals(\"Baeldung\"));\r\nObservable<Article> featuredObservable = observableArticles.filter(\r\n  article -> article.featured);\r\n```","```\r\nList<Article> baeldungArticles = new ArrayList<>();\r\nList<Article> featuredArticles = new ArrayList<>();\r\nbaeldungObservable.subscribe(baeldungArticles::add);\r\nfeaturedObservable.subscribe(featuredArticles::add);\r\n```"]