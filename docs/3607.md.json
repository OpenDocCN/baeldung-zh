["```\r\nprivate void sendHtmlMessage(String to, String subject, String htmlBody) throws MessagingException {\r\n    MimeMessage message = emailSender.createMimeMessage();\r\n    MimeMessageHelper helper = new MimeMessageHelper(message, true, \"UTF-8\");\r\n    helper.setTo(to);\r\n    helper.setSubject(subject);\r\n    helper.setText(htmlBody, true);\r\n    emailSender.send(message);\r\n}\r\n```","```\r\n@Bean\r\npublic ITemplateResolver thymeleafTemplateResolver() {\r\n    ClassLoaderTemplateResolver templateResolver = new ClassLoaderTemplateResolver();\r\n    templateResolver.setPrefix(\"mail-templates/\");\r\n    templateResolver.setSuffix(\".html\");\r\n    templateResolver.setTemplateMode(\"HTML\");\r\n    templateResolver.setCharacterEncoding(\"UTF-8\");\r\n    return templateResolver;\r\n}\r\n```","```\r\n@Value(\"${spring.mail.templates.path}\")\r\nprivate String mailTemplatesPath;\r\n```","```\r\nFileTemplateResolver templateResolver = new FileTemplateResolver();\r\ntemplateResolver.setPrefix(mailTemplatesPath);\r\n```","```\r\n@Bean\r\npublic SpringTemplateEngine thymeleafTemplateEngine(ITemplateResolver templateResolver) {\r\n    SpringTemplateEngine templateEngine = new SpringTemplateEngine();\r\n    templateEngine.setTemplateResolver(templateResolver);\r\n    templateEngine.setTemplateEngineMessageSource(emailMessageSource());\r\n    return templateEngine;\r\n}\r\n```","```\r\n@Bean \r\npublic FreeMarkerConfigurer freemarkerClassLoaderConfig() {\r\n    Configuration configuration = new Configuration(Configuration.VERSION_2_3_27);\r\n    TemplateLoader templateLoader = new ClassTemplateLoader(this.getClass(), \"/mail-templates\");\r\n    configuration.setTemplateLoader(templateLoader);\r\n    FreeMarkerConfigurer freeMarkerConfigurer = new FreeMarkerConfigurer();\r\n    freeMarkerConfigurer.setConfiguration(configuration);\r\n    return freeMarkerConfigurer; \r\n}\r\n```","```\r\nTemplateLoader templateLoader = new FileTemplateLoader(new File(mailTemplatesPath));\r\n```","```\r\n@Bean\r\npublic ResourceBundleMessageSource emailMessageSource() {\r\n    ResourceBundleMessageSource messageSource = new ResourceBundleMessageSource();\r\n    messageSource.setBasename(\"mailMessages\");\r\n    return messageSource;\r\n}\r\n```","```\r\n@Bean\r\npublic SpringTemplateEngine thymeleafTemplateEngine() {\r\n   ...\r\n   templateEngine.setTemplateEngineMessageSource(emailMessageSource());\r\n   ...\r\n}\r\n```","```\r\nsrc/main/resources/mailMessages_xx_YY.properties\r\n```","```\r\n<!DOCTYPE html>\r\n<html xmlns:th=\"http://www.thymeleaf.org\">\r\n  <head>\r\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n  </head>\r\n  <body>\r\n    <p th:text=\"#{greetings(${recipientName})}\"></p>\r\n    <p th:text=\"${text}\"></p>\r\n    <p th:text=\"#{regards}\"></p>\r\n    <p>\r\n      <em th:text=\"#{signature(${senderName})}\"></em> <br />\r\n    </p>\r\n  </body>\r\n</html>\r\n```","```\r\n@Autowired\r\nprivate SpringTemplateEngine thymeleafTemplateEngine;\r\n\r\n@Override\r\npublic void sendMessageUsingThymeleafTemplate(\r\n    String to, String subject, Map<String, Object> templateModel)\r\n        throws MessagingException {\r\n\r\n    Context thymeleafContext = new Context();\r\n    thymeleafContext.setVariables(templateModel);\r\n    String htmlBody = thymeleafTemplateEngine.process(\"template-thymeleaf.html\", thymeleafContext);\r\n\r\n    sendHtmlMessage(to, subject, htmlBody);\r\n}\r\n```","```\r\n<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n    </head>\r\n    <body>\r\n      <p>Hi ${recipientName}</p>\r\n      <p>${text}</p>\r\n      <p>Regards,</p>\r\n      <p>\r\n        <em>${senderName} at Baeldung</em> <br />\r\n      </p>\r\n    </body>\r\n</html>\r\n```","```\r\n@Autowired\r\nprivate FreeMarkerConfigurer freemarkerConfigurer;\r\n\r\n@Override\r\npublic void sendMessageUsingFreemarkerTemplate(\r\n    String to, String subject, Map<String, Object> templateModel)\r\n        throws IOException, TemplateException, MessagingException {\r\n\r\n    Template freemarkerTemplate = freemarkerConfigurer.getConfiguration()\r\n      .getTemplate(\"template-freemarker.ftl\");\r\n    String htmlBody = FreeMarkerTemplateUtils.processTemplateIntoString(freemarkerTemplate, templateModel);\r\n\r\n    sendHtmlMessage(to, subject, htmlBody);\r\n}\r\n```","```\r\nMimeMessageHelper helper = new MimeMessageHelper(message, true, \"UTF-8\");\r\n```","```\r\n@Value(\"classpath:/mail-logo.png\")\r\nResource resourceFile;\r\n```","```\r\nhelper.addInline(\"attachment.png\", resourceFile);\r\n```","```\r\n<img src=\"cid:attachment.png\" />\r\n```"]