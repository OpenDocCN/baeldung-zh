["```\r\nprivate RestTemplate restTemplate;\r\n\r\n@Autowired\r\npublic HelloController(RestTemplateBuilder builder) {\r\n    this.restTemplate = builder.build();\r\n}\r\n```","```\r\npublic class CustomRestTemplateCustomizer implements RestTemplateCustomizer {\r\n    @Override\r\n    public void customize(RestTemplate restTemplate) {\r\n        restTemplate.getInterceptors().add(new CustomClientHttpRequestInterceptor());\r\n    }\r\n}\r\n```","```\r\npublic class CustomClientHttpRequestInterceptor implements ClientHttpRequestInterceptor {\r\n    private static Logger LOGGER = LoggerFactory\r\n      .getLogger(CustomClientHttpRequestInterceptor.class);\r\n\r\n    @Override\r\n    public ClientHttpResponse intercept(\r\n      HttpRequest request, byte[] body, \r\n      ClientHttpRequestExecution execution) throws IOException {\r\n\r\n        logRequestDetails(request);\r\n        return execution.execute(request, body);\r\n    }\r\n    private void logRequestDetails(HttpRequest request) {\r\n        LOGGER.info(\"Headers: {}\", request.getHeaders());\r\n        LOGGER.info(\"Request Method: {}\", request.getMethod());\r\n        LOGGER.info(\"Request URI: {}\", request.getURI());\r\n    }\r\n}\r\n```","```\r\n@Bean\r\npublic CustomRestTemplateCustomizer customRestTemplateCustomizer() {\r\n    return new CustomRestTemplateCustomizer();\r\n}\r\n```","```\r\n@Bean\r\n@DependsOn(value = {\"customRestTemplateCustomizer\"})\r\npublic RestTemplateBuilder restTemplateBuilder() {\r\n    return new RestTemplateBuilder(customRestTemplateCustomizer());\r\n}\r\n```","```\r\nprivate RestTemplate restTemplate;\r\n\r\n@Autowired\r\npublic HelloController(RestTemplateBuilder builder) {\r\n    this.restTemplate = builder.build();\r\n}\r\n```"]