["```\r\n@Table(name = \"users\")\r\n@Entity\r\npublic class UserEntity {\r\n\r\n    @Id\r\n    private Long id;\r\n    private String name;\r\n    //Standard constructor, getters and setters.\r\n\r\n}\r\n```","```\r\npublic UserEntity getUserByIdWithPlainQuery(Long id) {\r\n    Query jpqlQuery = getEntityManager().createQuery(\"SELECT u FROM UserEntity u WHERE u.id=:id\");\r\n    jpqlQuery.setParameter(\"id\", id);\r\n    return (UserEntity) jpqlQuery.getSingleResult();\r\n}\r\n```","```\r\npublic UserEntity getUserByIdWithTypedQuery(Long id) {\r\n    TypedQuery<UserEntity> typedQuery\r\n      = getEntityManager().createQuery(\"SELECT u FROM UserEntity u WHERE u.id=:id\", UserEntity.class);\r\n    typedQuery.setParameter(\"id\", id);\r\n    return typedQuery.getSingleResult();\r\n}\r\n```","```\r\n@Table(name = \"users\")\r\n@Entity\r\n@NamedQuery(name = \"UserEntity.findByUserId\", query = \"SELECT u FROM UserEntity u WHERE u.id=:userId\")\r\npublic class UserEntity {\r\n\r\n    @Id\r\n    private Long id;\r\n    private String name;\r\n    //Standard constructor, getters and setters.\r\n\r\n}\r\n```","```\r\npublic UserEntity getUserByIdWithNamedQuery(Long id) {\r\n    Query namedQuery = getEntityManager().createNamedQuery(\"UserEntity.findByUserId\");\r\n    namedQuery.setParameter(\"userId\", id);\r\n    return (UserEntity) namedQuery.getSingleResult();\r\n}\r\n```","```\r\npublic UserEntity getUserByIdWithNativeQuery(Long id) {\r\n    Query nativeQuery\r\n      = getEntityManager().createNativeQuery(\"SELECT * FROM users WHERE id=:userId\", UserEntity.class);\r\n    nativeQuery.setParameter(\"userId\", id);\r\n    return (UserEntity) nativeQuery.getSingleResult();\r\n}\r\n```","```\r\nentityManager.createNamedQuery(queryName);\r\n```","```\r\nentityManager.createNativeQuery(sqlStmt);\r\n```","```\r\npublic UserEntity getUserByIdWithCriteriaQuery(Long id) {\r\n    CriteriaBuilder criteriaBuilder = getEntityManager().getCriteriaBuilder();\r\n    CriteriaQuery<UserEntity> criteriaQuery = criteriaBuilder.createQuery(UserEntity.class);\r\n    Root<UserEntity> userRoot = criteriaQuery.from(UserEntity.class);\r\n    UserEntity queryResult = getEntityManager().createQuery(criteriaQuery.select(userRoot)\r\n      .where(criteriaBuilder.equal(userRoot.get(\"id\"), id)))\r\n      .getSingleResult();\r\n    return queryResult;\r\n}\r\n```"]