["```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-data-jpa</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>com.h2database</groupId>\r\n    <artifactId>h2</artifactId>\r\n    <scope>runtime</scope>\r\n</dependency>\r\n```","```\r\n@Entity\r\npublic class MerchandiseEntity {\r\n\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.AUTO)\r\n    private Long id;\r\n\r\n    private double price;\r\n\r\n    private String brand;\r\n\r\n    public MerchandiseEntity() {\r\n    }\r\n\r\n    public MerchandiseEntity(String brand, double price) {\r\n        this.brand = brand;\r\n        this.price = price;\r\n    }\r\n}\r\n```","```\r\n@Repository\r\npublic interface InventoryRepository \r\n  extends CrudRepository<MerchandiseEntity, Long> {\r\n}\r\n```","```\r\nInventoryRepository repo = context\r\n  .getBean(InventoryRepository.class);\r\n\r\nMerchandiseEntity pants = new MerchandiseEntity(\r\n  \"Pair of Pants\", BigDecimal.ONE);\r\npants = repo.save(pants);\r\n```","```\r\nMerchandiseEntity pants = new MerchandiseEntity(\r\n  \"Pair of Pants\", 34.99);\r\npants = repo.save(pants); \r\n```","```\r\nMerchandiseEntity pantsInDB = repo.findById(pantsId).get(); \r\npantsInDB.setPrice(44.99); \r\nrepo.save(pantsInDB); \r\n```","```\r\n@Test\r\n@Transactional\r\npublic void shouldUpdateExistingEntryInDBWithoutSave() {\r\n    MerchandiseEntity pants = new MerchandiseEntity(\r\n      ORIGINAL_TITLE, BigDecimal.ONE);\r\n    pants = repository.save(pants);\r\n\r\n    Long originalId = pants.getId();\r\n\r\n    // Update using setters\r\n    pants.setTitle(UPDATED_TITLE);\r\n    pants.setPrice(BigDecimal.TEN);\r\n    pants.setBrand(UPDATED_BRAND);\r\n\r\n    Optional<MerchandiseEntity> resultOp = repository.findById(originalId);\r\n\r\n    assertTrue(resultOp.isPresent());\r\n    MerchandiseEntity result = resultOp.get();\r\n\r\n    assertEquals(originalId, result.getId());\r\n    assertEquals(UPDATED_TITLE, result.getTitle());\r\n    assertEquals(BigDecimal.TEN, result.getPrice());\r\n    assertEquals(UPDATED_BRAND, result.getBrand());\r\n}\r\n```"]