["```\r\n(o) -> o.toString();\r\n```","```\r\nObject::toString();\r\n```","```\r\nString::new;\r\n```","```\r\nString::valueOf;\r\n```","```\r\nstr::toString;\r\n```","```\r\nString::toString;\r\n```","```\r\nint min1 = Arrays.stream(new int[]{1, 2, 3, 4, 5})\r\n  .min()\r\n  .orElse(0);\r\nassertEquals(1, min1);\r\n\r\nint min2 = Arrays.stream(new int[]{})\r\n  .min()\r\n  .orElse(0);\r\nassertEquals(0, min2); \r\n```","```\r\nThread thread = new Thread(new Runnable() {\r\n    public void run() {\r\n        System.out.println(\"Hello World!\");\r\n    }\r\n});\r\n```","```\r\nThread thread = new Thread(() -> System.out.println(\"Hello World!\"));\r\n```","```\r\npublic interface Vehicle {\r\n    public void move();\r\n    default void hoot() {\r\n        System.out.println(\"peep!\");\r\n    }\r\n}\r\n```","```\r\n@FunctionalInterface\r\npublic interface Function2<T, U, V> {\r\n    public V apply(T t, U u);\r\n\r\n    default void count() {\r\n        // increment counter\r\n    }\r\n}\r\n```","```\r\nparams -> expressions\r\n```","```\r\nint sum = Arrays.stream(new int[]{1, 2, 3})\r\n  .filter(i -> i >= 2)\r\n  .map(i -> i * 3)\r\n  .sum();\r\n```","```\r\npublic static void main(String[] args) {\r\n    System.out.println(\"Stream without terminal operation\");\r\n\r\n    Arrays.stream(new int[] { 1, 2, 3 }).map(i -> {\r\n        System.out.println(\"doubling \" + i);\r\n        return i * 2;\r\n    });\r\n\r\n    System.out.println(\"Stream with terminal operation\");\r\n        Arrays.stream(new int[] { 1, 2, 3 }).map(i -> {\r\n            System.out.println(\"doubling \" + i);\r\n            return i * 2;\r\n    }).sum();\r\n}\r\n```","```\r\nStream without terminal operation\r\nStream with terminal operation\r\ndoubling 1\r\ndoubling 2\r\ndoubling 3\r\n```","```\r\nMap<String, List<String>> people = new HashMap<>();\r\npeople.put(\"John\", Arrays.asList(\"555-1123\", \"555-3389\"));\r\npeople.put(\"Mary\", Arrays.asList(\"555-2243\", \"555-5264\"));\r\npeople.put(\"Steve\", Arrays.asList(\"555-6654\", \"555-3242\"));\r\n\r\nList<String> phones = people.values().stream()\r\n  .flatMap(Collection::stream)\r\n    .collect(Collectors.toList());\r\n```"]