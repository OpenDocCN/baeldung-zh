["```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-security</artifactId>\r\n    <version>2.3.3.RELEASE</version>\r\n</dependency>\r\n```","```\r\n@Configuration\r\n@EnableWebSecurity\r\npublic class SecSecurityConfig extends WebSecurityConfigurerAdapter {\r\n\r\n    @Override\r\n    protected void configure(final AuthenticationManagerBuilder auth) throws Exception {\r\n        // authentication manager (see below)\r\n    }\r\n\r\n    @Override\r\n    protected void configure(final HttpSecurity http) throws Exception {\r\n        // http builder configurations for authorize requests and form login (see below)\r\n    }\r\n}\r\n```","```\r\nprotected void configure(final AuthenticationManagerBuilder auth) throws Exception {\r\n    auth.inMemoryAuthentication()\r\n        .withUser(\"user1\").password(passwordEncoder().encode(\"user1Pass\")).roles(\"USER\")\r\n        .and()\r\n        .withUser(\"user2\").password(passwordEncoder().encode(\"user2Pass\")).roles(\"USER\")\r\n        .and()\r\n        .withUser(\"admin\").password(passwordEncoder().encode(\"adminPass\")).roles(\"ADMIN\");\r\n}\r\n```","```\r\n@Bean \r\npublic PasswordEncoder passwordEncoder() { \r\n    return new BCryptPasswordEncoder(); \r\n}\r\n```","```\r\n@Override\r\nprotected void configure(final HttpSecurity http) throws Exception {\r\n    http\r\n      .csrf().disable()\r\n      .authorizeRequests()\r\n      .antMatchers(\"/admin/**\").hasRole(\"ADMIN\")\r\n      .antMatchers(\"/anonymous*\").anonymous()\r\n      .antMatchers(\"/login*\").permitAll()\r\n      .anyRequest().authenticated()\r\n      .and()\r\n      // ...\r\n}\r\n```","```\r\n@Override\r\nprotected void configure(final HttpSecurity http) throws Exception {\r\n    http\r\n      // ...\r\n      .and()\r\n      .formLogin()\r\n      .loginPage(\"/login.html\")\r\n      .loginProcessingUrl(\"/perform_login\")\r\n      .defaultSuccessUrl(\"/homepage.html\", true)\r\n      .failureUrl(\"/login.html?error=true\")\r\n      .failureHandler(authenticationFailureHandler())\r\n      .and()\r\n      .logout()\r\n      .logoutUrl(\"/perform_logout\")\r\n      .deleteCookies(\"JSESSIONID\")\r\n      .logoutSuccessHandler(logoutSuccessHandler());\r\n}\r\n```","```\r\npublic class AppInitializer implements WebApplicationInitializer {\r\n\r\n    @Override\r\n    public void onStartup(ServletContext sc) {\r\n\r\n        AnnotationConfigWebApplicationContext root = new AnnotationConfigWebApplicationContext();\r\n        root.register(SecSecurityConfig.class);\r\n\r\n        sc.addListener(new ContextLoaderListener(root));\r\n\r\n        sc.addFilter(\"securityFilter\", new DelegatingFilterProxy(\"springSecurityFilterChain\"))\r\n          .addMappingForUrlPatterns(null, false, \"/*\");\r\n    }\r\n}\r\n```","```\r\n@Configuration\r\n@ImportResource({ \"classpath:webSecurityConfig.xml\" })\r\npublic class SecSecurityConfig {\r\n   public SecSecurityConfig() {\r\n      super();\r\n   }\r\n}\r\n```","```\r\n<http use-expressions=\"true\">\r\n    <intercept-url pattern=\"/login*\" access=\"isAnonymous()\" />\r\n    <intercept-url pattern=\"/**\" access=\"isAuthenticated()\"/>\r\n\r\n    <form-login login-page='/login.html' \r\n      default-target-url=\"/homepage.html\" \r\n      authentication-failure-url=\"/login.html?error=true\" />\r\n    <logout logout-success-url=\"/login.html\" />\r\n</http>\r\n\r\n<authentication-manager>\r\n    <authentication-provider>\r\n        <user-service>\r\n            <user name=\"user1\" password=\"user1Pass\" authorities=\"ROLE_USER\" />\r\n        </user-service>\r\n        <password-encoder ref=\"encoder\" />\r\n    </authentication-provider>\r\n</authentication-manager>\r\n\r\n<beans:bean id=\"encoder\" \r\n  class=\"org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder\">\r\n</beans:bean>\r\n```","```\r\n<display-name>Spring Secured Application</display-name>\r\n\r\n<!-- Spring MVC -->\r\n<!-- ... -->\r\n\r\n<!-- Spring Security -->\r\n<filter>\r\n    <filter-name>springSecurityFilterChain</filter-name>\r\n    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>\r\n</filter>\r\n<filter-mapping>\r\n    <filter-name>springSecurityFilterChain</filter-name>\r\n    <url-pattern>/*</url-pattern>\r\n</filter-mapping>\r\n```","```\r\nregistry.addViewController(\"/login.html\");\r\n```","```\r\n<html>\r\n<head></head>\r\n<body>\r\n   <h1>Login</h1>\r\n   <form name='f' action=\"login\" method='POST'>\r\n      <table>\r\n         <tr>\r\n            <td>User:</td>\r\n            <td><input type='text' name='username' value=''></td>\r\n         </tr>\r\n         <tr>\r\n            <td>Password:</td>\r\n            <td><input type='password' name='password' /></td>\r\n         </tr>\r\n         <tr>\r\n            <td><input name=\"submit\" type=\"submit\" value=\"submit\" /></td>\r\n         </tr>\r\n      </table>\r\n  </form>\r\n</body>\r\n</html>\r\n```","```\r\n@Override\r\nprotected void configure(HttpSecurity http) throws Exception {\r\n    http.formLogin()\r\n      .loginPage(\"/login.html\")\r\n      .loginProcessingUrl(\"/perform_login\")\r\n      .defaultSuccessUrl(\"/homepage.html\",true)\r\n      .failureUrl(\"/login.html?error=true\")\r\n}\r\n```","```\r\n<form-login \r\n  login-page='/login.html' \r\n  login-processing-url=\"/perform_login\" \r\n  default-target-url=\"/homepage.html\"\r\n  authentication-failure-url=\"/login.html?error=true\" \r\n  always-use-default-target=\"true\"/>\r\n```","```\r\nhttp.formLogin()\r\n  .loginPage(\"/login.html\")\r\n```","```\r\nlogin-page='/login.html'\r\n```","```\r\nhttp.formLogin()\r\n  .loginProcessingUrl(\"/perform_login\")\r\n```","```\r\nlogin-processing-url=\"/perform_login\"\r\n```","```\r\nhttp.formLogin()\r\n  .defaultSuccessUrl(\"/homepage.html\")\r\n```","```\r\ndefault-target-url=\"/homepage.html\"\r\n```","```\r\nhttp.formLogin()\r\n  .failureUrl(\"/login.html?error=true\")\r\n```","```\r\nauthentication-failure-url=\"/login.html?error=true\"\r\n```","```\r\nhttp://localhost:8080/spring-security-mvc-login/login.html\r\n```"]