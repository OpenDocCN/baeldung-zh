["```\r\nboolean[] bits = new boolean[1024];\r\nSystem.out.println(ClassLayout.parseInstance(bits).toPrintable());\r\n```","```\r\n[Z object internals:\r\n OFFSET  SIZE      TYPE DESCRIPTION            VALUE\r\n      0     4           (object header)        01 00 00 00 (00000001 00000000 00000000 00000000) (1)\r\n      4     4           (object header)        00 00 00 00 (00000000 00000000 00000000 00000000) (0)\r\n      8     4           (object header)        7b 12 07 00 (01111011 00010010 00000111 00000000) (463483)\r\n     12     4           (object header)        00 04 00 00 (00000000 00000100 00000000 00000000) (1024)\r\n     16  1024   boolean [Z.                    N/A\r\nInstance size: 1040 bytes\r\n```","```\r\nBitSet bitSet = new BitSet(1024);\r\n\r\nSystem.out.println(GraphLayout.parseInstance(bitSet).toPrintable());\r\n```","```\r\n[[emailÂ protected]](/web/20220628053548/https://www.baeldung.com/cdn-cgi/l/email-protection) object externals:\r\n          ADDRESS       SIZE TYPE             PATH         VALUE\r\n        70f97d208         24 java.util.BitSet              (object)\r\n        70f97d220        144 [J               .words       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n```","```\r\nBitSet bitSet = new BitSet();\r\n```","```\r\nBitSet bitSet = new BitSet(100_000);\r\n```","```\r\nBitSet bitSet = BitSet.valueOf(new long[] { 42, 12 });\r\n```","```\r\nBitSet bitSet = new BitSet();\r\n\r\nbitSet.set(10);\r\nassertThat(bitSet.get(10)).isTrue();\r\n```","```\r\nbitSet.set(20, 30);\r\nfor (int i = 20; i <= 29; i++) {\r\n    assertThat(bitSet.get(i)).isTrue();\r\n}\r\nassertThat(bitSet.get(30)).isFalse();\r\n```","```\r\nbitSet.set(10, false);\r\nassertThat(bitSet.get(10)).isFalse();\r\n```","```\r\nbitSet.set(20, 30, false);\r\nfor (int i = 20; i <= 29; i++) {\r\n    assertThat(bitSet.get(i)).isFalse();\r\n}\r\n```","```\r\nbitSet.set(42);\r\nassertThat(bitSet.get(42)).isTrue();\r\n\r\nbitSet.clear(42);\r\nassertThat(bitSet.get(42)).isFalse();\r\n```","```\r\nbitSet.set(10, 20);\r\nfor (int i = 10; i < 20; i++) {\r\n    assertThat(bitSet.get(i)).isTrue();\r\n}\r\n\r\nbitSet.clear(10, 20);\r\nfor (int i = 10; i < 20; i++) {\r\n    assertThat(bitSet.get(i)).isFalse();\r\n}\r\n```","```\r\nbitSet.set(10, 20);\r\nbitSet.clear();\r\nfor (int i = 0; i < 100; i++) { \r\n    assertThat(bitSet.get(i)).isFalse();\r\n}\r\n```","```\r\nbitSet.set(42);\r\n\r\nassertThat(bitSet.get(42)).isTrue();\r\nassertThat(bitSet.get(43)).isFalse();\r\n```","```\r\nbitSet.set(10, 20);\r\nBitSet newBitSet = bitSet.get(10, 20);\r\nfor (int i = 0; i < 10; i++) {\r\n    assertThat(newBitSet.get(i)).isTrue();\r\n}\r\n```","```\r\nbitSet.set(42);\r\nbitSet.flip(42);\r\nassertThat(bitSet.get(42)).isFalse();\r\n\r\nbitSet.flip(12);\r\nassertThat(bitSet.get(12)).isTrue();\r\n```","```\r\nbitSet.flip(30, 40);\r\nfor (int i = 30; i < 40; i++) {\r\n    assertThat(bitSet.get(i)).isTrue();\r\n}\r\n```","```\r\nBitSet defaultBitSet = new BitSet();\r\nassertThat(defaultBitSet.size()).isEqualTo(64);\r\n```","```\r\nBitSet bitSet = new BitSet(1024);\r\nassertThat(bitSet.size()).isEqualTo(1024);\r\n```","```\r\nassertThat(bitSet.cardinality()).isEqualTo(0);\r\nbitSet.set(10, 30);\r\nassertThat(bitSet.cardinality()).isEqualTo(30 - 10);\r\n```","```\r\nassertThat(bitSet.length()).isEqualTo(30);\r\nbitSet.set(100);\r\nassertThat(bitSet.length()).isEqualTo(101);\r\n```","```\r\nassertThat(bitSet.isEmpty()).isFalse();\r\nbitSet.clear();\r\nassertThat(bitSet.isEmpty()).isTrue();\r\n```","```\r\nBitSet first = new BitSet();\r\nfirst.set(5, 10);\r\n\r\nBitSet second = new BitSet();\r\nsecond.set(7, 15);\r\n\r\nassertThat(first.intersects(second)).isTrue();\r\n```","```\r\nfirst.and(second);\r\nassertThat(first.get(7)).isTrue();\r\nassertThat(first.get(8)).isTrue();\r\nassertThat(first.get(9)).isTrue();\r\nassertThat(first.get(10)).isFalse();\r\n```","```\r\nfirst.clear();\r\nfirst.set(5, 10);\r\n\r\nfirst.xor(second);\r\nfor (int i = 5; i < 7; i++) {\r\n    assertThat(first.get(i)).isTrue();\r\n}\r\nfor (int i = 10; i < 15; i++) {\r\n    assertThat(first.get(i)).isTrue();\r\n}\r\n```","```\r\nBitSet bitSet = new BitSet();\r\nbitSet.set(15, 25);\r\n\r\nbitSet.stream().forEach(System.out::println);\r\n```","```\r\nassertThat(bitSet.stream().count()).isEqualTo(10);\r\n```","```\r\nassertThat(bitSet.nextSetBit(13)).isEqualTo(15);\r\n```","```\r\nassertThat(bitSet.nextSetBit(25)).isEqualTo(-1);\r\n```","```\r\nassertThat(bitSet.nextClearBit(23)).isEqualTo(25);\r\n```","```\r\nassertThat(bitSet.previousClearBit(24)).isEqualTo(14);\r\n```","```\r\nassertThat(bitSet.previousSetBit(29)).isEqualTo(24);\r\nassertThat(bitSet.previousSetBit(14)).isEqualTo(-1);\r\n```","```\r\nbyte[] bytes = bitSet.toByteArray();\r\nlong[] longs = bitSet.toLongArray();\r\n```"]