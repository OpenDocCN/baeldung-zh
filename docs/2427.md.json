["```\r\n{\r\n  \"name\": \"Big Ben\",\r\n  \"location\": {\r\n    \"coordinates\": [-0.1268194, 51.5007292],\r\n    \"type\": \"Point\"\r\n  }\r\n}\r\n```","```\r\n{\r\n  \"name\": \"Hyde Park\",\r\n  \"location\": {\r\n    \"coordinates\": [\r\n      [\r\n        [-0.159381, 51.513126],\r\n        [-0.189615, 51.509928],\r\n        [-0.187373, 51.502442],\r\n        [-0.153019, 51.503464],\r\n        [-0.159381, 51.513126]\r\n      ]\r\n    ],\r\n    \"type\": \"Polygon\"\r\n  }\r\n}\r\n```","```\r\nMongoClient mongoClient = new MongoClient();\r\nMongoDatabase db = mongoClient.getDatabase(\"myMongoDb\");\r\ncollection = db.getCollection(\"places\");\r\n```","```\r\ncollection.createIndex(Indexes.geo2d(\"location\"));\r\n```","```\r\ndb.places.createIndex({location:\"2d\"})\r\n```","```\r\ncollection.createIndex(Indexes.geo2dsphere(\"location\"));\r\n```","```\r\ndb.places.createIndex({location:\"2dsphere\"})\r\n```","```\r\n@Test\r\npublic void givenNearbyLocation_whenSearchNearby_thenFound() {\r\n    Point currentLoc = new Point(new Position(-0.126821, 51.495885));\r\n\r\n    FindIterable<Document> result = collection.find(\r\n      Filters.near(\"location\", currentLoc, 1000.0, 10.0));\r\n\r\n    assertNotNull(result.first());\r\n    assertEquals(\"Big Ben\", result.first().get(\"name\"));\r\n}\r\n```","```\r\ndb.places.find({\r\n  location: {\r\n    $near: {\r\n      $geometry: {\r\n        type: \"Point\",\r\n        coordinates: [-0.126821, 51.495885]\r\n      },\r\n      $maxDistance: 1000,\r\n      $minDistance: 10\r\n    }\r\n  }\r\n})\r\n```","```\r\n@Test\r\npublic void givenFarLocation_whenSearchNearby_thenNotFound() {\r\n    Point currentLoc = new Point(new Position(-0.5243333, 51.4700223));\r\n\r\n    FindIterable<Document> result = collection.find(\r\n      Filters.near(\"location\", currentLoc, 5000.0, 10.0));\r\n\r\n    assertNull(result.first());\r\n}\r\n```","```\r\n@Test\r\npublic void givenNearbyLocation_whenSearchWithinCircleSphere_thenFound() {\r\n    double distanceInRad = 5.0 / 6371;\r\n\r\n    FindIterable<Document> result = collection.find(\r\n      Filters.geoWithinCenterSphere(\"location\", -0.1435083, 51.4990956, distanceInRad));\r\n\r\n    assertNotNull(result.first());\r\n    assertEquals(\"Big Ben\", result.first().get(\"name\"));\r\n}\r\n```","```\r\ndb.places.find({\r\n  location: {\r\n    $geoWithin: {\r\n      $centerSphere: [\r\n        [-0.1435083, 51.4990956],\r\n        0.0007848061528802386\r\n      ]\r\n    }\r\n  }\r\n})\r\n```","```\r\n@Test\r\npublic void givenNearbyLocation_whenSearchWithinBox_thenFound() {\r\n    double lowerLeftX = -0.1427638;\r\n    double lowerLeftY = 51.4991288;\r\n    double upperRightX = -0.1256209;\r\n    double upperRightY = 51.5030272;\r\n\r\n    FindIterable<Document> result = collection.find(\r\n      Filters.geoWithinBox(\"location\", lowerLeftX, lowerLeftY, upperRightX, upperRightY));\r\n\r\n    assertNotNull(result.first());\r\n    assertEquals(\"Big Ben\", result.first().get(\"name\"));\r\n}\r\n```","```\r\ndb.places.find({\r\n  location: {\r\n    $geoWithin: {\r\n      $box: [\r\n        [-0.1427638, 51.4991288],\r\n        [-0.1256209, 51.5030272]\r\n      ]\r\n    }\r\n  }\r\n})\r\n```","```\r\n@Test\r\npublic void givenNearbyLocation_whenSearchWithinPolygon_thenFound() {\r\n    ArrayList<List<Double>> points = new ArrayList<List<Double>>();\r\n    points.add(Arrays.asList(-0.1439, 51.4952));\r\n    points.add(Arrays.asList(-0.1121, 51.4989));\r\n    points.add(Arrays.asList(-0.13, 51.5163));\r\n    points.add(Arrays.asList(-0.1439, 51.4952));\r\n\r\n    FindIterable<Document> result = collection.find(\r\n      Filters.geoWithinPolygon(\"location\", points));\r\n\r\n    assertNotNull(result.first());\r\n    assertEquals(\"Big Ben\", result.first().get(\"name\"));\r\n}\r\n```","```\r\ndb.places.find({\r\n  location: {\r\n    $geoWithin: {\r\n      $polygon: [\r\n        [-0.1439, 51.4952],\r\n        [-0.1121, 51.4989],\r\n        [-0.13, 51.5163],\r\n        [-0.1439, 51.4952]\r\n      ]\r\n    }\r\n  }\r\n})\r\n```","```\r\ngeoWithinPolygon(\"location\", points, hole1, hole2, ...)\r\n```","```\r\n@Test\r\npublic void givenNearbyLocation_whenSearchUsingIntersect_thenFound() {\r\n    ArrayList<Position> positions = new ArrayList<Position>();\r\n    positions.add(new Position(-0.1439, 51.4952));\r\n    positions.add(new Position(-0.1346, 51.4978));\r\n    positions.add(new Position(-0.2177, 51.5135));\r\n    positions.add(new Position(-0.1439, 51.4952));\r\n    Polygon geometry = new Polygon(positions);\r\n\r\n    FindIterable<Document> result = collection.find(\r\n      Filters.geoIntersects(\"location\", geometry));\r\n\r\n    assertNotNull(result.first());\r\n    assertEquals(\"Hyde Park\", result.first().get(\"name\"));\r\n}\r\n```","```\r\ndb.places.find({\r\n  location:{\r\n    $geoIntersects:{\r\n      $geometry:{\r\n        type:\"Polygon\",\r\n          coordinates:[\r\n          [\r\n            [-0.1439, 51.4952],\r\n            [-0.1346, 51.4978],\r\n            [-0.2177, 51.5135],\r\n            [-0.1439, 51.4952]\r\n          ]\r\n        ]\r\n      }\r\n    }\r\n  }\r\n})\r\n```"]