["```\r\n@Configuration\r\n@ComponentScan\r\npublic class SpringComponentScanApp {\r\n    private static ApplicationContext applicationContext;\r\n\r\n    @Bean\r\n    public ExampleBean exampleBean() {\r\n        return new ExampleBean();\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        applicationContext = \r\n          new AnnotationConfigApplicationContext(SpringComponentScanApp.class);\r\n\r\n        for (String beanName : applicationContext.getBeanDefinitionNames()) {\r\n            System.out.println(beanName);\r\n        }\r\n    }\r\n}\r\n```","```\r\npackage com.baeldung.componentscan.springapp.animals;\r\n// ...\r\n@Component\r\npublic class Cat {}\r\n```","```\r\npackage com.baeldung.componentscan.springapp.animals;\r\n// ...\r\n@Component\r\npublic class Dog {}\r\n```","```\r\npackage com.baeldung.componentscan.springapp.flowers;\r\n// ...\r\n@Component\r\npublic class Rose {}\r\n```","```\r\nspringComponentScanApp\r\ncat\r\ndog\r\nrose\r\nexampleBean\r\n```","```\r\n@ComponentScan(basePackages = \"com.baeldung.componentscan.springapp\")\r\n```","```\r\n@Configuration\r\n@EnableAutoConfiguration\r\n@ComponentScan\r\n```","```\r\npackage com.baeldung.componentscan.springbootapp;\r\n// ...\r\n@SpringBootApplication\r\npublic class SpringBootComponentScanApp {\r\n    private static ApplicationContext applicationContext;\r\n\r\n    @Bean\r\n    public ExampleBean exampleBean() {\r\n        return new ExampleBean();\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        applicationContext = SpringApplication.run(SpringBootComponentScanApp.class, args);\r\n        checkBeansPresence(\r\n          \"cat\", \"dog\", \"rose\", \"exampleBean\", \"springBootComponentScanApp\");\r\n\r\n    }\r\n\r\n    private static void checkBeansPresence(String... beans) {\r\n        for (String beanName : beans) {\r\n            System.out.println(\"Is \" + beanName + \" in ApplicationContext: \" + \r\n              applicationContext.containsBean(beanName));\r\n        }\r\n    }\r\n}\r\n```","```\r\nIs cat in ApplicationContext: true\r\nIs dog in ApplicationContext: true\r\nIs rose in ApplicationContext: true\r\nIs exampleBean in ApplicationContext: true\r\nIs springBootComponentScanApp in ApplicationContext: true\r\n```","```\r\n@ComponentScan(basePackages = \"com.baeldung.componentscan.springapp.animals\")\r\n@Configuration\r\npublic class SpringComponentScanApp {\r\nÂ   // ...\r\n}\r\n```","```\r\nspringComponentScanApp\r\ncat\r\ndog\r\nexampleBean\r\n```","```\r\n@SpringBootApplication\r\n@ComponentScan(basePackages = \"com.baeldung.componentscan.springbootapp.animals\")\r\n```","```\r\n@ComponentScan(basePackages = {\"com.baeldung.componentscan.springapp.animals\", \"com.baeldung.componentscan.springapp.flowers\"})\r\n```","```\r\n@ComponentScan(basePackages = \"com.baeldung.componentscan.springapp.animals;com.baeldung.componentscan.springapp.flowers\")\r\n@ComponentScan(basePackages = \"com.baeldung.componentscan.springapp.animals,com.baeldung.componentscan.springapp.flowers\")\r\n@ComponentScan(basePackages = \"com.baeldung.componentscan.springapp.animals com.baeldung.componentscan.springapp.flowers\")\r\n```","```\r\n@ComponentScan(excludeFilters = \r\n  @ComponentScan.Filter(type=FilterType.REGEX,\r\n    pattern=\"com\\\\.baeldung\\\\.componentscan\\\\.springapp\\\\.flowers\\\\..*\"))\r\n```","```\r\n@ComponentScan(excludeFilters = \r\n  @ComponentScan.Filter(type = FilterType.ASSIGNABLE_TYPE, value = Rose.class))\r\n```"]