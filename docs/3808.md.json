["```\r\npublic interface CrudRepository<T, ID> extends Repository<T, ID> {\r\n\r\n    Optional<T> findById(ID id);\r\n\r\n}\r\n```","```\r\npublic interface UserRepository extends JpaRepository<User, Integer> {\r\n\r\n    Optional<User> findOneByName(String name);\r\n\r\n} \r\n```","```\r\npublic interface UserRepository extends JpaRepository<User, Integer> {\r\n    // ...\r\n    List<User> findAll();\r\n    // ...\r\n}\r\n```","```\r\npublic interface UserRepository extends JpaRepository<User, Integer> {\r\n    // ...\r\n    Page<User> findAll(Pageable pageable);\r\n    // ...\r\n} \r\n```","```\r\npublic interface UserRepository extends JpaRepository<User, Integer> {\r\n    // ...\r\n    Stream<User> findAllByName(String name);\r\n    // ...\r\n}\r\n```","```\r\ntry (Stream<User> foundUsersStream \r\n  = userRepository.findAllByName(USER_NAME_ADAM)) {\r\n\r\nassertThat(foundUsersStream.count(), equalTo(3l)); \r\n```","```\r\n@Async\r\nCompletableFuture<User> findOneByStatus(Integer status); \r\n```"]