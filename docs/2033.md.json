["```\r\n<dependency>\r\n    <groupId>org.hibernate.ogm</groupId>\r\n    <artifactId>hibernate-ogm-mongodb</artifactId>\r\n    <version>5.4.0.Final</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.jboss.narayana.jta</groupId>\r\n    <artifactId>narayana-jta</artifactId>\r\n    <version>5.9.2.Final</version>\r\n</dependency>\r\n```","```\r\n<persistence-unit name=\"ogm-mongodb\" transaction-type=\"JTA\">\r\n    <provider>org.hibernate.ogm.jpa.HibernateOgmPersistence</provider>\r\n    <properties>\r\n        <property name=\"hibernate.ogm.datastore.provider\" value=\"MONGODB\" />\r\n        <property name=\"hibernate.ogm.datastore.database\" value=\"TestDB\" />\r\n        <property name=\"hibernate.ogm.datastore.create_database\" value=\"true\" />\r\n    </properties>\r\n</persistence-unit>\r\n```","```\r\n@Entity\r\npublic class Article {\r\n    @Id\r\n    @GeneratedValue(generator = \"uuid\")\r\n    @GenericGenerator(name = \"uuid\", strategy = \"uuid2\")\r\n    private String articleId;\r\n\r\n    private String articleTitle;\r\n\r\n    @ManyToOne\r\n    private Author author;\r\n\r\n    // constructors, getters and setters...\r\n}\r\n```","```\r\n@Entity\r\npublic class Author {\r\n    @Id\r\n    @GeneratedValue(generator = \"uuid\")\r\n    @GenericGenerator(name = \"uuid\", strategy = \"uuid2\")\r\n    private String authorId;\r\n\r\n    private String authorName;\r\n\r\n    @ManyToOne\r\n    private Editor editor;\r\n\r\n    @OneToMany(mappedBy = \"author\", cascade = CascadeType.PERSIST)\r\n    private Set<Article> authoredArticles = new HashSet<>();\r\n\r\n    // constructors, getters and setters...\r\n}\r\n```","```\r\n@Entity\r\npublic class Editor {\r\n    @Id\r\n    @GeneratedValue(generator = \"uuid\")\r\n    @GenericGenerator(name = \"uuid\", strategy = \"uuid2\")\r\n    private String editorId;\r\n\r\n    private String editorName;\r\n    @OneToMany(mappedBy = \"editor\", cascade = CascadeType.PERSIST)\r\n    private Set<Author> assignedAuthors = new HashSet<>();\r\n\r\n    // constructors, getters and setters...\r\n}\r\n```","```\r\nprivate void persistTestData(EntityManagerFactory entityManagerFactory, Editor editor) \r\n  throws Exception {\r\n    TransactionManager transactionManager = \r\n      com.arjuna.ats.jta.TransactionManager.transactionManager();\r\n    transactionManager.begin();\r\n    EntityManager entityManager = entityManagerFactory.createEntityManager();\r\n\r\n    entityManager.persist(editor);\r\n    entityManager.close();\r\n    transactionManager.commit();\r\n}\r\n```","```\r\n@Test\r\npublic void givenMongoDB_WhenEntitiesCreated_thenCanBeRetrieved() throws Exception {\r\n    EntityManagerFactory entityManagerFactory = \r\n      Persistence.createEntityManagerFactory(\"ogm-mongodb\");\r\n    Editor editor = generateTestData();\r\n    persistTestData(entityManagerFactory, editor);\r\n\r\n    TransactionManager transactionManager = \r\n      com.arjuna.ats.jta.TransactionManager.transactionManager();  \r\n    transactionManager.begin();\r\n    EntityManager entityManager = entityManagerFactory.createEntityManager();\r\n    Editor loadedEditor = entityManager.find(Editor.class, editor.getEditorId());\r\n\r\n    assertThat(loadedEditor).isNotNull();\r\n    // Other assertions to verify the entities and relations\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>org.hibernate.ogm</groupId>\r\n    <artifactId>hibernate-ogm-neo4j</artifactId>\r\n    <version>5.4.0.Final</version>\r\n</dependency>\r\n```","```\r\n<persistence-unit name=\"ogm-neo4j\" transaction-type=\"JTA\">\r\n    <provider>org.hibernate.ogm.jpa.HibernateOgmPersistence</provider>\r\n    <properties>\r\n        <property name=\"hibernate.ogm.datastore.provider\" value=\"NEO4J_EMBEDDED\" />\r\n        <property name=\"hibernate.ogm.datastore.database\" value=\"TestDB\" />\r\n        <property name=\"hibernate.ogm.neo4j.database_path\" value=\"target/test_data_dir\" />\r\n    </properties>\r\n</persistence-unit>\r\n```"]