["```\r\n# Auto Configure\r\norg.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\r\norg.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration,\\\r\norg.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration,\\\r\norg.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration,\\\r\norg.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration\r\n```","```\r\n@Configuration\r\n@ConditionalOnClass(MongoClient.class)\r\n@EnableConfigurationProperties(MongoProperties.class)\r\n@ConditionalOnMissingBean(type = \"org.springframework.data.mongodb.MongoDbFactory\")\r\npublic class MongoAutoConfiguration {\r\n    // configuration code\r\n}\r\n```","```\r\n@ConfigurationProperties(prefix = \"spring.data.mongodb\")\r\npublic class MongoProperties {\r\n\r\n    private String host;\r\n\r\n    // other fields with standard getters and setters\r\n}\r\n```","```\r\nspring.data.mongodb.host = localhost\r\n```","```\r\n@ConfigurationProperties(prefix = \"baeldung.greeter\")\r\npublic class GreeterProperties {\r\n\r\n    private String userName;\r\n    private String morningMessage;\r\n    private String afternoonMessage;\r\n    private String eveningMessage;\r\n    private String nightMessage;\r\n\r\n    // standard getters and setters\r\n\r\n}\r\n```","```\r\n@Configuration\r\n@ConditionalOnClass(Greeter.class)\r\n@EnableConfigurationProperties(GreeterProperties.class)\r\npublic class GreeterAutoConfiguration {\r\n\r\n    @Autowired\r\n    private GreeterProperties greeterProperties;\r\n\r\n    @Bean\r\n    @ConditionalOnMissingBean\r\n    public GreetingConfig greeterConfig() {\r\n\r\n        String userName = greeterProperties.getUserName() == null\r\n          ? System.getProperty(\"user.name\") \r\n          : greeterProperties.getUserName();\r\n\r\n        // ..\r\n\r\n        GreetingConfig greetingConfig = new GreetingConfig();\r\n        greetingConfig.put(USER_NAME, userName);\r\n        // ...\r\n        return greetingConfig;\r\n    }\r\n\r\n    @Bean\r\n    @ConditionalOnMissingBean\r\n    public Greeter greeter(GreetingConfig greetingConfig) {\r\n        return new Greeter(greetingConfig);\r\n    }\r\n}\r\n```","```\r\norg.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\r\n  com.baeldung.greeter.autoconfigure.GreeterAutoConfiguration\r\n```","```\r\n<project ...>\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <groupId>com.baeldung</groupId>\r\n    <artifactId>greeter-spring-boot-starter</artifactId>\r\n    <version>0.0.1-SNAPSHOT</version>\r\n\r\n    <properties>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n        <greeter.version>0.0.1-SNAPSHOT</greeter.version>\r\n        <spring-boot.version>2.2.6.RELEASE</spring-boot.version>\r\n    </properties>\r\n\r\n    <dependencies>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter</artifactId>\r\n            <version>${spring-boot.version}</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>com.baeldung</groupId>\r\n            <artifactId>greeter-spring-boot-autoconfigure</artifactId>\r\n            <version>${project.version}</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>com.baeldung</groupId>\r\n            <artifactId>greeter</artifactId>\r\n            <version>${greeter.version}</version>\r\n        </dependency>\r\n\r\n    </dependencies>\r\n\r\n</project>\r\n```","```\r\n<dependency>\r\n    <groupId>com.baeldung</groupId>\r\n    <artifactId>greeter-spring-boot-starter</artifactId>\r\n    <version>${greeter-starter.version}</version>\r\n</dependency>\r\n```","```\r\nbaeldung.greeter.userName=Baeldung\r\nbaeldung.greeter.afternoonMessage=Woha\\ Afternoon\r\n```","```\r\n@SpringBootApplication\r\npublic class GreeterSampleApplication implements CommandLineRunner {\r\n\r\n    @Autowired\r\n    private Greeter greeter;\r\n\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(GreeterSampleApplication.class, args);\r\n    }\r\n\r\n    @Override\r\n    public void run(String... args) throws Exception {\r\n        String message = greeter.greet();\r\n        System.out.println(message);\r\n    }\r\n}\r\n```"]