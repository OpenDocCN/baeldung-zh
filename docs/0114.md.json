["```\r\n<dependency>\r\n    <groupId>com.google.firebase</groupId>\r\n    <artifactId>firebase-admin</artifactId>\r\n    <version>9.1.1</version>\r\n</dependency> \r\n```","```\r\n@Bean\r\nFirebaseMessaging firebaseMessaging(FirebaseApp firebaseApp) {\r\n    return FirebaseMessaging.getInstance(firebaseApp);\r\n} \r\n```","```\r\n@Bean\r\nFirebaseApp firebaseApp(GoogleCredentials credentials) {\r\n    FirebaseOptions options = FirebaseOptions.builder()\r\n      .setCredentials(credentials)\r\n      .build();\r\n\r\n    return FirebaseApp.initializeApp(options);\r\n} \r\n```","```\r\n@Bean\r\nGoogleCredentials googleCredentials() {\r\n    if (firebaseProperties.getServiceAccount() != null) {\r\n        try (InputStream is = firebaseProperties.getServiceAccount().getInputStream()) {\r\n            return GoogleCredentials.fromStream(is);\r\n        }\r\n    } \r\n    else {\r\n        // Use standard credentials chain. Useful when running inside GKE\r\n        return GoogleCredentials.getApplicationDefault();\r\n    }\r\n} \r\n```","```\r\nMessage msg = Message.builder()\r\n  .setTopic(topic)\r\n  .putData(\"body\", \"some data\")\r\n  .build(); \r\n```","```\r\nString id = fcm.send(msg);\r\n```","```\r\nMessage msg = Message.builder()\r\n  .setToken(registrationToken)\r\n  .putData(\"body\", \"some data\")\r\n  .build(); \r\n```","```\r\nMulticastMessage msg = MulticastMessage.builder()\r\n  .addAllTokens(message.getRegistrationTokens())\r\n  .putData(\"body\", \"some data\")\r\n  .build();\r\n\r\nBatchResponse response = fcm.sendMulticast(msg);\r\n```","```\r\n('T1' in topics || 'T2' in topics) && !('T3' in topics)\r\n```","```\r\nMessage msg = Message.builder()\r\n  .setCondition(\"('T1' in topics || 'T2' in topics) && !('T3' in topics)\")\r\n  .putData(\"body\", \"some data\")\r\n  .build();\r\n\r\nString id = fcm.send(msg); \r\n```","```\r\nfcm.subscribeToTopic(registrationTokens, topic);\r\n```","```\r\nfcm.subscribeToTopic(List.of(registrationToken), topic);\r\n```"]