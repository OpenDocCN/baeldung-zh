["```\r\n<dependency> \r\n    <groupId>org.springframework.boot</groupId> \r\n    <artifactId>spring-boot-starter-test</artifactId>\r\n    <version>2.5.3</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-data-cassandra</artifactId>\r\n    <version>2.5.3</version>\r\n</dependency>\r\n```","```\r\n<dependency> \r\n    <groupId>com.datastax.oss</groupId> \r\n    <artifactId>java-driver-core</artifactId> \r\n    <version>4.13.0</version> \r\n</dependency>\r\n```","```\r\n@Configuration\r\npublic class CassandraConfig extends AbstractCassandraConfiguration {\r\n\r\n    @Override\r\n    protected String getKeyspaceName() {\r\n        return \"inventory\";\r\n    }\r\n\r\n    @Override\r\n    public String getContactPoints() {\r\n        return \"localhost\";\r\n    }\r\n\r\n    @Override\r\n    protected String getLocalDataCenter() {\r\n         return \"datacenter1\";\r\n    }\r\n}\r\n```","```\r\nCREATE KEYSPACE inventory\r\nWITH replication = {\r\n    'class' : 'NetworkTopologyStrategy',\r\n    'datacenter1' : 3\r\n};\r\n```","```\r\nuse inventory;\r\n\r\nCREATE TABLE vehicles (\r\n   vin text PRIMARY KEY,\r\n   year int,\r\n   make varchar,\r\n   model varchar\r\n);\r\n```","```\r\n@RunWith(SpringRunner.class)\r\n@DataCassandraTest\r\n@Import(CassandraConfig.class)\r\npublic class InventoryServiceIntegrationTest {\r\n\r\n    @Autowired\r\n    private InventoryRepository repository;\r\n\r\n    @Test\r\n    public void givenVehiclesInDBInitially_whenRetrieved_thenReturnAllVehiclesFromDB() {\r\n        List<Vehicle> vehicles = repository.findAllVehicles();\r\n\r\n        assertThat(vehicles).isNotNull();\r\n        assertThat(vehicles).isNotEmpty();\r\n    }\r\n}\r\n```","```\r\npublic class InventoryServiceLiveTest {\r\n\r\n    // ...\r\n\r\n    public static DockerComposeContainer container =\r\n            new DockerComposeContainer(new File(\"src/test/resources/compose-test.yml\"));\r\n\r\n    @BeforeAll\r\n    static void beforeAll() {\r\n        container.start();\r\n    }\r\n\r\n    @AfterAll\r\n    static void afterAll() {\r\n        container.stop();\r\n    }\r\n}\r\n```","```\r\n@Repository\r\npublic interface InventoryRepository extends CrudRepository<Vehicle, String> {\r\n\r\n    @Query(\"select * from vehicles\")\r\n    List<Vehicle> findAllVehicles();\r\n\r\n    Optional<Vehicle> findByVin(@Param(\"vin\") String vin);\r\n\r\n    void deleteByVin(String vin);\r\n}\r\n```","```\r\nspring:\r\n  data:\r\n    cassandra:\r\n      request:\r\n        consistency: local-quorum\r\n```"]