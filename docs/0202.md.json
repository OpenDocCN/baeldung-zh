["```\r\n<dependency>\r\n    <groupId>uk.co.real-logic</groupId>\r\n    <artifactId>sbe-all</artifactId>\r\n    <version>1.27.0</version>\r\n</dependency>\r\n```","```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<sbe:messageSchema xmlns:sbe=\"http://fixprotocol.io/2016/sbe\"\r\n  package=\"com.baeldung.sbe.stub\" id=\"1\" version=\"0\" semanticVersion=\"5.2\"\r\n  description=\"A schema represents stock market data.\">\r\n    <types>\r\n        <composite name=\"messageHeader\" \r\n          description=\"Message identifiers and length of message root.\">\r\n            <type name=\"blockLength\" primitiveType=\"uint16\"/>\r\n            <type name=\"templateId\" primitiveType=\"uint16\"/>\r\n            <type name=\"schemaId\" primitiveType=\"uint16\"/>\r\n            <type name=\"version\" primitiveType=\"uint16\"/>\r\n        </composite>\r\n        <enum name=\"Market\" encodingType=\"uint8\">\r\n            <validValue name=\"NYSE\" description=\"New York Stock Exchange\">0</validValue>\r\n            <validValue name=\"NASDAQ\" \r\n              description=\"National Association of Securities Dealers Automated Quotations\">1</validValue>\r\n        </enum>\r\n        <type name=\"Symbol\" primitiveType=\"char\" length=\"4\" characterEncoding=\"ASCII\" \r\n          description=\"Stock symbol\"/>\r\n        <composite name=\"Decimal\">\r\n            <type name=\"mantissa\" primitiveType=\"uint64\" minValue=\"0\"/>\r\n            <type name=\"exponent\" primitiveType=\"int8\"/>\r\n        </composite>\r\n        <enum name=\"Currency\" encodingType=\"uint8\">\r\n            <validValue name=\"USD\" description=\"US Dollar\">0</validValue>\r\n            <validValue name=\"EUR\" description=\"Euro\">1</validValue>\r\n        </enum>\r\n        <composite name=\"Quote\" \r\n          description=\"A quote represents the price of a stock in a market\">\r\n            <ref name=\"market\" type=\"Market\"/>\r\n            <ref name=\"symbol\" type=\"Symbol\"/>\r\n            <ref name=\"price\" type=\"Decimal\"/>\r\n            <ref name=\"currency\" type=\"Currency\"/>\r\n        </composite>\r\n    </types>\r\n    <sbe:message name=\"TradeData\" id=\"1\" description=\"Represents a quote and amount of trade\">\r\n        <field name=\"quote\" id=\"1\" type=\"Quote\"/>\r\n        <field name=\"amount\" id=\"2\" type=\"uint16\"/>\r\n    </sbe:message>\r\n</sbe:messageSchema>\r\n```","```\r\n<composite name=\"messageHeader\" description=\"Message identifiers and length of message root.\">\r\n    <type name=\"blockLength\" primitiveType=\"uint16\"/>\r\n    <type name=\"templateId\" primitiveType=\"uint16\"/>\r\n    <type name=\"schemaId\" primitiveType=\"uint16\"/>\r\n    <type name=\"version\" primitiveType=\"uint16\"/>\r\n</composite>\r\n```","```\r\n<enum name=\"Market\" encodingType=\"uint8\">\r\n    <validValue name=\"NYSE\" description=\"New York Stock Exchange\">0</validValue>\r\n    <validValue name=\"NASDAQ\" \r\n      description=\"National Association of Securities Dealers Automated Quotations\">1</validValue>\r\n</enum>\r\n```","```\r\n<type name=\"Symbol\" primitiveType=\"char\" length=\"4\" characterEncoding=\"ASCII\" description=\"Instrument symbol\"/>\r\n```","```\r\n<composite name=\"Decimal\">\r\n    <type name=\"mantissa\" primitiveType=\"uint64\" minValue=\"0\"/>\r\n    <type name=\"exponent\" primitiveType=\"int8\"/>\r\n</composite>\r\n```","```\r\n<enum name=\"Currency\" encodingType=\"uint8\">\r\n    <validValue name=\"USD\" description=\"US Dollar\">0</validValue>\r\n    <validValue name=\"EUR\" description=\"Euro\">1</validValue>\r\n</enum>\r\n```","```\r\n<composite name=\"Quote\" description=\"A quote represents the price of an instrument in a market\">\r\n    <ref name=\"market\" type=\"Market\"/>\r\n    <ref name=\"symbol\" type=\"Symbol\"/>\r\n    <ref name=\"price\" type=\"Decimal\"/>\r\n    <ref name=\"currency\" type=\"Currency\"/>\r\n</composite>\r\n```","```\r\n<sbe:message name=\"TradeData\" id=\"1\" description=\"Represents a quote and amount of trade\">\r\n    <field name=\"quote\" id=\"1\" type=\"Quote\"/>\r\n    <field name=\"amount\" id=\"2\" type=\"uint16\"/>\r\n</sbe:message>\r\n```","```\r\njava -jar -Dsbe.output.dir=target/generated-sources/java \r\n  <local-maven-directory>/repository/uk/co/real-logic/sbe-all/1.26.0/sbe-all-1.26.0.jar \r\n  src/main/resources/schema.xml\r\n```","```\r\n<build>\r\n    <plugins>\r\n        <plugin>\r\n            <groupId>org.codehaus.mojo</groupId>\r\n            <artifactId>exec-maven-plugin</artifactId>\r\n            <version>1.6.0</version>\r\n            <executions>\r\n                <execution>\r\n                    <phase>generate-sources</phase>\r\n                    <goals>\r\n                        <goal>java</goal>\r\n                    </goals>\r\n                </execution>\r\n            </executions>\r\n            <configuration>\r\n                <includeProjectDependencies>false</includeProjectDependencies>\r\n                <includePluginDependencies>true</includePluginDependencies>\r\n                <mainClass>uk.co.real_logic.sbe.SbeTool</mainClass>\r\n                <systemProperties>\r\n                    <systemProperty>\r\n                        <key>sbe.output.dir</key>\r\n                        <value>${project.build.directory}/generated-sources/java</value>\r\n                    </systemProperty>\r\n                </systemProperties>\r\n                <arguments>\r\n                    <argument>${project.basedir}/src/main/resources/schema.xml</argument>\r\n                </arguments>\r\n                <workingDirectory>${project.build.directory}/generated-sources/java</workingDirectory>\r\n            </configuration>\r\n            <dependencies>\r\n                <dependency>\r\n                    <groupId>uk.co.real-logic</groupId>\r\n                    <artifactId>sbe-tool</artifactId>\r\n                    <version>1.27.0</version>\r\n                </dependency>\r\n            </dependencies>\r\n        </plugin>\r\n        <plugin>\r\n            <groupId>org.codehaus.mojo</groupId>\r\n            <artifactId>build-helper-maven-plugin</artifactId>\r\n            <version>3.0.0</version>\r\n            <executions>\r\n                <execution>\r\n                    <id>add-source</id>\r\n                    <phase>generate-sources</phase>\r\n                    <goals>\r\n                        <goal>add-source</goal>\r\n                    </goals>\r\n                    <configuration>\r\n                        <sources>\r\n                            <source>${project.build.directory}/generated-sources/java/</source>\r\n                        </sources>\r\n                    </configuration>\r\n                </execution>\r\n            </executions>\r\n        </plugin>\r\n    </plugins>\r\n</build>\r\n```","```\r\npublic class MarketData {\r\n\r\n    private int amount;\r\n    private double price;\r\n    private Market market;\r\n    private Currency currency;\r\n    private String symbol;\r\n\r\n    // Constructor, getters and setters\r\n}\r\n```","```\r\nprivate MarketData marketData;\r\n\r\n@BeforeEach\r\npublic void setup() {\r\n    marketData = new MarketData(2, 128.99, Market.NYSE, Currency.USD, \"IBM\");\r\n}\r\n```","```\r\n@Test\r\npublic void givenMarketData_whenEncode_thenDecodedValuesMatch() {\r\n    // our buffer to write encoded data, initial cap. 128 bytes\r\n    UnsafeBuffer buffer = new UnsafeBuffer(ByteBuffer.allocate(128));\r\n    MessageHeaderEncoder headerEncoder = new MessageHeaderEncoder();\r\n    TradeDataEncoder dataEncoder = new TradeDataEncoder();\r\n\r\n    // we'll write the rest of the code here\r\n}\r\n```","```\r\nBigDecimal priceDecimal = BigDecimal.valueOf(marketData.getPrice());\r\nint priceMantissa = priceDecimal.scaleByPowerOfTen(priceDecimal.scale()).intValue();\r\nint priceExponent = priceDecimal.scale() * -1;\r\n```","```\r\nTradeDataEncoder encoder = dataEncoder.wrapAndApplyHeader(buffer, 0, headerEncoder);\r\nencoder.amount(marketData.getAmount());\r\nencoder.quote()\r\n  .market(marketData.getMarket())\r\n  .currency(marketData.getCurrency())\r\n  .symbol(marketData.getSymbol())\r\n  .price()\r\n    .mantissa(priceMantissa)\r\n    .exponent((byte) priceExponent);\r\n```","```\r\nMessageHeaderDecoder headerDecoder = new MessageHeaderDecoder();\r\nTradeDataDecoder dataDecoder = new TradeDataDecoder();\r\n```","```\r\ndataDecoder.wrapAndApplyHeader(buffer, 0, headerDecoder);\r\n```","```\r\ndouble price = BigDecimal.valueOf(dataDecoder.quote().price().mantissa())\r\n  .scaleByPowerOfTen(dataDecoder.quote().price().exponent())\r\n  .doubleValue();\r\n```","```\r\nAssertions.assertEquals(2, dataDecoder.amount());\r\nAssertions.assertEquals(\"IBM\", dataDecoder.quote().symbol());\r\nAssertions.assertEquals(Market.NYSE, dataDecoder.quote().market());\r\nAssertions.assertEquals(Currency.USD, dataDecoder.quote().currency());\r\nAssertions.assertEquals(128.99, price);\r\n```"]