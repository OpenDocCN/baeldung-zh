["```\r\n<dependency>\r\n    <groupId>org.asynchttpclient</groupId>\r\n    <artifactId>async-http-client</artifactId>\r\n    <version>2.2.0</version>\r\n</dependency>\r\n```","```\r\nAsyncHttpClient client = Dsl.asyncHttpClient();\r\n```","```\r\nDefaultAsyncHttpClientConfig.Builder clientBuilder = Dsl.config()\r\n```","```\r\nDefaultAsyncHttpClientConfig.Builder clientBuilder = Dsl.config()\r\n  .setConnectTimeout(500)\r\n  .setProxyServer(new ProxyServer(...));\r\nAsyncHttpClient client = Dsl.asyncHttpClient(clientBuilder);\r\n```","```\r\njava -jar -Dorg.asynchttpclient.disableUrlEncodingForBoundRequests=true\r\n```","```\r\nBoundRequestBuilder getRequest = client.prepareGet(\"http://www.baeldung.com\");\r\n```","```\r\nRequest getRequest = new RequestBuilder(HttpConstants.Methods.GET)\r\n  .setUrl(\"http://www.baeldung.com\")\r\n  .build();\r\n```","```\r\nRequest getRequest = Dsl.get(\"http://www.baeldung.com\").build()\r\n```","```\r\nFuture<Response> responseFuture = boundGetRequest.execute();\r\nresponseFuture.get();\r\n```","```\r\nFuture<Response> responseFuture = client.executeRequest(unboundRequest);\r\nresponseFuture.get();\r\n```","```\r\nrequest.execute(new AsyncHandler<Object>() {\r\n    @Override\r\n    public State onStatusReceived(HttpResponseStatus responseStatus)\r\n      throws Exception {\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public State onHeadersReceived(HttpHeaders headers)\r\n      throws Exception {\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public State onBodyPartReceived(HttpResponseBodyPart bodyPart)\r\n      throws Exception {\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public void onThrowable(Throwable t) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public Object onCompleted() throws Exception {\r\n        return null;\r\n    }\r\n});\r\n```","```\r\nrequest.execute(new AsyncCompletionHandler<Object>() {\r\n    @Override\r\n    public Object onCompleted(Response response) throws Exception {\r\n        return response;\r\n    }\r\n});\r\n```","```\r\nListenableFuture<Response> listenableFuture = client\r\n  .executeRequest(unboundRequest);\r\nlistenableFuture.addListener(() -> {\r\n    Response response = listenableFuture.get();\r\n    LOG.debug(response.getStatusCode());\r\n}, Executors.newCachedThreadPool());\r\n```"]