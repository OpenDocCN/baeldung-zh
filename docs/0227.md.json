["```\r\n/ (root)\r\n|-- baeldung\r\n    \\-- bar\r\n    |   |-- one.txt\r\n    |   |-- two.txt\r\n    \\-- foo\r\n        |-- three.txt\r\n```","```\r\none.txt -> /baeldung/bar/one.txt\r\ntwo.txt -> /baeldung/bar/two.txt\r\nthree.txt -> /baeldung/foo/three.txt\r\n```","```\r\none.txt -> ./bar/one.txt\r\ntwo.txt -> ./bar/two.txt\r\nthree.txt -> ./foo/three.txt\r\n```","```\r\none.txt -> ./one.txt\r\ntwo.txt -> ./two.txt\r\nthree.txt -> ../foo/three.txt\r\n```","```\r\nPath pathOne = Paths.get(\"/baeldung/bar/one.txt\");\r\nPath pathTwo = Paths.get(\"/baeldung/bar/two.txt\");\r\nPath pathThree = Paths.get(\"/baeldung/foo/three.txt\");\r\n```","```\r\nPath result = pathOne.relativize(pathTwo);\r\n\r\nassertThat(result)\r\n  .isRelative()\r\n  .isEqualTo(Paths.get(\"../two.txt\"));\r\n```","```\r\nPath result = pathOne.getParent().relativize(pathTwo);\r\n\r\nassertThat(result)\r\n  .isRelative()\r\n  .isEqualTo(Paths.get(\"two.txt\"));\r\n```","```\r\nPath resultOneToThree = pathOne.relativize(pathThree);\r\nPath resultThreeToOne = pathThree.relativize(pathOne);\r\n\r\nassertThat(resultOneToThree)\r\n  .isRelative()\r\n  .isEqualTo(Paths.get(\"..\\..\\foo\\three.txt\"));\r\nassertThat(result)\r\n  .isRelative()\r\n  .isEqualTo(Paths.get(\"..\\..\\bar\\one.txt\")); \r\n```","```\r\nURI uriOne = pathOne.toURI();\r\n// URI uriOne = URI.create(\"file:///baeldung/bar/one.txt\")\r\nURI uriTwo = pathTwo.toURI();\r\nURI uriThree = pathThree.toURI();\r\n```","```\r\nURI result = uriOne.relativize(uriTwo);\r\n\r\nassertThat(result)\r\n  .asString()\r\n  .contains(\"file:///baeldung/bar/two.txt\");\r\n```","```\r\nURI uriOneParent = pathOne.getParent().toUri(); // file:///baeldung/bar/\r\nURI result = uriOneParent.relativize(uriTwo);\r\n\r\nassertThat(result)\r\n  .asString()\r\n  .contains(\"two.txt\");\r\n```"]