["```\r\n<parent>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-parent</artifactId>\r\n    <version>2.4.0</version>\r\n    <relativePath/>\r\n</parent>\r\n\r\n<dependencies>\r\n    <dependency>\r\n        <groupId>org.springframework.boot</groupId>\r\n        <artifactId>spring-boot-starter-test</artifactId>\r\n        <scope>test</scope>\r\n    </dependency>\r\n</dependencies> \r\n\r\n<dependencyManagement>\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.springframework.cloud</groupId>\r\n            <artifactId>spring-cloud-dependencies</artifactId>\r\n            <version>Hoxton.SR4</version>\r\n            <type>pom</type>\r\n            <scope>import</scope>\r\n        </dependency>\r\n    </dependencies>\r\n</dependencyManagement>\r\n\r\n<build>\r\n    <plugins>\r\n        <plugin>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-maven-plugin</artifactId>\r\n        </plugin>\r\n    </plugins>\r\n</build>\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.cloud</groupId>\r\n    <artifactId>spring-cloud-config-server</artifactId>\r\n</dependency>\r\n```","```\r\n@SpringBootApplication\r\n@EnableConfigServer\r\npublic class ConfigApplication {...}\r\n```","```\r\nserver.port=8081\r\nspring.application.name=config\r\n\r\nspring.cloud.config.server.git.uri=file://${user.home}/application-config\r\n```","```\r\nTomcat started on port(s): 8081 (http)\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.cloud</groupId>\r\n    <artifactId>spring-cloud-starter-config</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.cloud</groupId>\r\n    <artifactId>spring-cloud-starter-eureka-server</artifactId>\r\n</dependency>\r\n```","```\r\n@SpringBootApplication\r\n@EnableEurekaServer\r\npublic class DiscoveryApplication {...}\r\n```","```\r\nspring.cloud.config.name=discovery\r\nspring.cloud.config.uri=http://localhost:8081\r\n```","```\r\nspring.application.name=discovery\r\nserver.port=8082\r\n\r\neureka.instance.hostname=localhost\r\n\r\neureka.client.serviceUrl.defaultZone=http://localhost:8082/eureka/\r\neureka.client.register-with-eureka=false\r\neureka.client.fetch-registry=false\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.cloud</groupId>\r\n    <artifactId>spring-cloud-starter-eureka</artifactId>\r\n</dependency>\r\n```","```\r\neureka.client.region = default\r\neureka.client.registryFetchIntervalSeconds = 5\r\neureka.client.serviceUrl.defaultZone=http://localhost:8082/eureka/\r\n```","```\r\nFetching config from server at: http://localhost:8081\r\n...\r\nTomcat started on port(s): 8082 (http)\r\n```","```\r\nDiscoveryClient_CONFIG/10.1.10.235:config:8081: registering service...\r\nTomcat started on port(s): 8081 (http)\r\nDiscoveryClient_CONFIG/10.1.10.235:config:8081 - registration status: 204\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.cloud</groupId>\r\n    <artifactId>spring-cloud-starter-config</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.cloud</groupId>\r\n    <artifactId>spring-cloud-starter-eureka</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.cloud</groupId>\r\n    <artifactId>spring-cloud-starter-zuul</artifactId>\r\n</dependency>\r\n```","```\r\n@SpringBootApplication\r\n@EnableZuulProxy\r\n@EnableEurekaClient\r\npublic class GatewayApplication {...}\r\n```","```\r\nspring.cloud.config.name=gateway\r\nspring.cloud.config.discovery.service-id=config\r\nspring.cloud.config.discovery.enabled=true\r\n\r\neureka.client.serviceUrl.defaultZone=http://localhost:8082/eureka/\r\n```","```\r\nspring.application.name=gateway\r\nserver.port=8080\r\n\r\neureka.client.region = default\r\neureka.client.registryFetchIntervalSeconds = 5\r\n\r\nzuul.routes.book-service.path=/book-service/**\r\nzuul.routes.book-service.sensitive-headers=Set-Cookie,Authorization\r\nhystrix.command.book-service.execution.isolation.thread.timeoutInMilliseconds=600000\r\n\r\nzuul.routes.rating-service.path=/rating-service/**\r\nzuul.routes.rating-service.sensitive-headers=Set-Cookie,Authorization\r\nhystrix.command.rating-service.execution.isolation.thread.timeoutInMilliseconds=600000\r\n\r\nzuul.routes.discovery.path=/discovery/**\r\nzuul.routes.discovery.sensitive-headers=Set-Cookie,Authorization\r\nzuul.routes.discovery.url=http://localhost:8082\r\nhystrix.command.discovery.execution.isolation.thread.timeoutInMilliseconds=600000\r\n```","```\r\nFetching config from server at: http://10.1.10.235:8081/\r\n...\r\nDiscoveryClient_GATEWAY/10.1.10.235:gateway:8080: registering service...\r\nDiscoveryClient_GATEWAY/10.1.10.235:gateway:8080 - registration status: 204\r\nTomcat started on port(s): 8080 (http)\r\n```","```\r\nFetching config from server at: http://localhost:8888\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.cloud</groupId>\r\n    <artifactId>spring-cloud-starter-config</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.cloud</groupId>\r\n    <artifactId>spring-cloud-starter-eureka</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n</dependency>\r\n```","```\r\n@SpringBootApplication\r\n@EnableEurekaClient\r\n@RestController\r\n@RequestMapping(\"/books\")\r\npublic class BookServiceApplication {\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(BookServiceApplication.class, args);\r\n    }\r\n\r\n    private List<Book> bookList = Arrays.asList(\r\n        new Book(1L, \"Baeldung goes to the market\", \"Tim Schimandle\"),\r\n        new Book(2L, \"Baeldung goes to the park\", \"Slavisa\")\r\n    );\r\n\r\n    @GetMapping(\"\")\r\n    public List<Book> findAllBooks() {\r\n        return bookList;\r\n    }\r\n\r\n    @GetMapping(\"/{bookId}\")\r\n    public Book findBook(@PathVariable Long bookId) {\r\n        return bookList.stream().filter(b -> b.getId().equals(bookId)).findFirst().orElse(null);\r\n    }\r\n}\r\n```","```\r\npublic class Book {\r\n    private Long id;\r\n    private String author;\r\n    private String title;\r\n\r\n    // standard getters and setters\r\n}\r\n```","```\r\nspring.cloud.config.name=book-service\r\nspring.cloud.config.discovery.service-id=config\r\nspring.cloud.config.discovery.enabled=true\r\n\r\neureka.client.serviceUrl.defaultZone=http://localhost:8082/eureka/\r\n```","```\r\nspring.application.name=book-service\r\nserver.port=8083\r\n\r\neureka.client.region = default\r\neureka.client.registryFetchIntervalSeconds = 5\r\neureka.client.serviceUrl.defaultZone=http://localhost:8082/eureka/\r\n```","```\r\nDiscoveryClient_BOOK-SERVICE/10.1.10.235:book-service:8083: registering service...\r\nDiscoveryClient_BOOK-SERVICE/10.1.10.235:book-service:8083 - registration status: 204\r\nTomcat started on port(s): 8083 (http)\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.cloud</groupId>\r\n    <artifactId>spring-cloud-starter-config</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.cloud</groupId>\r\n    <artifactId>spring-cloud-starter-eureka</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n</dependency>\r\n```","```\r\n@SpringBootApplication\r\n@EnableEurekaClient\r\n@RestController\r\n@RequestMapping(\"/ratings\")\r\npublic class RatingServiceApplication {\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(RatingServiceApplication.class, args);\r\n    }\r\n\r\n    private List<Rating> ratingList = Arrays.asList(\r\n        new Rating(1L, 1L, 2),\r\n        new Rating(2L, 1L, 3),\r\n        new Rating(3L, 2L, 4),\r\n        new Rating(4L, 2L, 5)\r\n    );\r\n\r\n    @GetMapping(\"\")\r\n    public List<Rating> findRatingsByBookId(@RequestParam Long bookId) {\r\n        return bookId == null || bookId.equals(0L) ? Collections.EMPTY_LIST : ratingList.stream().filter(r -> r.getBookId().equals(bookId)).collect(Collectors.toList());\r\n    }\r\n\r\n    @GetMapping(\"/all\")\r\n    public List<Rating> findAllRatings() {\r\n        return ratingList;\r\n    }\r\n}\r\n```","```\r\npublic class Rating {\r\n    private Long id;\r\n    private Long bookId;\r\n    private int stars;\r\n\r\n    //standard getters and setters\r\n}\r\n```","```\r\nspring.cloud.config.name=rating-service\r\nspring.cloud.config.discovery.service-id=config\r\nspring.cloud.config.discovery.enabled=true\r\n\r\neureka.client.serviceUrl.defaultZone=http://localhost:8082/eureka/\r\n```","```\r\nspring.application.name=rating-service\r\nserver.port=8084\r\n\r\neureka.client.region = default\r\neureka.client.registryFetchIntervalSeconds = 5\r\neureka.client.serviceUrl.defaultZone=http://localhost:8082/eureka/\r\n```","```\r\nDiscoveryClient_RATING-SERVICE/10.1.10.235:rating-service:8083: registering service...\r\nDiscoveryClient_RATING-SERVICE/10.1.10.235:rating-service:8083 - registration status: 204\r\nTomcat started on port(s): 8084 (http)\r\n```"]