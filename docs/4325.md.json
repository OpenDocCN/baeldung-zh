["```\r\n<dependency>\r\n    <groupId>org.hamcrest</groupId>\r\n    <artifactId>java-hamcrest</artifactId>\r\n    <version>2.0.0.0</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n```","```\r\npublic class Location {}\r\n```","```\r\npublic class City extends Location {\r\n\r\n    String name;\r\n    String state;\r\n\r\n    // standard constructor, getters and setters\r\n\r\n    @Override\r\n    public String toString() {\r\n        if (this.name == null && this.state == null) {\r\n            return null;\r\n        }\r\n        StringBuilder sb = new StringBuilder();\r\n        sb.append(\"[\");\r\n        sb.append(\"Name: \");\r\n        sb.append(this.name);\r\n        sb.append(\", \");\r\n        sb.append(\"State: \");\r\n        sb.append(this.state);\r\n        sb.append(\"]\");\r\n        return sb.toString();\r\n    }\r\n}\r\n```","```\r\n@Test\r\npublic void givenACity_whenHasToString_thenCorrect() {\r\n    City city = new City(\"San Francisco\", \"CA\");\r\n\r\n    assertThat(city, hasToString(\"[Name: San Francisco, State: CA]\"));\r\n}\r\n```","```\r\n@Test\r\npublic void givenACity_whenHasToStringEqualToIgnoringCase_thenCorrect() {\r\n    City city = new City(\"San Francisco\", \"CA\");\r\n\r\n    assertThat(city, hasToString(\r\n      equalToIgnoringCase(\"[NAME: SAN FRANCISCO, STATE: CA]\")));\r\n}\r\n```","```\r\n@Test\r\npublic void givenACity_whenHasToStringEmptyOrNullString_thenCorrect() {\r\n    City city = new City(null, null);\r\n\r\n    assertThat(city, hasToString(emptyOrNullString()));\r\n}\r\n```","```\r\n@Test\r\npublic void givenACity_whenTypeCompatibleWithLocation_thenCorrect() {\r\n    City city = new City(\"San Francisco\", \"CA\");\r\n\r\n    assertThat(city.getClass(), is(typeCompatibleWith(Location.class)));\r\n}\r\n```","```\r\n@Test\r\npublic void givenACity_whenTypeNotCompatibleWithString_thenCorrect() {\r\n    City city = new City(\"San Francisco\", \"CA\");\r\n\r\n    assertThat(city.getClass(), is(not(typeCompatibleWith(String.class))));\r\n}\r\n```","```\r\n@Test\r\npublic void givenACity_whenTypeCompatibleWithObject_thenCorrect() {\r\n    City city = new City(\"San Francisco\", \"CA\");\r\n\r\n    assertThat(city.getClass(), is(typeCompatibleWith(Object.class)));\r\n}\r\n```"]