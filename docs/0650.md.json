["```\r\npublic class Person {\r\n    private static final int ADULT_AGE = 18;\r\n\r\n    private int age;\r\n\r\n    public Person(int age) {\r\n        this.age = age;\r\n    }\r\n\r\n    public boolean isAdult() {\r\n        return age >= ADULT_AGE;\r\n    }\r\n}\r\n```","```\r\nList<Person> people = Arrays.asList(\r\n  new Person(1),\r\n  new Person(18),\r\n  new Person(2)\r\n);\r\n```","```\r\npeople.stream()                      \r\n  .filter(Person::isAdult)           \r\n  .collect(Collectors.toList());\r\n```","```\r\npeople.stream()                       \r\n  .filter(person -> !person.isAdult())\r\n  .collect(Collectors.toList());\r\n```","```\r\npeople.stream()                 \r\n  .filter(Person::isNotAdult)   \r\n  .collect(Collectors.toList());\r\n```","```\r\npeople.stream()                          \r\n  .filter(Predicate.not(Person::isAdult))\r\n  .collect(Collectors.toList());\r\n```","```\r\npeople.stream()                  \r\n  .filter(not(Person::isAdult))  \r\n  .collect(Collectors.toList());\r\n```"]