["```\r\nsyntax = \"proto3\";\r\npackage baeldung;\r\noption java_package = \"com.baeldung.protobuf\";\r\noption java_outer_classname = \"BaeldungTraining\";\r\n\r\nmessage Course {\r\n    int32 id = 1;\r\n    string course_name = 2;\r\n    repeated Student student = 3;\r\n}\r\nmessage Student {\r\n    int32 id = 1;\r\n    string first_name = 2;\r\n    string last_name = 3;\r\n    string email = 4;\r\n    repeated PhoneNumber phone = 5;\r\n    message PhoneNumber {\r\n        string number = 1;\r\n        PhoneType type = 2;\r\n    }\r\n    enum PhoneType {\r\n        MOBILE = 0;\r\n        LANDLINE = 1;\r\n    }\r\n}\r\n```","```\r\nprotoc --java_out=java resources/baeldung.proto\r\n```","```\r\n<dependency>\r\n    <groupId>com.google.protobuf</groupId>\r\n    <artifactId>protobuf-java</artifactId>\r\n    <version>3.0.0-beta-3</version>\r\n</dependency>\r\n```","```\r\npublic int getId();\r\npublic java.lang.String getCourseName();\r\n```","```\r\npublic java.util.List<com.baeldung.protobuf.BaeldungTraining.Student> getStudentList();\r\npublic int getStudentCount();\r\npublic com.baeldung.protobuf.BaeldungTraining.Student getStudent(int index);\r\n```","```\r\npublic int getId();\r\npublic java.lang.String getFirstName();\r\npublic java.lang.String getLastName();\r\npublic java.lang.String.getEmail();\r\n```","```\r\npublic java.util.List<com.baeldung.protobuf.BaeldungTraining.Student.PhoneNumber> getPhoneList();\r\npublic int getPhoneCount();\r\npublic com.baeldung.protobuf.BaeldungTraining.Student.PhoneNumber getPhone(int index);\r\n```","```\r\npublic java.lang.String getNumber();\r\npublic com.baeldung.protobuf.BaeldungTraining.Student.PhoneType getType();\r\n```","```\r\npublic enum PhoneType implements com.google.protobuf.ProtocolMessageEnum {\r\n    MOBILE(0),\r\n    LANDLINE(1),\r\n    UNRECOGNIZED(-1),\r\n    ;\r\n    // Other declarations\r\n}\r\n```","```\r\n@SpringBootApplication\r\npublic class Application {\r\n    @Bean\r\n    ProtobufHttpMessageConverter protobufHttpMessageConverter() {\r\n        return new ProtobufHttpMessageConverter();\r\n    }\r\n\r\n    @Bean\r\n    public CourseRepository createTestCourses() {\r\n        Map<Integer, Course> courses = new HashMap<>();\r\n        Course course1 = Course.newBuilder()\r\n          .setId(1)\r\n          .setCourseName(\"REST with Spring\")\r\n          .addAllStudent(createTestStudents())\r\n          .build();\r\n        Course course2 = Course.newBuilder()\r\n          .setId(2)\r\n          .setCourseName(\"Learn Spring Security\")\r\n          .addAllStudent(new ArrayList<Student>())\r\n          .build();\r\n        courses.put(course1.getId(), course1);\r\n        courses.put(course2.getId(), course2);\r\n        return new CourseRepository(courses);\r\n    }\r\n\r\n    // Other declarations\r\n}\r\n```","```\r\npublic class CourseRepository {\r\n    Map<Integer, Course> courses;\r\n\r\n    public CourseRepository (Map<Integer, Course> courses) {\r\n        this.courses = courses;\r\n    }\r\n\r\n    public Course getCourse(int id) {\r\n        return courses.get(id);\r\n    }\r\n}\r\n```","```\r\n@RestController\r\npublic class CourseController {\r\n    @Autowired\r\n    CourseRepository courseRepo;\r\n\r\n    @RequestMapping(\"/courses/{id}\")\r\n    Course customer(@PathVariable Integer id) {\r\n        return courseRepo.getCourse(id);\r\n    }\r\n}\r\n```","```\r\n@RunWith(SpringJUnit4ClassRunner.class)\r\n@SpringApplicationConfiguration(classes = Application.class)\r\n@WebIntegrationTest\r\npublic class ApplicationTest {\r\n    // Other declarations\r\n}\r\n```","```\r\nprivate static final String COURSE1_URL = \"http://localhost:8080/courses/1\";\r\n```","```\r\nprivate void assertResponse(String response) {\r\n    assertThat(response, containsString(\"id\"));\r\n    assertThat(response, containsString(\"course_name\"));\r\n    assertThat(response, containsString(\"REST with Spring\"));\r\n    assertThat(response, containsString(\"student\"));\r\n    assertThat(response, containsString(\"first_name\"));\r\n    assertThat(response, containsString(\"last_name\"));\r\n    assertThat(response, containsString(\"email\"));\r\n    assertThat(response, containsString(\"[[email protected]](/web/20220707143825/https://www.baeldung.com/cdn-cgi/l/email-protection)\"));\r\n    assertThat(response, containsString(\"[[email protected]](/web/20220707143825/https://www.baeldung.com/cdn-cgi/l/email-protection)\"));\r\n    assertThat(response, containsString(\"[[email protected]](/web/20220707143825/https://www.baeldung.com/cdn-cgi/l/email-protection)\"));\r\n    assertThat(response, containsString(\"phone\"));\r\n    assertThat(response, containsString(\"number\"));\r\n    assertThat(response, containsString(\"type\"));\r\n}\r\n```","```\r\n@Autowired\r\nprivate RestTemplate restTemplate;\r\n\r\n@Test\r\npublic void whenUsingRestTemplate_thenSucceed() {\r\n    ResponseEntity<Course> course = restTemplate.getForEntity(COURSE1_URL, Course.class);\r\n    assertResponse(course.toString());\r\n}\r\n```","```\r\n@Bean\r\nRestTemplate restTemplate(ProtobufHttpMessageConverter hmc) {\r\n    return new RestTemplate(Arrays.asList(hmc));\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>com.googlecode.protobuf-java-format</groupId>\r\n    <artifactId>protobuf-java-format</artifactId>\r\n    <version>1.4</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.apache.httpcomponents</groupId>\r\n    <artifactId>httpclient</artifactId>\r\n    <version>4.5.2</version>\r\n</dependency>\r\n```","```\r\nprivate InputStream executeHttpRequest(String url) throws IOException {\r\n    CloseableHttpClient httpClient = HttpClients.createDefault();\r\n    HttpGet request = new HttpGet(url);\r\n    HttpResponse httpResponse = httpClient.execute(request);\r\n    return httpResponse.getEntity().getContent();\r\n}\r\n```","```\r\nprivate String convertProtobufMessageStreamToJsonString(InputStream protobufStream) throws IOException {\r\n    JsonFormat jsonFormat = new JsonFormat();\r\n    Course course = Course.parseFrom(protobufStream);\r\n    return jsonFormat.printToString(course);\r\n}\r\n```","```\r\n@Test\r\npublic void whenUsingHttpClient_thenSucceed() throws IOException {\r\n    InputStream responseStream = executeHttpRequest(COURSE1_URL);\r\n    String jsonOutput = convertProtobufMessageStreamToJsonString(responseStream);\r\n    assertResponse(jsonOutput);\r\n}\r\n```","```\r\nid: 1\r\ncourse_name: \"REST with Spring\"\r\nstudent {\r\n    id: 1\r\n    first_name: \"John\"\r\n    last_name: \"Doe\"\r\n    email: \"[[email protected]](/web/20220707143825/https://www.baeldung.com/cdn-cgi/l/email-protection)\"\r\n    phone {\r\n        number: \"123456\"\r\n    }\r\n}\r\nstudent {\r\n    id: 2\r\n    first_name: \"Richard\"\r\n    last_name: \"Roe\"\r\n    email: \"[[email protected]](/web/20220707143825/https://www.baeldung.com/cdn-cgi/l/email-protection)\"\r\n    phone {\r\n        number: \"234567\"\r\n        type: LANDLINE\r\n    }\r\n}\r\nstudent {\r\n    id: 3\r\n    first_name: \"Jane\"\r\n    last_name: \"Doe\"\r\n    email: \"[[email protected]](/web/20220707143825/https://www.baeldung.com/cdn-cgi/l/email-protection)\"\r\n    phone {\r\n        number: \"345678\"\r\n    }\r\n    phone {\r\n        number: \"456789\"\r\n        type: LANDLINE\r\n    }\r\n}\r\n```"]