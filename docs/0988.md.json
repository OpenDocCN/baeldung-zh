["```\r\n@Test\r\nvoid givenAPaymentMono_whenCallingServiceOnNext_thenCallServiceWithPayment() {\r\n    Payment paymentOf100 = new Payment(100);\r\n    Mono<Payment> paymentMono = Mono.just(paymentOf100);\r\n\r\n    paymentMono.doOnNext(paymentService::processPayment)\r\n        .block();\r\n\r\n    verify(paymentService).processPayment(paymentOf100);\r\n} \r\n```","```\r\n@Test\r\nvoid givenAnEmptyMono_whenCallingServiceOnNext_thenDoNotCallService() {\r\n    Mono<Payment> emptyMono = Mono.empty();\r\n\r\n    emptyMono.doOnNext(paymentService::processPayment)\r\n        .block();\r\n\r\n    verify(paymentService, never()).processPayment(any());\r\n}\r\n```","```\r\n@Test\r\nvoid givenAPaymentMono_whenCallingServiceOnSuccess_thenCallServiceWithPayment() {\r\n    Payment paymentOf100 = new Payment(100);\r\n    Mono<Payment> paymentMono = Mono.just(paymentOf100);\r\n\r\n    paymentMono.doOnSuccess(paymentService::processPayment)\r\n        .block();\r\n\r\n    verify(paymentService).processPayment(paymentOf100);\r\n}\r\n```","```\r\nTest\r\nvoid givenAnEmptyMono_whenCallingServiceOnSuccess_thenCallServiceWithNull() {\r\n    Mono<Payment> emptyMono = Mono.empty();\r\n\r\n    emptyMono.doOnSuccess(paymentService::processPayment)\r\n        .block();\r\n\r\n    verify(paymentService).processPayment(null);\r\n}\r\n```"]