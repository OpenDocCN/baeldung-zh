["```\r\npublic interface IMarshaller {\r\n    ...\r\n    String getMime();\r\n}\r\n```","```\r\n@Component\r\n@Profile(\"test\")\r\npublic class TestMarshallerFactory implements FactoryBean<IMarshaller> {\r\n\r\n    @Autowired\r\n    private Environment env;\r\n\r\n    public IMarshaller getObject() {\r\n        String testMime = env.getProperty(\"test.mime\");\r\n        if (testMime != null) {\r\n            switch (testMime) {\r\n            case \"json\":\r\n                return new JacksonMarshaller();\r\n            case \"xml\":\r\n                return new XStreamMarshaller();\r\n            default:\r\n                throw new IllegalStateException();\r\n            }\r\n        }\r\n\r\n        return new JacksonMarshaller();\r\n    }\r\n\r\n    public Class<IMarshaller> getObjectType() {\r\n        return IMarshaller.class;\r\n    }\r\n\r\n    public boolean isSingleton() {\r\n        return true;\r\n    }\r\n}\r\n```","```\r\npublic class JacksonMarshaller implements IMarshaller {\r\n    private ObjectMapper objectMapper;\r\n\r\n    public JacksonMarshaller() {\r\n        super();\r\n        objectMapper = new ObjectMapper();\r\n    }\r\n\r\n    ...\r\n\r\n    @Override\r\n    public String getMime() {\r\n        return MediaType.APPLICATION_JSON.toString();\r\n    }\r\n}\r\n```","```\r\npublic class XStreamMarshaller implements IMarshaller {\r\n    private XStream xstream;\r\n\r\n    public XStreamMarshaller() {\r\n        super();\r\n        xstream = new XStream();\r\n    }\r\n\r\n    ...\r\n\r\n    public String getMime() {\r\n        return MediaType.APPLICATION_XML.toString();\r\n    }\r\n}\r\n```","```\r\n@ActiveProfiles({ \"test\" })\r\npublic abstract class SomeRestLiveTest {\r\n\r\n    @Autowired\r\n    private IMarshaller marshaller;\r\n\r\n    // tests\r\n    ...\r\n\r\n}\r\n```","```\r\nmvn test -Dtest.mime=xml\r\n```","```\r\nmvn integration-test -Dtest.mime=xml\r\n```","```\r\nThis build is parametrized\r\n```"]