["```\r\n<dependency>\r\n    <groupId>org.javatuples</groupId>\r\n    <artifactId>javatuples</artifactId>\r\n    <version>1.2</version>\r\n</dependency>\r\n```","```\r\nPair<String, Integer> pair = new Pair<String, Integer>(\"A pair\", 55);\r\n```","```\r\nTriplet<String, Integer, Double> triplet = Triplet.with(\"hello\", 23, 1.2);\r\n```","```\r\nList<String> listOfNames = Arrays.asList(\"john\", \"doe\", \"anne\", \"alex\");\r\nQuartet<String, String, String, String> quartet\r\n  = Quartet.fromCollection(collectionOfNames);\r\n```","```\r\nPair<String, String> pairFromList = Pair.fromIterable(listOfNames, 2);\r\n```","```\r\nString[] names = new String[] {\"john\", \"doe\", \"anne\"};\r\nTriplet<String, String, String> triplet2 = Triplet.fromArray(names);\r\n```","```\r\nQuartet<String, Double, Integer, String> quartet \r\n  = Quartet.with(\"john\", 72.5, 32, \"1051 SW\");\r\n\r\nString name = quartet.getValue0();\r\nInteger age = quartet.getValue2();\r\n\r\nassertThat(name).isEqualTo(\"john\");\r\nassertThat(age).isEqualTo(32);\r\n```","```\r\nQuartet<String, Double, Integer, String> quartet \r\n  = Quartet.with(\"john\", 72.5, 32, \"1051 SW\");\r\n\r\nString name = (String) quartet.getValue(0);\r\nInteger age = (Integer) quartet.getValue(2);\r\n\r\nassertThat(name).isEqualTo(\"john\");\r\nassertThat(age).isEqualTo(32);\r\n```","```\r\nPair<String, Integer> john = Pair.with(\"john\", 32);\r\nPair<String, Integer> alex = john.setAt0(\"alex\");\r\n\r\nassertThat(john.toString()).isNotEqualTo(alex.toString());\r\n```","```\r\nPair<String, Integer> pair1 = Pair.with(\"john\", 32);\r\nTriplet<String, Integer, String> triplet1 = pair1.add(\"1051 SW\");\r\n\r\nassertThat(triplet1.contains(\"john\"));\r\nassertThat(triplet1.contains(32));\r\nassertThat(triplet1.contains(\"1051 SW\"));\r\n```","```\r\nPair<String, Integer> pair1 = Pair.with(\"john\", 32);\r\nPair<String, Integer> pair2 = Pair.with(\"alex\", 45);\r\nQuartet<String, Integer, String, Integer> quartet2 = pair1.add(pair2);\r\n\r\nassertThat(quartet2.containsAll(pair1));\r\nassertThat(quartet2.containsAll(pair2));\r\n```","```\r\nPair<String, Integer> pair1 = Pair.with(\"john\", 32);\r\nTriplet<String, String, Integer> triplet2 = pair1.addAt1(\"1051 SW\");\r\n\r\nassertThat(triplet2.indexOf(\"john\")).isEqualTo(0);\r\nassertThat(triplet2.indexOf(\"1051 SW\")).isEqualTo(1);\r\nassertThat(triplet2.indexOf(32)).isEqualTo(2);\r\n```","```\r\nPair<String, Integer> pair1 = Pair.with(\"john\", 32);\r\nQuartet<String, Integer, String, Integer> quartet1 = pair1.add(\"alex\", 45);\r\n\r\nassertThat(quartet1.containsAll(\"alex\", \"john\", 32, 45));\r\n```","```\r\nPair<String, Integer> pair1 = Pair.with(\"john\", 32);\r\nUnit<Integer> unit = pair1.removeFrom0();\r\n\r\nassertThat(unit.contains(32));\r\n```","```\r\nQuartet<String, Double, Integer, String> quartet\r\n  = Quartet.with(\"john\", 72.5, 32, \"1051 SW\");\r\nList<Object> list = quartet.toList();\r\n\r\nassertThat(list.size()).isEqualTo(4);\r\n```","```\r\nQuartet<String, Double, Integer, String> quartet\r\n  = Quartet.with(\"john\", 72.5, 32, \"1051 SW\");\r\nObject[] array = quartet.toArray();\r\n\r\nassertThat(array.length).isEqualTo(4);\r\n```"]