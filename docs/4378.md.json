["```\r\n<dependency>\r\n    <groupId>com.netopyr.wurmloch</groupId>\r\n    <artifactId>wurmloch-crdt</artifactId>\r\n    <version>0.1.0</version>\r\n</dependency>\r\n```","```\r\nLocalCrdtStore crdtStore1 = new LocalCrdtStore();\r\nLocalCrdtStore crdtStore2 = new LocalCrdtStore();\r\ncrdtStore1.connect(crdtStore2);\r\n```","```\r\nGSet<String> replica1 = crdtStore1.createGSet(\"ID_1\");\r\nGSet<String> replica2 = crdtStore2.<String>findGSet(\"ID_1\").get();\r\n```","```\r\nreplica1.add(\"apple\");\r\nreplica2.add(\"banana\");\r\n\r\nassertThat(replica1).contains(\"apple\", \"banana\");\r\nassertThat(replica2).contains(\"apple\", \"banana\");\r\n```","```\r\ncrdtStore1.disconnect(crdtStore2);\r\n```","```\r\nreplica1.add(\"strawberry\");\r\nreplica2.add(\"pear\");\r\n\r\nassertThat(replica1).contains(\"apple\", \"banana\", \"strawberry\");\r\nassertThat(replica2).contains(\"apple\", \"banana\", \"pear\");\r\n```","```\r\ncrdtStore1.connect(crdtStore2);\r\n\r\nassertThat(replica1)\r\n  .contains(\"apple\", \"banana\", \"strawberry\", \"pear\");\r\nassertThat(replica2)\r\n  .contains(\"apple\", \"banana\", \"strawberry\", \"pear\");\r\n```","```\r\nLocalCrdtStore crdtStore1 = new LocalCrdtStore();\r\nLocalCrdtStore crdtStore2 = new LocalCrdtStore();\r\ncrdtStore1.connect(crdtStore2);\r\n\r\nGCounter replica1 = crdtStore1.createGCounter(\"ID_1\");\r\nGCounter replica2 = crdtStore2.findGCounter(\"ID_1\").get();\r\n\r\nreplica1.increment();\r\nreplica2.increment(2L);\r\n\r\nassertThat(replica1.get()).isEqualTo(3L);\r\nassertThat(replica2.get()).isEqualTo(3L); \r\n```","```\r\ncrdtStore1.disconnect(crdtStore2);\r\n\r\nreplica1.increment(3L);\r\nreplica2.increment(5L);\r\n\r\nassertThat(replica1.get()).isEqualTo(6L);\r\nassertThat(replica2.get()).isEqualTo(8L);\r\n```","```\r\ncrdtStore1.connect(crdtStore2);\r\n\r\nassertThat(replica1.get())\r\n  .isEqualTo(11L);\r\nassertThat(replica2.get())\r\n  .isEqualTo(11L);\r\n```","```\r\n@Test\r\npublic void givenPNCounter_whenReplicasDiverge_thenMergesWithoutConflict() {\r\n    LocalCrdtStore crdtStore1 = new LocalCrdtStore();\r\n    LocalCrdtStore crdtStore2 = new LocalCrdtStore();\r\n    crdtStore1.connect(crdtStore2);\r\n\r\n    PNCounter replica1 = crdtStore1.createPNCounter(\"ID_1\");\r\n    PNCounter replica2 = crdtStore2.findPNCounter(\"ID_1\").get();\r\n\r\n    replica1.increment();\r\n    replica2.decrement(2L);\r\n\r\n    assertThat(replica1.get()).isEqualTo(-1L);\r\n    assertThat(replica2.get()).isEqualTo(-1L);\r\n\r\n    crdtStore1.disconnect(crdtStore2);\r\n\r\n    replica1.decrement(3L);\r\n    replica2.increment(5L);\r\n\r\n    assertThat(replica1.get()).isEqualTo(-4L);\r\n    assertThat(replica2.get()).isEqualTo(4L);\r\n\r\n    crdtStore1.connect(crdtStore2);\r\n\r\n    assertThat(replica1.get()).isEqualTo(1L);\r\n    assertThat(replica2.get()).isEqualTo(1L);\r\n}\r\n```","```\r\nLocalCrdtStore crdtStore1 = new LocalCrdtStore(\"N_1\");\r\nLocalCrdtStore crdtStore2 = new LocalCrdtStore(\"N_2\");\r\ncrdtStore1.connect(crdtStore2);\r\n\r\nLWWRegister<String> replica1 = crdtStore1.createLWWRegister(\"ID_1\");\r\nLWWRegister<String> replica2 = crdtStore2.<String>findLWWRegister(\"ID_1\").get();\r\n\r\nreplica1.set(\"apple\");\r\nreplica2.set(\"banana\");\r\n\r\nassertThat(replica1.get()).isEqualTo(\"banana\");\r\nassertThat(replica2.get()).isEqualTo(\"banana\"); \r\n```","```\r\ncrdtStore1.disconnect(crdtStore2);\r\n\r\nreplica1.set(\"strawberry\");\r\nreplica2.set(\"pear\");\r\n\r\nassertThat(replica1.get()).isEqualTo(\"strawberry\");\r\nassertThat(replica2.get()).isEqualTo(\"pear\");\r\n```","```\r\ncrdtStore1.connect(crdtStore2);\r\n\r\nassertThat(replica1.get()).isEqualTo(\"pear\");\r\nassertThat(replica2.get()).isEqualTo(\"pear\");\r\n```"]