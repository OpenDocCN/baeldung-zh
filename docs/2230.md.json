["```\r\nINSERTION-SORT(A)\r\n\r\nfor i=2 to A.length\r\n    key = A[i]\r\n    j = i - 1 \r\n    while j > 0 and A[j] > key\r\n        A[j+1] = A[j]\r\n        j = j - 1\r\n    A[j + 1] = key\r\n```","```\r\npublic static void insertionSortImperative(int[] input) {\r\n    for (int i = 1; i < input.length; i++) { \r\n        int key = input[i]; \r\n        int j = i - 1;\r\n        while (j >= 0 && input[j] > key) {\r\n            input[j + 1] = input[j];\r\n            j = j - 1;\r\n        }\r\n        input[j + 1] = key; \r\n    }\r\n}\r\n```","```\r\n@Test\r\npublic void givenUnsortedArray_whenInsertionSortImperative_thenSortedAsc() {\r\n    int[] input = {6, 2, 3, 4, 5, 1};\r\n    InsertionSort.insertionSortImperative(input);\r\n    int[] expected = {1, 2, 3, 4, 5, 6};\r\n    assertArrayEquals(\"the two arrays are not equal\", expected, input);\r\n}\r\n```","```\r\npublic static void insertionSortRecursive(int[] input) {\r\n    insertionSortRecursive(input, input.length);\r\n}\r\n```","```\r\nprivate static void insertionSortRecursive(int[] input, int i) {\r\n    if (i <= 1) {\r\n        return;\r\n    }\r\n    insertionSortRecursive(input, i - 1);\r\n    int key = input[i - 1];\r\n    int j = i - 2;\r\n    while (j >= 0 && input[j] > key) {\r\n        input[j + 1] = input[j];\r\n        j = j - 1;\r\n    }\r\n    input[j + 1] = key;\r\n}\r\n```","```\r\ninsertionSortRecursive(input, 6)\r\ninsertionSortRecursive(input, 5) and insert the 6th item into the sorted array\r\ninsertionSortRecursive(input, 4) and insert the 5th item into the sorted array\r\ninsertionSortRecursive(input, 3) and insert the 4th item into the sorted array\r\ninsertionSortRecursive(input, 2) and insert the 3rd item into the sorted array\r\ninsertionSortRecursive(input, 1) and insert the 2nd item into the sorted array\r\n```","```\r\n@Test\r\npublic void givenUnsortedArray_whenInsertionSortRecursively_thenSortedAsc() {\r\n    int[] input = {6, 4, 5, 2, 3, 1};\r\n    InsertionSort.insertionSortRecursive(input);\r\n    int[] expected = {1, 2, 3, 4, 5, 6};\r\n    assertArrayEquals(\"the two arrays are not equal\", expected, input);\r\n}\r\n```"]