["```\r\nscheme:[//[user:[[email protected]](/web/20220807192129/https://www.baeldung.com/cdn-cgi/l/email-protection)]host[:port]][/]path[?query][#fragment]\r\n```","```\r\nString testUrl = \r\n  \"http://www.baeldung.com?key1=value+1&key2;=value%40%21%242&key3;=value%253\";\r\n```","```\r\n@Test\r\npublic void givenURL_whenAnalyze_thenCorrect() throws Exception {\r\n    URI uri = new URI(testUrl);\r\n\r\n    assertThat(uri.getScheme(), is(\"http\"));\r\n    assertThat(uri.getHost(), is(\"www.baeldung.com\"));\r\n    assertThat(uri.getRawQuery(),\r\n      .is(\"key1=value+1&key2;=value%40%21%242&key3;=value%253\"));\r\n}\r\n```","```\r\nprivate String encodeValue(String value) {\r\n    return URLEncoder.encode(value, StandardCharsets.UTF_8.toString());\r\n}\r\n\r\n@Test\r\npublic void givenRequestParam_whenUTF8Scheme_thenEncode() throws Exception {\r\n    Map<String, String> requestParams = new HashMap<>();\r\n    requestParams.put(\"key1\", \"value 1\");\r\n    requestParams.put(\"key2\", \"[[email protected]](/web/20220807192129/https://www.baeldung.com/cdn-cgi/l/email-protection)!$2\");\r\n    requestParams.put(\"key3\", \"value%3\");\r\n\r\n    String encodedURL = requestParams.keySet().stream()\r\n      .map(key -> key + \"=\" + encodeValue(requestParams.get(key)))\r\n      .collect(joining(\"&\", \"http://www.baeldung.com?\", \"\"));\r\n\r\n    assertThat(testUrl, is(encodedURL)); \r\n```","```\r\nprivate String decode(String value) {\r\n    return URLDecoder.decode(value, StandardCharsets.UTF_8.toString());\r\n}\r\n\r\n@Test\r\npublic void givenRequestParam_whenUTF8Scheme_thenDecodeRequestParams() {\r\n    URI uri = new URI(testUrl);\r\n\r\n    String scheme = uri.getScheme();\r\n    String host = uri.getHost();\r\n    String query = uri.getRawQuery();\r\n\r\n    String decodedQuery = Arrays.stream(query.split(\"&\"))\r\n      .map(param -> param.split(\"=\")[0] + \"=\" + decode(param.split(\"=\")[1]))\r\n      .collect(Collectors.joining(\"&\"));\r\n\r\n    assertEquals(\r\n      \"http://www.baeldung.com?key1=value [[email protected]](/web/20220807192129/https://www.baeldung.com/cdn-cgi/l/email-protection)!$2&key3;=value%3\",\r\n      scheme + \"://\" + host + \"?\" + decodedQuery);\r\n}\r\n```","```\r\nprivate String encodePath(String path) {\r\n    try {\r\n        path = UriUtils.encodePath(path, \"UTF-8\");\r\n    } catch (UnsupportedEncodingException e) {\r\n        LOGGER.error(\"Error encoding parameter {}\", e.getMessage(), e);\r\n    }\r\n    return path;\r\n}\r\n```","```\r\n@Test\r\npublic void givenPathSegment_thenEncodeDecode() \r\n  throws UnsupportedEncodingException {\r\n    String pathSegment = \"/Path 1/Path+2\";\r\n    String encodedPathSegment = encodePath(pathSegment);\r\n    String decodedPathSegment = UriUtils.decode(encodedPathSegment, \"UTF-8\");\r\n\r\n    assertEquals(\"/Path%201/Path+2\", encodedPathSegment);\r\n    assertEquals(\"/Path 1/Path+2\", decodedPathSegment);\r\n}\r\n```","```\r\nString testUrl\r\n  = \"/path+1?key1=value+1&key2;=value%40%21%242&key3;=value%253\";\r\n```","```\r\nString path = \"path+1\";\r\nString encodedURL = requestParams.keySet().stream()\r\n  .map(k -> k + \"=\" + encodeValue(requestParams.get(k)))\r\n  .collect(joining(\"&\", \"/\" + encodePath(path) + \"?\", \"\"));\r\nassertThat(testUrl, CoreMatchers.is(encodedURL)); \r\n```"]