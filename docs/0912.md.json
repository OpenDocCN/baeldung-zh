["```\r\n<dependency>\r\n    <groupId>org.springframework.security.oauth.boot</groupId>\r\n    <artifactId>spring-security-oauth2-autoconfigure</artifactId>\r\n    <version>2.2.6.RELEASE</version>\r\n</dependency>\r\n```","```\r\n@Configuration\r\n@EnableOAuth2Sso\r\npublic class SecurityConfig \r\n  extends WebSecurityConfigurerAdapter {\r\n\r\n    @Override\r\n    protected void configure(HttpSecurity http) \r\n      throws Exception {\r\n\r\n        http.antMatcher(\"/**\")\r\n          .authorizeRequests()\r\n          .antMatchers(\"/login**\")\r\n          .permitAll()\r\n          .anyRequest()\r\n          .authenticated()\r\n          .and()\r\n          .formLogin().disable();\r\n    }\r\n}\r\n```","```\r\nsecurity.oauth2.client.client-id=89a7c4facbb3434d599d\r\nsecurity.oauth2.client.client-secret=9b3b08e4a340bd20e866787e4645b54f73d74b6a\r\nsecurity.oauth2.client.access-token-uri=https://github.com/login/oauth/access_token\r\nsecurity.oauth2.client.user-authorization-uri=https://github.com/login/oauth/authorize\r\nsecurity.oauth2.client.scope=read:user,user:email\r\nsecurity.oauth2.resource.user-info-uri=https://api.github.com/user\r\n```","```\r\npublic class GithubPrincipalExtractor \r\n  implements PrincipalExtractor {\r\n\r\n    @Override\r\n    public Object extractPrincipal(Map<String, Object> map) {\r\n        return map.get(\"login\");\r\n    }\r\n}\r\n```","```\r\npublic class GithubAuthoritiesExtractor \r\n  implements AuthoritiesExtractor {\r\n    List<GrantedAuthority> GITHUB_FREE_AUTHORITIES\r\n     = AuthorityUtils.commaSeparatedStringToAuthorityList(\r\n     \"GITHUB_USER,GITHUB_USER_FREE\");\r\n    List<GrantedAuthority> GITHUB_SUBSCRIBED_AUTHORITIES \r\n     = AuthorityUtils.commaSeparatedStringToAuthorityList(\r\n     \"GITHUB_USER,GITHUB_USER_SUBSCRIBED\");\r\n\r\n    @Override\r\n    public List<GrantedAuthority> extractAuthorities\r\n      (Map<String, Object> map) {\r\n\r\n        if (Objects.nonNull(map.get(\"plan\"))) {\r\n            if (!((LinkedHashMap) map.get(\"plan\"))\r\n              .get(\"name\")\r\n              .equals(\"free\")) {\r\n                return GITHUB_SUBSCRIBED_AUTHORITIES;\r\n            }\r\n        }\r\n        return GITHUB_FREE_AUTHORITIES;\r\n    }\r\n} \r\n```","```\r\n@Configuration\r\n@EnableOAuth2Sso\r\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\r\n\r\n    // ...\r\n\r\n    @Bean\r\n    public PrincipalExtractor githubPrincipalExtractor() {\r\n        return new GithubPrincipalExtractor();\r\n    }\r\n\r\n    @Bean\r\n    public AuthoritiesExtractor githubAuthoritiesExtractor() {\r\n        return new GithubAuthoritiesExtractor();\r\n    }\r\n}\r\n```","```\r\nsecurity.oauth2.client.client-id=SampleClientId\r\nsecurity.oauth2.client.client-secret=secret\r\nsecurity.oauth2.client.access-token-uri=http://localhost:8081/auth/oauth/token\r\nsecurity.oauth2.client.user-authorization-uri=http://localhost:8081/auth/oauth/authorize\r\nsecurity.oauth2.resource.user-info-uri=http://localhost:8081/auth/user/me\r\n```","```\r\npublic class BaeldungPrincipalExtractor \r\n  implements PrincipalExtractor {\r\n\r\n    @Override\r\n    public Object extractPrincipal(Map<String, Object> map) {\r\n        return map.get(\"name\");\r\n    }\r\n}\r\n```","```\r\npublic class BaeldungAuthoritiesExtractor \r\n  implements AuthoritiesExtractor {\r\n\r\n    @Override\r\n    public List<GrantedAuthority> extractAuthorities\r\n      (Map<String, Object> map) {\r\n        return AuthorityUtils\r\n          .commaSeparatedStringToAuthorityList(asAuthorities(map));\r\n    }\r\n\r\n    private String asAuthorities(Map<String, Object> map) {\r\n        List<String> authorities = new ArrayList<>();\r\n        authorities.add(\"BAELDUNG_USER\");\r\n        List<LinkedHashMap<String, String>> authz = \r\n          (List<LinkedHashMap<String, String>>) map.get(\"authorities\");\r\n        for (LinkedHashMap<String, String> entry : authz) {\r\n            authorities.add(entry.get(\"authority\"));\r\n        }\r\n        return String.join(\",\", authorities);\r\n    }\r\n}\r\n```","```\r\n@Configuration\r\n@EnableOAuth2Sso\r\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\r\n\r\n    // ...\r\n\r\n    @Bean\r\n    public PrincipalExtractor baeldungPrincipalExtractor() {\r\n        return new BaeldungPrincipalExtractor();\r\n    }\r\n\r\n    @Bean\r\n    public AuthoritiesExtractor baeldungAuthoritiesExtractor() {\r\n        return new BaeldungAuthoritiesExtractor();\r\n    }\r\n}\r\n```"]