["```\r\n<parent>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-parent</artifactId>\r\n    <version>2.6.1</version>\r\n    <relativePath /> <!-- lookup parent from repository -->\r\n</parent>\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-data-mongodb</artifactId>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>de.flapdoodle.embed</groupId>\r\n    <artifactId>de.flapdoodle.embed.mongo</artifactId>\r\n    <scope>test</scope>\r\n</dependency>\r\n```","```\r\n@DataMongoTest\r\n@ExtendWith(SpringExtension.class)\r\npublic class MongoDbSpringIntegrationTest {\r\n    @DisplayName(\"given object to save\"\r\n        + \" when save object using MongoDB template\"\r\n        + \" then object is saved\")\r\n    @Test\r\n    public void test(@Autowired MongoTemplate mongoTemplate) {\r\n        // given\r\n        DBObject objectToSave = BasicDBObjectBuilder.start()\r\n            .add(\"key\", \"value\")\r\n            .get();\r\n\r\n        // when\r\n        mongoTemplate.save(objectToSave, \"collection\");\r\n\r\n        // then\r\n        assertThat(mongoTemplate.findAll(DBObject.class, \"collection\")).extracting(\"key\")\r\n            .containsOnly(\"value\");\r\n    }\r\n}\r\n```","```\r\n...Starting MongodbExampleApplicationTests on arroyo with PID 10413...\r\n```","```\r\nclass ManualEmbeddedMongoDbIntegrationTest {\r\n    private static final String CONNECTION_STRING = \"mongodb://%s:%d\";\r\n\r\n    private MongodExecutable mongodExecutable;\r\n    private MongoTemplate mongoTemplate;\r\n\r\n    @AfterEach\r\n    void clean() {\r\n        mongodExecutable.stop();\r\n    }\r\n\r\n    @BeforeEach\r\n    void setup() throws Exception {\r\n        String ip = \"localhost\";\r\n        int port = 27017;\r\n\r\n        ImmutableMongodConfig mongodConfig = MongodConfig\r\n            .builder()\r\n            .version(Version.Main.PRODUCTION)\r\n            .net(new Net(ip, port, Network.localhostIsIPv6()))\r\n            .build();\r\n\r\n        MongodStarter starter = MongodStarter.getDefaultInstance();\r\n        mongodExecutable = starter.prepare(mongodConfig);\r\n        mongodExecutable.start();\r\n        mongoTemplate = new MongoTemplate(MongoClients.create(String.format(CONNECTION_STRING, ip, port)), \"test\");\r\n    }\r\n\r\n    @DisplayName(\"given object to save\"\r\n        + \" when save object using MongoDB template\"\r\n        + \" then object is saved\")\r\n    @Test\r\n    void test() throws Exception {\r\n        // given\r\n        DBObject objectToSave = BasicDBObjectBuilder.start()\r\n            .add(\"key\", \"value\")\r\n            .get();\r\n\r\n        // when\r\n        mongoTemplate.save(objectToSave, \"collection\");\r\n\r\n        // then\r\n        assertThat(mongoTemplate.findAll(DBObject.class, \"collection\")).extracting(\"key\")\r\n            .containsOnly(\"value\");\r\n    }\r\n}\r\n```","```\r\nlogging.level.org.springframework.boot.autoconfigure.mongo.embedded\r\nlogging.level.org.mongodb\r\n```","```\r\nlogging.level.org.springframework.boot.autoconfigure.mongo.embedded=off\r\nlogging.level.org.mongodb=off\r\n```"]