["```\r\nPath path = Paths.get(\"does-not-exist.txt\");\r\nassertFalse(Files.exists(path));\r\n```","```\r\nPath tempFile = Files.createTempFile(\"baeldung\", \"exist-article\");\r\nassertTrue(Files.exists(tempFile));\r\n```","```\r\nPath tempDirectory = Files.createTempDirectory(\"baeldung-exists\");\r\nassertTrue(Files.exists(tempDirectory));\r\n```","```\r\nassertTrue(Files.isDirectory(tempDirectory));\r\nassertFalse(Files.isDirectory(tempFile));\r\nassertTrue(Files.isRegularFile(tempFile));\r\n```","```\r\nassertFalse(Files.notExists(tempDirectory));\r\n```","```\r\nassertTrue(Files.isReadable(tempFile));\r\nassertFalse(Files.isReadable(Paths.get(\"/root/.bashrc\")));\r\n```","```\r\nPath target = Files.createTempFile(\"baeldung\", \"target\");\r\nPath symbol = Paths.get(\"test-link-\" + ThreadLocalRandom.current().nextInt());\r\nPath symbolicLink = Files.createSymbolicLink(symbol, target);\r\nassertTrue(Files.exists(symbolicLink));\r\n```","```\r\nFiles.deleteIfExists(target);\r\nassertFalse(Files.exists(symbolicLink));\r\n```","```\r\nassertTrue(Files.exists(symbolicLink, LinkOption.NOFOLLOW_LINKS));\r\n```","```\r\nassertTrue(Files.isSymbolicLink(symbolicLink));\r\nassertFalse(Files.isSymbolicLink(target));\r\n```","```\r\nassertFalse(new File(\"invalid\").exists());\r\n```","```\r\nPath tempFilePath = Files.createTempFile(\"baeldung\", \"exist-io\");\r\nPath tempDirectoryPath = Files.createTempDirectory(\"baeldung-exists-io\");\r\n\r\nFile tempFile = new File(tempFilePath.toString());\r\nFile tempDirectory = new File(tempDirectoryPath.toString());\r\n\r\nassertTrue(tempFile.exists());\r\nassertTrue(tempDirectory.exists());\r\n```","```\r\nassertTrue(tempFile.isFile());\r\nassertFalse(tempDirectory.isFile());\r\n```","```\r\nassertTrue(tempDirectory.isDirectory());\r\nassertFalse(tempFile.isDirectory());\r\n```","```\r\nassertTrue(tempFile.canRead());\r\nassertFalse(new File(\"/root/.bashrc\").canRead());\r\n```"]