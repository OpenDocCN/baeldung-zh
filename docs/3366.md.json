["```\r\n@Transactional\r\npublic void orderGoods(Order order) {\r\n   // A series of database calls to be performed in a transaction\r\n}\r\n```","```\r\n<parent>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-parent</artifactId>\r\n    <version>2.2.2.RELEASE</version>\r\n</parent>\r\n\r\n<dependencies>\r\n    <dependency>\r\n        <groupId>org.springframework.boot</groupId>\r\n        <artifactId>spring-boot-starter-aop</artifactId>\r\n    </dependency>\r\n</dependencies>\r\n```","```\r\n@Target(ElementType.METHOD)\r\n@Retention(RetentionPolicy.RUNTIME)\r\npublic @interface LogExecutionTime {\r\n\r\n} \r\n```","```\r\n@Aspect\r\n@Component\r\npublic class ExampleAspect {\r\n\r\n}\r\n```","```\r\n@Around(\"@annotation(LogExecutionTime)\")\r\npublic Object logExecutionTime(ProceedingJoinPoint joinPoint) throws Throwable {\r\n    return joinPoint.proceed();\r\n}\r\n```","```\r\n@Around(\"@annotation(LogExecutionTime)\")\r\npublic Object logExecutionTime(ProceedingJoinPoint joinPoint) throws Throwable {\r\n    long start = System.currentTimeMillis();\r\n\r\n    Object proceed = joinPoint.proceed();\r\n\r\n    long executionTime = System.currentTimeMillis() - start;\r\n\r\n    System.out.println(joinPoint.getSignature() + \" executed in \" + executionTime + \"ms\");\r\n    return proceed;\r\n}\r\n```","```\r\n@LogExecutionTime\r\npublic void serve() throws InterruptedException {\r\n    Thread.sleep(2000);\r\n}\r\n```","```\r\nvoid org.baeldung.Service.serve() executed in 2030ms\r\n```"]