["```\r\n<dependency>\r\n    <groupId>io.springfox</groupId>\r\n    <artifactId>springfox-swagger2</artifactId>\r\n    <version>3.0.0</version>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>io.springfox</groupId>\r\n    <artifactId>springfox-boot-starter</artifactId>\r\n    <version>3.0.0</version>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-parent</artifactId>\r\n    <version>2.4.0</version>\r\n</dependency>\r\n```","```\r\n@Configuration\r\npublic class SpringFoxConfig {                                    \r\n    @Bean\r\n    public Docket api() { \r\n        return new Docket(DocumentationType.SWAGGER_2)  \r\n          .select()                                  \r\n          .apis(RequestHandlerSelectors.any())              \r\n          .paths(PathSelectors.any())                          \r\n          .build();                                           \r\n    }\r\n}\r\n```","```\r\n@Configuration\r\n@EnableSwagger2WebMvc\r\npublic class SpringFoxConfig {                                    \r\n}\r\n```","```\r\n@Override\r\npublic void addResourceHandlers(ResourceHandlerRegistry registry) {\r\n    registry.addResourceHandler(\"swagger-ui.html\")\r\n      .addResourceLocations(\"classpath:/META-INF/resources/\");\r\n\r\n    registry.addResourceHandler(\"/webjars/**\")\r\n      .addResourceLocations(\"classpath:/META-INF/resources/webjars/\");\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>io.springfox</groupId>\r\n    <artifactId>springfox-swagger-ui</artifactId>\r\n    <version>3.0.0</version>\r\n</dependency>\r\n```","```\r\n@RestController\r\npublic class CustomController {\r\n\r\n    @RequestMapping(value = \"/custom\", method = RequestMethod.POST)\r\n    public String custom() {\r\n        return \"custom\";\r\n    }\r\n}\r\n```","```\r\n@Entity\r\npublic class User {\r\n    @Id\r\n    private Long id;\r\n    private String firstName;\r\n    private int age;\r\n    private String email;\r\n\r\n    // getters and setters\r\n}\r\n```","```\r\n@Repository\r\npublic interface UserRepository extends CrudRepository<User, Long> {\r\n}\r\n```","```\r\n@EnableSwagger2WebMvc\r\n@Import(SpringDataRestConfiguration.class)\r\npublic class SpringFoxConfig {\r\n    //...\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>io.springfox</groupId>\r\n    <artifactId>springfox-bean-validators</artifactId>\r\n    <version>2.9.2</version>\r\n</dependency>\r\n```","```\r\n@Entity\r\npublic class User {\r\n    //...\r\n\r\n    @NotNull(message = \"First Name cannot be null\")\r\n    private String firstName;\r\n\r\n    @Min(value = 15, message = \"Age should not be less than 15\")\r\n    @Max(value = 65, message = \"Age should not be greater than 65\")\r\n    private int age;\r\n}\r\n```","```\r\n@EnableSwagger2\r\n@Import(BeanValidatorPluginsConfiguration.class)\r\npublic class SpringFoxConfig {\r\n    //...\r\n}\r\n```","```\r\n@Component\r\n@Order(Validators.BEAN_VALIDATOR_PLUGIN_ORDER)\r\npublic class EmailAnnotationPlugin implements ModelPropertyBuilderPlugin {\r\n    @Override\r\n    public boolean supports(DocumentationType delimiter) {\r\n        return true;\r\n    }\r\n}\r\n```","```\r\n@Override\r\npublic void apply(ModelPropertyContext context) {\r\n    Optional<Email> email = annotationFromBean(context, Email.class);\r\n     if (email.isPresent()) {\r\n        context.getSpecificationBuilder().facetBuilder(StringElementFacetBuilder.class)\r\n          .pattern(email.get().regexp());\r\n        context.getSpecificationBuilder().example(\"[[email protected]](/web/20220815131030/https://www.baeldung.com/cdn-cgi/l/email-protection)\");\r\n    }\r\n}\r\n```","```\r\n@Entity\r\npublic class User {\r\n    //...\r\n\r\n    @Email(regexp=\".*@.*\\\\..*\", message = \"Email should be valid\")\r\n    private String email;\r\n}\r\n```","```\r\n@Import({BeanValidatorPluginsConfiguration.class})\r\npublic class SpringFoxConfig {\r\n    //...\r\n\r\n    @Bean\r\n    public EmailAnnotationPlugin emailPlugin() {\r\n        return new EmailAnnotationPlugin();\r\n    }\r\n}\r\n```","```\r\n@Bean\r\npublic Docket api() {                \r\n    return new Docket(DocumentationType.SWAGGER_2)          \r\n      .select()                                       \r\n      .apis(RequestHandlerSelectors.basePackage(\"com.baeldung.web.controller\"))\r\n      .paths(PathSelectors.ant(\"/foos/*\"))                     \r\n      .build();\r\n}\r\n```","```\r\n@Bean\r\npublic Docket api() {                \r\n    return new Docket(DocumentationType.SWAGGER_2)          \r\n      .select()\r\n      .apis(RequestHandlerSelectors.basePackage(\"com.example.controller\"))\r\n      .paths(PathSelectors.ant(\"/foos/*\"))\r\n      .build()\r\n      .apiInfo(apiInfo());\r\n}\r\n\r\nprivate ApiInfo apiInfo() {\r\n    return new ApiInfo(\r\n      \"My REST API\", \r\n      \"Some custom description of API.\", \r\n      \"API TOS\", \r\n      \"Terms of service\", \r\n      new Contact(\"John Doe\", \"www.example.com\", \"[[email protected]](/web/20220815131030/https://www.baeldung.com/cdn-cgi/l/email-protection)\"), \r\n      \"License of API\", \"API license URL\", Collections.emptyList());\r\n}\r\n```","```\r\n.useDefaultResponseMessages(false)\r\n.globalResponses(HttpMethod.GET, newArrayList(\r\n    new ResponseBuilder().code(\"500\")\r\n        .description(\"500 message\").build(),\r\n    new ResponseBuilder().code(\"403\")\r\n        .description(\"Forbidden!!!!!\").build()\r\n));\r\n```","```\r\n@Bean\r\npublic Docket api() {\r\n    return new Docket(DocumentationType.SWAGGER_2).select()\r\n        .apis(RequestHandlerSelectors.any())\r\n        .paths(PathSelectors.any())\r\n        .build()\r\n        .securitySchemes(Arrays.asList(securityScheme()))\r\n        .securityContexts(Arrays.asList(securityContext()));\r\n}\r\n```","```\r\n@Bean\r\npublic SecurityConfiguration security() {\r\n    return SecurityConfigurationBuilder.builder()\r\n        .clientId(CLIENT_ID)\r\n        .clientSecret(CLIENT_SECRET)\r\n        .scopeSeparator(\" \")\r\n        .useBasicAuthenticationWithAccessCodeGrant(true)\r\n        .build();\r\n}\r\n```","```\r\nprivate SecurityScheme securityScheme() {\r\n    GrantType grantType = new AuthorizationCodeGrantBuilder()\r\n        .tokenEndpoint(new TokenEndpoint(AUTH_SERVER + \"/token\", \"oauthtoken\"))\r\n        .tokenRequestEndpoint(\r\n          new TokenRequestEndpoint(AUTH_SERVER + \"/authorize\", CLIENT_ID, CLIENT_SECRET))\r\n        .build();\r\n\r\n    SecurityScheme oauth = new OAuthBuilder().name(\"spring_oauth\")\r\n        .grantTypes(Arrays.asList(grantType))\r\n        .scopes(Arrays.asList(scopes()))\r\n        .build();\r\n    return oauth;\r\n}\r\n```","```\r\nprivate AuthorizationScope[] scopes() {\r\n    AuthorizationScope[] scopes = { \r\n      new AuthorizationScope(\"read\", \"for read operations\"), \r\n      new AuthorizationScope(\"write\", \"for write operations\"), \r\n      new AuthorizationScope(\"foo\", \"Access foo API\") };\r\n    return scopes;\r\n}\r\n```","```\r\nprivate SecurityContext securityContext() {\r\n    return SecurityContext.builder()\r\n      .securityReferences(\r\n        Arrays.asList(new SecurityReference(\"spring_oauth\", scopes())))\r\n      .forPaths(PathSelectors.regex(\"/foos.*\"))\r\n      .build();\r\n}\r\n```","```\r\nhttp://localhost:8082/spring-security-oauth-resource/swagger-ui.html\r\n```"]