["```\r\n<dependency>\r\n    <groupId>org.springframework.data</groupId>\r\n    <artifactId>spring-data-jpa</artifactId>\r\n    <version>2.2.2.RELEASE</version>\r\n</dependency>\r\n```","```\r\npublic interface LocationRepository extends JpaRepository<Location, Long> {\r\n}\r\n```","```\r\npublic interface StoreRepository extends JpaRepository<Store, Long> {\r\n    List<Store> findStoreByLocationId(Long locationId);\r\n}\r\n```","```\r\npublic interface ItemTypeRepository \r\n  extends JpaRepository<ItemType, Long>, CustomItemTypeRepository {\r\n}\r\n```","```\r\npublic interface CustomItemTypeRepository {\r\n    void deleteCustomById(ItemType entity);\r\n}\r\n```","```\r\npublic class CustomItemTypeRepositoryImpl implements CustomItemTypeRepository {\r\n\r\n    @Autowired\r\n    private EntityManager entityManager;\r\n\r\n    @Override\r\n    public void deleteCustomById(ItemType itemType) {\r\n        entityManager.remove(itemType);\r\n    }\r\n}\r\n```","```\r\n<repositories base-package=\"com.baeldung.repository\" repository-impl-postfix=\"CustomImpl\" />\r\n```","```\r\n@EnableJpaRepositories(\r\n  basePackages = \"com.baeldung.repository\", repositoryImplementationPostfix = \"CustomImpl\")\r\n```","```\r\npublic interface CustomItemTypeRepository {\r\n    void deleteCustom(ItemType entity);\r\n    void findThenDelete(Long id);\r\n}\r\n\r\npublic interface CustomItemRepository {\r\n    Item findItemById(Long id);\r\n    void deleteCustom(Item entity);\r\n    void findThenDelete(Long id);\r\n}\r\n```","```\r\npublic interface ItemTypeRepository \r\n  extends JpaRepository<ItemType, Long>, CustomItemTypeRepository, CustomItemRepository {\r\n}\r\n```","```\r\n@Test\r\npublic void givenItemAndItemTypeWhenDeleteThenItemTypeDeleted() {\r\n    Optional<ItemType> itemType = composedRepository.findById(1L);\r\n    assertTrue(itemType.isPresent());\r\n\r\n    Item item = composedRepository.findItemById(2L);\r\n    assertNotNull(item);\r\n\r\n    composedRepository.findThenDelete(1L);\r\n    Optional<ItemType> sameItemType = composedRepository.findById(1L);\r\n    assertFalse(sameItemType.isPresent());\r\n\r\n    Item sameItem = composedRepository.findItemById(2L);\r\n    assertNotNull(sameItem);\r\n}\r\n```"]