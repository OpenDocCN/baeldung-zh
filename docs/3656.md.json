["```\r\nSet<Integer> set = new HashSet<Integer>();\r\nset.add(1);\r\nset.add(2);\r\nset.add(3);\r\nset.add(4);\r\n\r\nCollection<Integer> collection = new ArrayList<Integer>();\r\ncollection.add(1);\r\ncollection.add(3);\r\n\r\nset.removeAll(collection);\r\n\r\nInteger[] actualElements = new Integer[set.size()];\r\nInteger[] expectedElements = new Integer[] { 2, 4 };\r\nassertArrayEquals(expectedElements, set.toArray(actualElements)); \r\n```","```\r\n@BenchmarkMode(Mode.AverageTime)\r\n@OutputTimeUnit(TimeUnit.NANOSECONDS)\r\n@Warmup(iterations = 5)\r\npublic class HashSetBenchmark {\r\n\r\n    @State(Scope.Thread)\r\n    public static class MyState {\r\n        private Set employeeSet1 = new HashSet<>();\r\n        private List employeeList1 = new ArrayList<>();\r\n        private Set employeeSet2 = new HashSet<>();\r\n        private List employeeList2 = new ArrayList<>();\r\n        private Set<Employee> employeeSet3 = new HashSet<>();\r\n        private Set<Employee> employeeSet4 = new HashSet<>();\r\n\r\n        private long set1Size = 60000;\r\n        private long list1Size = 50000;\r\n        private long set2Size = 50000;\r\n        private long list2Size = 60000;\r\n        private long set3Size = 50000;\r\n        private long set4Size = 60000;\r\n\r\n        @Setup(Level.Trial)\r\n        public void setUp() {\r\n            // populating sets\r\n        }\r\n    }\r\n}\r\n```","```\r\n@Benchmark\r\npublic boolean given_SizeOfHashsetGreaterThanSizeOfCollection_whenRemoveAllFromHashSet_thenGoodPerformance(MyState state) {\r\n    return state.employeeSet1.removeAll(state.employeeList1);\r\n}\r\n\r\n@Benchmark\r\npublic boolean given_SizeOfHashsetSmallerThanSizeOfCollection_whenRemoveAllFromHashSet_thenBadPerformance(MyState state) {\r\n    return state.employeeSet2.removeAll(state.employeeList2);\r\n}\r\n\r\n@Benchmark\r\npublic boolean given_SizeOfHashsetSmallerThanSizeOfAnotherHashSet_whenRemoveAllFromHashSet_thenGoodPerformance(MyState state) {\r\n    return state.employeeSet3.removeAll(state.employeeSet4);\r\n}\r\n```","```\r\nBenchmark                                              Mode  Cnt            Score            Error  Units\r\nHashSetBenchmark.testHashSetSizeGreaterThanCollection  avgt   20      2700457.099 ±     475673.379  ns/op\r\nHashSetBenchmark.testHashSetSmallerThanCollection      avgt   20  31522676649.950 ± 3556834894.168  ns/op\r\nHashSetBenchmark.testHashSetSmallerThanOtherHashset    avgt   20      2672757.784 ±     224505.866  ns/op\r\n```"]