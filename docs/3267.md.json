["```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-data-jpa</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>com.h2database</groupId>\r\n    <artifactId>h2</artifactId>\r\n    <version>2.4.1</version> \r\n    <scope>runtime</scope> \r\n</dependency>\r\n```","```\r\n@Configuration\r\npublic class DataSourceConfig {\r\n\r\n    @Bean\r\n    public DataSource getDataSource() {\r\n        DataSourceBuilder dataSourceBuilder = DataSourceBuilder.create();\r\n        dataSourceBuilder.driverClassName(\"org.h2.Driver\");\r\n        dataSourceBuilder.url(\"jdbc:h2:mem:test\");\r\n        dataSourceBuilder.username(\"SA\");\r\n        dataSourceBuilder.password(\"\");\r\n        return dataSourceBuilder.build();\r\n    }\r\n}\r\n```","```\r\n@Bean \r\npublic DataSource getDataSource() { \r\n    DataSourceBuilder dataSourceBuilder = DataSourceBuilder.create(); \r\n    dataSourceBuilder.username(\"SA\"); \r\n    dataSourceBuilder.password(\"\"); \r\n    return dataSourceBuilder.build(); \r\n}\r\n```","```\r\nspring.datasource.url=jdbc:h2:mem:test\r\nspring.datasource.driver-class-name=org.h2.Driver \r\n```","```\r\n@Entity\r\n@Table(name = \"users\")\r\npublic class User {\r\n\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.AUTO)\r\n    private long id;\r\n    private String name;\r\n    private String email;\r\n\r\n    // standard constructors / setters / getters / toString\r\n\r\n}\r\n```","```\r\n@Repository\r\npublic interface UserRepository extends CrudRepository<User, Long> {} \r\n```","```\r\n@RunWith(SpringRunner.class)\r\n@DataJpaTest\r\npublic class UserRepositoryIntegrationTest {\r\n\r\n    @Autowired\r\n    private UserRepository userRepository;\r\n\r\n    @Test\r\n    public void whenCalledSave_thenCorrectNumberOfUsers() {\r\n        userRepository.save(new User(\"Bob\", \"[[email protected]](/web/20221205184009/https://www.baeldung.com/cdn-cgi/l/email-protection)\"));\r\n        List<User> users = (List<User>) userRepository.findAll();\r\n\r\n        assertThat(users.size()).isEqualTo(1);\r\n    }    \r\n}\r\n```","```\r\n@SpringBootApplication\r\npublic class Application {\r\n\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(Application.class, args);\r\n    }\r\n\r\n    @Bean\r\n    public CommandLineRunner run(UserRepository userRepository) throws Exception {\r\n        return (String[] args) -> {\r\n            User user1 = new User(\"John\", \"[[email protected]](/web/20221205184009/https://www.baeldung.com/cdn-cgi/l/email-protection)\");\r\n            User user2 = new User(\"Julie\", \"[[email protected]](/web/20221205184009/https://www.baeldung.com/cdn-cgi/l/email-protection)\");\r\n            userRepository.save(user1);\r\n            userRepository.save(user2);\r\n            userRepository.findAll().forEach(user -> System.out.println(user);\r\n        };\r\n    }\r\n} \r\n```"]