["```\r\n<html>\r\n<body>\r\n<div id=\"errormsg\" style=\"display:none\"></div>\r\n<div>\r\n    <input id=\"oldpass\" name=\"oldpassword\" type=\"password\" />\r\n    <input id=\"pass\" name=\"password\" type=\"password\" />\r\n    <input id=\"passConfirm\" type=\"password\" />              \r\n    <span id=\"error\" style=\"display:none\">Password mismatch</span>\r\n\r\n   <button type=\"submit\" onclick=\"savePass()\">Change Password</button>\r\n</div>\r\n\r\n<script src=\"jquery.min.js\"></script>\r\n<script type=\"text/javascript\">\r\n\r\nvar serverContext = [[@{/}]];\r\nfunction savePass(){\r\n    var pass = $(\"#pass\").val();\r\n    var valid = pass == $(\"#passConfirm\").val();\r\n    if(!valid) {\r\n      $(\"#error\").show();\r\n      return;\r\n    }\r\n    $.post(serverContext + \"user/updatePassword\",\r\n      {password: pass, oldpassword: $(\"#oldpass\").val()} ,function(data){\r\n        window.location.href = serverContext +\"/home.html?message=\"+data.message;\r\n    })\r\n    .fail(function(data) {\r\n        $(\"#errormsg\").show().html(data.responseJSON.message);\r\n    });\r\n}\r\n</script> \r\n</body>\r\n</html>\r\n```","```\r\n@PostMapping(\"/user/updatePassword\")\r\n@PreAuthorize(\"hasRole('READ_PRIVILEGE')\")\r\npublic GenericResponse changeUserPassword(Locale locale, \r\n  @RequestParam(\"password\") String password, \r\n  @RequestParam(\"oldpassword\") String oldPassword) {\r\n    User user = userService.findUserByEmail(\r\n      SecurityContextHolder.getContext().getAuthentication().getName());\r\n\r\n    if (!userService.checkIfValidOldPassword(user, oldPassword)) {\r\n        throw new InvalidOldPasswordException();\r\n    }\r\n    userService.changeUserPassword(user, password);\r\n    return new GenericResponse(messages.getMessage(\"message.updatePasswordSuc\", null, locale));\r\n}\r\n```","```\r\n@ExtendWith(SpringExtension.class)\r\n@ContextConfiguration(\r\n  classes = { ConfigTest.class, PersistenceJPAConfig.class }, \r\n  loader = AnnotationConfigContextLoader.class)\r\npublic class ChangePasswordApiTest {\r\n    private final String URL_PREFIX = \"http://localhost:8080/\"; \r\n    private final String URL = URL_PREFIX + \"/user/updatePassword\";\r\n\r\n    @Autowired\r\n    private UserRepository userRepository;\r\n\r\n    @Autowired\r\n    private PasswordEncoder passwordEncoder;\r\n\r\n    FormAuthConfig formConfig = new FormAuthConfig(\r\n      URL_PREFIX + \"/login\", \"username\", \"password\");\r\n\r\n    @BeforeEach\r\n    public void init() {\r\n        User user = userRepository.findByEmail(\"[[email protected]](/web/20221006082221/https://www.baeldung.com/cdn-cgi/l/email-protection)\");\r\n        if (user == null) {\r\n            user = new User();\r\n            user.setFirstName(\"Test\");\r\n            user.setLastName(\"Test\");\r\n            user.setPassword(passwordEncoder.encode(\"test\"));\r\n            user.setEmail(\"[[email protected]](/web/20221006082221/https://www.baeldung.com/cdn-cgi/l/email-protection)\");\r\n            user.setEnabled(true);\r\n            userRepository.save(user);\r\n        } else {\r\n            user.setPassword(passwordEncoder.encode(\"test\"));\r\n            userRepository.save(user);\r\n        }\r\n    }\r\n}\r\n```","```\r\n@Test\r\npublic void givenLoggedInUser_whenChangingPassword_thenCorrect() {\r\n    RequestSpecification request = RestAssured.given().auth()\r\n      .form(\"[[email protected]](/web/20221006082221/https://www.baeldung.com/cdn-cgi/l/email-protection)\", \"test\", formConfig);\r\n\r\n    Map<String, String> params = new HashMap<String, String>();\r\n    params.put(\"oldpassword\", \"test\");\r\n    params.put(\"password\", \"newtest\");\r\n\r\n    Response response = request.with().params(params).post(URL);\r\n\r\n    assertEquals(200, response.statusCode());\r\n    assertTrue(response.body().asString().contains(\"Password updated successfully\"));\r\n}\r\n```","```\r\n@Test\r\npublic void givenWrongOldPassword_whenChangingPassword_thenBadRequest() {\r\n    RequestSpecification request = RestAssured.given().auth()\r\n      .form(\"[[email protected]](/web/20221006082221/https://www.baeldung.com/cdn-cgi/l/email-protection)\", \"test\", formConfig);\r\n\r\n    Map<String, String> params = new HashMap<String, String>();\r\n    params.put(\"oldpassword\", \"abc\");\r\n    params.put(\"password\", \"newtest\");\r\n\r\n    Response response = request.with().params(params).post(URL);\r\n\r\n    assertEquals(400, response.statusCode());\r\n    assertTrue(response.body().asString().contains(\"Invalid Old Password\"));\r\n}\r\n```","```\r\n@Test\r\npublic void givenNotAuthenticatedUser_whenChangingPassword_thenRedirect() {\r\n    Map<String, String> params = new HashMap<String, String>();\r\n    params.put(\"oldpassword\", \"abc\");\r\n    params.put(\"password\", \"xyz\");\r\n\r\n    Response response = RestAssured.with().params(params).post(URL);\r\n\r\n    assertEquals(302, response.statusCode());\r\n    assertFalse(response.body().asString().contains(\"Password updated successfully\"));\r\n}\r\n```"]