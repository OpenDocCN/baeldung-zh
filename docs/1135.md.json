["```\r\npublic abstract class ComputerBuilder {\r\n\r\n    // ...\r\n\r\n    public final Computer buildComputer() {\r\n        addMotherboard();\r\n        setupMotherboard();\r\n        addProcessor();\r\n        return new Computer(computerParts);\r\n    }\r\n\r\n    public abstract void addMotherboard();\r\n    public abstract void setupMotherboard();\r\n    public abstract void addProcessor();\r\n\r\n    // ...\r\n}\r\n```","```\r\npublic class StandardComputerBuilder extends ComputerBuilder {\r\n\r\n    @Override\r\n    public void addMotherboard() {\r\n        computerParts.put(\"Motherboard\", \"Standard Motherboard\");\r\n    }\r\n\r\n    @Override\r\n    public void setupMotherboard() {\r\n        motherboardSetupStatus.add(\r\n          \"Screwing the standard motherboard to the case.\");\r\n        motherboardSetupStatus.add(\r\n          \"Pluging in the power supply connectors.\");\r\n        motherboardSetupStatus.forEach(\r\n          step -> System.out.println(step));\r\n    }\r\n\r\n    @Override\r\n    public void addProcessor() {\r\n        computerParts.put(\"Processor\", \"Standard Processor\");\r\n    }\r\n}\r\n```","```\r\npublic class HighEndComputerBuilder extends ComputerBuilder {\r\n\r\n    @Override\r\n    public void addMotherboard() {\r\n        computerParts.put(\"Motherboard\", \"High-end Motherboard\");\r\n    }\r\n\r\n    @Override\r\n    public void setupMotherboard() {\r\n        motherboardSetupStatus.add(\r\n          \"Screwing the high-end motherboard to the case.\");\r\n        motherboardSetupStatus.add(\r\n          \"Pluging in the power supply connectors.\");\r\n        motherboardSetupStatus.forEach(\r\n          step -> System.out.println(step));\r\n    }\r\n\r\n    @Override\r\n    public void addProcessor() {\r\n         computerParts.put(\"Processor\", \"High-end Processor\");\r\n    }\r\n}\r\n```","```\r\nnew StandardComputerBuilder()\r\n  .buildComputer();\r\n  .getComputerParts()\r\n  .forEach((k, v) -> System.out.println(\"Part : \" + k + \" Value : \" + v));\r\n\r\nnew HighEndComputerBuilder()\r\n  .buildComputer();\r\n  .getComputerParts()\r\n  .forEach((k, v) -> System.out.println(\"Part : \" + k + \" Value : \" + v));\r\n```","```\r\npublic boolean addAll(int index, Collection<? extends E> c) {\r\n    rangeCheckForAdd(index);\r\n    boolean modified = false;\r\n    for (E e : c) {\r\n        add(index++, e);\r\n        modified = true;\r\n    }\r\n    return modified;\r\n}\r\n```","```\r\npublic void add(int index, E element) {\r\n    throw new UnsupportedOperationException();\r\n}\r\n```"]