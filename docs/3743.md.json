["```\r\n@Override\r\nprotected void configure(HttpSecurity http) throws Exception {\r\n    // ...\r\n    .antMatchers(\"/protectedbyrole\").hasRole(\"USER\")\r\n    .antMatchers(\"/protectedbyauthority\").hasAuthority(\"READ_PRIVILEGE\")\r\n    // ...\r\n}\r\n```","```\r\n@Override\r\n@Transactional\r\npublic void onApplicationEvent(ContextRefreshedEvent event) {\r\n    MyPrivilege readPrivilege\r\n      = createPrivilegeIfNotFound(\"READ_PRIVILEGE\");\r\n    MyPrivilege writePrivilege\r\n      = createPrivilegeIfNotFound(\"WRITE_PRIVILEGE\"); \r\n}\r\n```","```\r\nprivate Collection<? extends GrantedAuthority> getAuthorities(\r\n  Collection<Role> roles) {\r\n    List<GrantedAuthority> authorities\r\n      = new ArrayList<>();\r\n    for (Role role: roles) {\r\n        authorities.add(new SimpleGrantedAuthority(role.getName()));\r\n        role.getPrivileges().stream()\r\n         .map(p -> new SimpleGrantedAuthority(p.getName()))\r\n         .forEach(authorities::add);\r\n    }\r\n\r\n    return authorities;\r\n}\r\n```"]