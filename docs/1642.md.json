["```\r\n- id: add_request_header_route\r\n  uri: https://httpbin.org\r\n  predicates:\r\n  - Path=/get/**\r\n  filters:\r\n  - AddRequestHeader=My-Header-Good,Good\r\n  - AddRequestHeader=My-Header-Remove,Remove\r\n  - AddRequestParameter=var, good\r\n  - AddRequestParameter=var2, remove\r\n  - MapRequestHeader=My-Header-Good, My-Header-Bad\r\n  - MapRequestHeader=My-Header-Set, My-Header-Bad\r\n  - SetRequestHeader=My-Header-Set, Set \r\n  - RemoveRequestHeader=My-Header-Remove\r\n  - RemoveRequestParameter=var2\r\n```","```\r\n$ curl http://localhost:8080/get\r\n{\r\n  \"args\": {\r\n    \"var\": \"good\"\r\n  },\r\n  \"headers\": {\r\n    \"Host\": \"localhost\",\r\n    \"My-Header-Bad\": \"Good\",\r\n    \"My-Header-Good\": \"Good\",\r\n    \"My-Header-Set\": \"Set\",\r\n  },\r\n  \"origin\": \"127.0.0.1, 90.171.125.86\",\r\n  \"url\": \"https://localhost:8080/get?var=good\"\r\n}\r\n```","```\r\n@Bean\r\npublic RouteLocator routes(RouteLocatorBuilder builder) {\r\n     return builder.routes()\r\n       .route(\"modify_request_body\", r -> r.path(\"/post/**\")\r\n         .filters(f -> f.modifyRequestBody(\r\n           String.class, Hello.class, MediaType.APPLICATION_JSON_VALUE, \r\n           (exchange, s) -> Mono.just(new Hello(s.toUpperCase()))))\r\n         .uri(\"https://httpbin.org\"))\r\n       .build();\r\n}\r\n```","```\r\n$ curl -X POST \"http://localhost:8080/post\" -i -d \"Content\"\r\n\"data\": \"{\\\"message\\\":\\\"CONTENT\\\"}\",\r\n\"json\": {\r\n    \"message\": \"CONTENT\"\r\n}\r\n```","```\r\n- id: response_header_route\r\n  uri: https://httpbin.org\r\n  predicates:\r\n  - Path=/header/post/**\r\n  filters:\r\n  - AddResponseHeader=My-Header-Good,Good\r\n  - AddResponseHeader=My-Header-Set,Good\r\n  - AddResponseHeader=My-Header-Rewrite, password=12345678\r\n  - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin\r\n  - AddResponseHeader=My-Header-Remove,Remove\r\n  - SetResponseHeader=My-Header-Set, Set\r\n  - RemoveResponseHeader=My-Header-Remove\r\n  - RewriteResponseHeader=My-Header-Rewrite, password=[^&]+, password=***\r\n  - RewriteLocationResponseHeader=AS_IN_REQUEST, Location, ,\r\n```","```\r\n$ curl -X POST \"http://localhost:8080/header/post\" -s -o /dev/null -D -\r\nHTTP/1.1 200 OK\r\nMy-Header-Good: Good\r\nAccess-Control-Allow-Origin: *\r\nAccess-Control-Allow-Credentials: true\r\nMy-Header-Rewrite: password=***\r\nMy-Header-Set: Set\r\n```","```\r\n@Bean\r\npublic RouteLocator responseRoutes(RouteLocatorBuilder builder) {\r\n    return builder.routes()\r\n      .route(\"modify_response_body\", r -> r.path(\"/put/**\")\r\n        .filters(f -> f.modifyResponseBody(\r\n          String.class, Hello.class, MediaType.APPLICATION_JSON_VALUE, \r\n          (exchange, s) -> Mono.just(new Hello(\"New Body\"))))\r\n        .uri(\"https://httpbin.org\"))\r\n      .build();\r\n}\r\n```","```\r\n$ curl -X PUT \"http://localhost:8080/put\" -i -d \"CONTENT\"\r\n{\"message\":\"New Body\"}\r\n```","```\r\n- id: path_route\r\n  uri: https://httpbin.org\r\n  predicates:\r\n  - Path=/new/post/**\r\n  filters:\r\n  - RewritePath=/new(?<segment>/?.*), $\\{segment}\r\n  - SetPath=/post\r\n```","```\r\n$ curl -X POST \"http://localhost:8080/new/post\" -i\r\n\"X-Forwarded-Prefix\": \"/new\"\r\n\"url\": \"https://localhost:8080/post\"\r\n```","```\r\n- id: redirect_route\r\n  uri: https://httpbin.org\r\n  predicates:\r\n  - Path=/fake/post/**\r\n  filters:\r\n  - RedirectTo=302, https://httpbin.org\r\n- id: status_route\r\n  uri: https://httpbin.org\r\n  predicates:\r\n  - Path=/delete/**\r\n  filters:\r\n  - SetStatus=401\r\n```","```\r\n$ curl -X POST \"http://localhost:8080/fake/post\" -i\r\nHTTP/1.1 302 Found\r\nLocation: https://httpbin.org\r\n```","```\r\n$ curl -X DELETE \"http://localhost:8080/delete\" -i\r\nHTTP/1.1 401 Unauthorized\r\n```","```\r\n- id: size_route\r\n  uri: https://httpbin.org\r\n  predicates:\r\n  - Path=/anything\r\n  filters:\r\n  - name: RequestSize\r\n    args:\r\n       maxSize: 5000000\r\n```","```\r\n- id: circuitbreaker_route\r\n  uri: https://httpbin.org\r\n  predicates:\r\n  - Path=/status/504\r\n  filters:\r\n  - name: CircuitBreaker\r\n  args:\r\n     name: myCircuitBreaker\r\n     fallbackUri: forward:/anything\r\n  - RewritePath=/status/504, /anything\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.cloud</groupId>\r\n    <artifactId>spring-cloud-starter-circuitbreaker-reactor-resilience4j</artifactId>\r\n</dependency>\r\n```","```\r\n$ curl http://localhost:8080/status/504 \r\n\"url\": \"https://localhost:8080/anything\"\r\n```","```\r\n- id: retry_test\r\n  uri: https://httpbin.org\r\n  predicates:\r\n  - Path=/status/502\r\n  filters:\r\n  - name: Retry\r\n    args:\r\n       retries: 3\r\n       statuses: BAD_GATEWAY\r\n       methods: GET,POST\r\n       backoff:\r\n          firstBackoff: 10ms\r\n          maxBackoff: 50ms\r\n          factor: 2\r\n          basedOnPreviousValue: false\r\n```","```\r\n$ curl http://localhost:8080/status/502\r\n```","```\r\nMapping [Exchange: GET http://localhost:8080/status/502] to Route{id='retry_test', ...}\r\nHandler is being applied: {uri=https://httpbin.org/status/502, method=GET}\r\nReceived last HTTP packet\r\nHandler is being applied: {uri=https://httpbin.org/status/502, method=GET}\r\nReceived last HTTP packet\r\nHandler is being applied: {uri=https://httpbin.org/status/502, method=GET}\r\nReceived last HTTP packet\r\n```","```\r\nfilters: \r\n- SaveSession\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-data-redis-reactive</artifactId>\r\n </dependency>\r\n```","```\r\nspring:\r\n  redis:\r\n    host: localhost\r\n    port: 6379\r\n```","```\r\n- id: request_rate_limiter\r\n  uri: https://httpbin.org\r\n  predicates:\r\n  - Path=/redis/get/**\r\n  filters:\r\n  - StripPrefix=1\r\n  - name: RequestRateLimiter\r\n    args:\r\n       redis-rate-limiter.replenishRate: 10\r\n       redis-rate-limiter.burstCapacity: 5\r\n```","```\r\n$ curl \"http://localhost:8080/redis/get\" -i\r\nHTTP/1.1 200 OK\r\nX-RateLimit-Remaining: 4\r\nX-RateLimit-Requested-Tokens: 1\r\nX-RateLimit-Burst-Capacity: 5\r\nX-RateLimit-Replenish-Rate: 10\r\n```","```\r\n00:57:48.263 [main] INFO  c.b.s.w.RedisWebFilterFactoriesLiveTest - Received: status->200, reason->OK, remaining->[4]\r\n00:57:48.394 [main] INFO  c.b.s.w.RedisWebFilterFactoriesLiveTest - Received: status->200, reason->OK, remaining->[3]\r\n00:57:48.530 [main] INFO  c.b.s.w.RedisWebFilterFactoriesLiveTest - Received: status->200, reason->OK, remaining->[2]\r\n00:57:48.667 [main] INFO  c.b.s.w.RedisWebFilterFactoriesLiveTest - Received: status->200, reason->OK, remaining->[1]\r\n00:57:48.826 [main] INFO  c.b.s.w.RedisWebFilterFactoriesLiveTest - Received: status->200, reason->OK, remaining->[0]\r\n00:57:48.851 [main] INFO  c.b.s.w.RedisWebFilterFactoriesLiveTest - Received: status->429, reason->Too Many Requests, remaining->[0]\r\n00:57:48.894 [main] INFO  c.b.s.w.RedisWebFilterFactoriesLiveTest - Received: status->429, reason->Too Many Requests, remaining->[0]\r\n00:57:49.135 [main] INFO  c.b.s.w.RedisWebFilterFactoriesLiveTest - Received: status->200, reason->OK, remaining->[4]\r\n```"]