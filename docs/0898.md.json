["```\r\nkeytool -genkeypair -alias baeldung -keyalg RSA -keysize 2048 -storetype PKCS12 -keystore baeldung.p12 -validity 3650\r\n```","```\r\nkeytool -genkeypair -alias baeldung -keyalg RSA -keysize 2048 -keystore baeldung.jks -validity 3650\r\n```","```\r\nkeytool -importkeystore -srckeystore baeldung.jks -destkeystore baeldung.p12 -deststoretype pkcs12\r\n```","```\r\n# The format used for the keystore. It could be set to JKS in case it is a JKS file\r\nserver.ssl.key-store-type=PKCS12\r\n# The path to the keystore containing the certificate\r\nserver.ssl.key-store=classpath:keystore/baeldung.p12\r\n# The password used to generate the certificate\r\nserver.ssl.key-store-password=password\r\n# The alias mapped to the certificate\r\nserver.ssl.key-alias=baeldung\r\n```","```\r\nserver.ssl.enabled=true\r\n```","```\r\n#trust store location\r\ntrust.store=classpath:keystore/baeldung.p12\r\n#trust store password\r\ntrust.store.password=password\r\n```","```\r\nRestTemplate restTemplate() throws Exception {\r\n    SSLContext sslContext = new SSLContextBuilder()\r\n      .loadTrustMaterial(trustStore.getURL(), trustStorePassword.toCharArray())\r\n      .build();\r\n    SSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(sslContext);\r\n    HttpClient httpClient = HttpClients.custom()\r\n      .setSSLSocketFactory(socketFactory)\r\n      .build();\r\n    HttpComponentsClientHttpRequestFactory factory = \r\n      new HttpComponentsClientHttpRequestFactory(httpClient);\r\n    return new RestTemplate(factory);\r\n}\r\n```","```\r\nprotected void configure(HttpSecurity http) throws Exception {\r\n    http.authorizeRequests()\r\n      .antMatchers(\"/**\")\r\n      .permitAll();\r\n}\r\n```","```\r\n@Test\r\npublic void whenGETanHTTPSResource_thenCorrectResponse() throws Exception {\r\n    ResponseEntity<String> response = \r\n      restTemplate().getForEntity(WELCOME_URL, String.class, Collections.emptyMap());\r\n\r\n    assertEquals(\"<h1>Welcome to Secured Site</h1>\", response.getBody());\r\n    assertEquals(HttpStatus.OK, response.getStatusCode());\r\n}\r\n```","```\r\n<start-class>com.baeldung.ssl.HttpsEnabledApplication</start-class>\r\n```"]