["```\r\nmodule com.baeldung.java9.modules.car {\r\n    requires com.baeldung.java9.modules.engines;\r\n    exports com.baeldung.java9.modules.car.handling;\r\n} \r\n```","```\r\nHttpRequest request = HttpRequest.newBuilder()\r\n  .uri(new URI(\"https://postman-echo.com/get\"))\r\n  .GET()\r\n  .build();\r\n\r\nHttpResponse<String> response = HttpClient.newHttpClient()\r\n  .send(request, HttpResponse.BodyHandler.asString()); \r\n```","```\r\nProcessHandle self = ProcessHandle.current();\r\nlong PID = self.getPid();\r\nProcessHandle.Info procInfo = self.info();\r\n\r\nOptional<String[]> args = procInfo.arguments();\r\nOptional<String> cmd =  procInfo.commandLine();\r\nOptional<Instant> startTime = procInfo.startInstant();\r\nOptional<Duration> cpuUsage = procInfo.totalCpuDuration();\r\n```","```\r\nchildProc = ProcessHandle.current().children();\r\nchildProc.forEach(procHandle -> {\r\n    assertTrue(\"Could not kill process \" + procHandle.getPid(), procHandle.destroy());\r\n});\r\n```","```\r\nMyAutoCloseable mac = new MyAutoCloseable();\r\ntry (mac) {\r\n    // do some stuff with mac\r\n}\r\n\r\ntry (new MyAutoCloseable() { }.finalWrapper.finalCloseable) {\r\n   // do some stuff with finalCloseable\r\n} catch (Exception ex) { } \r\n```","```\r\nFooClass<Integer> fc = new FooClass<>(1) { // anonymous inner class\r\n};\r\n\r\nFooClass<? extends Integer> fc0 = new FooClass<>(1) { \r\n    // anonymous inner class\r\n};\r\n\r\nFooClass<?> fc1 = new FooClass<>(1) { // anonymous inner class\r\n}; \r\n```","```\r\ninterface InterfaceWithPrivateMethods {\r\n\r\n    private static String staticPrivate() {\r\n        return \"static private\";\r\n    }\r\n\r\n    private String instancePrivate() {\r\n        return \"instance private\";\r\n    }\r\n\r\n    default void check() {\r\n        String result = staticPrivate();\r\n        InterfaceWithPrivateMethods pvt = new InterfaceWithPrivateMethods() {\r\n            // anonymous class\r\n        };\r\n        result = pvt.instancePrivate();\r\n    }\r\n}}\r\n```","```\r\njdk-9\\bin>jshell.exe\r\n|  Welcome to JShell -- Version 9\r\n|  For an introduction type: /help intro\r\njshell> \"This is my long string. I want a part of it\".substring(8,19);\r\n$5 ==> \"my long string\"\r\n```","```\r\njshell> /save c:\\develop\\JShell_hello_world.txt\r\njshell> /open c:\\develop\\JShell_hello_world.txt\r\nHello JShell! \r\n```","```\r\njdk-9\\bin>jcmd 14056 VM.class_hierarchy -i -s java.net.Socket\r\n14056:\r\njava.lang.Object/null\r\n|--java.net.Socket/null\r\n|  implements java.io.Closeable/null (declared intf)\r\n|  implements java.lang.AutoCloseable/null (inherited intf)\r\n|  |--org.eclipse.ecf.internal.provider.filetransfer.httpclient4.CloseMonitoringSocket\r\n|  |  implements java.lang.AutoCloseable/null (inherited intf)\r\n|  |  implements java.io.Closeable/null (inherited intf)\r\n|  |--javax.net.ssl.SSLSocket/null\r\n|  |  implements java.lang.AutoCloseable/null (inherited intf)\r\n|  |  implements java.io.Closeable/null (inherited intf) \r\n```","```\r\nBufferedImage[] resolutionVariants = ....\r\nMultiResolutionImage bmrImage\r\n  = new BaseMultiResolutionImage(baseIndex, resolutionVariants);\r\nImage testRVImage = bmrImage.getResolutionVariant(16, 16);\r\nassertSame(\"Images should be the same\", testRVImage, resolutionVariants[3]); \r\n```","```\r\njava -Xlog:gc=debug:file=gc.txt:none ...\r\n```","```\r\njcmd 9615 VM.log output=gc_logs what=gc\r\n```","```\r\nSet<String> strKeySet = Set.of(\"key1\", \"key2\", \"key3\");\r\n```","```\r\nList<String> filteredList = listOfOptionals.stream()\r\n  .flatMap(Optional::stream)\r\n  .collect(Collectors.toList()); \r\n```"]