["```\r\nN/2, N/4, â€¦, 1 (continuously dividing by 2)\r\n```","```\r\npublic void sort(int arrayToSort[]) {\r\n    int n = arrayToSort.length;\r\n\r\n    for (int gap = n / 2; gap > 0; gap /= 2) {\r\n        for (int i = gap; i < n; i++) {\r\n            int key = arrayToSort[i];\r\n            int j = i;\r\n            while (j >= gap && arrayToSort[j - gap] > key) {\r\n                arrayToSort[j] = arrayToSort[j - gap];\r\n                j -= gap;\r\n            }\r\n            arrayToSort[j] = key;\r\n        }\r\n    }\r\n}\r\n```","```\r\n@Test\r\npublic void givenUnsortedArray_whenShellSort_thenSortedAsc() {\r\n    int[] input = {41, 15, 82, 5, 65, 19, 32, 43, 8};\r\n    ShellSort.sort(input);\r\n    int[] expected = {5, 8, 15, 19, 32, 41, 43, 65, 82};\r\n    assertArrayEquals(\"the two arrays are not equal\", expected, input);\r\n}\r\n```"]