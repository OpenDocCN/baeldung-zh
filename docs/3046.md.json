["```\r\n<dependency>\r\n    <groupId>org.apache.meecrowave</groupId>\r\n    <artifactId>meecrowave-core</artifactId>\r\n    <version>1.2.1</version>\r\n</dependency>\r\n```","```\r\npublic static void main(String[] args) {\r\n    try (Meecrowave meecrowave = new Meecrowave()) {\r\n        meecrowave.bake().await();\r\n    }\r\n}\r\n```","```\r\n--add-module javax.xml.bind\r\n```","```\r\nMeecrowave.Builder builder = new Meecrowave.Builder();\r\nbuilder.setHttpPort(8080);\r\nbuilder.setScanningPackageIncludes(\"com.baeldung.meecrowave\");\r\nbuilder.setJaxrsMapping(\"/api/*\");\r\nbuilder.setJsonpPrettify(true);\r\n```","```\r\ntry (Meecrowave meecrowave = new Meecrowave(builder)) { \r\n    meecrowave.bake().await();\r\n}\r\n```","```\r\n@RequestScoped\r\n@Path(\"article\")\r\npublic class ArticleEndpoints {\r\n\r\n    @GET\r\n    public Response getArticle() {\r\n        return Response.ok().entity(new Article(\"name\", \"author\")).build();      \r\n    }\r\n\r\n    @POST \r\n    public Response createArticle(Article article) { \r\n        return Response.status(Status.CREATED).entity(article).build(); \r\n    }\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>org.apache.meecrowave</groupId>\r\n    <artifactId>meecrowave-junit</artifactId>\r\n    <version>1.2.1</version>\r\n    <scope>test</scope>\r\n</dependency> \r\n```","```\r\n<dependency>\r\n    <groupId>com.squareup.okhttp3</groupId>\r\n    <artifactId>okhttp</artifactId>\r\n    <version>3.10.0</version>\r\n</dependency>\r\n```","```\r\n@RunWith(MonoMeecrowave.Runner.class)\r\npublic class ArticleEndpointsIntegrationTest {\r\n\r\n    @ConfigurationInject\r\n    private Meecrowave.Builder config;\r\n    private static OkHttpClient client;\r\n\r\n    @BeforeClass\r\n    public static void setup() {\r\n        client = new OkHttpClient();\r\n    }\r\n\r\n    @Test\r\n    public void whenRetunedArticle_thenCorrect() {\r\n        String base = \"http://localhost:\" + config.getHttpPort();\r\n\r\n        Request request = new Request.Builder()\r\n          .url(base + \"/article\")\r\n          .build();\r\n        Response response = client.newCall(request).execute();\r\n        assertEquals(200, response.code());\r\n    }\r\n}\r\n```","```\r\n@ApplicationScoped\r\npublic class ArticleService {\r\n    public Article createArticle(Article article) {\r\n        return article;\r\n    }\r\n}\r\n```","```\r\n@Inject\r\nArticleService articleService;\r\n```","```\r\n<build>\r\n    ...\r\n    <plugins>\r\n        <plugin>\r\n            <groupId>org.apache.meecrowave</groupId>\r\n            <artifactId>meecrowave-maven-plugin</artifactId>\r\n            <version>1.2.1</version>\r\n        </plugin>\r\n    </plugins>\r\n</build>\r\n```","```\r\nmeecrowave-meecrowave-distribution.zip\r\n```","```\r\n|____meecrowave-distribution\r\n| |____bin\r\n| | |____meecrowave.sh\r\n| |____logs\r\n| | |____you_can_safely_delete.txt\r\n| |____lib\r\n| |____conf\r\n| | |____log4j2.xml\r\n| | |____meecrowave.properties\r\n```","```\r\n./meecrowave.sh start\r\n```","```\r\n./meecrowave.sh stop\r\n```"]