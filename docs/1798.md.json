["```\r\nCollection<Foo> srcCollection; \r\n```","```\r\nArrayList<Foo> newList;\r\n```","```\r\nArrayList<Foo> newList = new ArrayList<>(srcCollection);\r\n```","```\r\nArrayList<Foo> newList = srcCollection.stream().collect(toCollection(ArrayList::new));\r\n```","```\r\nList<Foo> newList = srcCollection.stream().collect(toList());\r\n```","```\r\npublic class Foo {\r\n\r\n    private int id;\r\n    private String name;\r\n    private Foo parent;\r\n\r\n    public Foo(int id, String name, Foo parent) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.parent = parent;\r\n    }\r\n\r\n    public Foo deepCopy() {\r\n        return new Foo(\r\n          this.id, this.name, this.parent != null ? this.parent.deepCopy() : null);\r\n    }\r\n}\r\n```","```\r\nArrayList<Foo> newList = srcCollection.stream()\r\n  .map(foo -> foo.deepCopy())\r\n  .collect(toCollection(ArrayList::new));\r\n```","```\r\nArrayList<Foo> newList = srcCollection.stream()\r\n  .sorted(Comparator.comparing(Foo::getName))\r\n  .collect(toCollection(ArrayList::new));\r\n```"]