["```\r\n<dependency>\r\n    <groupId>com.github.tomakehurst</groupId>\r\n    <artifactId>wiremock-jre8</artifactId>\r\n    <version>2.26.3</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n```","```\r\n@Rule public WireMockRule wireMockRule = new WireMockRule(wireMockConfig().dynamicPort());\r\n\r\nprivate String REQUESTED_RESOURCE = \"/test.json\";\r\n\r\n@Before\r\npublic void setup() {\r\n    stubFor(get(urlEqualTo(REQUESTED_RESOURCE))\r\n      .willReturn(aResponse()\r\n      .withStatus(200)\r\n      .withBody(\"{ \\\"response\\\" : \\\"It worked!\\\" }\")));\r\n}\r\n```","```\r\nSocket socket = new Socket(\"localhost\", wireMockRule.port())\r\n```","```\r\nOutputStream clientOutput = socket.getOutputStream();\r\nPrintWriter writer = new PrintWriter(new OutputStreamWriter(clientOutput));\r\nwriter.print(\"GET \" + TEST_JSON + \" HTTP/1.0\\r\\n\\r\\n\");\r\nwriter.flush();\r\n```","```\r\nInputStream serverInput = socket.getInputStream();\r\nBufferedReader reader = new BufferedReader(new InputStreamReader(serverInput));\r\nStringBuilder ourStore = new StringBuilder();\r\n```","```\r\nfor (String line; (line = reader.readLine()) != null;) {\r\n   ourStore.append(line);\r\n   ourStore.append(System.lineSeparator());\r\n}\r\n```","```\r\nInetSocketAddress address = new InetSocketAddress(\"localhost\", wireMockRule.port());\r\nSocketChannel socketChannel = SocketChannel.open(address);\r\n```","```\r\nCharset charset = StandardCharsets.UTF_8;\r\nsocket.write(charset.encode(CharBuffer.wrap(\"GET \" + REQUESTED_RESOURCE + \" HTTP/1.0\\r\\n\\r\\n\")));\r\n```","```\r\nByteBuffer byteBuffer = ByteBuffer.allocate(8192);\r\nCharsetDecoder charsetDecoder = charset.newDecoder();\r\nCharBuffer charBuffer = CharBuffer.allocate(8192);\r\n```","```\r\nsocketChannel.read(byteBuffer)\r\n```","```\r\nwhile (socketChannel.read(byteBuffer) != -1 || byteBuffer.position() > 0) {\r\n    byteBuffer.flip();\r\n    storeBufferContents(byteBuffer, charBuffer, charsetDecoder, ourStore);\r\n    byteBuffer.compact();\r\n}\r\n```","```\r\nsocketChannel.close();\r\n```","```\r\nvoid storeBufferContents(ByteBuffer byteBuffer, CharBuffer charBuffer, \r\n  CharsetDecoder charsetDecoder, StringBuilder ourStore) {\r\n    charsetDecoder.decode(byteBuffer, charBuffer, true);\r\n    charBuffer.flip();\r\n    ourStore.append(charBuffer);\r\n    charBuffer.clear();\r\n}\r\n```"]