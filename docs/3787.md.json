["```\r\npublic class JaotCompilation {\r\n\r\n    public static void main(String[] argv) {\r\n        System.out.println(message());\r\n    }\r\n\r\n    public static String message() {\r\n        return \"The JAOT compiler says 'Hello'\";\r\n    }\r\n} \r\n```","```\r\njavac JaotCompilation.java \r\n```","```\r\njaotc --output jaotCompilation.so JaotCompilation.class \r\n```","```\r\njava -XX:AOTLibrary=./jaotCompilation.so JaotCompilation \r\n```","```\r\njava -XX:+PrintAOT -XX:AOTLibrary=./jaotCompilation.so JaotCompilation \r\n```","```\r\n77    1     loaded    ./jaotCompilation.so  aot library \r\n```","```\r\njava -XX:AOTLibrary=./jaotCompilation.so -verbose -XX:+PrintAOT JaotCompilation \r\n```","```\r\n11    1     loaded    ./jaotCompilation.so  aot library\r\n116    1     aot[ 1]   jaotc.JaotCompilation.<init>()V\r\n116    2     aot[ 1]   jaotc.JaotCompilation.message()Ljava/lang/String;\r\n116    3     aot[ 1]   jaotc.JaotCompilation.main([Ljava/lang/String;)V\r\nThe JAOT compiler says 'Hello' \r\n```","```\r\npublic static String message() {\r\n    return \"The JAOT compiler says 'Good morning'\";\r\n} \r\n```","```\r\njava -XX:AOTLibrary=./jaotCompilation.so -verbose -XX:+PrintAOT JaotCompilation \r\n```","```\r\n 11 1 loaded ./jaotCompilation.so aot library\r\nThe JAOT compiler says 'Good morning'\r\n```","```\r\njaotc --output javaBase.soÂ --module java.base \r\n```","```\r\ncompileOnly java.lang.*\r\n```","```\r\njaotc --output javaBaseLang.so --module java.base --compile-commands compileCommands.txt \r\n```","```\r\njava -XX:+UnlockDiagnosticVMOptions -XX:+LogTouchedMethods -XX:+PrintTouchedMethodsAtExit JaotCompilation \r\n```","```\r\njaotc --output javaBaseString.so --class-name java.lang.String \r\n```","```\r\njaotc --output jaotCompilation.so --compile-for-tiered JaotCompilation.class \r\n```","```\r\n# download Amazon Linux \r\ndocker pull amazonlinux \r\n\r\n# inside the Docker container, install Amazon Corretto\r\nyum install java-11-amazon-corretto\r\n\r\n# some additional libraries needed for jaotc\r\nyum install binutils.x86_64 \r\n```","```\r\n# create folder aot\r\nmkdir aot\r\ncd aot\r\nmkdir jaotc\r\ncd jaotc\r\n```","```\r\npackage jaotc;\r\n\r\npublic class JaotCompilation {\r\n    public static int message(int input) {\r\n        return input * 2;\r\n    }\r\n}\r\n```","```\r\njavac JaotCompilation.java\r\ncd ..\r\njaotc -J-XX:+UseSerialGC --output jaotCompilation.so jaotc/JaotCompilation.class\r\n```","```\r\njava -XX:+PrintCommandLineFlags -version\r\n```","```\r\nzip -r jaot.zip jaotCompilation.so jaotc/\r\n```","```\r\n-XX:+UnlockExperimentalVMOptions -XX:+PrintAOT -XX:AOTLibrary=./jaotCompilation.so\r\n```","```\r\n57    1     loaded    ./jaotCompilation.so  aot library\r\n```"]