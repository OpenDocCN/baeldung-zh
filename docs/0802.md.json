["```\r\n@Configuration\r\n@EnableWebSecurity\r\npublic class BasicAuthConfiguration \r\n  extends WebSecurityConfigurerAdapter {\r\n\r\n    @Override\r\n    protected void configure(AuthenticationManagerBuilder auth)\r\n      throws Exception {\r\n        auth\r\n          .inMemoryAuthentication()\r\n          .withUser(\"user\")\r\n          .password(\"password\")\r\n          .roles(\"USER\");\r\n    }\r\n\r\n    @Override\r\n    protected void configure(HttpSecurity http) \r\n      throws Exception {\r\n        http.csrf().disable()\r\n          .authorizeRequests()\r\n          .antMatchers(\"/login\").permitAll()\r\n          .anyRequest()\r\n          .authenticated()\r\n          .and()\r\n          .httpBasic();\r\n    }\r\n}\r\n```","```\r\n@RestController\r\n@CrossOrigin\r\npublic class UserController {\r\n\r\n    @RequestMapping(\"/login\")\r\n    public boolean login(@RequestBody User user) {\r\n        return\r\n          user.getUserName().equals(\"user\") && user.getPassword().equals(\"password\");\r\n    }\r\n\r\n    @RequestMapping(\"/user\")\r\n    public Principal user(HttpServletRequest request) {\r\n        String authToken = request.getHeader(\"Authorization\")\r\n          .substring(\"Basic\".length()).trim();\r\n        return () ->  new String(Base64.getDecoder()\r\n          .decode(authToken)).split(\":\")[0];\r\n    }\r\n}\r\n```","```\r\n<html ng-app=\"app\">\r\n<body>\r\n    <div ng-view></div>\r\n\r\n    <script src=\"//code.jquery.com/jquery-3.1.1.min.js\"></script>\r\n    <script src=\"//code.angularjs.org/1.6.0/angular.min.js\"></script>\r\n    <script src=\"//code.angularjs.org/1.6.0/angular-route.min.js\"></script>\r\n    <script src=\"app.js\"></script>\r\n    <script src=\"home/home.controller.js\"></script>\r\n    <script src=\"login/login.controller.js\"></script>\r\n</body>\r\n</html>\r\n```","```\r\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app', ['ngRoute'])\r\n        .config(config)\r\n        .run(run);\r\n\r\n    config.$inject = ['$routeProvider', '$locationProvider'];\r\n    function config($routeProvider, $locationProvider) {\r\n        $routeProvider.when('/', {\r\n            controller: 'HomeController',\r\n            templateUrl: 'home/home.view.html',\r\n            controllerAs: 'vm'\r\n        }).when('/login', {\r\n            controller: 'LoginController',\r\n            templateUrl: 'login/login.view.html',\r\n            controllerAs: 'vm'\r\n        }).otherwise({ redirectTo: '/login' });\r\n    }\r\n\r\n    run.$inject = ['$rootScope', '$location', '$http', '$window'];\r\n    function run($rootScope, $location, $http, $window) {\r\n        var userData = $window.sessionStorage.getItem('userData');\r\n        if (userData) {\r\n            $http.defaults.headers.common['Authorization']\r\n              = 'Basic ' + JSON.parse(userData).authData;\r\n        }\r\n\r\n        $rootScope\r\n        .$on('$locationChangeStart', function (event, next, current) {\r\n            var restrictedPage\r\n              = $.inArray($location.path(), ['/login']) === -1;\r\n            var loggedIn\r\n              = $window.sessionStorage.getItem('userData');\r\n            if (restrictedPage && !loggedIn) {\r\n                $location.path('/login');\r\n            }\r\n        });\r\n    }\r\n})();\r\n```","```\r\n<h2>Login</h2>\r\n<form name=\"form\" ng-submit=\"vm.login()\" role=\"form\">\r\n    <div>\r\n        <label for=\"username\">Username</label>\r\n        <input type=\"text\" name=\"username\"\r\n          id=\"username\" ng-model=\"vm.username\" required />\r\n        <span ng-show=\"form.username.$dirty\r\n          && form.username.$error.required\">Username is required</span>\r\n    </div>\r\n    <div>\r\n        <label for=\"password\">Password</label>\r\n        <input type=\"password\"\r\n          name=\"password\" id=\"password\" ng-model=\"vm.password\" required />\r\n        <span ng-show=\"form.password.$dirty\r\n          && form.password.$error.required\">Password is required</span>\r\n    </div>\r\n    <div class=\"form-actions\">\r\n        <button type=\"submit\"\r\n          ng-disabled=\"form.$invalid || vm.dataLoading\">Login</button>\r\n    </div>\r\n</form>\r\n```","```\r\n(function () {\r\n    'use strict';\r\n    angular\r\n        .module('app')\r\n        .controller('LoginController', LoginController);\r\n\r\n    LoginController.$inject = ['$location', '$window', '$http'];\r\n    function LoginController($location, $window, $http) {\r\n        var vm = this;\r\n        vm.login = login;\r\n\r\n        (function initController() {\r\n            $window.localStorage.setItem('token', '');\r\n        })();\r\n\r\n        function login() {\r\n            $http({\r\n                url: 'http://localhost:8082/login',\r\n                method: \"POST\",\r\n                data: { \r\n                    'userName': vm.username,\r\n                    'password': vm.password\r\n                }\r\n            }).then(function (response) {\r\n                if (response.data) {\r\n                    var token\r\n                      = $window.btoa(vm.username + ':' + vm.password);\r\n                    var userData = {\r\n                        userName: vm.username,\r\n                        authData: token\r\n                    }\r\n                    $window.sessionStorage.setItem(\r\n                      'userData', JSON.stringify(userData)\r\n                    );\r\n                    $http.defaults.headers.common['Authorization']\r\n                      = 'Basic ' + token;\r\n                    $location.path('/');\r\n                } else {\r\n                    alert(\"Authentication failed.\")\r\n                }\r\n            });\r\n        };\r\n    }\r\n})();\r\n```","```\r\n<h1>Hi {{vm.user}}!</h1>\r\n<p>You're logged in!!</p>\r\n<p><a href=\"#!/login\" class=\"btn btn-primary\" ng-click=\"logout()\">Logout</a></p>\r\n```","```\r\n(function () {\r\n    'use strict';\r\n    angular\r\n        .module('app')\r\n        .controller('HomeController', HomeController);\r\n\r\n    HomeController.$inject = ['$window', '$http', '$scope'];\r\n    function HomeController($window, $http, $scope) {\r\n        var vm = this;\r\n        vm.user = null;\r\n\r\n        initController();\r\n\r\n        function initController() {\r\n            $http({\r\n                url: 'http://localhost:8082/user',\r\n                method: \"GET\"\r\n            }).then(function (response) {\r\n                vm.user = response.data.name;\r\n            }, function (error) {\r\n                console.log(error);\r\n            });\r\n        };\r\n\r\n        $scope.logout = function () {\r\n            $window.sessionStorage.setItem('userData', '');\r\n            $http.defaults.headers.common['Authorization'] = 'Basic';\r\n        }\r\n    }\r\n})();\r\n```","```\r\nnpm install http-server --save\r\n```","```\r\nhttp-server -o\r\n```","```\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <base href=\"/\" />\r\n    <script src=\"node_modules/core-js/client/shim.min.js\"></script>\r\n    <script src=\"node_modules/zone.js/dist/zone.js\"></script>\r\n    <script src=\"node_modules/systemjs/dist/system.src.js\"></script>\r\n\r\n    <script src=\"systemjs.config.js\"></script>\r\n    <script>\r\n        System.import('app').catch(function (err) { console.error(err); });\r\n    </script>\r\n</head>\r\n<body>\r\n    <app>Loading...</app>\r\n</body>\r\n</html>\r\n```","```\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n```","```\r\nconst appRoutes: Routes = [\r\n    { path: '', component: HomeComponent },\r\n    { path: 'login', component: LoginComponent },\r\n    { path: '**', redirectTo: '' }\r\n];\r\n\r\nexport const routing = RouterModule.forRoot(appRoutes);\r\n```","```\r\n@NgModule({\r\n    imports: [\r\n        BrowserModule,\r\n        FormsModule,\r\n        HttpModule,\r\n        routing\r\n    ],\r\n    declarations: [\r\n        AppComponent,\r\n        HomeComponent,\r\n        LoginComponent\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule { }\r\n```","```\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html'\r\n})\r\n\r\nexport class AppComponent { }\r\n```","```\r\n@Component({\r\n    selector: 'login',\r\n    templateUrl: './app/login/login.component.html'\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n    model: any = {};\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private http: Http\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        sessionStorage.setItem('token', '');\r\n    }\r\n\r\n    login() {\r\n        let url = 'http://localhost:8082/login';\r\n        let result = this.http.post(url, {\r\n            userName: this.model.username,\r\n            password: this.model.password\r\n        }).map(res => res.json()).subscribe(isValid => {\r\n            if (isValid) {\r\n                sessionStorage.setItem(\r\n                  'token',\r\n                  btoa(this.model.username + ':' + this.model.password)\r\n                );\r\n                this.router.navigate(['']);\r\n            } else {\r\n                alert(\"Authentication failed.\");\r\n            }\r\n        });\r\n    }\r\n}\r\n```","```\r\n<form name=\"form\" (ngSubmit)=\"f.form.valid && login()\" #f=\"ngForm\" novalidate>\r\n    <div [ngClass]=\"{ 'has-error': f.submitted && !username.valid }\">\r\n        <label for=\"username\">Username</label>\r\n        <input type=\"text\"\r\n          name=\"username\" [(ngModel)]=\"model.username\"\r\n            #username=\"ngModel\" required />\r\n        <div *ngIf=\"f.submitted\r\n          && !username.valid\">Username is required</div>\r\n    </div>\r\n    <div [ngClass]=\"{ 'has-error': f.submitted && !password.valid }\">\r\n        <label for=\"password\">Password</label>\r\n        <input type=\"password\"\r\n          name=\"password\" [(ngModel)]=\"model.password\"\r\n            #password=\"ngModel\" required />\r\n        <div *ngIf=\"f.submitted\r\n          && !password.valid\">Password is required</div>\r\n    </div>\r\n    <div>\r\n        <button [disabled]=\"loading\">Login</button>\r\n    </div>\r\n</form>\r\n```","```\r\nthis.http.post<Observable<boolean>>(url, {\r\n    userName: this.model.username,\r\n    password: this.model.password\r\n}).subscribe(isValid => {\r\n    if (isValid) {\r\n        sessionStorage.setItem(\r\n          'token', \r\n          btoa(this.model.username + ':' + this.model.password)\r\n        );\r\n\tthis.router.navigate(['']);\r\n    } else {\r\n        alert(\"Authentication failed.\")\r\n    }\r\n});\r\n```"]