["```\r\npublic class SocketBrokerConfig extends \r\n  AbstractWebSocketMessageBrokerConfigurer {\r\n\r\n    @Override\r\n    public void configureMessageBroker(MessageBrokerRegistry config) {\r\n        config.enableSimpleBroker(\"/secured/user/queue/specific-user\");\r\n        config.setApplicationDestinationPrefixes(\"/spring-security-mvc-socket\");\r\n        config.setUserDestinationPrefix(\"/secured/user\");\r\n    }\r\n\r\n    @Override\r\n    public void registerStompEndpoints(StompEndpointRegistry registry) {\r\n        registry.addEndpoint(\"/secured/room\").withSockJS();\r\n    }\r\n}\r\n```","```\r\n\"/user/queue/updates\"\r\n```","```\r\n\"/queue/updates-user123\"\r\n```","```\r\n\"/user/{username}/queue/updates\"\r\n```","```\r\n@Autowired\r\nprivate SimpMessagingTemplate simpMessagingTemplate;\r\n\r\n@MessageMapping(\"/secured/room\") \r\npublic void sendSpecific(\r\n  @Payload Message msg, \r\n  Principal user, \r\n  @Header(\"simpSessionId\") String sessionId) throws Exception { \r\n    OutputMessage out = new OutputMessage(\r\n      msg.getFrom(), \r\n      msg.getText(),\r\n      new SimpleDateFormat(\"HH:mm\").format(new Date())); \r\n    simpMessagingTemplate.convertAndSendToUser(\r\n      msg.getTo(), \"/secured/user/queue/specific-user\", out); \r\n}\r\n```","```\r\n@Header(\"simpSessionId\") String sessionId\r\n```","```\r\nvar socket = new SockJS('/secured/room'); \r\nvar stompClient = Stomp.over(socket);\r\nvar sessionId = \"\";\r\n\r\nstompClient.connect({}, function (frame) {\r\n    var url = stompClient.ws._transport.url;\r\n    url = url.replace(\r\n      \"ws://localhost:8080/spring-security-mvc-socket/secured/room/\",  \"\");\r\n    url = url.replace(\"/websocket\", \"\");\r\n    url = url.replace(/^[0-9]+\\//, \"\");\r\n    console.log(\"Your current session is: \" + url);\r\n    sessionId = url;\r\n} \r\n```","```\r\nstompClient.subscribe('secured/user/queue/specific-user' \r\n  + '-user' + that.sessionId, function (msgOut) {\r\n     //handle messages\r\n} \r\n```"]