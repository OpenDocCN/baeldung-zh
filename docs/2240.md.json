["```\r\npublic static int[] merge(int[] foo, int[] bar) {\r\n\r\n    int fooLength = foo.length;\r\n    int barLength = bar.length;\r\n\r\n    int[] merged = new int[fooLength + barLength];\r\n\r\n    int fooPosition, barPosition, mergedPosition;\r\n    fooPosition = barPosition = mergedPosition = 0;\r\n\r\n    while(fooPosition < fooLength && barPosition < barLength) {\r\n        if (foo[fooPosition] < bar[barPosition]) {\r\n            merged[mergedPosition++] = foo[fooPosition++];\r\n        } else {\r\n            merged[mergedPosition++] = bar[barPosition++];\r\n        }\r\n    }\r\n\r\n    while (fooPosition < fooLength) {\r\n        merged[mergedPosition++] = foo[fooPosition++];\r\n    }\r\n\r\n    while (barPosition < barLength) {\r\n        merged[mergedPosition++] = bar[barPosition++];\r\n    }\r\n\r\n    return merged;\r\n}\r\n```","```\r\n@Test\r\npublic void givenTwoSortedArrays_whenMerged_thenReturnMergedSortedArray() {\r\n\r\n    int[] foo = { 3, 7 };\r\n    int[] bar = { 4, 8, 11 };\r\n    int[] merged = { 3, 4, 7, 8, 11 };\r\n\r\n    assertArrayEquals(merged, SortedArrays.merge(foo, bar));\r\n}\r\n```"]