["```\r\n<dependency>\r\n    <groupId>javax.websocket</groupId>\r\n    <artifactId>javax.websocket-api</artifactId>\r\n    <version>1.1</version>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>com.google.code.gson</groupId>\r\n    <artifactId>gson</artifactId>\r\n    <version>2.8.0</version>\r\n</dependency>\r\n```","```\r\n@ServerEndpoint(value = \"/chat/{username}\")\r\npublic class ChatEndpoint {\r\n\r\n    @OnOpen\r\n    public void onOpen(Session session) throws IOException {\r\n        // Get session and WebSocket connection\r\n    }\r\n\r\n    @OnMessage\r\n    public void onMessage(Session session, Message message) throws IOException {\r\n        // Handle new messages\r\n    }\r\n\r\n    @OnClose\r\n    public void onClose(Session session) throws IOException {\r\n        // WebSocket connection closes\r\n    }\r\n\r\n    @OnError\r\n    public void onError(Session session, Throwable throwable) {\r\n        // Do error handling here\r\n    }\r\n}\r\n```","```\r\n@ServerEndpoint(value=\"/chat/{username}\")\r\npublic class ChatEndpoint {\r\n\r\n    private Session session;\r\n    private static Set<ChatEndpoint> chatEndpoints \r\n      = new CopyOnWriteArraySet<>();\r\n    private static HashMap<String, String> users = new HashMap<>();\r\n\r\n    @OnOpen\r\n    public void onOpen(\r\n      Session session, \r\n      @PathParam(\"username\") String username) throws IOException {\r\n\r\n        this.session = session;\r\n        chatEndpoints.add(this);\r\n        users.put(session.getId(), username);\r\n\r\n        Message message = new Message();\r\n        message.setFrom(username);\r\n        message.setContent(\"Connected!\");\r\n        broadcast(message);\r\n    }\r\n\r\n    @OnMessage\r\n    public void onMessage(Session session, Message message) \r\n      throws IOException {\r\n\r\n        message.setFrom(users.get(session.getId()));\r\n        broadcast(message);\r\n    }\r\n\r\n    @OnClose\r\n    public void onClose(Session session) throws IOException {\r\n\r\n        chatEndpoints.remove(this);\r\n        Message message = new Message();\r\n        message.setFrom(users.get(session.getId()));\r\n        message.setContent(\"Disconnected!\");\r\n        broadcast(message);\r\n    }\r\n\r\n    @OnError\r\n    public void onError(Session session, Throwable throwable) {\r\n        // Do error handling here\r\n    }\r\n\r\n    private static void broadcast(Message message) \r\n      throws IOException, EncodeException {\r\n\r\n        chatEndpoints.forEach(endpoint -> {\r\n            synchronized (endpoint) {\r\n                try {\r\n                    endpoint.session.getBasicRemote().\r\n                      sendObject(message);\r\n                } catch (IOException | EncodeException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n```","```\r\npublic class Message {\r\n    private String from;\r\n    private String to;\r\n    private String content;\r\n\r\n    //standard constructors, getters, setters\r\n}\r\n```","```\r\npublic class MessageEncoder implements Encoder.Text<Message> {\r\n\r\n    private static Gson gson = new Gson();\r\n\r\n    @Override\r\n    public String encode(Message message) throws EncodeException {\r\n        return gson.toJson(message);\r\n    }\r\n\r\n    @Override\r\n    public void init(EndpointConfig endpointConfig) {\r\n        // Custom initialization logic\r\n    }\r\n\r\n    @Override\r\n    public void destroy() {\r\n        // Close resources\r\n    }\r\n}\r\n```","```\r\npublic class MessageDecoder implements Decoder.Text<Message> {\r\n\r\n    private static Gson gson = new Gson();\r\n\r\n    @Override\r\n    public Message decode(String s) throws DecodeException {\r\n        return gson.fromJson(s, Message.class);\r\n    }\r\n\r\n    @Override\r\n    public boolean willDecode(String s) {\r\n        return (s != null);\r\n    }\r\n\r\n    @Override\r\n    public void init(EndpointConfig endpointConfig) {\r\n        // Custom initialization logic\r\n    }\r\n\r\n    @Override\r\n    public void destroy() {\r\n        // Close resources\r\n    }\r\n}\r\n```","```\r\n@ServerEndpoint( \r\n  value=\"/chat/{username}\", \r\n  decoders = MessageDecoder.class, \r\n  encoders = MessageEncoder.class )\r\n```"]