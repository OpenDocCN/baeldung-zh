["```\r\n<dependency>\r\n    <groupId>com.google.guava</groupId>\r\n    <artifactId>guava</artifactId>\r\n    <version>21.0</version>\r\n</dependency>\r\n```","```\r\nBiMap<String, String> capitalCountryBiMap = HashBiMap.create();\r\n```","```\r\nMap<String, String> capitalCountryBiMap = new HashMap<>();\r\n//...\r\nHashBiMap.create(capitalCountryBiMap); \r\n```","```\r\nBiMap<MyEnum, String> operationStringBiMap = EnumHashBiMap.create(MyEnum.class); \r\n```","```\r\nBiMap<String, String> capitalCountryBiMap\r\n  = new ImmutableBiMap.Builder<>()\r\n    .put(\"New Delhi\", \"India\")\r\n    .build(); \r\n```","```\r\n@Test\r\npublic void givenBiMap_whenQueryByValue_shouldReturnKey() {\r\n    BiMap<String, String> capitalCountryBiMap = HashBiMap.create();\r\n    capitalCountryBiMap.put(\"New Delhi\", \"India\");\r\n    capitalCountryBiMap.put(\"Washington, D.C.\", \"USA\");\r\n    capitalCountryBiMap.put(\"Moscow\", \"Russia\");\r\n\r\n    String keyFromBiMap = capitalCountryBiMap.inverse().get(\"Russia\");\r\n    String valueFromBiMap = capitalCountryBiMap.get(\"Washington, D.C.\");\r\n\r\n    assertEquals(\"Moscow\", keyFromBiMap);\r\n    assertEquals(\"USA\", valueFromBiMap);\r\n}\r\n```","```\r\n@Test(expected = IllegalArgumentException.class)\r\npublic void givenBiMap_whenSameValueIsPresent_shouldThrowException() {\r\n    BiMap<String, String> capitalCountryBiMap = HashBiMap.create();\r\n    capitalCountryBiMap.put(\"Mumbai\", \"India\");\r\n    capitalCountryBiMap.put(\"Washington, D.C.\", \"USA\");\r\n    capitalCountryBiMap.put(\"Moscow\", \"Russia\");\r\n    capitalCountryBiMap.put(\"New Delhi\", \"India\");\r\n} \r\n```","```\r\n@Test\r\npublic void givenSameValueIsPresent_whenForcePut_completesSuccessfully() {\r\n    BiMap<String, String> capitalCountryBiMap = HashBiMap.create();\r\n    capitalCountryBiMap.put(\"Mumbai\", \"India\");\r\n    capitalCountryBiMap.put(\"Washington, D.C.\", \"USA\");\r\n    capitalCountryBiMap.put(\"Moscow\", \"Russia\");\r\n    capitalCountryBiMap.forcePut(\"New Delhi\", \"India\");\r\n\r\n    assertEquals(\"USA\", capitalCountryBiMap.get(\"Washington, D.C.\"));\r\n    assertEquals(\"Washington, D.C.\", capitalCountryBiMap.inverse().get(\"USA\"));\r\n}\r\n```"]