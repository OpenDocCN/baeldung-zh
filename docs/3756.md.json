["```\r\n<dependency>\r\n    <groupId>org.jeasy</groupId>\r\n    <artifactId>easy-random-core</artifactId>\r\n    <version>4.0.0</version>\r\n</dependency>\r\n```","```\r\n@Test\r\nvoid givenDefaultConfiguration_thenGenerateSingleObject() {\r\n    EasyRandom generator = new EasyRandom();\r\n    Person person = generator.nextObject(Person.class);\r\n\r\n    assertNotNull(person.getAge());\r\n    assertNotNull(person.getFirstName());\r\n    assertNotNull(person.getLastName());\r\n}\r\n```","```\r\nPerson[firstName='eOMtThyhVNLWUZNRcBaQKxI', lastName='yedUsFwdkelQbxeTeQOvaScfqIOOmaa', age=-1188957731]\r\n```","```\r\n@Test\r\nvoid givenDefaultConfiguration_thenGenerateObjectsList() {\r\n    EasyRandom generator = new EasyRandom();\r\n    List<Person> persons = generator.objects(Person.class, 5)\r\n        .collect(Collectors.toList());\r\n\r\n    assertEquals(5, persons.size());\r\n}\r\n```","```\r\npublic class Employee {\r\n    private long id;\r\n    private String firstName;\r\n    private String lastName;\r\n    private Department department;\r\n    private Collection<Employee> coworkers;\r\n    private Map<YearQuarter, Grade> quarterGrades;\r\n}\r\n```","```\r\npublic class YearQuarter {\r\n\r\n    private LocalDate startDate;\r\n    private LocalDate endDate;\r\n\r\n    public YearQuarter(LocalDate startDate) {\r\n        this.startDate = startDate;\r\n        autoAdjustEndDate();\r\n    }\r\n\r\n    private void autoAdjustEndDate() {\r\n        endDate = startDate.plusMonths(3L);\r\n    }\r\n}\r\n```","```\r\n@Test\r\nvoid givenCustomConfiguration_thenGenerateSingleEmployee() {\r\n    EasyRandomParameters parameters = new EasyRandomParameters();\r\n    parameters.stringLengthRange(3, 3);\r\n    parameters.collectionSizeRange(5, 5);\r\n    parameters.excludeField(FieldPredicates.named(\"lastName\").and(FieldPredicates.inClass(Employee.class)));\r\n    parameters.excludeType(TypePredicates.inPackage(\"not.existing.pkg\"));\r\n    parameters.randomize(YearQuarter.class, new YearQuarterRandomizer());\r\n\r\n    EasyRandom generator = new EasyRandom(parameters);\r\n    Employee employee = generator.nextObject(Employee.class);\r\n\r\n    assertEquals(3, employee.getFirstName().length());\r\n    assertEquals(5, employee.getCoworkers().size());\r\n    assertEquals(5, employee.getQuarterGrades().size());\r\n    assertNotNull(employee.getDepartment());\r\n\r\n    assertNull(employee.getLastName());\r\n\r\n    for (YearQuarter key : employee.getQuarterGrades().keySet()) {\r\n        assertEquals(key.getStartDate(), key.getEndDate().minusMonths(3L));\r\n    }\r\n}\r\n```"]