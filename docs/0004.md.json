["```\r\n<dependency>\r\n    <groupId>org.springframework</groupId>\r\n    <artifactId>spring-test</artifactId>\r\n    <version>5.1.5.RELEASE</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.data</groupId>\r\n    <artifactId>spring-data-jpa</artifactId>\r\n    <version>2.1.5.RELEASE</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>com.h2database</groupId>\r\n    <artifactId>h2</artifactId>\r\n    <version>1.4.194</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.hibernate</groupId>\r\n    <artifactId>hibernate-core</artifactId>\r\n    <version>5.2.17.Final</version>\r\n</dependency>\r\n```","```\r\n@Entity\r\npublic class Student {\r\n\r\n    @Id\r\n    private long id;\r\n\r\n    private String name;\r\n\r\n    // standard constructor, getters, setters\r\n}\r\n```","```\r\npublic interface StudentRepository extends JpaRepository<Student, Long> {\r\n}\r\n```","```\r\ndbc.driverClassName=com.mysql.jdbc.Driver\r\njdbc.url=jdbc:mysql://localhost:3306/myDb\r\njdbc.user=tutorialuser\r\njdbc.pass=tutorialpass\r\n\r\nhibernate.dialect=org.hibernate.dialect.MySQL5Dialect\r\nhibernate.hbm2ddl.auto=create-drop\r\n```","```\r\njdbc.driverClassName=org.h2.Driver\r\njdbc.url=jdbc:h2:mem:myDb;DB_CLOSE_DELAY=-1\r\n\r\nhibernate.dialect=org.hibernate.dialect.H2Dialect\r\nhibernate.hbm2ddl.auto=create\r\n```","```\r\n@Configuration\r\n@EnableJpaRepositories(basePackages = \"com.baeldung.persistence.dao\")\r\n@PropertySource(\"persistence-student.properties\")\r\n@EnableTransactionManagement\r\npublic class StudentJpaConfig {\r\n\r\n    @Autowired\r\n    private Environment env;\r\n\r\n    @Bean\r\n    public DataSource dataSource() {\r\n        DriverManagerDataSource dataSource = new DriverManagerDataSource();\r\n        dataSource.setDriverClassName(env.getProperty(\"jdbc.driverClassName\"));\r\n        dataSource.setUrl(env.getProperty(\"jdbc.url\"));\r\n        dataSource.setUsername(env.getProperty(\"jdbc.user\"));\r\n        dataSource.setPassword(env.getProperty(\"jdbc.pass\"));\r\n\r\n        return dataSource;\r\n    }\r\n\r\n    // configure entityManagerFactory\r\n\r\n    // configure transactionManager\r\n\r\n    // configure additional Hibernate Properties\r\n}\r\n```","```\r\n@RunWith(SpringJUnit4ClassRunner.class)\r\n@ContextConfiguration(\r\n  classes = { StudentJpaConfig.class }, \r\n  loader = AnnotationConfigContextLoader.class)\r\n@Transactional\r\npublic class InMemoryDBTest {\r\n\r\n    @Resource\r\n    private StudentRepository studentRepository;\r\n\r\n    @Test\r\n    public void givenStudent_whenSave_thenGetOk() {\r\n        Student student = new Student(1, \"john\");\r\n        studentRepository.save(student);\r\n\r\n        Student student2 = studentRepository.findOne(1);\r\n        assertEquals(\"john\", student2.getName());\r\n    }\r\n}\r\n```","```\r\nINFO: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect\r\nHibernate: drop table Student if exists\r\nHibernate: create table Student (id bigint not null, name varchar(255), primary key (id))\r\nMar 24, 2017 12:41:51 PM org.hibernate.tool.schema.internal.SchemaCreatorImpl applyImportSources\r\nINFO: HHH000476: Executing import script 'org.hiber[[emailÂ protected]](/web/20220627173048/https://www.baeldung.com/cdn-cgi/l/email-protection)1b8f9e2'\r\nHibernate: select student0_.id as id1_0_0_, student0_.name as name2_0_0_ from Student student0_ where student0_.id=?\r\nHibernate: drop table Student if exists\r\n```"]