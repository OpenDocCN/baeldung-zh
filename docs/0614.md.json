["```\r\n@Entity\r\npublic class Product {\r\n\r\n    @Id\r\n    private long id;\r\n    private String name;\r\n\r\n    // getters and setters\r\n}\r\n```","```\r\n@Repository\r\npublic interface ProductRepository extends JpaRepository<Product, Long> {\r\n    Product findByName(String productName);\r\n}\r\n```","```\r\npublic interface CrudRepository<T, ID extends Serializable>\r\n  extends Repository<T, ID> {\r\n\r\n    <S extends T> S save(S entity);\r\n\r\n    T findOne(ID primaryKey);\r\n\r\n    Iterable<T> findAll();\r\n\r\n    Long count();\r\n\r\n    void delete(T entity);\r\n\r\n    boolean exists(ID primaryKey);\r\n}\r\n```","```\r\npublic interface PagingAndSortingRepository<T, ID extends Serializable> \r\n  extends CrudRepository<T, ID> {\r\n\r\n    Iterable<T> findAll(Sort sort);\r\n\r\n    Page<T> findAll(Pageable pageable);\r\n}\r\n```","```\r\nSort sort = new Sort(new Sort.Order(Direction.ASC, \"lastName\"));\r\nPageable pageable = new PageRequest(0, 5, sort);\r\n```","```\r\npublic interface JpaRepository<T, ID extends Serializable> extends\r\n  PagingAndSortingRepository<T, ID> {\r\n\r\n    List<T> findAll();\r\n\r\n    List<T> findAll(Sort sort);\r\n\r\n    List<T> save(Iterable<? extends T> entities);\r\n\r\n    void flush();\r\n\r\n    T saveAndFlush(T entity);\r\n\r\n    void deleteInBatch(Iterable<T> entities);\r\n}\r\n```"]