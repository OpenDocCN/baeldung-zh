["```\r\n-----BEGIN PUBLIC KEY-----\r\n...Base64 encoding of the DER encoded certificate...\r\n-----END PUBLIC KEY-----\r\n```","```\r\nString key = new String(Files.readAllBytes(file.toPath()), Charset.defaultCharset());\r\n```","```\r\n-----BEGIN PUBLIC KEY-----\r\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsjtGIk8SxD+OEiBpP2/T\r\nJUAF0upwuKGMk6wH8Rwov88VvzJrVm2NCticTk5FUg+UG5r8JArrV4tJPRHQyvqK\r\nwF4NiksuvOjv3HyIf4oaOhZjT8hDne1Bfv+cFqZJ61Gk0MjANh/T5q9vxER/7TdU\r\nNHKpoRV+NVlKN5bEU/NQ5FQjVXicfswxh6Y6fl2PIFqT2CfjD+FkBPU1iT9qyJYH\r\nA38IRvwNtcitFgCeZwdGPoxiPPh1WHY8VxpUVBv/2JsUtrB/rAIbGqZoxAIWvijJ\r\nPe9o1TY3VlOzk9ASZ1AeatvOir+iDVJ5OpKmLnzc46QgGPUsjIyo6Sje9dxpGtoG\r\nQQIDAQAB\r\n-----END PUBLIC KEY-----\r\n```","```\r\npublic static RSAPublicKey readPublicKey(File file) throws Exception {\r\n    String key = new String(Files.readAllBytes(file.toPath()), Charset.defaultCharset());\r\n\r\n    String publicKeyPEM = key\r\n      .replace(\"-----BEGIN PUBLIC KEY-----\", \"\")\r\n      .replaceAll(System.lineSeparator(), \"\")\r\n      .replace(\"-----END PUBLIC KEY-----\", \"\");\r\n\r\n    byte[] encoded = Base64.decodeBase64(publicKeyPEM);\r\n\r\n    KeyFactory keyFactory = KeyFactory.getInstance(\"RSA\");\r\n    X509EncodedKeySpec keySpec = new X509EncodedKeySpec(encoded);\r\n    return (RSAPublicKey) keyFactory.generatePublic(keySpec);\r\n}\r\n```","```\r\n-----BEGIN PRIVATE KEY-----\r\n...Base64 encoded key...\r\n-----END PRIVATE KEY-----\r\n```","```\r\npublic RSAPrivateKey readPrivateKey(File file) throws Exception {\r\n    String key = new String(Files.readAllBytes(file.toPath()), Charset.defaultCharset());\r\n\r\n    String privateKeyPEM = key\r\n      .replace(\"-----BEGIN PRIVATE KEY-----\", \"\")\r\n      .replaceAll(System.lineSeparator(), \"\")\r\n      .replace(\"-----END PRIVATE KEY-----\", \"\");\r\n\r\n    byte[] encoded = Base64.decodeBase64(privateKeyPEM);\r\n\r\n    KeyFactory keyFactory = KeyFactory.getInstance(\"RSA\");\r\n    PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(encoded);\r\n    return (RSAPrivateKey) keyFactory.generatePrivate(keySpec);\r\n}\r\n```","```\r\npublic RSAPublicKey readPublicKey(File file) throws Exception {\r\n    KeyFactory factory = KeyFactory.getInstance(\"RSA\");\r\n\r\n    try (FileReader keyReader = new FileReader(file);\r\n      PemReader pemReader = new PemReader(keyReader)) {\r\n\r\n        PemObject pemObject = pemReader.readPemObject();\r\n        byte[] content = pemObject.getContent();\r\n        X509EncodedKeySpec pubKeySpec = new X509EncodedKeySpec(content);\r\n        return (RSAPublicKey) factory.generatePublic(pubKeySpec);\r\n    }\r\n}\r\n```","```\r\npublic RSAPublicKey readPublicKeySecondApproach(File file) throws IOException {\r\n    try (FileReader keyReader = new FileReader(file)) {\r\n        PEMParser pemParser = new PEMParser(keyReader);\r\n        JcaPEMKeyConverter converter = new JcaPEMKeyConverter();\r\n        SubjectPublicKeyInfo publicKeyInfo = SubjectPublicKeyInfo.getInstance(pemParser.readObject());\r\n        return (RSAPublicKey) converter.getPublicKey(publicKeyInfo);\r\n    }\r\n}\r\n```","```\r\npublic RSAPrivateKey readPrivateKey(File file) throws Exception {\r\n    KeyFactory factory = KeyFactory.getInstance(\"RSA\");\r\n\r\n    try (FileReader keyReader = new FileReader(file);\r\n      PemReader pemReader = new PemReader(keyReader)) {\r\n\r\n        PemObject pemObject = pemReader.readPemObject();\r\n        byte[] content = pemObject.getContent();\r\n        PKCS8EncodedKeySpec privKeySpec = new PKCS8EncodedKeySpec(content);\r\n        return (RSAPrivateKey) factory.generatePrivate(privKeySpec);\r\n    }\r\n}\r\n```","```\r\npublic RSAPrivateKey readPrivateKeySecondApproach(File file) throws IOException {\r\n    try (FileReader keyReader = new FileReader(file)) {\r\n\r\n        PEMParser pemParser = new PEMParser(keyReader);\r\n        JcaPEMKeyConverter converter = new JcaPEMKeyConverter();\r\n        PrivateKeyInfo privateKeyInfo = PrivateKeyInfo.getInstance(pemParser.readObject());\r\n\r\n        return (RSAPrivateKey) converter.getPrivateKey(privateKeyInfo);\r\n    }\r\n}\r\n```"]