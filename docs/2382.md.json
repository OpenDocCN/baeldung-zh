["```\r\npublic class App implements RequestStreamHandler {\r\n\r\n    @Override\r\n    public void handleRequest(\r\n      InputStream inputStream, \r\n      OutputStream outputStream, \r\n      Context context) throws IOException {\r\n        context.getLogger().log(\"App starting\\n\");\r\n    }\r\n}\r\n```","```\r\n$ sam build\r\n$ sam local invoke\r\n\r\nMounting todo-reminder/.aws-sam/build/ToDoFunction as /var/task:ro,delegated inside runtime container\r\nApp starting\r\nEND RequestId: 2aaf6041-cf57-4414-816d-76a63c7109fd\r\nREPORT RequestId: 2aaf6041-cf57-4414-816d-76a63c7109fd  Init Duration: 0.12 ms  Duration: 121.70 ms\r\n  Billed Duration: 200 ms Memory Size: 512 MB     Max Memory Used: 512 MB \r\n```","```\r\nEnvironment: \r\n  Variables:\r\n    PARAM1: VALUE\r\n```","```\r\nAWSTemplateFormatVersion: '2010-09-09'\r\nTransform: AWS::Serverless-2016-10-31\r\nDescription: todo-reminder application\r\n\r\nParameters:\r\n  EnvironmentName:\r\n    Type: String\r\n    Default: dev\r\n```","```\r\nEnvironment: \r\n  Variables: \r\n    ENV_NAME: !Ref EnvironmentName\r\n```","```\r\nprivate String environmentName = System.getenv(\"ENV_NAME\");\r\n```","```\r\ncontext.getLogger().log(\"Environment: \" + environmentName + \"\\n\");\r\n```","```\r\n$ sam build\r\n$ sam local invoke\r\n\r\nSTART RequestId: 12fb0c05-f222-4352-a26d-28c7b6e55ac6 Version: $LATEST\r\nApp starting\r\nEnvironment: dev\r\n```","```\r\n$ sam local invoke --parameter-overrides \"ParameterKey=EnvironmentName,ParameterValue=test\"\r\n\r\nSTART RequestId: 18460a04-4f8b-46cb-9aca-e15ce959f6fa Version: $LATEST\r\nApp starting\r\nEnvironment: test\r\n```","```\r\n@RunWith(MockitoJUnitRunner.class)\r\npublic class AppTest {\r\n\r\n    @Mock(answer = Answers.RETURNS_DEEP_STUBS)\r\n    private Context mockContext;\r\n\r\n    // ...\r\n}\r\n```","```\r\n@Rule\r\npublic EnvironmentVariablesRule environmentVariablesRule = \r\n  new EnvironmentVariablesRule();\r\n```","```\r\nenvironmentVariablesRule.set(\"ENV_NAME\", \"unitTest\");\r\nnew App().handleRequest(fakeInputStream, fakeOutputStream, mockContext);\r\n\r\nverify(mockContext.getLogger()).log(\"Environment: unitTest\\n\");\r\n```","```\r\nString setting = Optional.ofNullable(System.getenv(\"SETTING\"))\r\n  .orElse(\"default\");\r\n```","```\r\npublic class Config {\r\n    private String toDoEndpoint;\r\n    private String postEndpoint;\r\n    private String environmentName;\r\n\r\n    // getters and setters\r\n}\r\n```","```\r\npublic class ToDoReaderService {\r\n    public ToDoReaderService(Config configuration) {\r\n        // ...\r\n    }\r\n}\r\n```","```\r\nprivate Credentials toDoCredentials;\r\nprivate Credentials postCredentials;\r\n```","```\r\n<dependency>\r\n    <groupId>uk.org.webcompere</groupId>\r\n    <artifactId>lightweight-config</artifactId>\r\n    <version>1.1.0</version>\r\n</dependency>\r\n```","```\r\ntoDoEndpoint: https://jsonplaceholder.typicode.com/todos\r\npostEndpoint: https://jsonplaceholder.typicode.com/posts\r\nenvironmentName: ${ENV_NAME}\r\ntoDoCredentials:\r\n  username: baeldung\r\n  password: ${TODO_PASSWORD:-password}\r\npostCredentials:\r\n  username: baeldung\r\n  password: ${POST_PASSWORD:-password}\r\n```","```\r\nConfig config = ConfigLoader.loadYmlConfigFromResource(\"configuration.yml\", Config.class);\r\n```","```\r\npublic class ExecutionContext {\r\n    private Config config;\r\n    private ToDoReaderService toDoReaderService;\r\n\r\n    public ExecutionContext() {\r\n        this.config = \r\n          ConfigLoader.loadYmlConfigFromResource(\"configuration.yml\", Config.class);\r\n        this.toDoReaderService = new ToDoReaderService(config);\r\n    }\r\n}\r\n```","```\r\nprivate ExecutionContext executionContext = new ExecutionContext();\r\n```","```\r\n<dependency>\r\n    <groupId>com.amazonaws</groupId>\r\n    <artifactId>aws-lambda-java-log4j2</artifactId>\r\n    <version>1.2.0</version>\r\n</dependency>\r\n```","```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<Configuration packages=\"com.amazonaws.services.lambda.runtime.log4j2\">\r\n    <Appenders>\r\n        <Lambda name=\"Lambda\">\r\n            <PatternLayout>\r\n                <pattern>%d{yyyy-MM-dd HH:mm:ss} %X{AWSRequestId} %-5p %c{1} - %m%n</pattern>\r\n            </PatternLayout>\r\n        </Lambda>\r\n    </Appenders>\r\n    <Loggers>\r\n        <Root level=\"info\">\r\n            <AppenderRef ref=\"Lambda\" />\r\n        </Root>\r\n    </Loggers>\r\n</Configuration>\r\n```","```\r\npublic class ToDoReaderService {\r\n    private static final Logger LOGGER = LogManager.getLogger(ToDoReaderService.class);\r\n\r\n    public ToDoReaderService(Config configuration) {\r\n        LOGGER.info(\"ToDo Endpoint on: {}\", configuration.getToDoEndpoint());\r\n        // ...\r\n    }\r\n\r\n    // ...\r\n}\r\n```","```\r\n$ sam build\r\n$ sam local invoke\r\n\r\nSTART RequestId: acb34989-980c-42e5-b8e4-965d9f497d93 Version: $LATEST\r\n2021-05-23 20:57:15  INFO  ToDoReaderService - ToDo Endpoint on: https://jsonplaceholder.typicode.com/todos \r\n```","```\r\n@Rule\r\npublic SystemOutRule systemOutRule = new SystemOutRule();\r\n\r\n@Test\r\npublic void whenTheServiceStarts_thenItOutputsEndpoint() {\r\n    Config config = new Config();\r\n    config.setToDoEndpoint(\"https://todo-endpoint.com\");\r\n    ToDoReaderService service = new ToDoReaderService(config);\r\n\r\n    assertThat(systemOutRule.getLinesNormalized())\r\n      .contains(\"ToDo Endpoint on: https://todo-endpoint.com\");\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>org.apache.logging.log4j</groupId>\r\n    <artifactId>log4j-slf4j-impl</artifactId>\r\n    <version>2.13.2</version>\r\n</dependency>\r\n```","```\r\npublic class ExecutionContext {\r\n    private static final Logger LOGGER =\r\n      LoggerFactory.getLogger(ExecutionContext.class);\r\n\r\n    public ExecutionContext() {\r\n        LOGGER.info(\"Loading configuration\");\r\n        // ...\r\n    }\r\n\r\n    // ...\r\n}\r\n```","```\r\n$ sam local invoke\r\n\r\nSTART RequestId: 60b2efad-bc77-475b-93f6-6fa7ddfc9f88 Version: $LATEST\r\n2021-05-23 21:13:19  INFO  ExecutionContext - Loading configuration \r\n```","```\r\n<dependency>\r\n    <groupId>io.github.openfeign</groupId>\r\n    <artifactId>feign-core</artifactId>\r\n    <version>11.2</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>io.github.openfeign</groupId>\r\n    <artifactId>feign-slf4j</artifactId>\r\n    <version>11.2</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>io.github.openfeign</groupId>\r\n    <artifactId>feign-gson</artifactId>\r\n    <version>11.2</version>\r\n</dependency>\r\n```","```\r\npublic interface ToDoApi {\r\n    @RequestLine(\"GET /todos\")\r\n    List<ToDoItem> getAllTodos();\r\n}\r\n```","```\r\npublic class ToDoItem {\r\n    private int userId;\r\n    private int id;\r\n    private String title;\r\n    private boolean completed;\r\n\r\n    // getters and setters\r\n}\r\n```","```\r\nToDoApi toDoApi = Feign.builder()\r\n  .decoder(new GsonDecoder())\r\n  .logger(new Slf4jLogger())\r\n  .target(ToDoApi.class, config.getToDoEndpoint());\r\n```","```\r\n.requestInterceptor(\r\n   new BasicAuthRequestInterceptor(\r\n     config.getToDoCredentials().getUsername(),\r\n     config.getToDoCredentials().getPassword()))\r\n```","```\r\nthis.config = ... // load config\r\nthis.toDoApi = ... // build api\r\nthis.postApi = ... // build post API\r\nthis.toDoReaderService = new ToDoReaderService(toDoApi);\r\nthis.postService = new PostService(postApi);\r\n```","```\r\n<dependency>\r\n    <groupId>com.google.inject</groupId>\r\n    <artifactId>guice</artifactId>\r\n    <version>5.0.1</version>\r\n</dependency>\r\n```","```\r\npublic class PostService {\r\n    private PostApi postApi;\r\n\r\n    @Inject\r\n    public PostService(PostApi postApi) {\r\n        this.postApi = postApi;\r\n    }\r\n\r\n    // other functions\r\n}\r\n```","```\r\npublic class Services extends AbstractModule {\r\n    @Override\r\n    protected void configure() {\r\n        Config config = \r\n          ConfigLoader.loadYmlConfigFromResource(\"configuration.yml\", Config.class);\r\n\r\n        ToDoApi toDoApi = Feign.builder()\r\n          .decoder(new GsonDecoder())\r\n          .logger(new Slf4jLogger())\r\n          .logLevel(FULL)\r\n          .requestInterceptor(... // omitted\r\n          .target(ToDoApi.class, config.getToDoEndpoint());\r\n\r\n        PostApi postApi = Feign.builder()\r\n          .encoder(new GsonEncoder())\r\n          .logger(new Slf4jLogger())\r\n          .logLevel(FULL)\r\n          .requestInterceptor(... // omitted\r\n          .target(PostApi.class, config.getPostEndpoint());\r\n\r\n        bind(Config.class).toInstance(config);\r\n        bind(ToDoApi.class).toInstance(toDoApi);\r\n        bind(PostApi.class).toInstance(postApi);\r\n    }\r\n}\r\n```","```\r\npublic ExecutionContext() {\r\n    LOGGER.info(\"Loading configuration\");\r\n\r\n    try {\r\n        Injector injector = Guice.createInjector(new Services());\r\n        this.toDoReaderService = injector.getInstance(ToDoReaderService.class);\r\n        this.postService = injector.getInstance(PostService.class);\r\n    } catch (Exception e) {\r\n        LOGGER.error(\"Could not start\", e);\r\n    }\r\n}\r\n```","```\r\n@Override\r\npublic void handleRequest(InputStream inputStream, \r\n  OutputStream outputStream, Context context) throws IOException {\r\n\r\n    PostService postService = executionContext.getPostService();\r\n    executionContext.getToDoReaderService()\r\n      .getOldestToDo()\r\n      .ifPresent(postService::makePost);\r\n}\r\n```","```\r\n$ sam build\r\n$ sam local invoke\r\n\r\nMounting /Users/ashleyfrieze/dev/tutorials/aws-lambda/todo-reminder/.aws-sam/build/ToDoFunction as /var/task:ro,delegated inside runtime container\r\n2021-05-23 22:29:43  INFO  ExecutionContext - Loading configuration\r\n2021-05-23 22:29:44  INFO  ToDoReaderService - ToDo Endpoint on: https://jsonplaceholder.typicode.com\r\nApp starting\r\nEnvironment: dev\r\n2021-05-23 22:29:44 73264c34-ca48-4c3e-a2b4-5e7e74e13960 INFO  PostService - Posting about: ToDoItem{userId=1, id=1, title='delectus aut autem', completed=false}\r\n2021-05-23 22:29:44 73264c34-ca48-4c3e-a2b4-5e7e74e13960 INFO  PostService - Post: PostItem{title='To Do is Out Of Date: 1', body='Not done: delectus aut autem', userId=1}\r\nEND RequestId: 73264c34-ca48-4c3e-a2b4-5e7e74e13960 \r\n```"]