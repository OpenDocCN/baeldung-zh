["```\r\nâ€‹List<Integer> aList = new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7));\r\n```","```\r\nList<Integer> EXPECTED = new ArrayList<>(Arrays.asList(7, 6, 5, 4, 3, 2, 1));\r\n```","```\r\nList<Integer> aList = new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7));\r\nCollections.reverse(aList);\r\nassertThat(aList).isEqualTo(EXPECTED); \r\n```","```\r\nList<Integer> originalList = new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7));\r\nList<Integer> aNewList = new ArrayList<>(originalList);\r\nCollections.reverse(aNewList);\r\n\r\nassertThat(aNewList).isNotEqualTo(originalList).isEqualTo(EXPECTED); \r\n```","```\r\npublic static <T> void reverseWithRecursion(List<T> list) {\r\n    if (list.size() > 1) {\r\n        T value = list.remove(0);\r\n        reverseWithRecursion(list);\r\n        list.add(value);\r\n    }\r\n} \r\n```","```\r\nrecursion step 0: value = null, list = (1, 2, 3, ... 7)\r\n   |_ recursion step 1: value = 1, list = (2, 3, 4,...7)\r\n      |_ recursion step 2: value = 2, list = (3, 4, 5, 6, 7)\r\n         |_ recursion step 3: value = 3, list = (4, 5, 6, 7)\r\n            |_ ...\r\n               |_ recursion step 6: value = 6, list = (7) \r\n```","```\r\nList<Integer> aList = new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7));\r\nReverseArrayList.reverseWithRecursion(aList);\r\nassertThat(aList).isEqualTo(EXPECTED); \r\n```","```\r\npublic static <T> void reverseWithLoop(List<T> list) {\r\n    for (int i = 0, j = list.size() - 1; i < j; i++) {\r\n        list.add(i, list.remove(j));\r\n    }\r\n} \r\n```","```\r\nIteration step 0: i = j = null, list = (1, 2, 3,...7)\r\nIteration step 1: i = 0; j = 6 \r\n                  |_ list.add(0, list.remove(6))\r\n                  |_ list = (7, 1, 2, 3, 4, 5, 6)\r\nIteration step 2: i = 1; j = 6 \r\n                  |_ list.add(1, list.remove(6))\r\n                  |_ list = (7, 6, 1, 2, 3, 4, 5)\r\n...\r\nIteration step 5: i = 4; j = 6 \r\n                  |_ list.add(4, list.remove(6))\r\n                  |_ list = (7, 6, 5, 4, 3, 1, 2)\r\nIteration step 6: i = 5; j = 6 \r\n                  |_ list.add(5, list.remove(6))\r\n                  |_ list = (7, 6, 5, 4, 3, 2, 1)\r\n```","```\r\nList<Integer> aList = new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7));\r\nReverseArrayList.reverseWithLoop(aList);\r\nassertThat(aList).isEqualTo(EXPECTED); \r\n```"]