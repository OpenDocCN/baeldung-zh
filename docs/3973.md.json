["```\r\npublic class Student {\r\n    public static boolean isBeanInstantiated = false;\r\n\r\n    public void postConstruct() {\r\n        setBeanInstantiated(true);\r\n    }\r\n\r\n    //standard setters and getters\r\n}\r\n```","```\r\n<bean id=\"student\" class=\"com.baeldung.ioccontainer.bean.Student\" init-method=\"postConstruct\"/>\r\n```","```\r\n@Test\r\npublic void whenBFInitialized_thenStudentNotInitialized() {\r\n    Resource res = new ClassPathResource(\"ioc-container-difference-example.xml\");\r\n    BeanFactory factory = new XmlBeanFactory(res);\r\n\r\n    assertFalse(Student.isBeanInstantiated());\r\n}\r\n```","```\r\n@Test\r\npublic void whenBFInitialized_thenStudentInitialized() {\r\n    Resource res = new ClassPathResource(\"ioc-container-difference-example.xml\");\r\n    BeanFactory factory = new XmlBeanFactory(res);\r\n    Student student = (Student) factory.getBean(\"student\");\r\n\r\n    assertTrue(Student.isBeanInstantiated());\r\n}\r\n```","```\r\n@Test\r\npublic void whenAppContInitialized_thenStudentInitialized() {\r\n    ApplicationContext context = new ClassPathXmlApplicationContext(\"ioc-container-difference-example.xml\");\r\n\r\n    assertTrue(Student.isBeanInstantiated());\r\n}\r\n```","```\r\npublic class CustomBeanFactoryPostProcessor implements BeanFactoryPostProcessor {\r\n    private static boolean isBeanFactoryPostProcessorRegistered = false;\r\n\r\n    @Override\r\n    public void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory){\r\n        setBeanFactoryPostProcessorRegistered(true);\r\n    }\r\n\r\n    // standard setters and getters\r\n}\r\n```","```\r\npublic class CustomBeanPostProcessor implements BeanPostProcessor {\r\n    private static boolean isBeanPostProcessorRegistered = false;\r\n\r\n    @Override\r\n    public Object postProcessBeforeInitialization(Object bean, String beanName){\r\n        setBeanPostProcessorRegistered(true);\r\n        return bean;\r\n    }\r\n\r\n    //standard setters and getters\r\n}\r\n```","```\r\n<bean id=\"customBeanPostProcessor\" \r\n  class=\"com.baeldung.ioccontainer.bean.CustomBeanPostProcessor\" />\r\n<bean id=\"customBeanFactoryPostProcessor\" \r\n  class=\"com.baeldung.ioccontainer.bean.CustomBeanFactoryPostProcessor\" />\r\n```","```\r\n@Test\r\npublic void whenBFInitialized_thenBFPProcessorAndBPProcessorNotRegAutomatically() {\r\n    Resource res = new ClassPathResource(\"ioc-container-difference-example.xml\");\r\n    ConfigurableListableBeanFactory factory = new XmlBeanFactory(res);\r\n\r\n    assertFalse(CustomBeanFactoryPostProcessor.isBeanFactoryPostProcessorRegistered());\r\n    assertFalse(CustomBeanPostProcessor.isBeanPostProcessorRegistered());\r\n}\r\n```","```\r\n@Test\r\npublic void whenBFPostProcessorAndBPProcessorRegisteredManually_thenReturnTrue() {\r\n    Resource res = new ClassPathResource(\"ioc-container-difference-example.xml\");\r\n    ConfigurableListableBeanFactory factory = new XmlBeanFactory(res);\r\n\r\n    CustomBeanFactoryPostProcessor beanFactoryPostProcessor \r\n      = new CustomBeanFactoryPostProcessor();\r\n    beanFactoryPostProcessor.postProcessBeanFactory(factory);\r\n    assertTrue(CustomBeanFactoryPostProcessor.isBeanFactoryPostProcessorRegistered());\r\n\r\n    CustomBeanPostProcessor beanPostProcessor = new CustomBeanPostProcessor();\r\n    factory.addBeanPostProcessor(beanPostProcessor);\r\n    Student student = (Student) factory.getBean(\"student\");\r\n    assertTrue(CustomBeanPostProcessor.isBeanPostProcessorRegistered());\r\n}\r\n```","```\r\n@Test\r\npublic void whenAppContInitialized_thenBFPostProcessorAndBPostProcessorRegisteredAutomatically() {\r\n    ApplicationContext context \r\n      = new ClassPathXmlApplicationContext(\"ioc-container-difference-example.xml\");\r\n\r\n    assertTrue(CustomBeanFactoryPostProcessor.isBeanFactoryPostProcessorRegistered());\r\n    assertTrue(CustomBeanPostProcessor.isBeanPostProcessorRegistered());\r\n}\r\n```"]