["```\r\nstatic List<Character> toCharacterList(final String string) {\r\n    return string.chars().mapToObj(s -> ((char) s)).collect(Collectors.toList());\r\n}\r\n```","```\r\nstatic String toString(Collection<Character> collection) {\r\n    return collection.stream().map(s -> s.toString()).collect(Collectors.joining());\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>org.apache.commons</groupId>\r\n    <artifactId>commons-collections4</artifactId>\r\n    <version>4.4</version>\r\n</dependency>\r\n```","```\r\npublic List<String> eagerPermutationWithRepetitions(final String string) {\r\n    final List<Character> characters = Helper.toCharacterList(string);\r\n    return CollectionUtils.permutations(characters)\r\n        .stream()\r\n        .map(Helper::toString)\r\n        .collect(Collectors.toList());\r\n}\r\n```","```\r\npublic List<String> lazyPermutationWithoutRepetitions(final String string) {\r\n    final List<Character> characters = Helper.toCharacterList(string);\r\n    final PermutationIterator<Character> permutationIterator = new PermutationIterator<>(characters);\r\n    final List<String> result = new ArrayList<>();\r\n    while (permutationIterator.hasNext()) {\r\n        result.add(Helper.toString(permutationIterator.next()));\r\n    }\r\n    return result;\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>com.google.guava</groupId>\r\n    <artifactId>guava</artifactId>\r\n    <version>31.0.1-jre</version>\r\n</dependency>\r\n```","```\r\npublic List<String> permutationWithRepetitions(final String string) {\r\n    final List<Character> characters = Helper.toCharacterList(string);\r\n    return Collections2.permutations(characters).stream()\r\n        .map(Helper::toString)\r\n        .collect(Collectors.toList());\r\n}\r\n```","```\r\npublic List<String> permutationWithoutRepetitions(final String string) {\r\n    final List<Character> characters = Helper.toCharacterList(string);\r\n    return Collections2.orderedPermutations(characters).stream()\r\n        .map(Helper::toString)\r\n        .collect(Collectors.toList());\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>com.github.dpaukov</groupId>\r\n    <artifactId>combinatoricslib3</artifactId>\r\n    <version>3.3.3</version>\r\n</dependency>\r\n```","```\r\npublic List<String> permutationWithoutRepetitions(final String string) {\r\n    List<Character> chars = Helper.toCharacterList(string);\r\n    return Generator.permutation(chars)\r\n      .simple()\r\n      .stream()\r\n      .map(Helper::toString)\r\n      .collect(Collectors.toList());\r\n}\r\n```","```\r\npublic List<String> permutationWithRepetitions(final String string) {\r\n    List<Character> chars = Helper.toCharacterList(string);\r\n    return Generator.permutation(chars)\r\n      .simple(TreatDuplicatesAs.IDENTICAL)\r\n      .stream()\r\n      .map(Helper::toString)\r\n      .collect(Collectors.toList());\r\n}\r\n```"]