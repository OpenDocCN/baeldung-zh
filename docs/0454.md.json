["```\r\n@Bean\r\npublic Declarables fanoutBindings() {\r\n    Queue fanoutQueue1 = new Queue(\"fanout.queue1\", false);\r\n    Queue fanoutQueue2 = new Queue(\"fanout.queue2\", false);\r\n    FanoutExchange fanoutExchange = new FanoutExchange(\"fanout.exchange\");\r\n\r\n    return new Declarables(\r\n      fanoutQueue1,\r\n      fanoutQueue2,\r\n      fanoutExchange,\r\n      bind(fanoutQueue1).to(fanoutExchange),\r\n      BindingBuilder.bind(fanoutQueue2).to(fanoutExchange));\r\n}\r\n```","```\r\n@Bean\r\npublic Declarables topicBindings() {\r\n    Queue topicQueue1 = new Queue(topicQueue1Name, false);\r\n    Queue topicQueue2 = new Queue(topicQueue2Name, false);\r\n\r\n    TopicExchange topicExchange = new TopicExchange(topicExchangeName);\r\n\r\n    return new Declarables(\r\n      topicQueue1,\r\n      topicQueue2,\r\n      topicExchange,\r\n      BindingBuilder\r\n        .bind(topicQueue1)\r\n        .to(topicExchange).with(\"*.important.*\"),\r\n      BindingBuilder\r\n        .bind(topicQueue2)\r\n        .to(topicExchange).with(\"#.error\"));\r\n}\r\n```","```\r\n String message = \" payload is broadcast\";\r\n    return args -> {\r\n        rabbitTemplate.convertAndSend(FANOUT_EXCHANGE_NAME, \"\", \"fanout\" + message);\r\n        rabbitTemplate.convertAndSend(TOPIC_EXCHANGE_NAME, ROUTING_KEY_USER_IMPORTANT_WARN, \r\n            \"topic important warn\" + message);\r\n        rabbitTemplate.convertAndSend(TOPIC_EXCHANGE_NAME, ROUTING_KEY_USER_IMPORTANT_ERROR, \r\n            \"topic important error\" + message);\r\n    };\r\n```","```\r\n @RabbitListener(queues = {FANOUT_QUEUE_1_NAME})\r\n    public void receiveMessageFromFanout1(String message) {\r\n        System.out.println(\"Received fanout 1 message: \" + message);\r\n    }\r\n\r\n    @RabbitListener(queues = {FANOUT_QUEUE_2_NAME})\r\n    public void receiveMessageFromFanout2(String message) {\r\n        System.out.println(\"Received fanout 2 message: \" + message);\r\n    }\r\n\r\n    @RabbitListener(queues = {TOPIC_QUEUE_1_NAME})\r\n    public void receiveMessageFromTopic1(String message) {\r\n        System.out.println(\"Received topic 1 (\" + BINDING_PATTERN_IMPORTANT + \") message: \" + message);\r\n    }\r\n\r\n    @RabbitListener(queues = {TOPIC_QUEUE_2_NAME})\r\n    public void receiveMessageFromTopic2(String message) {\r\n        System.out.println(\"Received topic 2 (\" + BINDING_PATTERN_ERROR + \") message: \" + message);\r\n    }\r\n```","```\r\nReceived fanout 1 message: fanout payload is broadcast\r\nReceived topic 1 (*.important.*) message: topic important warn payload is broadcast\r\nReceived topic 2 (#.error) message: topic important error payload is broadcast\r\nReceived fanout 2 message: fanout payload is broadcast\r\nReceived topic 1 (*.important.*) message: topic important error payload is broadcast\r\n```"]