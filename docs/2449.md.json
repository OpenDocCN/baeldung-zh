["```\r\nList<String> musketeers = Arrays.asList(\"Athos\", \"Aramis\", \"Porthos\");\r\n```","```\r\nInputStreamReader input = new InputStreamReader(new FileInputStream(\"input.txt\"));\r\n```","```\r\nConnection connection = DriverManager.getConnection(url);\r\n```","```\r\nString url = \"jdbc:postgresql://localhost/demo\";\r\n```","```\r\nString url = \"jdbc:mysql://localhost/demo\";\r\n```","```\r\nJTabbedPane pane = new JTabbedPane();\r\npane.addTab(\"1\", new Container());\r\npane.addTab(\"2\", new JButton());\r\npane.addTab(\"3\", new JCheckBox());\r\n```","```\r\nBufferedInputStream bis = new BufferedInputStream(new FileInputStream(new File(\"test.txt\")));\r\nwhile (bis.available() > 0) {\r\n    char c = (char) bis.read();\r\n    System.out.println(\"Char: \" + c);\r\n}\r\n```","```\r\nprotected void writePDFToResponse(ExternalContext externalContext, ByteArrayOutputStream baos, String fileName)\r\n  throws IOException, DocumentException {\r\n    externalContext.setResponseContentType(\"application/pdf\");\r\n    externalContext.setResponseHeader(\"Expires\", \"0\");\r\n    // set more relevant headers\r\n    externalContext.setResponseContentLength(baos.size());\r\n    externalContext.addResponseCookie(\r\n      Constants.DOWNLOAD_COOKIE, \"true\", Collections.<String, Object>emptyMap());\r\n    OutputStream out = externalContext.getResponseOutputStream();\r\n    baos.writeTo(out);\r\n    // do cleanup\r\n}\r\n```","```\r\npublic static Integer valueOf(int i) {\r\n    if (i >= IntegerCache.low && i <= IntegerCache.high) {\r\n        return IntegerCache.cache[i + (-IntegerCache.low)];\r\n    }\r\n    return new Integer(i);\r\n}\r\n```","```\r\nFoo proxyFoo = (Foo) Proxy.newProxyInstance(Foo.class.getClassLoader(),\r\n  new Class<?>[] { Foo.class }, handler);\r\n```"]