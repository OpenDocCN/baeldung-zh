["```\r\n<dependency>\r\n    <groupId>org.hibernate</groupId>\r\n    <artifactId>hibernate-core</artifactId>\r\n    <version>5.4.12.Final</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>com.h2database</groupId>\r\n    <artifactId>h2</artifactId>\r\n    <version>1.4.194</version>\r\n</dependency>\r\n```","```\r\nsession = HibernateUtil.getSessionFactory().withOptions()\r\n  .jdbcTimeZone(TimeZone.getTimeZone(\"UTC\"))\r\n  .openSession();\r\n```","```\r\n@Entity\r\npublic class TemporalValues {\r\n\r\n    @Basic\r\n    private java.sql.Date sqlDate;\r\n\r\n    @Basic\r\n    private java.sql.Time sqlTime;\r\n\r\n    @Basic\r\n    private java.sql.Timestamp sqlTimestamp;\r\n\r\n}\r\n```","```\r\ntemporalValues.setSqlDate(java.sql.Date.valueOf(\"2017-11-15\"));\r\ntemporalValues.setSqlTime(java.sql.Time.valueOf(\"15:30:14\"));\r\ntemporalValues.setSqlTimestamp(\r\n  java.sql.Timestamp.valueOf(\"2017-11-15 15:30:14.332\"));\r\n```","```\r\n@Basic\r\n@Temporal(TemporalType.DATE)\r\nprivate java.util.Date utilDate;\r\n\r\n@Basic\r\n@Temporal(TemporalType.TIME)\r\nprivate java.util.Date utilTime;\r\n\r\n@Basic\r\n@Temporal(TemporalType.TIMESTAMP)\r\nprivate java.util.Date utilTimestamp;\r\n```","```\r\ntemporalValues.setUtilDate(\r\n  new SimpleDateFormat(\"yyyy-MM-dd\").parse(\"2017-11-15\"));\r\ntemporalValues.setUtilTime(\r\n  new SimpleDateFormat(\"HH:mm:ss\").parse(\"15:30:14\"));\r\ntemporalValues.setUtilTimestamp(\r\n  new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss.SSS\")\r\n    .parse(\"2017-11-15 15:30:14.332\"));\r\n```","```\r\ntemporalValues = session.get(TemporalValues.class, \r\n  temporalValues.getId());\r\nassertThat(temporalValues.getUtilTimestamp())\r\n  .isEqualTo(java.sql.Timestamp.valueOf(\"2017-11-15 15:30:14.332\"));\r\n```","```\r\n@Basic\r\n@Temporal(TemporalType.DATE)\r\nprivate java.util.Calendar calendarDate;\r\n\r\n@Basic\r\n@Temporal(TemporalType.TIMESTAMP)\r\nprivate java.util.Calendar calendarTimestamp;\r\n```","```\r\nCalendar calendarDate = Calendar.getInstance(\r\n  TimeZone.getTimeZone(\"UTC\"));\r\ncalendarDate.set(Calendar.YEAR, 2017);\r\ncalendarDate.set(Calendar.MONTH, 10);\r\ncalendarDate.set(Calendar.DAY_OF_MONTH, 15);\r\ntemporalValues.setCalendarDate(calendarDate);\r\n```","```\r\n@Basic\r\nprivate java.time.LocalDate localDate;\r\n\r\n@Basic\r\nprivate java.time.LocalTime localTime;\r\n\r\n@Basic\r\nprivate java.time.OffsetTime offsetTime;\r\n\r\n@Basic\r\nprivate java.time.Instant instant;\r\n\r\n@Basic\r\nprivate java.time.LocalDateTime localDateTime;\r\n\r\n@Basic\r\nprivate java.time.OffsetDateTime offsetDateTime;\r\n\r\n@Basic\r\nprivate java.time.ZonedDateTime zonedDateTime;\r\n```","```\r\ntemporalValues.setLocalDate(LocalDate.parse(\"2017-11-15\"));\r\n\r\ntemporalValues.setLocalTime(LocalTime.parse(\"15:30:18\"));\r\ntemporalValues.setOffsetTime(OffsetTime.parse(\"08:22:12+01:00\"));\r\n\r\ntemporalValues.setInstant(Instant.parse(\"2017-11-15T08:22:12Z\"));\r\ntemporalValues.setLocalDateTime(\r\n  LocalDateTime.parse(\"2017-11-15T08:22:12\"));\r\ntemporalValues.setOffsetDateTime(\r\n  OffsetDateTime.parse(\"2017-11-15T08:22:12+01:00\"));\r\ntemporalValues.setZonedDateTime(\r\n  ZonedDateTime.parse(\"2017-11-15T08:22:12+01:00[Europe/Paris]\"));\r\n```"]