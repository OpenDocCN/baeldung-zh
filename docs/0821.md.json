["```\r\nBEGIN [ ( UNLOGGED | COUNTER ) ] BATCH\r\n[ USING TIMESTAMP [ epoch_microseconds ] ]\r\ndml_statement [ USING TIMESTAMP [ epoch_microseconds ] ] ;\r\n[ dml_statement [ USING TIMESTAMP [ epoch_microseconds ] ] [ ; ... ] ]\r\nAPPLY BATCH;\r\n```","```\r\nBEGIN BATCH \r\n\r\nINSERT INTO product (product_id, variant_id, product_name) \r\nVALUES (2c11bbcd-4587-4d15-bb57-4b23a546bd7f,0e9ef8f7-d32b-4926-9d37-27225933a5f3,'banana'); \r\n\r\nINSERT INTO product (product_id, variant_id, product_name) \r\nVALUES (2c11bbcd-4587-4d15-bb57-4b23a546bd7f,0e9ef8f7-d32b-4926-9d37-27225933a5f5,'banana'); \r\n\r\nAPPLY BATCH;\r\n```","```\r\nCREATE TABLE product (\r\n  product_id UUID,\r\n  variant_id UUID,\r\n  product_name text,\r\n  description text,\r\n  price float,\r\n  PRIMARY KEY (product_id, variant_id)\r\n  );\r\n```","```\r\nBEGIN BATCH \r\n\r\nINSERT INTO product (product_id, variant_id, product_name) \r\nVALUES (2c11bbcd-4587-4d15-bb57-4b23a546bd7f,0e9ef8f7-d32b-4926-9d37-27225933a5f3,'banana') IF NOT EXISTS; \r\n\r\nINSERT INTO product (product_id, variant_id, product_name) \r\nVALUES (2c11bbcd-4587-4d15-bb57-4b23a546bd7f,0e9ef8f7-d32b-4926-9d37-27225933a5f5,'banana') IF NOT EXISTS; \r\n\r\nUPDATE product SET price = 7.12, description = 'banana v1' \r\nWHERE product_id = 2c11bbcd-4587-4d15-bb57-4b23a546bd7f AND variant_id=0e9ef8f7-d32b-4926-9d37-27225933a5f3; \r\n\r\nUPDATE product SET price = 11.90, description = 'banana v2' \r\nWHERE product_id = 2c11bbcd-4587-4d15-bb57-4b23a546bd7f AND variant_id=0e9ef8f7-d32b-4926-9d37-27225933a5f5; \r\n\r\nAPPLY BATCH;\r\n```","```\r\ncqlsh:testkeyspace> select product_id, variant_id, product_name, description, price, writetime(product_name) from product;\r\n\r\n@ Row 1\r\n-------------------------+--------------------------------------\r\nproduct_id | 3a043b68-20ee-4ece-8f4b-a07e704bc9f5\r\nvariant_id | b84b9366-9998-4b2d-9a96-7e9a59a94ae5\r\nproduct_name | Banana\r\ndescription | banana v1\r\nprice | 12\r\nwritetime(product_name) | 1639275574653000\r\n\r\n@ Row 2\r\n-------------------------+--------------------------------------\r\nproduct_id | 3a043b68-20ee-4ece-8f4b-a07e704bc9f5\r\nvariant_id | facc3997-299d-419b-b133-a54b5d4dfc3b\r\nproduct_name | Banana\r\ndescription | banana v2\r\nprice | 12\r\nwritetime(product_name) | 1639275574653000\r\n```","```\r\nBEGIN BATCH USING TIMESTAMP 1638810270 \r\n\r\nINSERT INTO product (product_id, variant_id, product_name) \r\nVALUES (2c11bbcd-4587-4d15-bb57-4b23a546bd7f,0e9ef8f7-d32b-4926-9d37-27225933a5f3,'banana'); \r\n\r\nINSERT INTO product (product_id, variant_id, product_name) \r\nVALUES (2c11bbcd-4587-4d15-bb57-4b23a546bd7f,0e9ef8f7-d32b-4926-9d37-27225933a5f5,'banana'); \r\n\r\nUPDATE product SET price = 7.12, description = 'banana v1' \r\nWHERE product_id = 2c11bbcd-4587-4d15-bb57-4b23a546bd7f AND variant_id=0e9ef8f7-d32b-4926-9d37-27225933a5f3; \r\n\r\nUPDATE product SET price = 11.90, description = 'banana v2' \r\nWHERE product_id = 2c11bbcd-4587-4d15-bb57-4b23a546bd7f AND variant_id=0e9ef8f7-d32b-4926-9d37-27225933a5f5; \r\n\r\nAPPLY BATCH;\r\n```","```\r\nBEGIN BATCH \r\n\r\nINSERT INTO product (product_id, variant_id, product_name) \r\nVALUES (2c11bbcd-4587-4d15-bb57-4b23a546bd7f,0e9ef8f7-d32b-4926-9d37-27225933a5f3,'banana');\r\n\r\nINSERT INTO product (product_id, variant_id, product_name) \r\nVALUES (2c11bbcd-4587-4d15-bb57-4b23a546bd7f,0e9ef8f7-d32b-4926-9d37-27225933a5f5,'banana') USING TIMESTAMP 1638810270; \r\n\r\nUPDATE product SET price = 7.12, description = 'banana v1' \r\nWHERE product_id = 2c11bbcd-4587-4d15-bb57-4b23a546bd7f AND variant_id=0e9ef8f7-d32b-4926-9d37-27225933a5f3 USING TIMESTAMP 1638810270; \r\n\r\nUPDATE product SET price = 11.90, description = 'banana v2' \r\nWHERE product_id = 2c11bbcd-4587-4d15-bb57-4b23a546bd7f AND variant_id=0e9ef8f7-d32b-4926-9d37-27225933a5f5; \r\n\r\nAPPLY BATCH;\r\n```","```\r\nBEGIN BATCH USING TIMESTAMP 1638810270 \r\n\r\nINSERT INTO product (product_id, variant_id, product_name) \r\nVALUES (2c11bbcd-4587-4d15-bb57-4b23a546bd7f,0e9ef8f7-d32b-4926-9d37-27225933a5f3,'banana') IF NOT EXISTS; \r\n\r\nINSERT INTO product (product_id, variant_id, product_name) \r\nVALUES (2c11bbcd-4587-4d15-bb57-4b23a546bd7f,0e9ef8f7-d32b-4926-9d37-27225933a5f5,'banana') IF NOT EXISTS; \r\n\r\nUPDATE product SET price = 7.12, description = 'banana v1' \r\nWHERE product_id = 2c11bbcd-4587-4d15-bb57-4b23a546bd7f AND variant_id=0e9ef8f7-d32b-4926-9d37-27225933a5f3; \r\n\r\nUPDATE product SET price = 11.90, description = 'banana v2' \r\nWHERE product_id = 2c11bbcd-4587-4d15-bb57-4b23a546bd7f AND variant_id=0e9ef8f7-d32b-4926-9d37-27225933a5f5; \r\n\r\nAPPLY BATCH;\r\n```","```\r\nInvalidRequest: Error from server: code=2200 [Invalid query]\r\nmessage=\"Cannot provide custom timestamp for conditional BATCH\"\r\n```","```\r\nBEGIN BATCH \r\n\r\nINSERT INTO product_by_name (product_name, product_id, description, price) \r\nVALUES ('banana',2c11bbcd-4587-4d15-bb57-4b23a546bd7f,'banana',12.00); \r\n\r\nINSERT INTO product_by_id (product_id, product_name, description, price) \r\nVALUES (2c11bbcd-4587-4d15-bb57-4b23a546bd7f,'banana','banana',12.00); \r\n\r\nAPPLY BATCH;\r\n```","```\r\nBEGIN UNLOGGED BATCH \r\n\r\nINSERT INTO product_by_name (product_name, product_id, description, price) \r\nVALUES ('banana',2c11bbcd-4587-4d15-bb57-4b23a546bd7f,'banana',12.00); \r\n\r\nINSERT INTO product_by_id (product_id, product_name, description, price) \r\nVALUES (2c11bbcd-4587-4d15-bb57-4b23a546bd7f,'banana','banana',12.00); \r\n\r\nAPPLY BATCH;\r\n```","```\r\nCREATE TABLE product_by_sales (\r\n  product_id UUID,\r\n  sales_vol counter,\r\n  PRIMARY KEY (product_id)\r\n);\r\n```","```\r\nBEGIN COUNTER BATCH\r\n\r\nUPDATE product_by_sales\r\nSET sales_vol = sales_vol + 100\r\nWHERE product_id = 6ab09bec-e68e-48d9-a5f8-97e6fb4c9b47;\r\n\r\nUPDATE product_by_sales\r\nSET sales_vol = sales_vol + 100\r\nWHERE product_id = 6ab09bec-e68e-48d9-a5f8-97e6fb4c9b47;\r\n\r\nAPPLY BATCH\r\n```","```\r\n<dependency>\r\n    <groupId>com.datastax.oss</groupId>\r\n    <artifactId>java-driver-core</artifactId>\r\n    <version>4.1.0</version>\r\n</dependency>\r\n<dependency>\r\n   <groupId>com.datastax.oss</groupId>\r\n   <artifactId>java-driver-query-builder</artifactId>\r\n   <version>4.1.0</version>\r\n</dependency>\r\n```","```\r\nBoundStatement getProductVariantInsertStatement(Product product, UUID productId) {\r\n    String insertQuery = new StringBuilder(\"\") \r\n      .append(\"INSERT INTO \")\r\n      .append(PRODUCT_TABLE_NAME)\r\n      .append(\"(product_id, variant_id, product_name, description, price) \")\r\n      .append(\"VALUES (\")\r\n      .append(\":product_id\")\r\n      .append(\", \")\r\n      .append(\":variant_id\")\r\n      .append(\", \")\r\n      .append(\":product_name\")\r\n      .append(\", \")\r\n      .append(\":description\")\r\n      .append(\", \")\r\n      .append(\":price\")\r\n      .append(\");\")\r\n      .toString();\r\n\r\n    PreparedStatement preparedStatement = session.prepare(insertQuery);\r\n\r\n    return preparedStatement.bind(\r\n      productId, \r\n      UUID.randomUUID(),\r\n      product.getProductName(), \r\n      product.getDescription(),\r\n      product.getPrice());\r\n}\r\n```","```\r\nUUID productId = UUID.randomUUID();\r\nBoundStatement productBoundStatement1 = this.getProductVariantInsertStatement(productVariant1, productId);\r\nBoundStatement productBoundStatement2 = this.getProductVariantInsertStatement(productVariant2, productId);\r\n\r\nBatchStatement batch = BatchStatement.newInstance(DefaultBatchType.UNLOGGED,\r\n            productBoundStatement1, productBoundStatement2);\r\n\r\nsession.execute(batch);\r\n```","```\r\nBoundStatement getProductInsertStatement(Product product, UUID productId, String productTableName) {\r\n    String cqlQuery1 = new StringBuilder(\"\")\r\n      .append(\"INSERT INTO \")\r\n      .append(productTableName)\r\n      .append(\"(product_id, product_name, description, price) \")\r\n      .append(\"VALUES (\")\r\n      .append(\":product_id\")\r\n      .append(\", \")\r\n      .append(\":product_name\")\r\n      .append(\", \")\r\n      .append(\":description\")\r\n      .append(\", \")\r\n      .append(\":price\")\r\n      .append(\");\")\r\n      .toString();\r\n\r\n    PreparedStatement preparedStatement = session.prepare(cqlQuery1);\r\n\r\n    return preparedStatement.bind(\r\n      productId,\r\n      product.getProductName(),\r\n      product.getDescription(),\r\n      product.getPrice());\r\n}\r\n```","```\r\nUUID productId = UUID.randomUUID();\r\n\r\nBoundStatement productBoundStatement1 = this.getProductInsertStatement(product, productId, PRODUCT_BY_ID_TABLE_NAME);\r\nBoundStatement productBoundStatement2 = this.getProductInsertStatement(product, productId, PRODUCT_BY_NAME_TABLE_NAME);\r\n\r\nBatchStatement batch = BatchStatement.newInstance(DefaultBatchType.LOGGED,\r\n            productBoundStatement1,productBoundStatement2);\r\n\r\nsession.execute(batch);\r\n```"]