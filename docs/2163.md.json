["```\r\nprivate String itemName;\r\n```","```\r\nprivate String username;\r\n```","```\r\nList<Item> items = Arrays.asList(\r\n  new Item(\"Candy\"), \r\n  new Item(\"Drink\"), \r\n  new Item(\"Soda\"), \r\n  new Item(\"Popcorn\"), \r\n  new Item(\"Snacks\")\r\n);\r\n```","```\r\nMap<User, HashMap<Item, Double>> data;\r\n```","```\r\nfor (HashMap<Item, Double> user : data.values()) {\r\n    for (Entry<Item, Double> e : user.entrySet()) {\r\n        // ...\r\n    }\r\n}\r\n```","```\r\nif (!diff.containsKey(e.getKey())) {\r\n    diff.put(e.getKey(), new HashMap<Item, Double>());\r\n    freq.put(e.getKey(), new HashMap<Item, Integer>());\r\n} \r\n```","```\r\nfor (Entry<Item, Double> e2 : user.entrySet()) {\r\n    int oldCount = 0;\r\n    if (freq.get(e.getKey()).containsKey(e2.getKey())){\r\n        oldCount = freq.get(e.getKey()).get(e2.getKey()).intValue();\r\n    }\r\n\r\n    double oldDiff = 0.0;\r\n    if (diff.get(e.getKey()).containsKey(e2.getKey())){\r\n        oldDiff = diff.get(e.getKey()).get(e2.getKey()).doubleValue();\r\n    }\r\n\r\n    double observedDiff = e.getValue() - e2.getValue();\r\n    freq.get(e.getKey()).put(e2.getKey(), oldCount + 1);\r\n    diff.get(e.getKey()).put(e2.getKey(), oldDiff + observedDiff);\r\n}\r\n```","```\r\nfor (Item j : diff.keySet()) {\r\n    for (Item i : diff.get(j).keySet()) {\r\n        double oldValue = diff.get(j).get(i).doubleValue();\r\n        int count = freq.get(j).get(i).intValue();\r\n        diff.get(j).put(i, oldValue / count);\r\n    }\r\n}\r\n```","```\r\nfor (Entry<User, HashMap<Item, Double>> e : data.entrySet()) {\r\n    for (Item j : e.getValue().keySet()) {\r\n        for (Item k : diff.keySet()) {\r\n            double predictedValue =\r\n              diff.get(k).get(j).doubleValue() + e.getValue().get(j).doubleValue();\r\n            double finalValue = predictedValue * freq.get(k).get(j).intValue();\r\n            uPred.put(k, uPred.get(k) + finalValue);\r\n            uFreq.put(k, uFreq.get(k) + freq.get(k).get(j).intValue());\r\n        }\r\n    }\r\n    // ...\r\n}\r\n```","```\r\nHashMap<Item, Double> clean = new HashMap<Item, Double>();\r\nfor (Item j : uPred.keySet()) {\r\n    if (uFreq.get(j) > 0) {\r\n        clean.put(j, uPred.get(j).doubleValue() / uFreq.get(j).intValue());\r\n    }\r\n}\r\nfor (Item j : InputData.items) {\r\n    if (e.getValue().containsKey(j)) {\r\n        clean.put(j, e.getValue().get(j));\r\n    } else if (!clean.containsKey(j)) {\r\n        clean.put(j, -1.0);\r\n    }\r\n}\r\n```"]