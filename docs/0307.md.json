["```\r\n<dependency>\r\n    <groupId>com.datastax.oss</groupId>\r\n    <artifactId>java-driver-core</artifactId>\r\n    <version>4.13.0</version>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>org.cassandraunit</groupId>\r\n    <artifactId>cassandra-unit</artifactId>\r\n    <version>4.3.1.0</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n```","```\r\nCREATE TABLE person(\r\n    id varchar,\r\n    name varchar,\r\n    PRIMARY KEY(id));\r\n\r\nINSERT INTO person(id, name) values('1234','Eugen');\r\nINSERT INTO person(id, name) values('5678','Michael');\r\n```","```\r\npublic class NativeEmbeddedCassandraUnitTest {\r\n\r\n    private CqlSession session;\r\n\r\n    @Before\r\n    public void setUp() throws Exception {\r\n        EmbeddedCassandraServerHelper.startEmbeddedCassandra();\r\n        session = EmbeddedCassandraServerHelper.getSession();\r\n        new CQLDataLoader(session).load(new ClassPathCQLDataSet(\"people.cql\", \"people\"));\r\n    }\r\n}\r\n```","```\r\n11:13:36.754 [pool-2-thread-1] INFO  o.apache.cassandra.transport.Server\r\n  - Starting listening for CQL clients on localhost/127.0.0.1:9142 (unencrypted)...\r\n```","```\r\nEmbeddedCassandraServerHelper\r\n  .startEmbeddedCassandra(EmbeddedCassandraServerHelper.CASSANDRA_RNDPORT_YML_FILE);\r\n```","```\r\n@Test\r\npublic void givenEmbeddedCassandraInstance_whenStarted_thenQuerySuccess() throws Exception {\r\n    ResultSet result = session.execute(\"select * from person WHERE id=1234\");\r\n    assertThat(result.iterator().next().getString(\"name\"), is(\"Eugen\"));\r\n}\r\n```","```\r\n@After\r\npublic void tearDown() throws Exception {\r\n    EmbeddedCassandraServerHelper.cleanEmbeddedCassandra();\r\n}\r\n```","```\r\npublic class AbstractTestCaseWithEmbeddedCassandraUnitTest\r\n  extends AbstractCassandraUnit4CQLTestCase {\r\n\r\n    @Override\r\n    public CQLDataSet getDataSet() {\r\n        return new ClassPathCQLDataSet(\"people.cql\", \"people\");\r\n    }\r\n\r\n    @Test\r\n    public void givenEmbeddedCassandraInstance_whenStarted_thenQuerySuccess()\r\n      throws Exception {\r\n        ResultSet result = this.getSession().execute(\"select * from person WHERE id=1234\");\r\n        assertThat(result.iterator().next().getString(\"name\"), is(\"Eugen\"));\r\n    }\r\n}\r\n```","```\r\npublic class JUnitRuleWithEmbeddedCassandraUnitTest {\r\n\r\n    @Rule\r\n    public CassandraCQLUnit cassandra = new CassandraCQLUnit(new ClassPathCQLDataSet(\"people.cql\", \"people\"));\r\n\r\n    @Test\r\n    public void givenEmbeddedCassandraInstance_whenStarted_thenQuerySuccess() throws Exception {\r\n        ResultSet result = cassandra.session.execute(\"select * from person WHERE id=5678\");\r\n        assertThat(result.iterator().next().getString(\"name\"), is(\"Michael\"));\r\n    }\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>org.cassandraunit</groupId>\r\n    <artifactId>cassandra-unit-spring</artifactId>\r\n    <version>4.3.1.0</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n```","```\r\n@RunWith(SpringJUnit4ClassRunner.class)\r\n@TestExecutionListeners({ CassandraUnitTestExecutionListener.class })\r\n@CassandraDataSet(value = \"people.cql\", keyspace = \"people\")\r\n@EmbeddedCassandra\r\npublic class SpringWithEmbeddedCassandraUnitTest {\r\n\r\n    @Test\r\n    public void givenEmbeddedCassandraInstance_whenStarted_thenQuerySuccess() throws Exception {\r\n        CqlSession session = EmbeddedCassandraServerHelper.getSession();\r\n\r\n        ResultSet result = session.execute(\"select * from person WHERE id=1234\");\r\n        assertThat(result.iterator().next().getString(\"name\"), is(\"Eugen\"));\r\n    }\r\n}\r\n```"]