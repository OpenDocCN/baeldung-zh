["```\r\n<dependency>\r\n    <groupId>org.javassist</groupId>\r\n    <artifactId>javassist</artifactId>\r\n    <version>${javaassist.version}</version>\r\n</dependency>\r\n\r\n<properties>\r\n    <javaassist.version>3.21.0-GA</javaassist.version>\r\n</properties>\r\n```","```\r\npublic class Point {\r\n    private int x;\r\n    private int y;\r\n\r\n    public void move(int x, int y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    // standard constructors/getters/setters\r\n}\r\n```","```\r\njavap -c Point.class\r\n```","```\r\npublic class com.baeldung.javasisst.Point {\r\n  public com.baeldung.javasisst.Point(int, int);\r\n    Code:\r\n       0: aload_0\r\n       1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\r\n       4: aload_0\r\n       5: iload_1\r\n       6: putfield      #2                  // Field x:I\r\n       9: aload_0\r\n      10: iload_2\r\n      11: putfield      #3                  // Field y:I\r\n      14: return\r\n\r\n  public void move(int, int);\r\n    Code:\r\n       0: aload_0\r\n       1: iload_1\r\n       2: putfield      #2                  // Field x:I\r\n       5: aload_0\r\n       6: iload_2\r\n       7: putfield      #3                  // Field y:I\r\n      10: return\r\n}\r\n```","```\r\nClassFile cf = new ClassFile(\r\n  false, \"com.baeldung.JavassistGeneratedClass\", null);\r\ncf.setInterfaces(new String[] {\"java.lang.Cloneable\"});\r\n\r\nFieldInfo f = new FieldInfo(cf.getConstPool(), \"id\", \"I\");\r\nf.setAccessFlags(AccessFlag.PUBLIC);\r\ncf.addField(f); \r\n```","```\r\nClassPool classPool = ClassPool.getDefault();\r\nField[] fields = classPool.makeClass(cf).toClass().getFields();\r\n\r\nassertEquals(fields[0].getName(), \"id\");\r\n```","```\r\nClassPool cp = ClassPool.getDefault();\r\nClassFile cf = cp.get(\"com.baeldung.javasisst.Point\")\r\n  .getClassFile();\r\nMethodInfo minfo = cf.getMethod(\"move\");\r\nCodeAttribute ca = minfo.getCodeAttribute();\r\nCodeIterator ci = ca.iterator();\r\n\r\nList<String> operations = new LinkedList<>();\r\nwhile (ci.hasNext()) {\r\n    int index = ci.next();\r\n    int op = ci.byteAt(index);\r\n    operations.add(Mnemonic.OPCODE[op]);\r\n}\r\n\r\nassertEquals(operations,\r\n  Arrays.asList(\r\n  \"aload_0\", \r\n  \"iload_1\", \r\n  \"putfield\", \r\n  \"aload_0\", \r\n  \"iload_2\",  \r\n  \"putfield\", \r\n  \"return\"));\r\n```","```\r\nClassFile cf = ClassPool.getDefault()\r\n  .get(\"com.baeldung.javasisst.Point\").getClassFile();\r\n\r\nFieldInfo f = new FieldInfo(cf.getConstPool(), \"id\", \"I\");\r\nf.setAccessFlags(AccessFlag.PUBLIC);\r\ncf.addField(f); \r\n```","```\r\nClassPool classPool = ClassPool.getDefault();\r\nField[] fields = classPool.makeClass(cf).toClass().getFields();\r\nList<String> fieldsList = Stream.of(fields)\r\n  .map(Field::getName)\r\n  .collect(Collectors.toList());\r\n\r\nassertTrue(fieldsList.contains(\"id\"));\r\n```","```\r\nClassFile cf = ClassPool.getDefault()\r\n  .get(\"com.baeldung.javasisst.Point\").getClassFile();\r\nBytecode code = new Bytecode(cf.getConstPool());\r\ncode.addAload(0);\r\ncode.addInvokespecial(\"java/lang/Object\", MethodInfo.nameInit, \"()V\");\r\ncode.addReturn(null);\r\n\r\nMethodInfo minfo = new MethodInfo(\r\n  cf.getConstPool(), MethodInfo.nameInit, \"()V\");\r\nminfo.setCodeAttribute(code.toCodeAttribute());\r\ncf.addMethod(minfo);\r\n```","```\r\nCodeIterator ci = code.toCodeAttribute().iterator();\r\nList<String> operations = new LinkedList<>();\r\nwhile (ci.hasNext()) {\r\n    int index = ci.next();\r\n    int op = ci.byteAt(index);\r\n    operations.add(Mnemonic.OPCODE[op]);\r\n}\r\n\r\nassertEquals(operations,\r\n  Arrays.asList(\"aload_0\", \"invokespecial\", \"return\"));\r\n```"]