["```\r\n<dependency>\r\n    <groupId>au.com.dius</groupId>\r\n    <artifactId>pact-jvm-consumer-junit5_2.12</artifactId>\r\n    <version>3.6.3</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n```","```\r\n@PactTestFor(providerName = \"test_provider\", hostInterface=\"localhost\")\r\npublic class PactConsumerDrivenContractUnitTest\r\n```","```\r\n@Pact(consumer = \"test_consumer\")\r\npublic RequestResponsePact createPact(PactDslWithProvider builder) {\r\n    Map<String, String> headers = new HashMap<>();\r\n    headers.put(\"Content-Type\", \"application/json\");\r\n\r\n    return builder\r\n      .given(\"test GET\")\r\n        .uponReceiving(\"GET REQUEST\")\r\n        .path(\"/pact\")\r\n        .method(\"GET\")\r\n      .willRespondWith()\r\n        .status(200)\r\n        .headers(headers)\r\n        .body(\"{\\\"condition\\\": true, \\\"name\\\": \\\"tom\\\"}\")\r\n        (...)\r\n}\r\n```","```\r\n(...)\r\n.given(\"test POST\")\r\n.uponReceiving(\"POST REQUEST\")\r\n  .method(\"POST\")\r\n  .headers(headers)\r\n  .body(\"{\\\"name\\\": \\\"Michael\\\"}\")\r\n  .path(\"/pact\")\r\n.willRespondWith()\r\n  .status(201)\r\n.toPact();\r\n```","```\r\n<plugin>\r\n    <groupId>org.apache.maven.plugins</groupId>\r\n    <artifactId>maven-surefire-plugin</artifactId>\r\n    <configuration>\r\n        <systemPropertyVariables>\r\n            <pact.rootDir>target/mypacts</pact.rootDir>\r\n        </systemPropertyVariables>\r\n    </configuration>\r\n    ...\r\n</plugin>\r\n```","```\r\n{\r\n    \"provider\": {\r\n        \"name\": \"test_provider\"\r\n    },\r\n    \"consumer\": {\r\n        \"name\": \"test_consumer\"\r\n    },\r\n    \"interactions\": [\r\n        {\r\n            \"description\": \"GET REQUEST\",\r\n            \"request\": {\r\n                \"method\": \"GET\",\r\n                \"path\": \"/\"\r\n            },\r\n            \"response\": {\r\n                \"status\": 200,\r\n                \"headers\": {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                \"body\": {\r\n                    \"condition\": true,\r\n                    \"name\": \"tom\"\r\n                }\r\n            },\r\n            \"providerStates\": [\r\n                {\r\n                    \"name\": \"test GET\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"description\": \"POST REQUEST\",\r\n            ...\r\n        }\r\n    ],\r\n    \"metadata\": {\r\n        \"pact-specification\": {\r\n            \"version\": \"3.0.0\"\r\n        },\r\n        \"pact-jvm\": {\r\n            \"version\": \"3.6.3\"\r\n        }\r\n    }\r\n}\r\n```","```\r\n@Test\r\n@PactTestFor\r\npublic void givenGet_whenSendRequest_shouldReturn200WithProperHeaderAndBody() {\r\n\r\n    // when\r\n    ResponseEntity<String> response = new RestTemplate()\r\n      .getForEntity(mockProvider.getUrl() + \"/pact\", String.class);\r\n\r\n    // then\r\n    assertThat(response.getStatusCode().value()).isEqualTo(200);\r\n    assertThat(response.getHeaders().get(\"Content-Type\").contains(\"application/json\")).isTrue();\r\n    assertThat(response.getBody()).contains(\"condition\", \"true\", \"name\", \"tom\");\r\n}\r\n```","```\r\nHttpHeaders httpHeaders = new HttpHeaders();\r\nhttpHeaders.setContentType(MediaType.APPLICATION_JSON);\r\nString jsonBody = \"{\\\"name\\\": \\\"Michael\\\"}\";\r\n\r\n// when\r\nResponseEntity<String> postResponse = new RestTemplate()\r\n  .exchange(\r\n    mockProvider.getUrl() + \"/create\",\r\n    HttpMethod.POST,\r\n    new HttpEntity<>(jsonBody, httpHeaders), \r\n    String.class\r\n);\r\n\r\n//then\r\nassertThat(postResponse.getStatusCode().value()).isEqualTo(201);\r\n```","```\r\n<dependency>\r\n    <groupId>au.com.dius</groupId>\r\n    <artifactId>pact-jvm-provider-junit5_2.12</artifactId>\r\n    <version>3.6.3</version>\r\n</dependency>\r\n```","```\r\n@Provider(\"test_provider\")\r\n@PactFolder(\"pacts\")\r\npublic class PactProviderLiveTest {\r\n    //...\r\n}\r\n```","```\r\nprivate static ConfigurableWebApplicationContext application;\r\n\r\n@TestTemplate\r\n@ExtendWith(PactVerificationInvocationContextProvider.class)\r\nvoid pactVerificationTestTemplate(PactVerificationContext context) {\r\n    context.verifyInteraction();\r\n}\r\n\r\n@BeforeAll\r\npublic static void start() {\r\n    application = (ConfigurableWebApplicationContext) SpringApplication.run(MainApplication.class);\r\n}\r\n\r\n@BeforeEach\r\nvoid before(PactVerificationContext context) {\r\n    context.setTarget(new HttpTestTarget(\"localhost\", 8082, \"/spring-rest\"));\r\n}\r\n```","```\r\n@State(\"test GET\")\r\npublic void toGetState() { }\r\n\r\n@State(\"test POST\")\r\npublic void toPostState() { }\r\n```","```\r\nVerifying a pact between test_consumer and test_provider\r\n  Given test GET\r\n  GET REQUEST\r\n    returns a response which\r\n      has status code 200 (OK)\r\n      includes headers\r\n        \"Content-Type\" with value \"application/json\" (OK)\r\n      has a matching body (OK)\r\n\r\nVerifying a pact between test_consumer and test_provider\r\n  Given test POST\r\n  POST REQUEST\r\n    returns a response which\r\n      has status code 201 (OK)\r\n      has a matching body (OK)\r\n```"]