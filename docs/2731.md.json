["```\r\nMap<String, Integer> numberByName = new HashMap<>();\r\n```","```\r\nInteger intValue = 777;\r\nint[] intArray = new int[]{2, 3, 5, 7, 11, 13};\r\nInstant instant = Instant.now(); \r\n```","```\r\nMap<String, Object> rawMap = new HashMap<>();\r\nrawMap.put(\"E1 (Integer)\", intValue);\r\nrawMap.put(\"E2 (IntArray)\", intArray);\r\nrawMap.put(\"E3 (Instant)\", instant); \r\n```","```\r\nrawMap.forEach((k, v) -> {\r\n    if (v instanceof Integer) {\r\n        Integer theV = (Integer) v;\r\n        System.out.println(k + \" -> \"\r\n          + String.format(\"The value is a %s integer: %d\", theV > 0 ? \"positive\" : \"negative\", theV));\r\n    } else if (v instanceof int[]) {\r\n        int[] theV = (int[]) v;\r\n        System.out.println(k + \" -> \"\r\n          + String.format(\"The value is an array of %d integers: %s\", theV.length, Arrays.toString(theV)));\r\n    } else if (v instanceof Instant) {\r\n        Instant theV = (Instant) v;\r\n        System.out.println(k + \" -> \"\r\n          + String.format(\"The value is an instant: %s\", FORMATTER.format(theV)));\r\n    } else {\r\n        throw new IllegalStateException(\"Unknown Type Found.\");\r\n    }\r\n});\r\n```","```\r\nE1 (Integer) -> The value is a positive integer: 777\r\nE2 (IntArray) -> The value is an array of 6 integers: [2, 3, 5, 7, 11, 13]\r\nE3 (Instant) -> The value is an instant: 2021-11-23 21:48:02\r\n```","```\r\npublic interface DynamicTypeValue {\r\n    String valueDescription();\r\n}\r\n```","```\r\npublic class IntegerTypeValue implements DynamicTypeValue {\r\n    private Integer value;\r\n\r\n    public IntegerTypeValue(Integer value) {\r\n        this.value = value;\r\n    }\r\n\r\n    @Override\r\n    public String valueDescription() {\r\n        if(value == null){\r\n            return \"The value is null.\";\r\n        }\r\n        return String.format(\"The value is a %s integer: %d\", value > 0 ? \"positive\" : \"negative\", value);\r\n    }\r\n} \r\n```","```\r\npublic class IntArrayTypeValue implements DynamicTypeValue {\r\n    private int[] value;\r\n\r\n    public IntArrayTypeValue(int[] value) { ... }\r\n\r\n    @Override\r\n    public String valueDescription() {\r\n        // null handling omitted\r\n        return String.format(\"The value is an array of %d integers: %s\", value.length, Arrays.toString(value));\r\n    }\r\n}\r\n```","```\r\npublic class InstantTypeValue implements DynamicTypeValue {\r\n    private static DateTimeFormatter FORMATTER = ...\r\n\r\n    private Instant value;\r\n\r\n    public InstantTypeValue(Instant value) { ... }\r\n\r\n    @Override\r\n    public String valueDescription() {\r\n        // null handling omitted\r\n        return String.format(\"The value is an instant: %s\", FORMATTER.format(value));\r\n    }\r\n} \r\n```","```\r\nMap<String, DynamicTypeValue> theMap = new HashMap<>();\r\ntheMap.put(\"E1 (Integer)\", new IntegerTypeValue(intValue));\r\ntheMap.put(\"E2 (IntArray)\", new IntArrayTypeValue(intArray));\r\ntheMap.put(\"E3 (Instant)\", new InstantTypeValue(instant)); \r\n```","```\r\ntheMap.forEach((k, v) -> System.out.println(k + \" -> \" + v.valueDescription())); \r\n```","```\r\nE1 (Integer) -> The value is a positive integer: 777\r\nE2 (IntArray) -> The value is an array of 5 integers: [2, 3, 5, 7, 11]\r\nE3 (Instant) -> The value is an instant: 2021-11-23 22:32:43\r\n```"]