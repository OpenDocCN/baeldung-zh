["```\r\n./mvnw spring-boot:run\r\n```","```\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nFailed to configure a DataSource: 'url' attribute is not specified and no embedded datasource could be configured.\r\n\r\nReason: Failed to determine a suitable driver class \r\n```","```\r\n./mvnw clean package -DskipTests\r\n```","```\r\ncp target/docker-spring-boot-postgres-0.0.1-SNAPSHOT.jar src/main/docker\r\n```","```\r\nFROM adoptopenjdk:11-jre-hotspot\r\nARG JAR_FILE=*.jar\r\nCOPY ${JAR_FILE} application.jar\r\nENTRYPOINT [\"java\", \"-jar\", \"application.jar\"]\r\n```","```\r\nversion: '2'\r\n\r\nservices:\r\n  app:\r\n    image: 'docker-spring-boot-postgres:latest'\r\n    build:\r\n      context: .\r\n    container_name: app\r\n    depends_on:\r\n      - db\r\n    environment:\r\n      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/compose-postgres\r\n      - SPRING_DATASOURCE_USERNAME=compose-postgres\r\n      - SPRING_DATASOURCE_PASSWORD=compose-postgres\r\n      - SPRING_JPA_HIBERNATE_DDL_AUTO=update\r\n\r\n  db:\r\n    image: 'postgres:13.1-alpine'\r\n    container_name: db\r\n    environment:\r\n      - POSTGRES_USER=compose-postgres\r\n      - POSTGRES_PASSWORD=compose-postgres\r\n```","```\r\ndocker-compose up\r\n```","```\r\nStarting DemoApplication v0.0.1-SNAPSHOT using Java 11.0.9 on f94e79a2c9fc with PID 1 (/application.jar started by root in /)\r\n[...]\r\nFinished Spring Data repository scanning in 28 ms. Found 0 JPA repository interfaces.\r\n[...]\r\nStarted DemoApplication in 4.751 seconds (JVM running for 6.512)\r\n```","```\r\ndocker-compose down\r\n```","```\r\n@Entity\r\n@Table(name = \"customer\")\r\npublic class Customer {\r\n\r\n    @Id\r\n    @GeneratedValue\r\n    private long id;\r\n\r\n    @Column(name = \"first_name\", nullable = false)\r\n    private String firstName;\r\n\r\n    @Column(name = \"last_name\", nullable = false)\r\n    private String lastName;\r\n```","```\r\npublic interface CustomerRepository extends JpaRepository<Customer, Long> { }\r\n```","```\r\n@SpringBootApplication\r\npublic class DemoApplication {\r\n    @Autowired \r\n    private CustomerRepository repository; \r\n\r\n    @EventListener(ApplicationReadyEvent.class)\r\n    public void runAfterStartup() {\r\n        List allCustomers = this.repository.findAll(); \r\n        logger.info(\"Number of customers: \" + allCustomers.size());\r\n\r\n        Customer newCustomer = new Customer(); \r\n        newCustomer.setFirstName(\"John\"); \r\n        newCustomer.setLastName(\"Doe\"); \r\n        logger.info(\"Saving new customer...\"); \r\n        this.repository.save(newCustomer); \r\n\r\n        allCustomers = this.repository.findAll(); \r\n        logger.info(\"Number of customers: \" + allCustomers.size());\r\n    }\r\n}\r\n```","```\r\n./mvnw clean package -DskipTests\r\ncp target/docker-spring-boot-postgres-0.0.1-SNAPSHOT.jar src/main/docker\r\n```","```\r\ncd src/main/docker\r\ndocker-compose down\r\ndocker rmi docker-spring-boot-postgres:latest\r\ndocker-compose up\r\n```","```\r\nFinished Spring Data repository scanning in 180 ms. Found 1 JPA repository interfaces.\r\n[...]\r\nNumber of customers: 0\r\nSaving new customer...\r\nNumber of customers: 1\r\n```"]