["```\r\njmap -dump:[live],format=b,file=<file-path> <pid>\r\n```","```\r\njmap -dump:live,format=b,file=/tmp/dump.hprof 12587\r\n```","```\r\njcmd <pid> GC.heap_dump <file-path>\r\n```","```\r\njcmd 12587 GC.heap_dump /tmp/dump.hprof\r\n```","```\r\njava -XX:+HeapDumpOnOutOfMemoryError\r\n```","```\r\njava -XX:+HeapDumpOnOutOfMemoryErrorÂ -XX:HeapDumpPath=<file-or-dir-path>\r\n```","```\r\njava.lang.OutOfMemoryError: Requested array size exceeds VM limit\r\nDumping heap to java_pid12587.hprof ...\r\nException in thread \"main\" Heap dump file created [4744371 bytes in 0.029 secs]\r\njava.lang.OutOfMemoryError: Requested array size exceeds VM limit\r\n\tat com.baeldung.heapdump.App.main(App.java:7)\r\n```","```\r\npublic static void dumpHeap(String filePath, boolean live) throws IOException {\r\n    MBeanServer server = ManagementFactory.getPlatformMBeanServer();\r\n    HotSpotDiagnosticMXBean mxBean = ManagementFactory.newPlatformMXBeanProxy(\r\n      server, \"com.sun.management:type=HotSpotDiagnostic\", HotSpotDiagnosticMXBean.class);\r\n    mxBean.dumpHeap(filePath, live);\r\n}\r\n```","```\r\nException in thread \"main\" java.io.IOException: File exists\r\n\tat sun.management.HotSpotDiagnostic.dumpHeap0(Native Method)\r\n\tat sun.management.HotSpotDiagnostic.dumpHeap(HotSpotDiagnostic.java:60)\r\n```"]