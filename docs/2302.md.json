["```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n</dependency>\r\n```","```\r\n<servlet>\r\n    <servlet-name>dispatcher</servlet-name>\r\n    <servlet-class>\r\n        org.springframework.web.servlet.DispatcherServlet\r\n    </servlet-class>\r\n</servlet>\r\n\r\n<servlet-mapping>\r\n    <servlet-name>dispatcher</servlet-name>\r\n    <url-pattern>/</url-pattern>\r\n</servlet-mapping>\r\n```","```\r\nserver.servlet.context-path=/demo\r\nspring.mvc.servlet.path=/baeldung\r\n```","```\r\n@Component\r\npublic class CustomFilter implements Filter {\r\n\r\n    Logger logger = LoggerFactory.getLogger(CustomFilter.class);\r\n\r\n    @Override\r\n    public void init(FilterConfig filterConfig) throws ServletException {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)\r\n      throws IOException, ServletException {\r\n        logger.info(\"CustomFilter is invoked\");\r\n        chain.doFilter(request, response);\r\n    }\r\n\r\n    // other methods \r\n}\r\n```","```\r\n<filter>\r\n    <filter-name>customFilter</filter-name>\r\n    <filter-class>CustomFilter</filter-class>\r\n</filter>\r\n\r\n<filter-mapping>\r\n    <filter-name>customFilter</filter-name>\r\n    <url-pattern>/*</url-pattern>\r\n</filter-mapping>\r\n```","```\r\npublic class CustomServlet extends HttpServlet {\r\n\r\n    Logger logger = LoggerFactory.getLogger(CustomServlet.class);\r\n\r\n    @Override\r\n    protected void doGet(\r\n        HttpServletRequest req,\r\n        HttpServletResponse resp) throws ServletException, IOException {\r\n            logger.info(\"CustomServlet doGet() method is invoked\");\r\n            super.doGet(req, resp);\r\n    }\r\n\r\n    @Override\r\n    protected void doPost(\r\n        HttpServletRequest req,\r\n        HttpServletResponse resp) throws ServletException, IOException {\r\n            logger.info(\"CustomServlet doPost() method is invoked\");\r\n            super.doPost(req, resp);\r\n    }\r\n} \r\n```","```\r\n<servlet>\r\n    <servlet-name>customServlet</servlet-name>\r\n    <servlet-class>CustomServlet</servlet-class>\r\n</servlet>\r\n\r\n<servlet-mapping>\r\n    <servlet-name>customServlet</servlet-name>\r\n    <url-pattern>/servlet</url-pattern>\r\n</servlet-mapping>\r\n```","```\r\n@Bean\r\npublic ServletRegistrationBean customServletBean() {\r\n    ServletRegistrationBean bean = new ServletRegistrationBean(new CustomServlet(), \"/servlet\");\r\n    return bean;\r\n} \r\n```","```\r\npublic class CustomListener implements ServletContextListener {\r\n\r\n    Logger logger = LoggerFactory.getLogger(CustomListener.class);\r\n\r\n    @Override\r\n    public void contextInitialized(ServletContextEvent sce) {\r\n        logger.info(\"CustomListener is initialized\");\r\n    }\r\n\r\n    @Override\r\n    public void contextDestroyed(ServletContextEvent sce) {\r\n        logger.info(\"CustomListener is destroyed\");\r\n    }\r\n} \r\n```","```\r\n<listener>\r\n    <listener-class>CustomListener</listener-class>\r\n</listener>\r\n```","```\r\n@Bean\r\npublic ServletListenerRegistrationBean<ServletContextListener> customListenerBean() {\r\n    ServletListenerRegistrationBean<ServletContextListener> bean = new ServletListenerRegistrationBean();\r\n    bean.setListener(new CustomListener());\r\n    return bean;\r\n}\r\n```","```\r\n2020-09-28 08:50:30.872 INFO 19612 --- [main] c.baeldung.demo.listener.CustomListener: CustomListener is initialized\r\n```"]