["```\r\n@Entity\r\npublic class Bar {\r\n\r\n    @PrePersist\r\n    public void onPrePersist() { ... }\r\n\r\n    @PreUpdate\r\n    public void onPreUpdate() { ... }\r\n\r\n    @PreRemove\r\n    public void onPreRemove() { ... }\r\n\r\n}\r\n```","```\r\n@Entity\r\npublic class Bar {\r\n\r\n    //...\r\n\r\n    @Column(name = \"operation\")\r\n    private String operation;\r\n\r\n    @Column(name = \"timestamp\")\r\n    private long timestamp;\r\n\r\n    //...\r\n\r\n    // standard setters and getters for the new properties\r\n\r\n    //...\r\n\r\n    @PrePersist\r\n    public void onPrePersist() {\r\n        audit(\"INSERT\");\r\n    }\r\n\r\n    @PreUpdate\r\n    public void onPreUpdate() {\r\n        audit(\"UPDATE\");\r\n    }\r\n\r\n    @PreRemove\r\n    public void onPreRemove() {\r\n        audit(\"DELETE\");\r\n    }\r\n\r\n    private void audit(String operation) {\r\n        setOperation(operation);\r\n        setTimestamp((new Date()).getTime());\r\n    }\r\n\r\n}\r\n```","```\r\n@EntityListeners(AuditListener.class)\r\n@Entity\r\npublic class Bar { ... }\r\n```","```\r\npublic class AuditListener {\r\n\r\n    @PrePersist\r\n    @PreUpdate\r\n    @PreRemove\r\n    private void beforeAnyOperation(Object object) { ... }\r\n\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>org.hibernate</groupId>\r\n    <artifactId>hibernate-envers</artifactId>\r\n    <version>${hibernate.version}</version>\r\n</dependency>\r\n```","```\r\n@Entity\r\n@Audited\r\npublic class Bar { ... }\r\n```","```\r\n@OneToMany(mappedBy = \"bar\")\r\n@NotAudited\r\nprivate Set<Foo> fooSet;\r\n```","```\r\nProperties hibernateProperties = new Properties(); \r\nhibernateProperties.setProperty(\r\n  \"org.hibernate.envers.audit_table_suffix\", \"_AUDIT_LOG\"); \r\nsessionFactory.setHibernateProperties(hibernateProperties);\r\n```","```\r\nAuditReader reader = AuditReaderFactory.get(session);\r\n```","```\r\nAuditQuery query = reader.createQuery()\r\n  .forEntitiesAtRevision(Bar.class, 2)\r\n```","```\r\nAuditQuery query = reader.createQuery()\r\n  .forRevisionsOfEntity(Bar.class, true, true);\r\n```","```\r\nquery.addOrder(AuditEntity.revisionNumber().desc());\r\n```","```\r\n@Configuration\r\n@EnableTransactionManagement\r\n@EnableJpaRepositories\r\n@EnableJpaAuditing\r\npublic class PersistenceConfig { ... }\r\n```","```\r\n@Entity\r\n@EntityListeners(AuditingEntityListener.class)\r\npublic class Bar { ... }\r\n```","```\r\n@Entity\r\n@EntityListeners(AuditingEntityListener.class)\r\npublic class Bar {\r\n\r\n    //...\r\n\r\n    @Column(name = \"created_date\", nullable = false, updatable = false)\r\n    @CreatedDate\r\n    private long createdDate;\r\n\r\n    @Column(name = \"modified_date\")\r\n    @LastModifiedDate\r\n    private long modifiedDate;\r\n\r\n    //...\r\n\r\n}\r\n```","```\r\n@Entity\r\n@EntityListeners(AuditingEntityListener.class)\r\npublic class Bar {\r\n\r\n    //...\r\n\r\n    @Column(name = \"created_by\")\r\n    @CreatedBy\r\n    private String createdBy;\r\n\r\n    @Column(name = \"modified_by\")\r\n    @LastModifiedBy\r\n    private String modifiedBy;\r\n\r\n    //...\r\n\r\n}\r\n```","```\r\npublic class AuditorAwareImpl implements AuditorAware<String> {\r\n\r\n    @Override\r\n    public String getCurrentAuditor() {\r\n        // your custom logic\r\n    }\r\n\r\n}\r\n```","```\r\n@EnableJpaAuditing(auditorAwareRef=\"auditorProvider\")\r\npublic class PersistenceConfig {\r\n\r\n    //...\r\n\r\n    @Bean\r\n    AuditorAware<String> auditorProvider() {\r\n        return new AuditorAwareImpl();\r\n    }\r\n\r\n    //...\r\n\r\n}\r\n```"]