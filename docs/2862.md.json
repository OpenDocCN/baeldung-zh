["```\r\n@Test\r\npublic void givenUsingPlainJava_whenConvertingReaderIntoInputStream_thenCorrect() \r\n  throws IOException {\r\n    Reader initialReader = new StringReader(\"With Java\");\r\n\r\n    char[] charBuffer = new char[8 * 1024];\r\n    StringBuilder builder = new StringBuilder();\r\n    int numCharsRead;\r\n    while ((numCharsRead = initialReader.read(charBuffer, 0, charBuffer.length)) != -1) {\r\n        builder.append(charBuffer, 0, numCharsRead);\r\n    }\r\n    InputStream targetStream = new ByteArrayInputStream(\r\n      builder.toString().getBytes(StandardCharsets.UTF_8));\r\n\r\n    initialReader.close();\r\n    targetStream.close();\r\n}\r\n```","```\r\n@Test\r\npublic void givenUsingGuava_whenConvertingReaderIntoInputStream_thenCorrect() \r\n  throws IOException {\r\n    Reader initialReader = new StringReader(\"With Guava\");\r\n\r\n    InputStream targetStream = \r\n      new ByteArrayInputStream(CharStreams.toString(initialReader)\r\n      .getBytes(Charsets.UTF_8));\r\n\r\n    initialReader.close();\r\n    targetStream.close();\r\n}\r\n```","```\r\n@Test\r\npublic void givenUsingCommonsIOReaderInputStream_whenConvertingReaderIntoInputStream() \r\n  throws IOException {\r\n    Reader initialReader = new StringReader(\"With Commons IO\");\r\n\r\n    InputStream targetStream = new ReaderInputStream(initialReader, Charsets.UTF_8);\r\n\r\n    initialReader.close();\r\n    targetStream.close();\r\n}\r\n```","```\r\n@Test\r\npublic void givenUsingCommonsIOUtils_whenConvertingReaderIntoInputStream() \r\n  throws IOException {\r\n    Reader initialReader = new StringReader(\"With Commons IO\");\r\n\r\n    InputStream targetStream = \r\n      IOUtils.toInputStream(IOUtils.toString(initialReader), Charsets.UTF_8);\r\n\r\n    initialReader.close();\r\n    targetStream.close();\r\n}\r\n```"]