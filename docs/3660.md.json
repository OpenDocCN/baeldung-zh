["```\r\nSession session = openSession();\r\nUserEntity userEntity = new UserEntity(\"John\");\r\nassertThat(session.contains(userEntity)).isFalse();\r\n```","```\r\nSession session = openSession();\r\nUserEntity userEntity = new UserEntity(\"John\");\r\nsession.persist(userEntity);\r\nassertThat(session.contains(userEntity)).isTrue();\r\n```","```\r\nsession.persist(userEntity);\r\nsession.close();\r\nassertThat(session.isOpen()).isFalse();\r\nassertThatThrownBy(() -> session.contains(userEntity));\r\n```","```\r\nUserEntity userEntity = new UserEntity(\"John\");\r\nsession.persist(userEntity);\r\n```","```\r\nUserEntity onceAgainJohn = new UserEntity(\"John\");\r\nsession.merge(onceAgainJohn);\r\n```","```\r\nUserEntity userEntity = new UserEntity(\"John\");\r\nsession.persist(userEntity);\r\nsession.close();\r\nsession.merge(userEntity);\r\n```","```\r\npublic class UserEntity {\r\n    @Id\r\n    private String name;\r\n\r\n    @ManyToOne\r\n    private UserEntity manager;\r\n}\r\n```","```\r\nUserEntity userEntity = new UserEntity(\"John\");\r\nsession.persist(userEntity);\r\nUserEntity manager = new UserEntity(\"Adam\");\r\nuserEntity.setManager(manager);\r\n```","```\r\nassertThatThrownBy(() -> {\r\n            session.saveOrUpdate(userEntity);\r\n            transaction.commit();\r\n});\r\n```","```\r\njava.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.baeldung.states.UserEntity.manager -> com.baeldung.states.UserEntity \r\n```","```\r\nUserEntity manager = new UserEntity(\"Adam\");\r\nsession.persist(manager);\r\nuserEntity.setManager(manager);\r\n```","```\r\ntransaction.commit();\r\nsession.close();\r\n\r\nSession otherSession = openSession();\r\nUserEntity savedUser = otherSession.get(UserEntity.class, \"John\");\r\nassertThat(savedUser.getManager().getName()).isEqualTo(\"Adam\");\r\n```","```\r\n@ManyToOne(cascade = CascadeType.PERSIST)\r\nprivate UserEntity manager;\r\n```","```\r\nUserEntityWithCascade userEntity = new UserEntityWithCascade(\"John\");\r\nsession.persist(userEntity);\r\nUserEntityWithCascade manager = new UserEntityWithCascade(\"Adam\");\r\n\r\nuserEntity.setManager(manager); // add transient manager to persistent user\r\nsession.saveOrUpdate(userEntity);\r\ntransaction.commit();\r\nsession.close();\r\n\r\nSession otherSession = openSession();\r\nUserEntityWithCascade savedUser = otherSession.get(UserEntityWithCascade.class, \"John\");\r\nassertThat(savedUser.getManager().getName()).isEqualTo(\"Adam\");\r\n```"]