["```\r\nWebClient\r\n  .builder()\r\n  .filters(exchangeFilterFunctions -> {\r\n      exchangeFilterFunctions.add(logRequest());\r\n      exchangeFilterFunctions.add(logResponse());\r\n  })\r\n  .build()\r\n```","```\r\nExchangeFilterFunction logRequest() {\r\n    return ExchangeFilterFunction.ofRequestProcessor(clientRequest -> {\r\n        if (log.isDebugEnabled()) {\r\n            StringBuilder sb = new StringBuilder(\"Request: \\n\");\r\n            //append clientRequest method and url\r\n            clientRequest\r\n              .headers()\r\n              .forEach((name, values) -> values.forEach(value -> /* append header key/value */));\r\n            log.debug(sb.toString());\r\n        }\r\n        return Mono.just(clientRequest);\r\n    });\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>org.eclipse.jetty</groupId>\r\n    <artifactId>jetty-reactive-httpclient</artifactId>\r\n    <version>1.1.6</version>\r\n</dependency>\r\n```","```\r\nSslContextFactory.Client sslContextFactory = new SslContextFactory.Client();\r\nHttpClient httpClient = new HttpClient(sslContextFactory) {\r\n    @Override\r\n    public Request newRequest(URI uri) {\r\n        Request request = super.newRequest(uri);\r\n        return enhance(request);\r\n    }\r\n};\r\n```","```\r\nRequest enhance(Request request) {\r\n    StringBuilder group = new StringBuilder();\r\n    request.onRequestBegin(theRequest -> {\r\n        // append request url and method to group\r\n    });\r\n    request.onRequestHeaders(theRequest -> {\r\n        for (HttpField header : theRequest.getHeaders()) {\r\n            // append request headers to group\r\n        }\r\n    });\r\n    request.onRequestContent((theRequest, content) -> {\r\n        // append content to group\r\n    });\r\n    request.onRequestSuccess(theRequest -> {\r\n        log.debug(group.toString());\r\n        group.delete(0, group.length());\r\n    });\r\n    group.append(\"\\n\");\r\n    request.onResponseBegin(theResponse -> {\r\n        // append response status to group\r\n    });\r\n    request.onResponseHeaders(theResponse -> {\r\n        for (HttpField header : theResponse.getHeaders()) {\r\n            // append response headers to group\r\n        }\r\n    });\r\n    request.onResponseContent((theResponse, content) -> {\r\n        // append content to group\r\n    });\r\n    request.onResponseSuccess(theResponse -> {\r\n        log.debug(group.toString());\r\n    });\r\n    return request;\r\n}\r\n```","```\r\nWebClient\r\n  .builder()\r\n  .clientConnector(new JettyClientHttpConnector(httpClient))\r\n  .build()\r\n```","```\r\nHttpClient httpClient = HttpClient\r\n  .create()\r\n  .wiretap(true)\r\n```","```\r\nlogging.level.reactor.netty.http.client=DEBUG\r\n```","```\r\nWebClient\r\n  .builder()\r\n  .clientConnector(new ReactorClientHttpConnector(httpClient))\r\n  .build()\r\n```","```\r\nHttpClient httpClient = HttpClient\r\n  .create()\r\n  .wiretap(\"reactor.netty.http.client.HttpClient\", \r\n    LogLevel.DEBUG, AdvancedByteBufFormat.TEXTUAL);\r\n```"]