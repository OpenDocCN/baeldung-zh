["```\r\n@Entity\r\npublic class School {\r\n\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.SEQUENCE)\r\n    private long id;\r\n\r\n    private String name;\r\n\r\n    @OneToMany(mappedBy = \"school\")\r\n    private List<Student> students;\r\n\r\n    // Getters and setters...\r\n}\r\n```","```\r\n@Entity\r\npublic class Student {\r\n\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.SEQUENCE)\r\n    private long id;\r\n\r\n    private String name;\r\n\r\n    @ManyToOne\r\n    private School school;\r\n\r\n    // Getters and setters...\r\n}\r\n```","```\r\nprivate static class ProxyDataSourceInterceptor implements MethodInterceptor {\r\n    private final DataSource dataSource;\r\n    public ProxyDataSourceInterceptor(final DataSource dataSource) {\r\n        this.dataSource = ProxyDataSourceBuilder.create(dataSource)\r\n            .name(\"Batch-Insert-Logger\")\r\n            .asJson().countQuery().logQueryToSysOut().build();\r\n    }\r\n\r\n    // Other methods...\r\n}\r\n```","```\r\n@Transactional\r\n@Test\r\npublic void whenNotConfigured_ThenSendsInsertsSeparately() {\r\n    for (int i = 0; i < 10; i++) {\r\n        School school = createSchool(i);\r\n        entityManager.persist(school);\r\n    }\r\n    entityManager.flush();\r\n}\r\n```","```\r\n\"querySize\":1, \"batchSize\":0, \"query\":[\"insert into school (name, id) values (?, ?)\"], \r\n  \"params\":[[\"School1\",\"1\"]]\r\n\"querySize\":1, \"batchSize\":0, \"query\":[\"insert into school (name, id) values (?, ?)\"], \r\n  \"params\":[[\"School2\",\"2\"]]\r\n\"querySize\":1, \"batchSize\":0, \"query\":[\"insert into school (name, id) values (?, ?)\"], \r\n  \"params\":[[\"School3\",\"3\"]]\r\n\"querySize\":1, \"batchSize\":0, \"query\":[\"insert into school (name, id) values (?, ?)\"], \r\n  \"params\":[[\"School4\",\"4\"]]\r\n\"querySize\":1, \"batchSize\":0, \"query\":[\"insert into school (name, id) values (?, ?)\"], \r\n  \"params\":[[\"School5\",\"5\"]]\r\n\"querySize\":1, \"batchSize\":0, \"query\":[\"insert into school (name, id) values (?, ?)\"], \r\n  \"params\":[[\"School6\",\"6\"]]\r\n\"querySize\":1, \"batchSize\":0, \"query\":[\"insert into school (name, id) values (?, ?)\"], \r\n  \"params\":[[\"School7\",\"7\"]]\r\n\"querySize\":1, \"batchSize\":0, \"query\":[\"insert into school (name, id) values (?, ?)\"], \r\n  \"params\":[[\"School8\",\"8\"]]\r\n\"querySize\":1, \"batchSize\":0, \"query\":[\"insert into school (name, id) values (?, ?)\"], \r\n  \"params\":[[\"School9\",\"9\"]]\r\n\"querySize\":1, \"batchSize\":0, \"query\":[\"insert into school (name, id) values (?, ?)\"], \r\n  \"params\":[[\"School10\",\"10\"]]\r\n```","```\r\npublic Properties hibernateProperties() {\r\n    Properties properties = new Properties();\r\n    properties.put(\"hibernate.jdbc.batch_size\", \"5\");\r\n\r\n    // Other properties...\r\n    return properties;\r\n}\r\n```","```\r\nspring.jpa.properties.hibernate.jdbc.batch_size=5\r\n```","```\r\n@Transactional\r\n@Test\r\npublic void whenInsertingSingleTypeOfEntity_thenCreatesSingleBatch() {\r\n    for (int i = 0; i < 10; i++) {\r\n        School school = createSchool(i);\r\n        entityManager.persist(school);\r\n    }\r\n}\r\n```","```\r\n\"batch\":true, \"querySize\":1, \"batchSize\":5, \"query\":[\"insert into school (name, id) values (?, ?)\"], \r\n  \"params\":[[\"School1\",\"1\"],[\"School2\",\"2\"],[\"School3\",\"3\"],[\"School4\",\"4\"],[\"School5\",\"5\"]]\r\n\"batch\":true, \"querySize\":1, \"batchSize\":5, \"query\":[\"insert into school (name, id) values (?, ?)\"], \r\n  \"params\":[[\"School6\",\"6\"],[\"School7\",\"7\"],[\"School8\",\"8\"],[\"School9\",\"9\"],[\"School10\",\"10\"]]\r\n```","```\r\n@Transactional\r\n@Test\r\npublic void whenFlushingAfterBatch_ThenClearsMemory() {\r\n    for (int i = 0; i < 10; i++) {\r\n        if (i > 0 && i % BATCH_SIZE == 0) {\r\n            entityManager.flush();\r\n            entityManager.clear();\r\n        }\r\n        School school = createSchool(i);\r\n        entityManager.persist(school);\r\n    }\r\n}\r\n```","```\r\n@Transactional\r\n@Test\r\npublic void whenThereAreMultipleEntities_ThenCreatesNewBatch() {\r\n    for (int i = 0; i < 10; i++) {\r\n        if (i > 0 && i % BATCH_SIZE == 0) {\r\n            entityManager.flush();\r\n            entityManager.clear();\r\n        }\r\n        School school = createSchool(i);\r\n        entityManager.persist(school);\r\n        Student firstStudent = createStudent(school);\r\n        Student secondStudent = createStudent(school);\r\n        entityManager.persist(firstStudent);\r\n        entityManager.persist(secondStudent);\r\n    }\r\n}\r\n```","```\r\n\"batch\":true, \"querySize\":1, \"batchSize\":1, \"query\":[\"insert into school (name, id) values (?, ?)\"], \r\n  \"params\":[[\"School1\",\"1\"]]\r\n\"batch\":true, \"querySize\":1, \"batchSize\":2, \"query\":[\"insert into student (name, school_id, id) \r\n  values (?, ?, ?)\"], \"params\":[[\"Student-School1\",\"1\",\"2\"],[\"Student-School1\",\"1\",\"3\"]]\r\n\"batch\":true, \"querySize\":1, \"batchSize\":1, \"query\":[\"insert into school (name, id) values (?, ?)\"], \r\n  \"params\":[[\"School2\",\"4\"]]\r\n\"batch\":true, \"querySize\":1, \"batchSize\":2, \"query\":[\"insert into student (name, school_id, id) \r\n  values (?, ?, ?)\"], \"params\":[[\"Student-School2\",\"4\",\"5\"],[\"Student-School2\",\"4\",\"6\"]]\r\n\"batch\":true, \"querySize\":1, \"batchSize\":1, \"query\":[\"insert into school (name, id) values (?, ?)\"], \r\n  \"params\":[[\"School3\",\"7\"]]\r\n\"batch\":true, \"querySize\":1, \"batchSize\":2, \"query\":[\"insert into student (name, school_id, id) \r\n  values (?, ?, ?)\"], \"params\":[[\"Student-School3\",\"7\",\"8\"],[\"Student-School3\",\"7\",\"9\"]]\r\nOther log lines...\r\n```","```\r\npublic Properties hibernateProperties() {\r\n    Properties properties = new Properties();\r\n    properties.put(\"hibernate.order_inserts\", \"true\");\r\n\r\n    // Other properties...\r\n    return properties;\r\n}\r\n```","```\r\nspring.jpa.properties.hibernate.order_inserts=true\r\n```","```\r\n\"batch\":true, \"querySize\":1, \"batchSize\":5, \"query\":[\"insert into school (name, id) values (?, ?)\"], \r\n  \"params\":[[\"School6\",\"16\"],[\"School7\",\"19\"],[\"School8\",\"22\"],[\"School9\",\"25\"],[\"School10\",\"28\"]]\r\n\"batch\":true, \"querySize\":1, \"batchSize\":5, \"query\":[\"insert into student (name, school_id, id) \r\n  values (?, ?, ?)\"], \"params\":[[\"Student-School6\",\"16\",\"17\"],[\"Student-School6\",\"16\",\"18\"],\r\n  [\"Student-School7\",\"19\",\"20\"],[\"Student-School7\",\"19\",\"21\"],[\"Student-School8\",\"22\",\"23\"]]\r\n\"batch\":true, \"querySize\":1, \"batchSize\":5, \"query\":[\"insert into student (name, school_id, id) \r\n  values (?, ?, ?)\"], \"params\":[[\"Student-School8\",\"22\",\"24\"],[\"Student-School9\",\"25\",\"26\"],\r\n  [\"Student-School9\",\"25\",\"27\"],[\"Student-School10\",\"28\",\"29\"],[\"Student-School10\",\"28\",\"30\"]]\r\n```","```\r\npublic Properties hibernateProperties() {\r\n    Properties properties = new Properties();\r\n    properties.put(\"hibernate.order_updates\", \"true\");\r\n    properties.put(\"hibernate.batch_versioned_data\", \"true\");\r\n\r\n    // Other properties...\r\n    return properties;\r\n}\r\n```","```\r\nspring.jpa.properties.hibernate.order_updates=true\r\nspring.jpa.properties.hibernate.batch_versioned_data=true\r\n```","```\r\n@Transactional\r\n@Test\r\npublic void whenUpdatingEntities_thenCreatesBatch() {\r\n    TypedQuery<School> schoolQuery = \r\n      entityManager.createQuery(\"SELECT s from School s\", School.class);\r\n    List<School> allSchools = schoolQuery.getResultList();\r\n    for (School school : allSchools) {\r\n        school.setName(\"Updated_\" + school.getName());\r\n    }\r\n}\r\n```","```\r\n\"batch\":true, \"querySize\":1, \"batchSize\":5, \"query\":[\"update school set name=? where id=?\"], \r\n  \"params\":[[\"Updated_School1\",\"1\"],[\"Updated_School2\",\"2\"],[\"Updated_School3\",\"3\"],\r\n  [\"Updated_School4\",\"4\"],[\"Updated_School5\",\"5\"]]\r\n\"batch\":true, \"querySize\":1, \"batchSize\":5, \"query\":[\"update school set name=? where id=?\"], \r\n  \"params\":[[\"Updated_School6\",\"6\"],[\"Updated_School7\",\"7\"],[\"Updated_School8\",\"8\"],\r\n  [\"Updated_School9\",\"9\"],[\"Updated_School10\",\"10\"]]\r\n```","```\r\n@Id\r\n@GeneratedValue(strategy = GenerationType.SEQUENCE)\r\nprivate long id;\r\n```"]