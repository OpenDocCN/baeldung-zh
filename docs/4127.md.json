["```\r\nEthereum ethereum = EthereumFactory.createEthereum();\r\n```","```\r\nString ip = \"http://localhost\";\r\nint port = 8345;\r\nString nodeId = \"a4de274d3a159e10c2c9a68c326511236381b84c9ec...\";\r\n\r\nethereum.connect(ip, port, nodeId);\r\n```","```\r\npublic class EthBean {\r\n    private Ethereum ethereum;\r\n\r\n    public void start() {\r\n        ethereum = EthereumFactory.createEthereum();\r\n        ethereum.addListener(new EthListener(ethereum));\r\n    }\r\n\r\n    public Block getBestBlock() {\r\n        return ethereum.getBlockchain().getBestBlock();\r\n    }\r\n\r\n    public BigInteger getTotalDifficulty() {\r\n        return ethereum.getBlockchain().getTotalDifficulty();\r\n    }\r\n}\r\n```","```\r\nEthBean eBean = new EthBean();\r\nExecutors.newSingleThreadExecutor().submit(eBean::start); \r\n```","```\r\npublic class EthListener extends EthereumListenerAdapter {\r\n\r\n    private void out(String t) {\r\n        l.info(t);\r\n    }\r\n\r\n    //...\r\n\r\n    @Override\r\n    public void onBlock(Block block, List receipts) {\r\n        if (syncDone) {\r\n            out(\"Net hash rate: \" + calcNetHashRate(block));\r\n            out(\"Block difficulty: \" + block.getDifficultyBI().toString());\r\n            out(\"Block transactions: \" + block.getTransactionsList().toString());\r\n            out(\"Best block (last block): \" + ethereum\r\n              .getBlockchain()\r\n              .getBestBlock().toString());\r\n            out(\"Total difficulty: \" + ethereum\r\n              .getBlockchain()\r\n              .getTotalDifficulty().toString());\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onSyncDone(SyncState state) {\r\n        out(\"onSyncDone \" + state);\r\n        if (!syncDone) {\r\n            out(\" ** SYNC DONE ** \");\r\n            syncDone = true;\r\n        }\r\n    }\r\n} \r\n```","```\r\nethereum.submitTransaction(new Transaction(new byte[]));\r\n```","```\r\nethereum.getBlockchain(); \r\n```","```\r\norg.ethereum.crypto.ECKey key = new ECKey(); \r\n```","```\r\norg.ethereum.crypto.ECKey key = ECKey.fromPivate(privKey);\r\n```","```\r\norg.ethereum.core.Account account = new Account();\r\naccount.init(key);\r\n```"]