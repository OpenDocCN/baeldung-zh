["```\r\n$ curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 &&\r\n  chmod +x minikube\r\n```","```\r\n$ sudo mkdir -p /usr/local/bin/\r\n$ sudo install minikube /usr/local/bin/\r\n```","```\r\n$ docker version\r\n```","```\r\n$ minikube start --driver=docker\r\n```","```\r\nDone! kubectl is now configured to use \"minikube\"\r\nFor best results, install kubectl: https://kubernetes.io/docs/tasks/tools/install-kubectl/\r\n```","```\r\nm01\r\nhost: Running\r\nkubelet: Running\r\napiserver: Running\r\nkubeconfig: Configured\r\n```","```\r\n$ curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s \\ \r\n  https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl &&\r\n  chmod +x ./kubectl\r\n```","```\r\n$ sudo mv ./kubectl /usr/local/bin/kubectl\r\n```","```\r\n$ kubectl version\r\n```","```\r\n$ minikube ssh\r\n$ mkdir kaniko && cd kaniko\r\n```","```\r\n$ echo 'FROM ubuntu' >> dockerfile\r\n$ echo 'ENTRYPOINT [\"/bin/bash\", \"-c\", \"echo hello\"]' >> dockerfile\r\n```","```\r\nFROM ubuntu\r\nENTRYPOINT [\"/bin/bash\", \"-c\", \"echo hello\"]\r\n```","```\r\n/home/docker/kaniko\r\n```","```\r\n$ exit\r\n```","```\r\napiVersion: v1\r\nkind: PersistentVolume\r\nmetadata:\r\n  name: dockerfile\r\n  labels:\r\n    type: local\r\nspec:\r\n  capacity:\r\n    storage: 10Gi\r\n  accessModes:\r\n    - ReadWriteOnce\r\n  storageClassName: local-storage\r\n  hostPath:\r\n    path: /home/docker/kaniko # replace this with the output of pwd command from before, if it is different\r\n```","```\r\nkind: PersistentVolumeClaim\r\napiVersion: v1\r\nmetadata:\r\n  name: dockerfile-claim\r\nspec:\r\n  accessModes:\r\n    - ReadWriteOnce\r\n  resources:\r\n    requests:\r\n      storage: 8Gi\r\n  storageClassName: local-storage\r\n```","```\r\napiVersion: v1\r\nkind: Pod\r\nmetadata:\r\n  name: kaniko\r\nspec:\r\n  containers:\r\n  - name: kaniko\r\n    image: gcr.io/kaniko-project/executor:latest\r\n    args: [\"--dockerfile=/workspace/dockerfile\",\r\n            \"--context=dir://workspace\",\r\n            \"--no-push\"] \r\n    volumeMounts:\r\n      - name: dockerfile-storage\r\n        mountPath: /workspace\r\n  restartPolicy: Never\r\n  volumes:\r\n    - name: dockerfile-storage\r\n      persistentVolumeClaim:\r\n        claimName: dockerfile-claim\r\n```","```\r\n$ kubectl create -f volume.yaml\r\n$ kubectl create -f volume-claim.yaml\r\n$ kubectl create -f pod.yaml\r\n```","```\r\nNAME     READY   STATUS      RESTARTS   AGE\r\nkaniko    0/1   Completed       0        3m\r\n```","```\r\nINFO[0000] Resolved base name ubuntu to ubuntu          \r\nINFO[0000] Resolved base name ubuntu to ubuntu          \r\nINFO[0000] Retrieving image manifest ubuntu             \r\nINFO[0003] Retrieving image manifest ubuntu             \r\nINFO[0006] Built cross stage deps: map[]                \r\nINFO[0006] Retrieving image manifest ubuntu             \r\nINFO[0008] Retrieving image manifest ubuntu             \r\nINFO[0010] Skipping unpacking as no commands require it. \r\nINFO[0010] Taking snapshot of full filesystem...        \r\nINFO[0013] Resolving paths                              \r\nINFO[0013] ENTRYPOINT [\"/bin/bash\", \"-c\", \"echo hello\"] \r\nINFO[0013] Skipping push to container registry due to --no-push flag\r\n```"]