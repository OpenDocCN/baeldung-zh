["```\r\n<dependency>\r\n    <groupId>org.javalite</groupId>\r\n    <artifactId>activeweb</artifactId>\r\n    <version>1.15</version>\r\n</dependency> \r\n```","```\r\n<dependency>\r\n    <groupId>org.javalite</groupId>\r\n    <artifactId>activeweb-testing</artifactId>\r\n    <version>1.15</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n```","```\r\n...\r\n<filter>\r\n    <filter-name>dispatcher</filter-name>\r\n    <filter-class>org.javalite.activeweb.RequestDispatcher</filter-class>\r\n...\r\n</filter>\r\n...\r\n```","```\r\n...\r\n<init-param>\r\n    <param-name>root_controller</param-name>\r\n    <param-value>home</param-value>\r\n</init-param>\r\n...\r\n```","```\r\npublic class ArticleController extends AppController {\r\n    // ...\r\n}\r\n```","```\r\nhttp://host:port/contextroot/article\r\n```","```\r\npublic class ArticleController extends AppController {\r\n    // ...\r\n    public void index() {\r\n        render(\"articles\");    \r\n    }\r\n    // ...\r\n}\r\n```","```\r\npublic class ArticleController extends AppController {\r\n    // ...\r\n\r\n    public void search() {\r\n        render(\"search\");\r\n    }\r\n}\r\n```","```\r\nhttp://host:port/contextroot/article/search\r\n```","```\r\nhttp://host:port/contextroot/article\r\n```","```\r\nhttp://host:port/contextroot/baeldung/article\r\n```","```\r\nhttp://host:port/contextroot/published_article\r\n```","```\r\npublic void search() {\r\n\r\n    String keyword = param(\"key\");  \r\n    view(\"search\",articleService.search(keyword));\r\n\r\n}\r\n```","```\r\npublic void search() {\r\n\r\n    Map<String, String[]> criterion = params();\r\n    // ...\r\n}\r\n```","```\r\npublic void index() {\r\n    render(\"articles\");    \r\n}\r\n```","```\r\nrender(\"/common/error\");\r\n```","```\r\nview(\"articles\", articleService.getArticles());\r\n```","```\r\nassign(\"article\", articleService.search(keyword));\r\n```","```\r\n<@content for=\"title\">Articles</@content>\r\n...\r\n<#list articles as article>\r\n    <tr>\r\n        <td>${article.title}</td>\r\n        <td>${article.author}</td>\r\n        <td>${article.words}</td>\r\n        <td>${article.date}</td>\r\n    </tr>\r\n</#list>\r\n</table>\r\n```","```\r\npublic interface ArticleService {\r\n\r\n    List<Article> getArticles();   \r\n    Article search(String keyword);\r\n\r\n}\r\n```","```\r\npublic class ArticleServiceImpl implements ArticleService {\r\n\r\n    public List<Article> getArticles() {\r\n        return fetchArticles();\r\n    }\r\n\r\n    public Article search(String keyword) {\r\n        Article ar = new Article();\r\n        ar.set(\"title\", \"Article with \"+keyword);\r\n        ar.set(\"author\", \"baeldung\");\r\n        ar.set(\"words\", \"1250\");\r\n        ar.setDate(\"date\", Instant.now());\r\n        return ar;\r\n    }\r\n}\r\n```","```\r\npublic class ArticleServiceModule extends AbstractModule {\r\n\r\n    @Override\r\n    protected void configure() {\r\n        bind(ArticleService.class).to(ArticleServiceImpl.class)\r\n          .asEagerSingleton();\r\n    }\r\n}\r\n```","```\r\npublic class AppBootstrap extends Bootstrap {\r\n\r\n    public void init(AppContext context) {\r\n    }\r\n\r\n    public Injector getInjector() {\r\n        return Guice.createInjector(new ArticleServiceModule());\r\n    }\r\n}\r\n```","```\r\n@Inject\r\nprivate ArticleService articleService;\r\n```","```\r\npublic class ArticleControllerSpec extends ControllerSpec {\r\n    // ...\r\n}\r\n```","```\r\n@Test\r\npublic void whenReturnedArticlesThenCorrect() {\r\n    request().get(\"index\");\r\n    a(responseContent())\r\n      .shouldContain(\"<td>Introduction to Mule</td>\");\r\n}\r\n```","```\r\n@Test\r\npublic void givenKeywordWhenFoundArticleThenCorrect() {\r\n    request().param(\"key\", \"Java\").get(\"search\");\r\n    a(responseContent())\r\n      .shouldContain(\"<td>Article with Java</td>\");\r\n}\r\n```","```\r\n...\r\n<plugin>\r\n    <groupId>org.eclipse.jetty</groupId>\r\n    <artifactId>jetty-maven-plugin</artifactId>\r\n    <version>9.4.8.v20171121</version>\r\n    <configuration>\r\n        <reload>manual</reload>\r\n        <scanIntervalSeconds>10000</scanIntervalSeconds>\r\n    </configuration>\r\n</plugin>\r\n...\r\n```","```\r\nmvn jetty:run\r\n```"]