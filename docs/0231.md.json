["```\r\nboolean isValidURL(String url) throws MalformedURLException, URISyntaxException {\r\n    try {\r\n        new URL(url).toURI();\r\n        return true;\r\n    } catch (MalformedURLException e) {\r\n        return false;\r\n    } catch (URISyntaxException e) {\r\n        return false;\r\n    }\r\n}\r\n```","```\r\nassertTrue(isValidURL(\"http://baeldung.com/\"));\r\nassertFalse(isValidURL(\"https://www.baeldung.com/ java-%%$^&& iuyi\"));\r\n```","```\r\nboolean isValidUrl(String url) throws MalformedURLException {\r\n    try {\r\n        // it will check only for scheme and not null input \r\n        new URL(url);\r\n        return true;\r\n    } catch (MalformedURLException e) {\r\n        return false;\r\n    }\r\n} \r\n```","```\r\nassertTrue(isValidUrl(\"http://baeldung.com/\"));\r\nassertTrue(isValidUrl(\"https://www.baeldung.com/ java-%%$^&& iuyi\")); \r\nassertFalse(isValidUrl(\"\"));\r\n```","```\r\n<dependency>\r\n    <groupId>commons-validator</groupId>\r\n    <artifactId>commons-validator</artifactId>\r\n    <version>1.7</version>\r\n</dependency>\r\n```","```\r\nboolean isValidURL(String url) throws MalformedURLException {\r\n    UrlValidator validator = new UrlValidator();\r\n    return validator.isValid(url);\r\n}\r\n```","```\r\nassertFalse(isValidURL(\"https://www.baeldung.com/ java-%%$^&& iuyi\"));\r\nassertTrue(isValidURL(\"http://baeldung.com/\"));\r\n```"]