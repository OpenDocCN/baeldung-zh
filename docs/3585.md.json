["```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId> \r\n    <artifactId>spring-boot-starter-thymeleaf</artifactId> \r\n    <version>2.2.7.RELEASE</version>\r\n</dependency>\r\n```","```\r\n<!DOCTYPE html>\r\n<html \r\n  xmlns:th=\"http://www.thymeleaf.org\">\r\n    <head>\r\n        <meta charset=\"UTF-8\">\r\n        <title>Currency table</title>\r\n    </head>\r\n</html>\r\n```","```\r\n@Controller\r\npublic class CurrenciesController {\r\n    @GetMapping(value = \"/currency\")\r\n    public String exchange(\r\n      @RequestParam(value = \"amount\") String amount, Locale locale) {\r\n        return \"currencies/currencies\";\r\n    }\r\n}\r\n```","```\r\n<p th:text=\"${#numbers.formatCurrency(param.amount)}\"></p>\r\n```","```\r\n@Test\r\npublic void whenCallCurrencyWithUSALocale_ThenReturnProperCurrency() throws Exception {\r\n    mockMvc.perform(MockMvcRequestBuilders.get(\"/currency\")\r\n      .header(\"Accept-Language\", \"en-US\")\r\n      .param(\"amount\", \"10032.5\"))\r\n      .andExpect(status().isOk())\r\n      .andExpect(content().string(containsString(\"$10,032.50\")));\r\n}\r\n```","```\r\n@GetMapping(value = \"/currency\")\r\npublic String exchange(\r\n  @RequestParam(value = \"amount\") String amount,\r\n  @RequestParam(value = \"amountList\") List amountList, Locale locale) {\r\n    return \"currencies/currencies\";\r\n}\r\n```","```\r\n<p th:text=\"${#numbers.listFormatCurrency(param.amountList)}\"></p> \r\n```","```\r\n@Test\r\npublic void whenCallCurrencyWithUkLocaleWithArrays_ThenReturnLocaleCurrencies() throws Exception {\r\n    mockMvc.perform(MockMvcRequestBuilders.get(\"/currency\")\r\n      .header(\"Accept-Language\", \"en-GB\")\r\n      .param(\"amountList\", \"10\", \"20\", \"30\"))\r\n      .andExpect(status().isOk())\r\n      .andExpect(content().string(containsString(\"£10.00, £20.00, £30.00\")));\r\n}\r\n```","```\r\n<p th:text=\"${#strings.replace(#numbers.formatCurrency(param.amount), '.00', '')}\"></p>\r\n```","```\r\n@Test\r\npublic void whenCallCurrencyWithUSALocaleWithoutDecimal_ThenReturnCurrencyWithoutTrailingZeros()\r\n  throws Exception {\r\n    mockMvc.perform(MockMvcRequestBuilders.get(\"/currency\")\r\n      .header(\"Accept-Language\", \"en-US\")\r\n      .param(\"amount\", \"10032\"))\r\n      .andExpect(status().isOk())\r\n      .andExpect(content().string(containsString(\"$10,032\")));\r\n}\r\n```","```\r\n<p th:text=\"${#numbers.formatDecimal(param.amount, 1, 2, 'COMMA')}\"></p>\r\n```","```\r\n@Test\r\npublic void whenCallCurrencyWithUSALocale_ThenReturnReplacedDecimalPoint() throws Exception {\r\n    mockMvc.perform(MockMvcRequestBuilders.get(\"/currency\")\r\n      .header(\"Accept-Language\", \"en-US\")\r\n      .param(\"amount\", \"1.5\"))\r\n      .andExpect(status().isOk())\r\n      .andExpect(content().string(containsString(\"1,5\")));\r\n}\r\n```"]