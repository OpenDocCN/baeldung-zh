["```\r\n<dependency>\r\n    <groupId>org.springframework.data</groupId>\r\n    <artifactId>spring-data-solr</artifactId>\r\n    <version>4.3.14</version>\r\n</dependency>\r\n```","```\r\n@SolrDocument(solrCoreName = \"product\")\r\npublic class Product {\r\n\r\n    @Id\r\n    @Indexed(name = \"id\", type = \"string\")\r\n    private String id;\r\n\r\n    @Indexed(name = \"name\", type = \"string\")\r\n    private String name;\r\n\r\n}\r\n```","```\r\npublic interface ProductRepository extends SolrCrudRepository<Product, String> {\r\n\r\n    public List<Product> findByName(String name);\r\n\r\n    @Query(\"id:*?0* OR name:*?0*\")\r\n    public Page<Product> findByCustomQuery(String searchTerm, Pageable pageable);\r\n\r\n    @Query(name = \"Product.findByNamedQuery\")\r\n    public Page<Product> findByNamedQuery(String searchTerm, Pageable pageable);\r\n\r\n}\r\n```","```\r\nProduct.findByNamedQuery=id:*?0* OR name:*?0*\r\n```","```\r\n@Configuration\r\n@EnableSolrRepositories(\r\n  basePackages = \"com.baeldung.spring.data.solr.repository\",\r\n  namedQueriesLocation = \"classpath:solr-named-queries.properties\")\r\n@ComponentScan\r\npublic class SolrConfig {\r\n\r\n    @Bean\r\n    public SolrClient solrClient() {\r\n        return new HttpSolrClient.Builder(\"http://localhost:8983/solr\").build();\r\n    }\r\n\r\n    @Bean\r\n    public SolrTemplate solrTemplate(SolrClient client) throws Exception {\r\n        return new SolrTemplate(client);\r\n    }\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-data-solr</artifactId>\r\n    <version>2.4.12</version>\r\n</dependency>\r\n```","```\r\nspring.data.solr.host=http://localhost:8983/solrÂ \r\n```","```\r\nProduct phone = new Product();\r\nphone.setId(\"P0001\");\r\nphone.setName(\"Phone\");\r\nproductRepository.save(phone);\r\n```","```\r\nProduct retrievedProduct = productRepository.findById(\"P0001\").get();\r\nretrievedProduct.setName(\"Smart Phone\");\r\nproductRepository.save(retrievedProduct);\r\n```","```\r\nproductRepository.delete(retrievedProduct);\r\n```","```\r\npublic List<Product> findByName(String name);\r\n```","```\r\nList<Product> retrievedProducts = productRepository.findByName(\"Phone\");\r\n```","```\r\n@Query(\"id:*?0* OR name:*?0*\")\r\npublic Page<Product> findByCustomQuery(String searchTerm, Pageable pageable);\r\n```","```\r\nPage<Product> result \r\n  = productRepository.findByCustomQuery(\"Phone\", PageRequest.of(0, 10));\r\n```","```\r\n@Query(name = \"Product.findByNamedQuery\")\r\npublic Page<Product> findByNamedQuery(String searchTerm, Pageable pageable);\r\n```","```\r\nPage<Product> result \r\n  = productRepository.findByNamedQuery(\"one\", PageRequest.of(0, 10));\r\n```"]