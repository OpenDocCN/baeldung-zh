["```\r\n<dependency>\r\n    <groupId>io.reactivex.rxjava2</groupId>\r\n    <artifactId>rxjava</artifactId>\r\n    <version>2.2.2</version>\r\n</dependency>\r\n```","```\r\nCompletable\r\n  .complete()\r\n  .subscribe(new DisposableCompletableObserver() {\r\n    @Override\r\n    public void onComplete() {\r\n        System.out.println(\"Completed!\");\r\n    }\r\n\r\n    @Override\r\n    public void onError(Throwable e) {\r\n        e.printStackTrace();\r\n    }\r\n});\r\n```","```\r\nCompletable.fromRunnable(() -> {});\r\n```","```\r\nFlowable<String> flowable = Flowable\r\n  .just(\"request received\", \"user logged in\");\r\nCompletable flowableCompletable = Completable\r\n  .fromPublisher(flowable);\r\nCompletable singleCompletable = Single.just(1)\r\n  .ignoreElement();\r\n```","```\r\nCompletable first = Completable\r\n  .fromSingle(Single.just(1));\r\nCompletable second = Completable\r\n  .fromRunnable(() -> {});\r\nThrowable throwable = new RuntimeException();\r\nCompletable error = Single.error(throwable)\r\n  .ignoreElement();\r\n```","```\r\nfirst\r\n  .andThen(second)\r\n  .test()\r\n  .assertComplete();\r\n```","```\r\nfirst\r\n  .andThen(second)\r\n  .andThen(error)\r\n  .test()\r\n  .assertError(throwable);\r\n```","```\r\n...\r\n  .andThen(Completable.never())\r\n  .test()\r\n  .assertNotComplete();\r\n```","```\r\nCompletable.mergeArray(first, second)\r\n  .test()\r\n  .assertComplete();\r\n\r\nCompletable.mergeArray(first, second, error)\r\n  .test()\r\n  .assertError(throwable);\r\n```","```\r\nCompletable allElementsCompletable = Flowable\r\n  .just(\"request received\", \"user logged in\")\r\n  .flatMapCompletable(message -> Completable\r\n      .fromRunnable(() -> System.out.println(message))\r\n  );\r\nallElementsCompletable\r\n  .test()\r\n  .assertComplete();\r\n```","```\r\nCompletable.ambArray(first, Completable.never(), second)\r\n  .test()\r\n  .assertComplete();\r\n```","```\r\nCompletable.ambArray(error, first, second)\r\n  .test()\r\n  .assertError(throwable);\r\n```"]