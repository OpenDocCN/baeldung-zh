["```\r\nint x = 1;\r\nString s = \"literal_string\";\r\n```","```\r\nint x = 1;\r\n```","```\r\nint x = 05;\r\n```","```\r\nint x = 0x12ef;\r\n```","```\r\nint x = 0b1101;\r\n```","```\r\ndouble d = 123.456;\r\nfloat f = 123.456;\r\nfloat f2 = 123.456d;\r\nfloat f3 = 123.456f;\r\n```","```\r\nchar c = 'a';\r\nchar c2 = '\\n';\r\n```","```\r\nchar c = 65;\r\n```","```\r\nchar c= '\\u0041';\r\n```","```\r\nString s = \"string_literal\";\r\n```","```\r\nString multiLineText = \"When we want some text that is on more than one line,\\n\"\r\n+ \"then we can use expressions to add text to a new line.\\n\";\r\n```","```\r\nstatic void literals(int i, long l, double d, float f, char c, String s) {\r\n    // do something\r\n}\r\n//Call literals method\r\nliterals(1, 123L, 1.0D, 1.0F, 'a', \"a\");\r\n```","```\r\nstatic void shortAndByteLiterals(short s, byte b) {\r\n    // do something\r\n}\r\n//Call the method\r\nshortAndByteLiterals(1, 0); // won't compile\r\n```","```\r\nshort s = 1;\r\nbyte b = 1;\r\nshortAndByteLiterals(s, b);\r\n```","```\r\nshortAndByteLiterals((short) 1, (byte) 0);\r\n```"]