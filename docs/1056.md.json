["```\r\n@RestController\r\n@RequestMapping(\"/stock\")\r\npublic class QueryController {\r\n\r\n    @GetMapping(\"/{code}\")\r\n    public String getStockPrice(@PathVariable String code){\r\n        return \"BTC\".equalsIgnoreCase(code) ? \"10000\" : \"0\";\r\n    }\r\n}\r\n```","```\r\nAPIObject stockAPI = new APIObject(\r\n  \"stock-api\", \"stock.api\", \"http://localhost:8080\", \"/\");\r\nHttpEntity<APIObject> apiEntity = new HttpEntity<>(stockAPI);\r\nResponseEntity<String> addAPIResp = restTemplate.postForEntity(\r\n  \"http://localhost:8001/apis\", apiEntity, String.class);\r\n\r\nassertEquals(HttpStatus.CREATED, addAPIResp.getStatusCode());\r\n```","```\r\n{\r\n    \"name\": \"stock-api\",\r\n    \"hosts\": \"stock.api\",\r\n    \"upstream_url\": \"http://localhost:8080\",\r\n    \"uris\": \"/\"\r\n}\r\n```","```\r\nrestTemplate.delete(\"http://localhost:8001/apis/stock-api\");\r\n```","```\r\nString apiListResp = restTemplate.getForObject(\r\n  \"http://localhost:8001/apis/\", String.class);\r\n\r\nassertTrue(apiListResp.contains(\"stock-api\"));\r\n\r\nHttpHeaders headers = new HttpHeaders();\r\nheaders.set(\"Host\", \"stock.api\");\r\nRequestEntity<String> requestEntity = new RequestEntity<>(\r\n  headers, HttpMethod.GET, new URI(\"http://localhost:8000/stock/btc\"));\r\nResponseEntity<String> stockPriceResp \r\n  = restTemplate.exchange(requestEntity, String.class);\r\n\r\nassertEquals(\"10000\", stockPriceResp.getBody());\r\n```","```\r\nConsumerObject consumer = new ConsumerObject(\"eugenp\");\r\nHttpEntity<ConsumerObject> addConsumerEntity = new HttpEntity<>(consumer);\r\nResponseEntity<String> addConsumerResp = restTemplate.postForEntity(\r\n  \"http://localhost:8001/consumers/\", addConsumerEntity, String.class);\r\n\r\nassertEquals(HttpStatus.CREATED, addConsumerResp.getStatusCode());\r\n```","```\r\n{\r\n    \"username\": \"eugenp\"\r\n}\r\n```","```\r\nPluginObject authPlugin = new PluginObject(\"key-auth\");\r\nResponseEntity<String> enableAuthResp = restTemplate.postForEntity(\r\n  \"http://localhost:8001/apis/stock-api/plugins\", \r\n  new HttpEntity<>(authPlugin), \r\n  String.class);\r\nassertEquals(HttpStatus.CREATED, enableAuthResp.getStatusCode());\r\n```","```\r\nHttpHeaders headers = new HttpHeaders();\r\nheaders.set(\"Host\", \"stock.api\");\r\nRequestEntity<String> requestEntity = new RequestEntity<>(\r\n  headers, HttpMethod.GET, new URI(\"http://localhost:8000/stock/btc\"));\r\nResponseEntity<String> stockPriceResp = restTemplate\r\n  .exchange(requestEntity, String.class);\r\n\r\nassertEquals(HttpStatus.UNAUTHORIZED, stockPriceResp.getStatusCode());\r\n```","```\r\nString consumerKey = \"eugenp.pass\";\r\nKeyAuthObject keyAuth = new KeyAuthObject(consumerKey);\r\nResponseEntity<String> keyAuthResp = restTemplate.postForEntity(\r\n  \"http://localhost:8001/consumers/eugenp/key-auth\", \r\n  new HttpEntity<>(keyAuth), \r\n  String.class); \r\nassertTrue(HttpStatus.CREATED == keyAuthResp.getStatusCode());\r\n```","```\r\nHttpHeaders headers = new HttpHeaders();\r\nheaders.set(\"Host\", \"stock.api\");\r\nheaders.set(\"apikey\", consumerKey);\r\nRequestEntity<String> requestEntity = new RequestEntity<>(\r\n  headers, \r\n  HttpMethod.GET, \r\n  new URI(\"http://localhost:8000/stock/btc\"));\r\nResponseEntity<String> stockPriceResp = restTemplate\r\n  .exchange(requestEntity, String.class);\r\n\r\nassertEquals(\"10000\", stockPriceResp.getBody());\r\n```","```\r\nUpstreamObject upstream = new UpstreamObject(\"stock.api.service\");\r\nResponseEntity<String> addUpstreamResp = restTemplate.postForEntity(\r\n  \"http://localhost:8001/upstreams\", \r\n  new HttpEntity<>(upstream), \r\n  String.class);\r\n\r\nassertEquals(HttpStatus.CREATED, addUpstreamResp.getStatusCode());\r\n```","```\r\nTargetObject testTarget = new TargetObject(\"localhost:8080\", 10);\r\nResponseEntity<String> addTargetResp = restTemplate.postForEntity(\r\n  \"http://localhost:8001/upstreams/stock.api.service/targets\",\r\n  new HttpEntity<>(testTarget), \r\n  String.class);\r\n\r\nassertEquals(HttpStatus.CREATED, ddTargetResp.getStatusCode());\r\n\r\nTargetObject releaseTarget = new TargetObject(\"localhost:9090\",40);\r\naddTargetResp = restTemplate.postForEntity(\r\n  \"http://localhost:8001/upstreams/stock.api.service/targets\",\r\n  new HttpEntity<>(releaseTarget), \r\n  String.class);\r\n\r\nassertEquals(HttpStatus.CREATED, addTargetResp.getStatusCode());\r\n```","```\r\nAPIObject stockAPI = new APIObject(\r\n  \"balanced-stock-api\", \r\n  \"balanced.stock.api\", \r\n  \"http://stock.api.service\", \r\n  \"/\");\r\nHttpEntity<APIObject> apiEntity = new HttpEntity<>(stockAPI);\r\nResponseEntity<String> addAPIResp = restTemplate.postForEntity(\r\n  \"http://localhost:8001/apis\", apiEntity, String.class);\r\n\r\nassertEquals(HttpStatus.CREATED, addAPIResp.getStatusCode());\r\n\r\nHttpHeaders headers = new HttpHeaders();\r\nheaders.set(\"Host\", \"balanced.stock.api\");\r\nfor(int i = 0; i < 1000; i++) {\r\n    RequestEntity<String> requestEntity = new RequestEntity<>(\r\n      headers, HttpMethod.GET, new URI(\"http://localhost:8000/stock/btc\"));\r\n    ResponseEntity<String> stockPriceResp\r\n     = restTemplate.exchange(requestEntity, String.class);\r\n\r\n    assertEquals(\"10000\", stockPriceResp.getBody());\r\n}\r\n\r\nint releaseCount = restTemplate.getForObject(\r\n  \"http://localhost:9090/stock/reqcount\", Integer.class);\r\nint testCount = restTemplate.getForObject(\r\n  \"http://localhost:8080/stock/reqcount\", Integer.class);\r\n\r\nassertTrue(Math.round(releaseCount * 1.0 / testCount) == 4);\r\n```","```\r\nAPIObject stockAPI = new APIObject(\r\n  \"admin-api\", \r\n  \"admin.api\", \r\n  \"http://localhost:8001\", \r\n  \"/admin-api\");\r\nHttpEntity<APIObject> apiEntity = new HttpEntity<>(stockAPI);\r\nResponseEntity<String> addAPIResp = restTemplate.postForEntity(\r\n  \"http://localhost:8001/apis\", \r\n  apiEntity, \r\n  String.class);\r\n\r\nassertEquals(HttpStatus.CREATED, addAPIResp.getStatusCode());\r\n```","```\r\nHttpHeaders headers = new HttpHeaders();\r\nheaders.set(\"Host\", \"admin.api\");\r\nAPIObject baeldungAPI = new APIObject(\r\n  \"baeldung-api\", \r\n  \"baeldung.com\", \r\n  \"http://ww.baeldung.com\", \r\n  \"/\");\r\nRequestEntity<APIObject> requestEntity = new RequestEntity<>(\r\n  baeldungAPI, \r\n  headers, \r\n  HttpMethod.POST, \r\n  new URI(\"http://localhost:8000/admin-api/apis\"));\r\nResponseEntity<String> addAPIResp = restTemplate\r\n  .exchange(requestEntity, String.class);\r\n\r\nassertEquals(HttpStatus.CREATED, addAPIResp.getStatusCode());\r\n```"]