["```\r\n<emails> <email> <from>Kai</from> <to>Amanda</to> <time>2018-03-05</time>\r\n<subject>I am flying to you</subject></email> <email>\r\n<from>Jerry</from> <to>Tom</to> <time>1992-08-08</time> <subject>Hey Tom, catch me if you can!</subject>\r\n</email> </emails> \r\n```","```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n```","```\r\npublic static String prettyPrintByTransformer(String xmlString, int indent, boolean ignoreDeclaration) {\r\n\r\n    try {\r\n        InputSource src = new InputSource(new StringReader(xmlString));\r\n        Document document = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(src);\r\n\r\n        TransformerFactory transformerFactory = TransformerFactory.newInstance();\r\n        transformerFactory.setAttribute(\"indent-number\", indent);\r\n        Transformer transformer = transformerFactory.newTransformer();\r\n        transformer.setOutputProperty(OutputKeys.ENCODING, \"UTF-8\");\r\n        transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, ignoreDeclaration ? \"yes\" : \"no\");\r\n        transformer.setOutputProperty(OutputKeys.INDENT, \"yes\");\r\n\r\n        Writer out = new StringWriter();\r\n        transformer.transform(new DOMSource(document), new StreamResult(out));\r\n        return out.toString();\r\n    } catch (Exception e) {\r\n        throw new RuntimeException(\"Error occurs when pretty-printing xml:\\n\" + xmlString, e);\r\n    }\r\n} \r\n```","```\r\ntransformer.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\", String.valueOf(indent));\r\n```","```\r\npublic static void main(String[] args) throws IOException {\r\n    InputStream inputStream = XmlPrettyPrinter.class.getResourceAsStream(\"/xml/emails.xml\");\r\n    String xmlString = readFromInputStream(inputStream);\r\n    System.out.println(\"Pretty printing by Transformer\");\r\n    System.out.println(\"=============================================\");\r\n    System.out.println(prettyPrintByTransformer(xmlString, 2, true));\r\n}\r\n```","```\r\nPretty printing by Transformer\r\n=============================================\r\n<emails>\r\n  <email>\r\n    <from>Kai</from>\r\n    <to>Amanda</to>\r\n    <time>2018-03-05</time>\r\n    <subject>I am flying to you</subject>\r\n  </email>\r\n  <email>\r\n    <from>Jerry</from>\r\n    <to>Tom</to>\r\n    <time>1992-08-08</time>\r\n    <subject>Hey Tom, catch me if you can!</subject>\r\n  </email>\r\n</emails>\r\n```","```\r\nPretty printing by Transformer\r\n=============================================\r\n<emails>\r\n\r\n  <email>\r\n\r\n    <from>Kai</from>\r\n\r\n    <to>Amanda</to>\r\n\r\n    <time>2018-03-05</time>\r\n\r\n    <subject>I am flying to you</subject>\r\n  </email>\r\n\r\n  <email>\r\n\r\n    <from>Jerry</from>\r\n\r\n    <to>Tom</to>\r\n\r\n    <time>1992-08-08</time>\r\n\r\n    <subject>Hey Tom, catch me if you can!</subject>\r\n\r\n  </email>\r\n\r\n</emails>\r\n\r\n=============================================\r\n```","```\r\n<emails> <email> <from>Kai</from> ...\r\n```","```\r\n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\r\n    <xsl:strip-space elements=\"*\"/>\r\n    <xsl:output method=\"xml\" encoding=\"UTF-8\"/>\r\n\r\n    <xsl:template match=\"@*|node()\">\r\n        <xsl:copy>\r\n            <xsl:apply-templates select=\"@*|node()\"/>\r\n        </xsl:copy>\r\n    </xsl:template>\r\n\r\n</xsl:stylesheet>\r\n```","```\r\nTransformer transformer = transformerFactory.newTransformer(new StreamSource(new StringReader(readPrettyPrintXslt())));\r\n```","```\r\nPretty printing by Transformer\r\n=============================================\r\n<emails>\r\n  <email>\r\n    <from>Kai</from>\r\n    <to>Amanda</to>\r\n    <time>2018-03-05</time>\r\n    <subject>I am flying to you</subject>\r\n  </email>\r\n...\r\n</emails>\r\n```","```\r\n<dependency>\r\n    <groupId>org.dom4j</groupId>\r\n    <artifactId>dom4j</artifactId>\r\n    <version>2.1.3</version>\r\n</dependency>\r\n```","```\r\npublic static String prettyPrintByDom4j(String xmlString, int indent, boolean skipDeclaration) {\r\n    try {\r\n        OutputFormat format = OutputFormat.createPrettyPrint();\r\n        format.setIndentSize(indent);\r\n        format.setSuppressDeclaration(skipDeclaration);\r\n        format.setEncoding(\"UTF-8\");\r\n\r\n        org.dom4j.Document document = DocumentHelper.parseText(xmlString);\r\n        StringWriter sw = new StringWriter();\r\n        XMLWriter writer = new XMLWriter(sw, format);\r\n        writer.write(document);\r\n        return sw.toString();\r\n    } catch (Exception e) {\r\n        throw new RuntimeException(\"Error occurs when pretty-printing xml:\\n\" + xmlString, e);\r\n    }\r\n}\r\n```","```\r\nSystem.out.println(\"Pretty printing by Dom4j\");\r\nSystem.out.println(\"=============================================\");\r\nSystem.out.println(prettyPrintByDom4j(xmlString, 8, false));\r\n```","```\r\nPretty printing by Dom4j\r\n=============================================\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<emails> \r\n        <email> \r\n                <from>Kai</from>  \r\n                <to>Amanda</to>  \r\n                <time>2018-03-05</time>  \r\n                <subject>I am flying to you</subject>\r\n        </email>  \r\n        <email> \r\n                <from>Jerry</from>  \r\n                <to>Tom</to>  \r\n                <time>1992-08-08</time>  \r\n                <subject>Hey Tom, catch me if you can!</subject> \r\n        </email> \r\n</emails>\r\n```"]