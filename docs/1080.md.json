["```\r\n@RequestMapping(value = \"/greetings\", method = RequestMethod.POST, consumes=\"application/json\")\r\npublic void addGreeting(@RequestBody ContentType type, Model model) {\r\n    // code here\r\n}\r\n```","```\r\n@RequestMapping(\r\n  value = \"/greetings-with-response-body\", \r\n  method = RequestMethod.GET, \r\n  produces=\"application/json\"\r\n) \r\n@ResponseBody\r\npublic String getGreetingWhileReturnTypeIsString() { \r\n    return \"{\\\"test\\\": \\\"Hello using @ResponseBody\\\"}\";\r\n}\r\n```","```\r\ncurl http://localhost:8080/greetings-with-response-body\r\n```","```\r\n{ \"test\": \"Hello using @ResponseBody\" } \r\n```","```\r\n<dependency>\r\n    <groupId>com.fasterxml.jackson.core</groupId>\r\n    <artifactId>jackson-databind</artifactId>\r\n    <version>2.12.4</version>\r\n</dependency> \r\n```","```\r\n@Test\r\npublic void givenReturnTypeIsString_whenJacksonOnClasspath_thenDefaultContentTypeIsJSON() \r\n  throws Exception {\r\n\r\n    // Given\r\n    String expectedMimeType = \"application/json\";\r\n\r\n    // Then\r\n    String actualMimeType = this.mockMvc.perform(MockMvcRequestBuilders.get(\"/greetings-with-response-body\", 1))\r\n      .andReturn().getResponse().getContentType();\r\n\r\n    Assert.assertEquals(expectedMimeType, actualMimeType);\r\n}\r\n```","```\r\n@RequestMapping(\r\n  value = \"/greetings-with-response-entity\",\r\n  method = RequestMethod.GET, \r\n  produces = \"application/json\"\r\n)\r\npublic ResponseEntity<String> getGreetingWithResponseEntity() {\r\n    final HttpHeaders httpHeaders= new HttpHeaders();\r\n    httpHeaders.setContentType(MediaType.APPLICATION_JSON);\r\n    return new ResponseEntity<String>(\"{\\\"test\\\": \\\"Hello with ResponseEntity\\\"}\", httpHeaders, HttpStatus.OK);\r\n}\r\n```","```\r\n{\"test\": \"Hello with ResponseEntity\"}\r\n```","```\r\n<mvc:annotation-driven />\r\n```","```\r\n@Test\r\npublic void givenReturnTypeIsResponseEntity_thenDefaultContentTypeIsJSON() throws Exception {\r\n\r\n    // Given\r\n    String expectedMimeType = \"application/json\";\r\n\r\n    // Then\r\n    String actualMimeType = this.mockMvc.perform(MockMvcRequestBuilders.get(\"/greetings-with-response-entity\", 1))\r\n      .andReturn().getResponse().getContentType();\r\n\r\n    Assert.assertEquals(expectedMimeType, actualMimeType);\r\n} \r\n```","```\r\n@RequestMapping(\r\n  value = \"/greetings-with-map-return-type\", \r\n  method = RequestMethod.GET, \r\n  produces = \"application/json\"\r\n)\r\n@ResponseBody\r\npublic Map<String, Object> getGreetingWhileReturnTypeIsMap() {\r\n    HashMap<String, Object> map = new HashMap<String, Object>();\r\n    map.put(\"test\", \"Hello from map\");\r\n    return map;\r\n}\r\n```","```\r\ncurl http://localhost:8080/greetings-with-map-return-type\r\n```","```\r\n{ \"test\": \"Hello from map\" }\r\n```"]