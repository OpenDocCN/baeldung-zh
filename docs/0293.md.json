["```\r\n<dependency>\r\n    <groupId>org.apache.poi</groupId>\r\n    <artifactId>poi</artifactId>\r\n    <version>5.2.0</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.apache.poi</groupId>\r\n    <artifactId>poi-ooxml</artifactId>\r\n    <version>5.2.0</version>\r\n</dependency>\r\n```","```\r\nFileInputStream file = new FileInputStream(new File(fileLocation));\r\nWorkbook workbook = new XSSFWorkbook(file);\r\n```","```\r\nSheet sheet = workbook.getSheetAt(0);\r\n\r\nMap<Integer, List<String>> data = new HashMap<>();\r\nint i = 0;\r\nfor (Row row : sheet) {\r\n    data.put(i, new ArrayList<String>());\r\n    for (Cell cell : row) {\r\n        switch (cell.getCellType()) {\r\n            case STRING: ... break;\r\n            case NUMERIC: ... break;\r\n            case BOOLEAN: ... break;\r\n            case FORMULA: ... break;\r\n            default: data.get(new Integer(i)).add(\" \");\r\n        }\r\n    }\r\n    i++;\r\n}\r\n```","```\r\ndata.get(new Integer(i)).add(cell.getRichStringCellValue().getString());\r\n```","```\r\nif (DateUtil.isCellDateFormatted(cell)) {\r\n    data.get(i).add(cell.getDateCellValue() + \"\");\r\n} else {\r\n    data.get(i).add(cell.getNumericCellValue() + \"\");\r\n}\r\n```","```\r\ndata.get(i).add(cell.getBooleanCellValue() + \"\");\r\n```","```\r\ndata.get(i).add(cell.getCellFormula() + \"\");\r\n```","```\r\nWorkbook workbook = new XSSFWorkbook();\r\n\r\nSheet sheet = workbook.createSheet(\"Persons\");\r\nsheet.setColumnWidth(0, 6000);\r\nsheet.setColumnWidth(1, 4000);\r\n\r\nRow header = sheet.createRow(0);\r\n\r\nCellStyle headerStyle = workbook.createCellStyle();\r\nheaderStyle.setFillForegroundColor(IndexedColors.LIGHT_BLUE.getIndex());\r\nheaderStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);\r\n\r\nXSSFFont font = ((XSSFWorkbook) workbook).createFont();\r\nfont.setFontName(\"Arial\");\r\nfont.setFontHeightInPoints((short) 16);\r\nfont.setBold(true);\r\nheaderStyle.setFont(font);\r\n\r\nCell headerCell = header.createCell(0);\r\nheaderCell.setCellValue(\"Name\");\r\nheaderCell.setCellStyle(headerStyle);\r\n\r\nheaderCell = header.createCell(1);\r\nheaderCell.setCellValue(\"Age\");\r\nheaderCell.setCellStyle(headerStyle);\r\n```","```\r\nCellStyle style = workbook.createCellStyle();\r\nstyle.setWrapText(true);\r\n\r\nRow row = sheet.createRow(2);\r\nCell cell = row.createCell(0);\r\ncell.setCellValue(\"John Smith\");\r\ncell.setCellStyle(style);\r\n\r\ncell = row.createCell(1);\r\ncell.setCellValue(20);\r\ncell.setCellStyle(style);\r\n```","```\r\nFile currDir = new File(\".\");\r\nString path = currDir.getAbsolutePath();\r\nString fileLocation = path.substring(0, path.length() - 1) + \"temp.xlsx\";\r\n\r\nFileOutputStream outputStream = new FileOutputStream(fileLocation);\r\nworkbook.write(outputStream);\r\nworkbook.close();\r\n```","```\r\npublic class ExcelTest {\r\n\r\n    private ExcelPOIHelper excelPOIHelper;\r\n    private static String FILE_NAME = \"temp.xlsx\";\r\n    private String fileLocation;\r\n\r\n    @Before\r\n    public void generateExcelFile() throws IOException {\r\n        File currDir = new File(\".\");\r\n        String path = currDir.getAbsolutePath();\r\n        fileLocation = path.substring(0, path.length() - 1) + FILE_NAME;\r\n\r\n        excelPOIHelper = new ExcelPOIHelper();\r\n        excelPOIHelper.writeExcel();\r\n    }\r\n\r\n    @Test\r\n    public void whenParsingPOIExcelFile_thenCorrect() throws IOException {\r\n        Map<Integer, List<String>> data\r\n          = excelPOIHelper.readExcel(fileLocation);\r\n\r\n        assertEquals(\"Name\", data.get(0).get(0));\r\n        assertEquals(\"Age\", data.get(0).get(1));\r\n\r\n        assertEquals(\"John Smith\", data.get(1).get(0));\r\n        assertEquals(\"20\", data.get(1).get(1));\r\n    }\r\n}\r\n```","```\r\npublic class JExcelHelper {\r\n\r\n    public Map<Integer, List<String>> readJExcel(String fileLocation) \r\n      throws IOException, BiffException {\r\n\r\n        Map<Integer, List<String>> data = new HashMap<>();\r\n\r\n        Workbook workbook = Workbook.getWorkbook(new File(fileLocation));\r\n        Sheet sheet = workbook.getSheet(0);\r\n        int rows = sheet.getRows();\r\n        int columns = sheet.getColumns();\r\n\r\n        for (int i = 0; i < rows; i++) {\r\n            data.put(i, new ArrayList<String>());\r\n            for (int j = 0; j < columns; j++) {\r\n                data.get(i)\r\n                  .add(sheet.getCell(j, i)\r\n                  .getContents());\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n}\r\n```","```\r\nFile currDir = new File(\".\");\r\nString path = currDir.getAbsolutePath();\r\nString fileLocation = path.substring(0, path.length() - 1) + \"temp.xls\";\r\n\r\nWritableWorkbook workbook = Workbook.createWorkbook(new File(fileLocation));\r\n```","```\r\nWritableSheet sheet = workbook.createSheet(\"Sheet 1\", 0);\r\n\r\nWritableCellFormat headerFormat = new WritableCellFormat();\r\nWritableFont font\r\n  = new WritableFont(WritableFont.ARIAL, 16, WritableFont.BOLD);\r\nheaderFormat.setFont(font);\r\nheaderFormat.setBackground(Colour.LIGHT_BLUE);\r\nheaderFormat.setWrap(true);\r\n\r\nLabel headerLabel = new Label(0, 0, \"Name\", headerFormat);\r\nsheet.setColumnView(0, 60);\r\nsheet.addCell(headerLabel);\r\n\r\nheaderLabel = new Label(1, 0, \"Age\", headerFormat);\r\nsheet.setColumnView(0, 40);\r\nsheet.addCell(headerLabel);\r\n```","```\r\nWritableCellFormat cellFormat = new WritableCellFormat();\r\ncellFormat.setWrap(true);\r\n\r\nLabel cellLabel = new Label(0, 2, \"John Smith\", cellFormat);\r\nsheet.addCell(cellLabel);\r\nNumber cellNumber = new Number(1, 2, 20, cellFormat);\r\nsheet.addCell(cellNumber);\r\n```","```\r\nworkbook.write();\r\nworkbook.close();\r\n```"]