["```\r\n<dependency>\r\n    <groupId>org.springframework</groupId>\r\n    <artifactId>spring-web</artifactId>\r\n    <version>5.3.13</version>\r\n</dependency>\r\n```","```\r\nprivate static final long MAX_INACTIVE_SESSION_TIME = 5 * 10000;\r\n```","```\r\n@Autowired\r\nprivate HttpSession session;\r\n```","```\r\n@Override\r\npublic boolean preHandle(\r\n  HttpServletRequest req, HttpServletResponse res, Object handler) throws Exception {\r\n    log.info(\"Pre handle method - check handling start time\");\r\n    long startTime = System.currentTimeMillis();\r\n    request.setAttribute(\"executionTime\", startTime);\r\n} \r\n```","```\r\nif (UserInterceptor.isUserLogged()) {\r\n    session = request.getSession();\r\n    log.info(\"Time since last request in this session: {} ms\",\r\n      System.currentTimeMillis() - request.getSession().getLastAccessedTime());\r\n    if (System.currentTimeMillis() - session.getLastAccessedTime()\r\n      > MAX_INACTIVE_SESSION_TIME) {\r\n        log.warn(\"Logging out, due to inactive session\");\r\n        SecurityContextHolder.clearContext();\r\n        request.logout();\r\n        response.sendRedirect(\"/spring-rest-full/logout\");\r\n    }\r\n}\r\nreturn true; \r\n```","```\r\n@Override\r\npublic void postHandle(\r\n  HttpServletRequest request, \r\n  HttpServletResponse response,\r\n  Object handler, \r\n  ModelAndView model) throws Exception {\r\n    log.info(\"Post handle method - check execution time of handling\");\r\n    long startTime = (Long) request.getAttribute(\"executionTime\");\r\n    log.info(\"Execution time for handling the request was: {} ms\",\r\n      System.currentTimeMillis() - startTime);\r\n}\r\n```","```\r\n@Override\r\npublic void addInterceptors(InterceptorRegistry registry) {\r\n    registry.addInterceptor(new SessionTimerInterceptor());\r\n}\r\n```","```\r\n<mvc:interceptors>\r\n    <bean id=\"sessionTimerInterceptor\" class=\"com.baeldung.web.interceptor.SessionTimerInterceptor\"/>\r\n</mvc:interceptors>\r\n```","```\r\npublic class ListenerConfig implements WebApplicationInitializer {\r\n    @Override\r\n    public void onStartup(ServletContext sc) throws ServletException {\r\n        sc.addListener(new RequestContextListener());\r\n    }\r\n}\r\n```"]