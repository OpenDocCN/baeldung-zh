["```\r\nList<Integer> integers = Arrays.asList(1, 2, 3, 4, 5);\r\nInteger sum = integers.stream()\r\n  .reduce(0, (a, b) -> a + b);\r\n```","```\r\nList<Integer> integers = Arrays.asList(1, 2, 3, 4, 5);\r\nInteger sum = integers.stream()\r\n  .reduce(0, Integer::sum);\r\n```","```\r\npublic class ArithmeticUtils {\r\n\r\n    public static int add(int a, int b) {\r\n        return a + b;\r\n    }\r\n} \r\n```","```\r\nList<Integer> integers = Arrays.asList(1, 2, 3, 4, 5);\r\nInteger sum = integers.stream()\r\n  .reduce(0, ArithmeticUtils::add); \r\n```","```\r\nList<Integer> integers = Arrays.asList(1, 2, 3, 4, 5);\r\nInteger sum = integers.stream()\r\n  .collect(Collectors.summingInt(Integer::intValue));\r\n```","```\r\nList<Integer> integers = Arrays.asList(1, 2, 3, 4, 5);\r\nInteger sum = integers.stream()\r\n  .mapToInt(Integer::intValue)\r\n  .sum();\r\n```","```\r\nInteger sum = map.values()\r\n  .stream()\r\n  .mapToInt(Integer::valueOf)\r\n  .sum();\r\n```","```\r\npublic class Item {\r\n\r\n    private int id;\r\n    private Integer price;\r\n\r\n    public Item(int id, Integer price) {\r\n        this.id = id;\r\n        this.price = price;\r\n    }\r\n\r\n    // Standard getters and setters\r\n} \r\n```","```\r\nItem item1 = new Item(1, 10);\r\nItem item2 = new Item(2, 15);\r\nItem item3 = new Item(3, 25);\r\nItem item4 = new Item(4, 40);\r\n\r\nList<Item> items = Arrays.asList(item1, item2, item3, item4);\r\n```","```\r\nInteger sum = items.stream()\r\n  .map(x -> x.getPrice())\r\n  .reduce(0, ArithmeticUtils::add); \r\n```","```\r\nInteger sum = items.stream()\r\n  .map(x -> x.getPrice())\r\n  .reduce(0, Integer::sum);\r\n```","```\r\nInteger sum = items.stream()\r\n  .map(item -> item.getPrice())\r\n  .reduce(0, (a, b) -> a + b);\r\n```","```\r\nInteger sum = items.stream()\r\n  .map(x -> x.getPrice())\r\n  .collect(Collectors.summingInt(Integer::intValue));\r\n```","```\r\nitems.stream()\r\n  .mapToInt(x -> x.getPrice())\r\n  .sum();\r\n```","```\r\nString string = \"Item1 10 Item2 25 Item3 30 Item4 45\";\r\n\r\nInteger sum = Arrays.stream(string.split(\" \"))\r\n    .filter((s) -> s.matches(\"\\\\d+\"))\r\n    .mapToInt(Integer::valueOf)\r\n    .sum();\r\n```"]