["```\r\npublic class MyBeanName implements BeanNameAware {\r\n\r\n    @Override\r\n    public void setBeanName(String beanName) {\r\n        System.out.println(beanName);\r\n    }\r\n}\r\n```","```\r\n@Configuration\r\npublic class Config {\r\n\r\n    @Bean(name = \"myCustomBeanName\")\r\n    public MyBeanName getMyBeanName() {\r\n        return new MyBeanName();\r\n    }\r\n}\r\n```","```\r\nAnnotationConfigApplicationContext context \r\n  = new AnnotationConfigApplicationContext(Config.class);\r\n\r\nMyBeanName myBeanName = context.getBean(MyBeanName.class);\r\n```","```\r\npublic class MyBeanFactory implements BeanFactoryAware {\r\n\r\n    private BeanFactory beanFactory;\r\n\r\n    @Override\r\n    public void setBeanFactory(BeanFactory beanFactory) throws BeansException {\r\n        this.beanFactory = beanFactory;\r\n    }\r\n\r\n    public void getMyBeanName() {\r\n        MyBeanName myBeanName = beanFactory.getBean(MyBeanName.class);\r\n        System.out.println(beanFactory.isSingleton(\"myCustomBeanName\"));\r\n    }\r\n}\r\n```","```\r\nMyBeanFactory myBeanFactory = context.getBean(MyBeanFactory.class);\r\nmyBeanFactory.getMyBeanName();\r\n```"]