["```\r\nprivate static HttpClient getHttpClientWithTimeout(int seconds) {\r\n    return HttpClient.newBuilder()\r\n      .connectTimeout(Duration.ofSeconds(seconds))\r\n      .build();\r\n}\r\n```","```\r\nhttpClient.connectTimeout().map(Duration::toSeconds)\r\n  .ifPresent(sec -> System.out.println(\"Timeout in seconds: \" + sec));\r\n```","```\r\nHttpRequest httpRequest = HttpRequest.newBuilder()\r\n  .uri(URI.create(\"http://10.255.255.1\")).GET().build();\r\n```","```\r\nHttpConnectTimeoutException thrown = assertThrows(\r\n  HttpConnectTimeoutException.class,\r\n  () -> httpClient.send(httpRequest, HttpResponse.BodyHandlers.ofString()),\r\n  \"Expected send() to throw HttpConnectTimeoutException, but it didn't\");\r\nassertTrue(thrown.getMessage().contains(\"timed out\"));\r\n```","```\r\nCompletableFuture<String> completableFuture = httpClient.sendAsync(httpRequest, HttpResponse.BodyHandlers.ofString())\r\n  .thenApply(HttpResponse::body)\r\n  .exceptionally(Throwable::getMessage);\r\nString response = completableFuture.get(5, TimeUnit.SECONDS);\r\nassertTrue(response.contains(\"timed out\"));\r\n```","```\r\nHttpRequest httpRequest = HttpRequest.newBuilder()\r\n  .uri(URI.create(\"http://10.255.255.1\"))\r\n  .timeout(Duration.ofSeconds(1))\r\n  .GET()\r\n  .build();\r\n```"]