["```\r\n@SpringBootApplication\r\n@RestController\r\npublic class ServerApplication {\r\n\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(ServerApplication.class, args);\r\n    }\r\n\r\n    @Value(\"${server.instance.id}\")\r\n    String instanceId;\r\n\r\n    @GetMapping(\"/hello\")\r\n    public String hello() {\r\n        return String.format(\"Hello from instance %s\", instanceId);\r\n    }\r\n}\r\n```","```\r\n--server.instance.id=2 --server.port=8081\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.cloud</groupId>\r\n    <artifactId>spring-cloud-starter-loadbalancer</artifactId>\r\n</dependency>\r\n```","```\r\nclass DemoInstanceSupplier implements ServiceInstanceListSupplier {\r\n    private final String serviceId;\r\n\r\n    public DemoInstanceSupplier(String serviceId) {\r\n        this.serviceId = serviceId;\r\n    }\r\n\r\n    @Override\r\n    public String getServiceId() {\r\n        return serviceId;\r\n    }\r\n\r\n    @Override\r\n        public Flux<List<ServiceInstance>> get() {\r\n          return Flux.just(Arrays\r\n            .asList(new DefaultServiceInstance(serviceId + \"1\", serviceId, \"localhost\", 8080, false),\r\n              new DefaultServiceInstance(serviceId + \"2\", serviceId, \"localhost\", 8081, false)));\r\n    }\r\n}\r\n```","```\r\n@Configuration\r\n@LoadBalancerClient(name = \"example-service\", configuration = DemoServerInstanceConfiguration.class)\r\nclass WebClientConfig {\r\n    @LoadBalanced\r\n    @Bean\r\n    WebClient.Builder webClientBuilder() {\r\n        return WebClient.builder();\r\n    }\r\n}\r\n```","```\r\n@Configuration\r\nclass DemoServerInstanceConfiguration {\r\n    @Bean\r\n    ServiceInstanceListSupplier serviceInstanceListSupplier() {\r\n        return new DemoInstanceSupplier(\"example-service\");\r\n    }\r\n}\r\n```","```\r\n@SpringBootApplication\r\npublic class ClientApplication {\r\n\r\n    public static void main(String[] args) {\r\n\r\n        ConfigurableApplicationContext ctx = new SpringApplicationBuilder(ClientApplication.class)\r\n          .web(WebApplicationType.NONE)\r\n          .run(args);\r\n\r\n        WebClient loadBalancedClient = ctx.getBean(WebClient.Builder.class).build();\r\n\r\n        for(int i = 1; i <= 10; i++) {\r\n            String response =\r\n              loadBalancedClient.get().uri(\"http://example-service/hello\")\r\n                .retrieve().toEntity(String.class)\r\n                .block().getBody();\r\n            System.out.println(response);\r\n        }\r\n    }\r\n}\r\n```","```\r\nHello from instance 2\r\nHello from instance 1\r\nHello from instance 2\r\nHello from instance 1\r\nHello from instance 2\r\nHello from instance 1\r\nHello from instance 2\r\nHello from instance 1\r\nHello from instance 2\r\nHello from instance 1\r\n```"]