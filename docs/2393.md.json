["```\r\n<dependency>\r\n    <groupId>org.springframework.shell</groupId>\r\n    <artifactId>spring-shell</artifactId>\r\n    <version>1.2.0.RELEASE</version>\r\n</dependency>\r\n```","```\r\npublic static void main(String[] args) throws IOException {\r\n    Bootstrap.main(args);\r\n}\r\n```","```\r\nBootstrap bootstrap = new Bootstrap();\r\nJLineShellComponent shell = bootstrap.getJLineShellComponent();\r\nshell.executeCommand(\"help\");\r\n```","```\r\n<beans ... >\r\n    <context:component-scan base-package=\"org.baeldung.shell.simple\" />\r\n</beans>\r\n```","```\r\n@Component\r\npublic class SimpleCLI implements CommandMarker {\r\n\r\n    @CliCommand(value = { \"web-get\", \"wg\" })\r\n    public String webGet(\r\n      @CliOption(key = \"url\") String url) {\r\n        return getContentsOfUrlAsString(url);\r\n    }\r\n\r\n    @CliCommand(value = { \"web-save\", \"ws\" })\r\n    public String webSave(\r\n      @CliOption(key = \"url\") String url,\r\n      @CliOption(key = { \"out\", \"file\" }) String file) {\r\n        String contents = getContentsOfUrlAsString(url);\r\n        try (PrintWriter out = new PrintWriter(file)) {\r\n            out.write(contents);\r\n        }\r\n        return \"Done.\";\r\n    }\r\n}\r\n```","```\r\nspring-shell>web-get --url https://www.google.com\r\n<!doctype html ... \r\nspring-shell>web-save --url https://www.google.com --out contents.txt\r\nDone.\r\n```","```\r\nprivate boolean adminEnableExecuted = false;\r\n\r\n@CliAvailabilityIndicator(value = \"web-save\")\r\npublic boolean isAdminEnabled() {\r\n    return adminEnableExecuted;\r\n}\r\n```","```\r\n@CliCommand(value = \"admin-enable\")\r\npublic String adminEnable() {\r\n    adminEnableExecuted = true;\r\n    return \"Admin commands enabled.\";\r\n}\r\n```","```\r\nspring-shell>web-save --url https://www.google.com --out contents.txt\r\nCommand 'web-save --url https://www.google.com --out contents.txt'\r\n  was found but is not currently available\r\n  (type 'help' then ENTER to learn about this command)\r\nspring-shell>admin-enable\r\nAdmin commands enabled.\r\nspring-shell>web-save --url https://www.google.com --out contents.txt\r\nDone.\r\n```","```\r\n@CliOption(key = { \"out\", \"file\" }, mandatory = true)\r\n```","```\r\nspring-shell>web-save --url https://www.google.com\r\nYou should specify option (--out) for this command\r\n```","```\r\n@CliOption(key = { \"\", \"url\" })\r\n```","```\r\nspring-shell>web-get https://www.google.com\r\n<!doctype html ...\r\n```","```\r\n@CliCommand(\r\n  // ...\r\n  help = \"Displays the contents of an URL\")\r\npublic String webGet(\r\n  @CliOption(\r\n    // ...\r\n    help = \"URL whose contents will be displayed.\"\r\n  ) String url) {\r\n    // ...\r\n}\r\n```","```\r\nspring-shell>help web-get\r\nKeyword:                    web-get\r\nKeyword:                    wg\r\nDescription:                Displays the contents of a URL.\r\n  Keyword:                  ** default **\r\n  Keyword:                  url\r\n    Help:                   URL whose contents will be displayed.\r\n    Mandatory:              false\r\n    Default if specified:   '__NULL__'\r\n    Default if unspecified: '__NULL__'\r\n\r\n* web-get - Displays the contents of a URL.\r\n* wg - Displays the contents of a URL.\r\n```","```\r\n@Component\r\n@Order(Ordered.HIGHEST_PRECEDENCE)\r\npublic class SimpleBannerProvider extends DefaultBannerProvider {\r\n\r\n    public String getBanner() {\r\n        StringBuffer buf = new StringBuffer();\r\n        buf.append(\"=======================================\")\r\n            .append(OsUtils.LINE_SEPARATOR);\r\n        buf.append(\"*          Baeldung Shell             *\")\r\n            .append(OsUtils.LINE_SEPARATOR);\r\n        buf.append(\"=======================================\")\r\n            .append(OsUtils.LINE_SEPARATOR);\r\n        buf.append(\"Version:\")\r\n            .append(this.getVersion());\r\n        return buf.toString();\r\n    }\r\n\r\n    public String getVersion() {\r\n        return \"1.0.1\";\r\n    }\r\n\r\n    public String getWelcomeMessage() {\r\n        return \"Welcome to Baeldung CLI\";\r\n    }\r\n\r\n    public String getProviderName() {\r\n        return \"Baeldung Banner\";\r\n    }\r\n}\r\n```","```\r\n@Component\r\n@Order(Ordered.HIGHEST_PRECEDENCE)\r\npublic class SimplePromptProvider extends DefaultPromptProvider {\r\n\r\n    public String getPrompt() {\r\n        return \"baeldung-shell\";\r\n    }\r\n\r\n    public String getProviderName() {\r\n        return \"Baeldung Prompt\";\r\n    }\r\n}\r\n```","```\r\n@Component\r\n@Order(Ordered.HIGHEST_PRECEDENCE)\r\npublic class SimpleHistoryFileNameProvider\r\n  extends DefaultHistoryFileNameProvider {\r\n\r\n    public String getHistoryFileName() {\r\n        return \"baeldung-shell.log\";\r\n    }\r\n\r\n    public String getProviderName() {\r\n        return \"Baeldung History\";\r\n    }\r\n\r\n}\r\n```","```\r\n=======================================\r\n*          Baeldung Shell             *\r\n=======================================\r\nVersion:1.0.1\r\nWelcome to Baeldung CLI\r\nbaeldung-shell>\r\n```","```\r\n@Component\r\npublic class SimpleURLConverter implements Converter<URL> {\r\n\r\n    public URL convertFromText(\r\n      String value, Class<?> requiredType, String optionContext) {\r\n        return new URL(value);\r\n    }\r\n\r\n    public boolean getAllPossibleValues(\r\n      List<Completion> completions,\r\n      Class<?> requiredType,\r\n      String existingData,\r\n      String optionContext,\r\n      MethodTarget target) {\r\n        return false;\r\n    }\r\n\r\n    public boolean supports(Class<?> requiredType, String optionContext) {\r\n        return URL.class.isAssignableFrom(requiredType);\r\n    }\r\n}\r\n```","```\r\npublic String webSave(... URL url) {\r\n    // ...\r\n}\r\n\r\npublic String webSave(... URL url) {\r\n    // ...\r\n}\r\n```"]