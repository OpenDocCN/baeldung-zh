["```\r\npublic static Date dateFrom(long input) {\r\n    return new Date(input);\r\n}\r\n```","```\r\npublic static Calendar calendarFrom(long input) {\r\n    Calendar calendar = Calendar.getInstance();\r\n    calendar.setTimeInMillis(input);\r\n    return calendar;\r\n}\r\n```","```\r\nInstant.ofEpochSecond(seconds, nanos);\r\n```","```\r\npublic static Instant fromNanos(long input) {\r\n    long seconds = input / 1_000_000_000;\r\n    long nanos = input % 1_000_000_000;\r\n\r\n    return Instant.ofEpochSecond(seconds, nanos);\r\n}\r\n```","```\r\nprivate static long millis(long timestamp) {\r\n    if (millis >= 1E16 || millis <= -1E16) {\r\n        return timestamp / 1_000_000;\r\n    }\r\n\r\n    // next range checks\r\n}\r\n```","```\r\nif (timestamp >= 1E14 || timestamp <= -1E14) {\r\n    return timestamp / 1_000;\r\n}\r\n```","```\r\nif (timestamp >= 1E11 || timestamp <= -3E10) {\r\n    return timestamp;\r\n}\r\n```","```\r\nreturn timestamp * 1_000;\r\n```","```\r\npublic static Instant fromTimestamp(long input) {\r\n    return Instant.ofEpochMilli(millis(input));\r\n}\r\n```","```\r\npublic static LocalDateTime localTimeUtc(Instant instant) {\r\n    return LocalDateTime.ofInstant(instant, ZoneOffset.UTC);\r\n}\r\n```","```\r\n@Test\r\nvoid givenWrongPrecision_whenInstantFromNanos_thenUnexpectedTime() {\r\n    long microseconds = 1660663532747420283l / 1000;\r\n    Instant instant = fromNanos(microseconds);\r\n    String expectedTime = \"2022-08-16T15:25:32\";\r\n\r\n    LocalDateTime time = localTimeUtc(instant);\r\n    assertThat(!time.toString().startsWith(expectedTime));\r\n    assertEquals(\"1970-01-20T05:17:43.532747420\", time.toString());\r\n}\r\n```","```\r\n@Test\r\nvoid givenMicroseconds_whenInstantFromTimestamp_thenLocalTimeMatches() {\r\n    long microseconds = 1660663532747420283l / 1000;\r\n\r\n    Instant instant = fromTimestamp(microseconds);\r\n    String expectedTime = \"2022-08-16T15:25:32\";\r\n\r\n    LocalDateTime time = localTimeUtc(instant);\r\n    assertThat(time.toString().startsWith(expectedTime));\r\n}\r\n```"]