["```\r\n<dependency>\r\n    <groupId>org.kie</groupId>\r\n    <artifactId>kie-ci</artifactId>\r\n    <version>7.1.0.Beta1</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.drools</groupId>\r\n    <artifactId>drools-decisiontables</artifactId>\r\n    <version>7.1.0.Beta1</version>\r\n</dependency>\r\n```","```\r\npublic KieFileSystem kieFileSystem() throws IOException {\r\n    KieFileSystem kieFileSystem = getKieServices().newKieFileSystem();\r\n        for (Resource file : getRuleFiles()) {\r\n            kieFileSystem.write(\r\n              ResourceFactory.newClassPathResource(\r\n              RULES_PATH + file.getFilename(), \"UTF-8\"));\r\n        }\r\n        return kieFileSystem;\r\n}\r\n```","```\r\npublic KieContainer kieContainer() throws IOException {\r\n    KieRepository kieRepository = getKieServices().getRepository();\r\n\r\n    kieRepository.addKieModule(new KieModule() {\r\n        public ReleaseId getReleaseId() {\r\n            return kieRepository.getDefaultReleaseId();\r\n        }\r\n    });\r\n\r\n    KieBuilder kieBuilder = getKieServices()\r\n      .newKieBuilder(kieFileSystem())\r\n      .buildAll();\r\n\r\n    return getKieServices().newKieContainer(kieRepository.getDefaultReleaseId());\r\n}\r\n```","```\r\npublic KieSession kieSession() throws IOException {\r\n    return kieContainer().newKieSession();\r\n}\r\n```","```\r\npackage com.baeldung.drools.rules;\r\n\r\nimport com.baeldung.drools.model.Applicant;\r\n\r\nglobal com.baeldung.drools.model.SuggestedRole suggestedRole;\r\n\r\ndialect  \"mvel\"\r\n\r\nrule \"Suggest Manager Role\"\r\n    when\r\n        Applicant(experienceInYears > 10)\r\n        Applicant(currentSalary > 1000000 && currentSalary <= \r\n         2500000)\r\n    then\r\n        suggestedRole.setRole(\"Manager\");\r\nend\r\n```","```\r\npublic SuggestedRole suggestARoleForApplicant(\r\n    Applicant applicant,SuggestedRole suggestedRole){\r\n    KieSession kieSession = kieContainer.newKieSession();\r\n    kieSession.insert(applicant);\r\n    kieSession.setGlobal(\"suggestedRole\",suggestedRole);\r\n    kieSession.fireAllRules();\r\n    // ...\r\n}\r\n```","```\r\n@Test\r\npublic void whenCriteriaMatching_ThenSuggestManagerRole(){\r\n    Applicant applicant = new Applicant(\"David\", 37, 1600000.0,11);\r\n    SuggestedRole suggestedRole = new SuggestedRole();\r\n\r\n    applicantService.suggestARoleForApplicant(applicant, suggestedRole);\r\n\r\n    assertEquals(\"Manager\", suggestedRole.getRole());\r\n}\r\n```","```\r\n@Test\r\npublic void whenProductTypeElectronic_ThenLabelBarcode() {\r\n    Product product = new Product(\"Microwave\", \"Electronic\");\r\n    product = productService.applyLabelToProduct(product);\r\n\r\n    assertEquals(\"BarCode\", product.getLabel());\r\n}\r\n```"]