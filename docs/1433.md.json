["```\r\n<dependency>\r\n    <groupId>io.dropwizard</groupId>\r\n    <artifactId>dropwizard-core</artifactId>\r\n    <version>2.0.0</version>\r\n</dependency>\r\n```","```\r\ndefaultSize: 5\r\n```","```\r\npublic class BasicConfiguration extends Configuration {\r\n    @NotNull private final int defaultSize;\r\n\r\n    @JsonCreator\r\n    public BasicConfiguration(@JsonProperty(\"defaultSize\") int defaultSize) {\r\n        this.defaultSize = defaultSize;\r\n    }\r\n\r\n    public int getDefaultSize() {\r\n        return defaultSize;\r\n    }\r\n}\r\n```","```\r\npublic class IntroductionApplication extends Application<BasicConfiguration> {\r\n\r\n    public static void main(String[] args) throws Exception {\r\n        new IntroductionApplication().run(\"server\", \"introduction-config.yml\");\r\n    }\r\n\r\n    @Override\r\n    public void run(BasicConfiguration basicConfiguration, Environment environment) {\r\n        //register classes\r\n    }\r\n\r\n    @Override\r\n    public void initialize(Bootstrap<BasicConfiguration> bootstrap) {\r\n        bootstrap.setConfigurationSourceProvider(new ResourceConfigurationSourceProvider());\r\n        super.initialize(bootstrap);\r\n    }\r\n}\r\n```","```\r\npublic class Brand {\r\n    private final Long id;\r\n    private final String name;\r\n\r\n    // all args constructor and getters\r\n}\r\n```","```\r\npublic class BrandRepository {\r\n    private final List<Brand> brands;\r\n\r\n    public BrandRepository(List<Brand> brands) {\r\n        this.brands = ImmutableList.copyOf(brands);\r\n    }\r\n\r\n    public List<Brand> findAll(int size) {\r\n        return brands.stream()\r\n          .limit(size)\r\n          .collect(Collectors.toList());\r\n    }\r\n\r\n    public Optional<Brand> findById(Long id) {\r\n        return brands.stream()\r\n          .filter(brand -> brand.getId().equals(id))\r\n          .findFirst();\r\n    }\r\n}\r\n```","```\r\n@Path(\"/brands\")\r\n@Produces(MediaType.APPLICATION_JSON)\r\npublic class BrandResource {\r\n    private final int defaultSize;\r\n    private final BrandRepository brandRepository;\r\n\r\n    public BrandResource(int defaultSize, BrandRepository brandRepository) {\r\n        this.defaultSize = defaultSize;\r\n        this.brandRepository = brandRepository;\r\n    }\r\n\r\n    @GET\r\n    public List<Brand> getBrands(@QueryParam(\"size\") Optional<Integer> size) {\r\n        return brandRepository.findAll(size.orElse(defaultSize));\r\n    }\r\n\r\n    @GET\r\n    @Path(\"/{id}\")\r\n    public Brand getById(@PathParam(\"id\") Long id) {\r\n        return brandRepository\r\n          .findById(id)\r\n          .orElseThrow(RuntimeException::new);\r\n    }\r\n}\r\n```","```\r\n@Override\r\npublic void run(BasicConfiguration basicConfiguration, Environment environment) {\r\n    int defaultSize = basicConfiguration.getDefaultSize();\r\n    BrandRepository brandRepository = new BrandRepository(initBrands());\r\n    BrandResource brandResource = new BrandResource(defaultSize, brandRepository);\r\n\r\n    environment\r\n      .jersey()\r\n      .register(brandResource);\r\n}\r\n```","```\r\n<plugin>\r\n    <groupId>org.apache.maven.plugins</groupId>\r\n    <artifactId>maven-shade-plugin</artifactId>\r\n    <configuration>\r\n        <createDependencyReducedPom>true</createDependencyReducedPom>\r\n        <filters>\r\n            <filter>\r\n                <artifact>*:*</artifact>\r\n                <excludes>\r\n                    <exclude>META-INF/*.SF</exclude>\r\n                    <exclude>META-INF/*.DSA</exclude>\r\n                    <exclude>META-INF/*.RSA</exclude>\r\n                </excludes>\r\n            </filter>\r\n        </filters>\r\n    </configuration>\r\n    <executions>\r\n        <execution>\r\n            <phase>package</phase>\r\n            <goals>\r\n                <goal>shade</goal>\r\n            </goals>\r\n            <configuration>\r\n                <transformers>\r\n                    <transformer\r\n                      implementation=\"org.apache.maven.plugins.shade.resource.ServicesResourceTransformer\"/>\r\n                    <transformer implementation=\"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer\">\r\n                        <mainClass>com.baeldung.dropwizard.introduction.IntroductionApplication</mainClass>\r\n                    </transformer>\r\n                </transformers>\r\n            </configuration>\r\n        </execution>\r\n    </executions>\r\n</plugin>\r\n```","```\r\njava -jar target/dropwizard-0.0.1-SNAPSHOT.jar\r\n```","```\r\nINFO  [2020-01-08 18:55:06,527] org.eclipse.jetty.server.Server: Started @1672ms\r\n```","```\r\npublic class ApplicationHealthCheck extends HealthCheck {\r\n    @Override\r\n    protected Result check() throws Exception {\r\n        return Result.healthy();\r\n    }\r\n}\r\n```","```\r\nenvironment\r\n  .healthChecks()\r\n  .register(\"application\", new ApplicationHealthCheck());\r\n```","```\r\n{\r\n  \"application\": {\r\n    \"healthy\": true,\r\n    \"duration\": 0\r\n  },\r\n  \"deadlocks\": {\r\n    \"healthy\": true,\r\n    \"duration\": 0\r\n  }\r\n}\r\n```"]