["```\r\n@Configuration\r\n@EnableZuulProxy\r\n@EnableOAuth2Sso\r\n@Order(value = 0)\r\npublic class AppConfiguration extends WebSecurityConfigurerAdapter {\r\n\r\n    @Autowired\r\n    private ResourceServerTokenServices \r\n      resourceServerTokenServices;\r\n\r\n    @Override\r\n    public void configure(HttpSecurity http) throws Exception { \r\n        http.csrf().disable()\r\n            .authorizeRequests()\r\n            .antMatchers(\"/authorization-server-1/**\",\r\n              \"/login\").permitAll()\r\n            .anyRequest().authenticated().and()\r\n            .logout().permitAll().logoutSuccessUrl(\"/\");\r\n    }\r\n}\r\n```","```\r\nzuul:\r\n  routes:\r\n    resource-server-mvc-1: /resource-server-mvc-1/**\r\n    authorization-server-1:\r\n      sensitiveHeaders: Authorization\r\n      path: /authorization-server-1/**\r\n      stripPrefix: false\r\n  add-proxy-headers: true\r\n\r\nsecurity:\r\n  basic:\r\n    enabled: false\r\n  oauth2:\r\n    sso:\r\n      loginPath: /login\r\n    client:\r\n      accessTokenUri: http://localhost:8769/authorization-server-1/oauth/token\r\n      userAuthorizationUri: /authorization-server-1/oauth/authorize\r\n      clientId: fooClient\r\n      clientSecret: fooSecret\r\n    resource:\r\n      jwt:\r\n        keyValue: \"abc\"\r\n      id: fooScope\r\n      serviceId: ${PREFIX:}resource\r\n```","```\r\n@SpringBootApplication\r\n@EnableResourceServer\r\n@Controller\r\n@RequestMapping(\"/\")\r\nclass ResourceServerApplication {\r\n\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(ResourceServerApplication.class, args);\r\n    }\r\n\r\n    @RequestMapping(method = RequestMethod.GET)\r\n    @ResponseBody\r\n    public String helloWorld(Principal principal) {\r\n        return \"Hello \" + principal.getName();\r\n    }\r\n}\r\n```","```\r\nsecurity:\r\n  basic:\r\n    enabled: false\r\n  oauth2:\r\n    resource:\r\n      jwt:\r\n        keyValue: \"abc\"\r\n      id: fooScope\r\n      service-id: ${PREFIX:}resource\r\n```"]