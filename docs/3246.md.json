["```\r\npublic static SecretKey generateKey(int n) throws NoSuchAlgorithmException {\r\n    KeyGenerator keyGenerator = KeyGenerator.getInstance(\"AES\");\r\n    keyGenerator.init(n);\r\n    SecretKey originalKey = keyGenerator.generateKey();\r\n    return originalKey;\r\n}\r\n```","```\r\npublic static SecretKey getKeyFromPassword(String password, String salt)\r\n  throws NoSuchAlgorithmException, InvalidKeySpecException {\r\n    SecretKeyFactory factory = SecretKeyFactory.getInstance(\"PBKDF2WithHmacSHA256\");\r\n    KeySpec spec = new PBEKeySpec(password.toCharArray(), salt.getBytes(), 65536, 256);\r\n    SecretKey originalKey = new SecretKeySpec(factory.generateSecret(spec).getEncoded(), \"AES\");\r\n    return originalKey;\r\n}\r\n```","```\r\npublic static String convertSecretKeyToString(SecretKey secretKey) throws NoSuchAlgorithmException {\r\n    byte[] rawData = secretKey.getEncoded();\r\n    String encodedKey = Base64.getEncoder().encodeToString(rawData);\r\n    return encodedKey;\r\n}\r\n```","```\r\npublic static SecretKey convertStringToSecretKeyto(String encodedKey) {\r\n    byte[] decodedKey = Base64.getDecoder().decode(encodedKey);\r\n    SecretKey originalKey = new SecretKeySpec(decodedKey, 0, decodedKey.length, \"AES\");\r\n    return originalKey;\r\n}\r\n```","```\r\nSecretKey encodedKey = ConversionClassUtil.getKeyFromPassword(\"[[email protected]](/web/20220630020741/https://www.baeldung.com/cdn-cgi/l/email-protection)\", \"@$#[[email protected]](/web/20220630020741/https://www.baeldung.com/cdn-cgi/l/email-protection)#^$*\");\r\nString encodedString = ConversionClassUtil.convertSecretKeyToString(encodedKey);\r\nSecretKey decodeKey = ConversionClassUtil.convertStringToSecretKeyto(encodedString);\r\nAssertions.assertEquals(encodedKey, decodeKey);\r\n```"]