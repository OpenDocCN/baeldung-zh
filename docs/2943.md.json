["```\r\n<tutorials>\r\n    <tutorial tutId=\"01\" type=\"java\">\r\n        <title>Guava</title>\r\n        <description>Introduction to Guava</description>\r\n        <date>04/04/2016</date>\r\n        <author>GuavaAuthor</author>\r\n    </tutorial>\r\n    ...\r\n</tutorials>\r\n```","```\r\nSAXReader reader = new SAXReader();\r\nDocument document = reader.read(file);\r\nList<Node> elements = document.selectNodes(\"//*[@tutId='\" + id + \"']\");\r\nreturn elements.get(0);\r\n```","```\r\nfor (Node node : nodes) {\r\n    Element element = (Element)node;\r\n    Iterator<Element> iterator = element.elementIterator(\"title\");\r\n    while (iterator.hasNext()) {\r\n        Element title =(Element)iterator.next();\r\n        title.setText(title.getText() + \" updated\");\r\n    }\r\n}\r\nXMLWriter writer = new XMLWriter(\r\n  new FileWriter(new File(\"src/test/resources/example_updated.xml\")));\r\nwriter.write(document);\r\nwriter.close();\r\n```","```\r\nDocument document = DocumentHelper.createDocument();\r\nElement root = document.addElement(\"XMLTutorials\");\r\nElement tutorialElement = root.addElement(\"tutorial\").addAttribute(\"tutId\", \"01\");\r\ntutorialElement.addAttribute(\"type\", \"xml\");\r\ntutorialElement.addElement(\"title\").addText(\"XML with Dom4J\");\r\n...\r\nOutputFormat format = OutputFormat.createPrettyPrint();\r\nXMLWriter writer = new XMLWriter(\r\n  new FileWriter(new File(\"src/test/resources/example_new.xml\")), format);\r\nwriter.write(document);\r\nwriter.close(); \r\n```","```\r\nSAXBuilder builder = new SAXBuilder();\r\nDocument doc = builder.build(this.getFile());\r\nElement tutorials = doc.getRootElement();\r\nList<Element> titles = tutorials.getChildren(\"tutorial\"); \r\n```","```\r\nSAXBuilder builder = new SAXBuilder();\r\nDocument document = (Document) builder.build(file);\r\nString filter = \"//*[@tutId='\" + id + \"']\";\r\nXPathFactory xFactory = XPathFactory.instance();\r\nXPathExpression<Element> expr = xFactory.compile(filter, Filters.element());\r\nList<Element> node = expr.evaluate(document);\r\n```","```\r\npublic class Tutorial {\r\n    private String tutId;\r\n    private String type;\r\n    private String title;\r\n    private String description;\r\n    private String date;\r\n    private String author;\r\n\r\n    // standard getters and setters\r\n}\r\n```","```\r\nList<Tutorial> tutorials = new ArrayList<>();\r\nXMLInputFactory factory = XMLInputFactory.newInstance();\r\nXMLEventReader eventReader = factory.createXMLEventReader(new FileReader(this.getFile()));\r\nTutorial current;\r\nwhile (eventReader.hasNext()) {\r\n    XMLEvent event = eventReader.nextEvent();\r\n    switch (event.getEventType()) {\r\n        case XMLStreamConstants.START_ELEMENT:\r\n            StartElement startElement = event.asStartElement();\r\n            String qName = startElement.getName().getLocalPart();\r\n            ...\r\n            break;\r\n        case XMLStreamConstants.CHARACTERS:\r\n            Characters characters = event.asCharacters();\r\n            ...\r\n            break;\r\n        case XMLStreamConstants.END_ELEMENT:\r\n            EndElement endElement = event.asEndElement();\r\n\r\n            // check if we found the closing element\r\n            // close resources that need to be explicitly closed\r\n            break;\r\n    }\r\n}\r\n```","```\r\nJAXBContext jaxbContext = JAXBContext.newInstance(Tutorials.class);\r\nUnmarshaller jaxbUnmarshaller = jaxbContext.createUnmarshaller();\r\nTutorials tutorials = (Tutorials) jaxbUnmarshaller.unmarshal(this.getFile());\r\n```","```\r\npublic class Tutorial {\r\n    ...\r\n\r\n    public String getTutId() {\r\n        return tutId;\r\n    }\r\n\r\n    @XmlAttribute\r\n    public void setTutId(String tutId) {\r\n        this.tutId = tutId;\r\n    }\r\n    ...\r\n    @XmlElement\r\n    public void setTitle(String title) {\r\n        this.title = title;\r\n    }\r\n    ...\r\n}\r\n\r\n@XmlRootElement\r\npublic class Tutorials {\r\n    private List<Tutorial> tutorial;\r\n\r\n    // standard getters and setters with @XmlElement annotation\r\n}\r\n```","```\r\nTutorials tutorials = new Tutorials();\r\ntutorials.setTutorial(new ArrayList<>());\r\nTutorial tut = new Tutorial();\r\ntut.setTutId(\"01\");\r\n...\r\ntutorials.getTutorial().add(tut);\r\nJAXBContext jaxbContext = JAXBContext.newInstance(Tutorials.class);\r\nMarshaller jaxbMarshaller = jaxbContext.createMarshaller();\r\njaxbMarshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);\r\njaxbMarshaller.marshal(tutorials, file);\r\n```","```\r\nString expression = \"/tutorials/tutorial\";\r\nXPath path = new DOMXPath(expression);\r\nList result = path.selectNodes(xmlDocument);\r\n```"]