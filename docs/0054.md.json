["```\r\n@Test\r\npublic void givenCountMethodMocked_WhenCountInvoked_ThenMockedValueReturned() {\r\n    UserRepository localMockRepository = Mockito.mock(UserRepository.class);\r\n    Mockito.when(localMockRepository.count()).thenReturn(111L);\r\n\r\n    long userCount = localMockRepository.count();\r\n\r\n    Assert.assertEquals(111L, userCount);\r\n    Mockito.verify(localMockRepository).count();\r\n}\r\n```","```\r\n@RunWith(MockitoJUnitRunner.class)\r\npublic class MockAnnotationUnitTest {\r\n\r\n    @Mock\r\n    UserRepository mockRepository;\r\n\r\n    @Test\r\n    public void givenCountMethodMocked_WhenCountInvoked_ThenMockValueReturned() {\r\n        Mockito.when(mockRepository.count()).thenReturn(123L);\r\n\r\n        long userCount = mockRepository.count();\r\n\r\n        Assert.assertEquals(123L, userCount);\r\n        Mockito.verify(mockRepository).count();\r\n    }\r\n}\r\n```","```\r\nWanted but not invoked:\r\nmockRepository.count();\r\n-> at org.baeldung.MockAnnotationTest.testMockAnnotation(MockAnnotationTest.java:22)\r\nActually, there were zero interactions with this mock.\r\n\r\n  at org.baeldung.MockAnnotationTest.testMockAnnotation(MockAnnotationTest.java:22) \r\n```","```\r\n@RunWith(SpringRunner.class)\r\npublic class MockBeanAnnotationIntegrationTest {\r\n\r\n    @MockBean\r\n    UserRepository mockRepository;\r\n\r\n    @Autowired\r\n    ApplicationContext context;\r\n\r\n    @Test\r\n    public void givenCountMethodMocked_WhenCountInvoked_ThenMockValueReturned() {\r\n        Mockito.when(mockRepository.count()).thenReturn(123L);\r\n\r\n        UserRepository userRepoFromContext = context.getBean(UserRepository.class);\r\n        long userCount = userRepoFromContext.count();\r\n\r\n        Assert.assertEquals(123L, userCount);\r\n        Mockito.verify(mockRepository).count();\r\n    }\r\n}\r\n```"]