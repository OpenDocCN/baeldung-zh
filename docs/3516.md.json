["```\r\nCountDownLatch countDownLatch = new CountDownLatch(2);\r\nThread t = new Thread(() -> {\r\n    countDownLatch.countDown();\r\n    countDownLatch.countDown();\r\n});\r\nt.start();\r\ncountDownLatch.await();\r\n\r\nassertEquals(0, countDownLatch.getCount());\r\n```","```\r\nCyclicBarrier cyclicBarrier = new CyclicBarrier(2);\r\nThread t = new Thread(() -> {\r\n    try {\r\n        cyclicBarrier.await();\r\n        cyclicBarrier.await();    \r\n    } catch (InterruptedException | BrokenBarrierException e) {\r\n        // error handling\r\n    }\r\n});\r\nt.start();\r\n\r\nassertEquals(1, cyclicBarrier.getNumberWaiting());\r\nassertFalse(cyclicBarrier.isBroken());\r\n```","```\r\nCountDownLatch countDownLatch = new CountDownLatch(7);\r\nExecutorService es = Executors.newFixedThreadPool(20);\r\nfor (int i = 0; i < 20; i++) {\r\n    es.execute(() -> {\r\n        long prevValue = countDownLatch.getCount();\r\n        countDownLatch.countDown();\r\n        if (countDownLatch.getCount() != prevValue) {\r\n            outputScraper.add(\"Count Updated\");\r\n        }\r\n    }); \r\n} \r\nes.shutdown();\r\n\r\nassertTrue(outputScraper.size() <= 7);\r\n```","```\r\nCyclicBarrier cyclicBarrier = new CyclicBarrier(7);\r\n\r\nExecutorService es = Executors.newFixedThreadPool(20);\r\nfor (int i = 0; i < 20; i++) {\r\n    es.execute(() -> {\r\n        try {\r\n            if (cyclicBarrier.getNumberWaiting() <= 0) {\r\n                outputScraper.add(\"Count Updated\");\r\n            }\r\n            cyclicBarrier.await();\r\n        } catch (InterruptedException | BrokenBarrierException e) {\r\n            // error handling\r\n        }\r\n    });\r\n}\r\nes.shutdown();\r\n\r\nassertTrue(outputScraper.size() > 7);\r\n```"]