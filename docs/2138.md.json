["```\r\n<dependency>\r\n    <groupId>org.springframework.cloud</groupId>\r\n    <artifactId>spring-cloud-starter-open-service-broker</artifactId>\r\n    <version>3.1.1.RELEASE</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n</dependency>\r\n```","```\r\nspring:\r\n  cloud:\r\n    openservicebroker:\r\n      base-path: /broker\r\n```","```\r\n@Bean\r\npublic Catalog catalog() {\r\n    Plan mailFreePlan = Plan.builder()\r\n        .id(\"fd81196c-a414-43e5-bd81-1dbb082a3c55\")\r\n        .name(\"mail-free-plan\")\r\n        .description(\"Mail Service Free Plan\")\r\n        .free(true)\r\n        .build();\r\n\r\n    ServiceDefinition serviceDefinition = ServiceDefinition.builder()\r\n        .id(\"b92c0ca7-c162-4029-b567-0d92978c0a97\")\r\n        .name(\"mail-service\")\r\n        .description(\"Mail Service\")\r\n        .bindable(true)\r\n        .tags(\"mail\", \"service\")\r\n        .plans(mailFreePlan)\r\n        .build();\r\n\r\n    return Catalog.builder()\r\n        .serviceDefinitions(serviceDefinition)\r\n        .build();\r\n}\r\n```","```\r\ncurl http://localhost:8080/broker/v2/catalog\r\n\r\n{\r\n    \"services\": [\r\n        {\r\n            \"bindable\": true,\r\n            \"description\": \"Mail Service\",\r\n            \"id\": \"b92c0ca7-c162-4029-b567-0d92978c0a97\",\r\n            \"name\": \"mail-service\",\r\n            \"plans\": [\r\n                {\r\n                    \"description\": \"Mail Service Free Plan\",\r\n                    \"free\": true,\r\n                    \"id\": \"fd81196c-a414-43e5-bd81-1dbb082a3c55\",\r\n                    \"name\": \"mail-free-plan\"\r\n                }\r\n            ],\r\n            \"tags\": [\r\n                \"mail\",\r\n                \"service\"\r\n            ]\r\n        }\r\n    ]\r\n}\r\n```","```\r\n@Override\r\npublic Mono<CreateServiceInstanceResponse> createServiceInstance(\r\n    CreateServiceInstanceRequest request) {\r\n    return Mono.just(request.getServiceInstanceId())\r\n        .flatMap(instanceId -> Mono.just(CreateServiceInstanceResponse.builder())\r\n            .flatMap(responseBuilder -> mailService.serviceInstanceExists(instanceId)\r\n                .flatMap(exists -> {\r\n                    if (exists) {\r\n                        return mailService.getServiceInstance(instanceId)\r\n                            .flatMap(mailServiceInstance -> Mono.just(responseBuilder\r\n                                .instanceExisted(true)\r\n                                .dashboardUrl(mailServiceInstance.getDashboardUrl())\r\n                                .build()));\r\n                    } else {\r\n                        return mailService.createServiceInstance(\r\n                            instanceId, request.getServiceDefinitionId(), request.getPlanId())\r\n                            .flatMap(mailServiceInstance -> Mono.just(responseBuilder\r\n                                .instanceExisted(false)\r\n                                .dashboardUrl(mailServiceInstance.getDashboardUrl())\r\n                                .build()));\r\n                    }\r\n                })));\r\n}\r\n```","```\r\ncurl -X PUT http://localhost:8080/broker/v2/service_instances/[[email protected]](/web/20220628163443/https://www.baeldung.com/cdn-cgi/l/email-protection) \r\n  -H 'Content-Type: application/json' \r\n  -d '{\r\n    \"service_id\": \"b92c0ca7-c162-4029-b567-0d92978c0a97\", \r\n    \"plan_id\": \"fd81196c-a414-43e5-bd81-1dbb082a3c55\"\r\n  }' \r\n\r\n{\"dashboard_url\":\"http://localhost:8080/mail-dashboard/[[email protected]](/web/20220628163443/https://www.baeldung.com/cdn-cgi/l/email-protection)\"}\r\n```","```\r\n@Override\r\npublic Mono<CreateServiceInstanceBindingResponse> createServiceInstanceBinding(\r\n    CreateServiceInstanceBindingRequest request) {\r\n    return Mono.just(CreateServiceInstanceAppBindingResponse.builder())\r\n        .flatMap(responseBuilder -> mailService.serviceBindingExists(\r\n            request.getServiceInstanceId(), request.getBindingId())\r\n            .flatMap(exists -> {\r\n                if (exists) {\r\n                    return mailService.getServiceBinding(\r\n                        request.getServiceInstanceId(), request.getBindingId())\r\n                        .flatMap(serviceBinding -> Mono.just(responseBuilder\r\n                            .bindingExisted(true)\r\n                            .credentials(serviceBinding.getCredentials())\r\n                            .build()));\r\n                } else {\r\n                    return mailService.createServiceBinding(\r\n                        request.getServiceInstanceId(), request.getBindingId())\r\n                        .switchIfEmpty(Mono.error(\r\n                            new ServiceInstanceDoesNotExistException(\r\n                                request.getServiceInstanceId())))\r\n                        .flatMap(mailServiceBinding -> Mono.just(responseBuilder\r\n                            .bindingExisted(false)\r\n                            .credentials(mailServiceBinding.getCredentials())\r\n                            .build()));\r\n                }\r\n            }));\r\n}\r\n```","```\r\ncurl -X PUT \r\n  http://localhost:8080/broker/v2/service_instances/[[email protected]](/web/20220628163443/https://www.baeldung.com/cdn-cgi/l/email-protection)/service_bindings/admin \r\n  -H 'Content-Type: application/json' \r\n  -d '{ \r\n    \"service_id\": \"b92c0ca7-c162-4029-b567-0d92978c0a97\", \r\n    \"plan_id\": \"fd81196c-a414-43e5-bd81-1dbb082a3c55\" \r\n  }'\r\n\r\n{\r\n    \"credentials\": {\r\n        \"password\": \"bea65996-3871-4319-a6bb-a75df06c2a4d\",\r\n        \"uri\": \"http://localhost:8080/mail-system/[[email protected]](/web/20220628163443/https://www.baeldung.com/cdn-cgi/l/email-protection)\",\r\n        \"username\": \"admin\"\r\n    }\r\n}\r\n```"]