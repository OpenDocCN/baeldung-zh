["```\r\npublic class Student {\r\n    private int no;\r\n    private String name;\r\n\r\n    // standard constructors, getters and setters\r\n}\r\n```","```\r\n<beans ...>\r\n    <bean id=\"student\" class=\"com.baeldung.applicationcontext.Student\">\r\n        <property name=\"no\" value=\"15\"/>\r\n        <property name=\"name\" value=\"Tom\"/>\r\n    </bean>\r\n</beans>\r\n```","```\r\n@Test\r\npublic void testBasicUsage() {\r\n    ApplicationContext context \r\n      = new ClassPathXmlApplicationContext(\r\n        \"classpathxmlapplicationcontext-example.xml\");\r\n\r\n    Student student = (Student) context.getBean(\"student\");\r\n    assertThat(student.getNo(), equalTo(15));\r\n    assertThat(student.getName(), equalTo(\"Tom\"));\r\n\r\n    Student sameStudent = context.getBean(\"student\", Student.class);\r\n    assertThat(sameStudent.getNo(), equalTo(15));\r\n    assertThat(sameStudent.getName(), equalTo(\"Tom\"));\r\n}\r\n```","```\r\nApplicationContext context \r\n  = new ClassPathXmlApplicationContext(\"ctx.xml\", \"ctx2.xml\");\r\n```","```\r\npublic void destroy() {\r\n    System.out.println(\"Student(no: \" + no + \") is destroyed\");\r\n}\r\n```","```\r\n<beans ...>\r\n    <bean id=\"student\" class=\"com.baeldung.applicationcontext.Student\" \r\n      destroy-method=\"destroy\">\r\n        <property name=\"no\" value=\"15\"/>\r\n        <property name=\"name\" value=\"Tom\"/>\r\n    </bean>\r\n</beans>\r\n```","```\r\n@Test\r\npublic void testRegisterShutdownHook() {\r\n    ConfigurableApplicationContext context \r\n      = new ClassPathXmlApplicationContext(\r\n        \"classpathxmlapplicationcontext-example.xml\");\r\n    context.registerShutdownHook();\r\n}\r\n```","```\r\nhello=hello\r\nyou=you\r\nthanks=thank {0}\r\n```","```\r\nhello=\\u4f60\\u597d\r\nyou=\\u4f60\r\nthanks=\\u8c22\\u8c22{0}\r\n```","```\r\n<beans ...>\r\n    <bean id=\"messageSource\"\r\n      class=\"org.springframework.context.support.ResourceBundleMessageSource\">\r\n        <property name=\"basenames\">\r\n            <list>\r\n                <value>dialog/dialog</value>\r\n            </list>\r\n        </property>\r\n    </bean>\r\n</beans>\r\n```","```\r\n@Test\r\npublic void testInternationalization() {\r\n    MessageSource resources \r\n      = new ClassPathXmlApplicationContext(\r\n        \"classpathxmlapplicationcontext-internationalization.xml\");\r\n\r\n    String enHello = resources.getMessage(\r\n      \"hello\", null, \"Default\", Locale.ENGLISH);\r\n    String enYou = resources.getMessage(\r\n      \"you\", null, Locale.ENGLISH);\r\n    String enThanks = resources.getMessage(\r\n      \"thanks\", new Object[] { enYou }, Locale.ENGLISH);\r\n\r\n    assertThat(enHello, equalTo(\"hello\"));\r\n    assertThat(enThanks, equalTo(\"thank you\"));\r\n\r\n    String chHello = resources.getMessage(\r\n      \"hello\", null, \"Default\", Locale.SIMPLIFIED_CHINESE);\r\n    String chYou = resources.getMessage(\r\n      \"you\", null, Locale.SIMPLIFIED_CHINESE);\r\n    String chThanks = resources.getMessage(\r\n      \"thanks\", new Object[] { chYou }, Locale.SIMPLIFIED_CHINESE);\r\n\r\n    assertThat(chHello, equalTo(\"你好\"));\r\n    assertThat(chThanks, equalTo(\"谢谢你\"));\r\n}\r\n```","```\r\npublic class Course {\r\n\r\n    private String name;\r\n\r\n    // standard constructors, getters and setters\r\n}\r\n```","```\r\npublic class Teacher implements ApplicationContextAware {\r\n\r\n    private ApplicationContext context;\r\n    private List<Course> courses = new ArrayList<>();\r\n\r\n    @Override\r\n    public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {\r\n        this.context = applicationContext;\r\n    }\r\n\r\n    @PostConstruct\r\n    public void addCourse() {\r\n        if (context.containsBean(\"math\")) {\r\n            Course math = context.getBean(\"math\", Course.class);\r\n            courses.add(math);\r\n        }\r\n        if (context.containsBean(\"physics\")) {\r\n            Course physics = context.getBean(\"physics\", Course.class);\r\n            courses.add(physics);\r\n        }\r\n    }\r\n\r\n    // standard constructors, getters and setters\r\n}\r\n```","```\r\n<beans ...>\r\n    <bean id=\"math\" class=\"com.baeldung.applicationcontext.Course\">\r\n        <property name=\"name\" value=\"math\"/>\r\n    </bean>\r\n\r\n    <bean name=\"teacher\" class=\"com.baeldung.applicationcontext.Teacher\"/>\r\n</beans>\r\n```","```\r\n@Test\r\npublic void testApplicationContextAware() {\r\n    ApplicationContext context \r\n       = new ClassPathXmlApplicationContext(\r\n         \"classpathxmlapplicationcontext-example.xml\");\r\n    Teacher teacher = context.getBean(\"teacher\", Teacher.class);\r\n    List<Course> courses = teacher.getCourses();\r\n\r\n    assertThat(courses.size(), equalTo(1));\r\n    assertThat(courses.get(0).getName(), equalTo(\"math\"));\r\n}\r\n```","```\r\npublic class Teacher {\r\n\r\n    @Autowired\r\n    private ApplicationContext context;\r\n    private List<Course> courses = new ArrayList<>();\r\n\r\n    @PostConstruct\r\n    public void addCourse() {\r\n        if (context.containsBean(\"math\")) {\r\n            Course math = context.getBean(\"math\", Course.class);\r\n            courses.add(math);\r\n        }\r\n        if (context.containsBean(\"physics\")) {\r\n            Course physics = context.getBean(\"physics\", Course.class);\r\n            courses.add(physics);\r\n        }\r\n    }\r\n\r\n    // standard constructors, getters and setters\r\n}\r\n```"]