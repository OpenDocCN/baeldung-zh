["```\r\n@Configuration\r\n@ComponentScan(basePackages = \"com.baeldung.annotations\")\r\nclass VehicleFactoryConfig {}\r\n```","```\r\n@Configuration\r\n@ComponentScan(basePackageClasses = VehicleFactoryConfig.class)\r\nclass VehicleFactoryConfig {}\r\n```","```\r\n@Configuration\r\n@ComponentScan(basePackages = \"com.baeldung.annotations\")\r\n@ComponentScan(basePackageClasses = VehicleFactoryConfig.class)\r\nclass VehicleFactoryConfig {}\r\n```","```\r\n@Configuration\r\n@ComponentScans({ \r\n  @ComponentScan(basePackages = \"com.baeldung.annotations\"), \r\n  @ComponentScan(basePackageClasses = VehicleFactoryConfig.class)\r\n})\r\nclass VehicleFactoryConfig {}\r\n```","```\r\n<context:component-scan base-package=\"com.baeldung\" />\r\n```","```\r\n@Component\r\nclass CarUtility {\r\n    // ...\r\n}\r\n```","```\r\n@Repository\r\nclass VehicleRepository {\r\n    // ...\r\n}\r\n```","```\r\n@Bean\r\npublic PersistenceExceptionTranslationPostProcessor exceptionTranslation() {\r\n    return new PersistenceExceptionTranslationPostProcessor();\r\n}\r\n```","```\r\n<bean class=\r\n  \"org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor\"/>\r\n```","```\r\n@Service\r\npublic class VehicleService {\r\n    // ...    \r\n}\r\n```","```\r\n@Controller\r\npublic class VehicleController {\r\n    // ...\r\n}\r\n```","```\r\n@Configuration\r\nclass VehicleFactoryConfig {\r\n\r\n    @Bean\r\n    Engine engine() {\r\n        return new Engine();\r\n    }\r\n\r\n}\r\n```","```\r\n@Aspect\r\n@Component\r\npublic class PerformanceAspect {\r\n    @Pointcut(\"within(@org.springframework.stereotype.Repository *)\")\r\n    public void repositoryClassMethods() {};\r\n\r\n    @Around(\"repositoryClassMethods()\")\r\n    public Object measureMethodExecutionTime(ProceedingJoinPoint joinPoint) \r\n      throws Throwable {\r\n        long start = System.nanoTime();\r\n        Object returnValue = joinPoint.proceed();\r\n        long end = System.nanoTime();\r\n        String methodName = joinPoint.getSignature().getName();\r\n        System.out.println(\r\n          \"Execution of \" + methodName + \" took \" + \r\n          TimeUnit.NANOSECONDS.toMillis(end - start) + \" ms\");\r\n        return returnValue;\r\n    }\r\n}\r\n```"]