["```\r\n@GetMapping(\"/rest/books\")\r\npublic List<Book> books() {\r\n    return booksService.getBooks();\r\n}\r\n```","```\r\nthis.mockMvc.perform(get(\"/rest/books\"))\r\n  .andDo(print())\r\n  .andExpect(status().isOk())\r\n  .andExpect(content().json(expectedJson));\r\n```","```\r\n$ curl http://localhost:8082/rest/books\r\n```","```\r\ntype Author {\r\n    firstName: String!\r\n    lastName: String!\r\n}\r\n\r\ntype Book {\r\n    title: String!\r\n    year: Int!\r\n    author: Author!\r\n}\r\n\r\ntype Query {\r\n    books: [Book]\r\n} \r\n```","```\r\n@QueryMapping\r\npublic List<Book> books() {\r\n    return booksService.getBooks();\r\n}\r\n```","```\r\nthis.graphQlTester.document(document)\r\n  .execute()\r\n  .path(\"books\")\r\n  .matchesJson(expectedJson);\r\n```","```\r\n$ curl -X POST -H \"Content-Type: application/json\" -d \"{\\\"query\\\":\\\"query{books{title}}\\\"}\" http://localhost:8082/graphql\r\n```","```\r\nmessage BooksRequest {}\r\n\r\nmessage AuthorProto {\r\n    string firstName = 1;\r\n    string lastName = 2;\r\n}\r\n\r\nmessage BookProto {\r\n    string title = 1;\r\n    AuthorProto author = 2;\r\n    int32 year = 3;\r\n}\r\n\r\nmessage BooksResponse {\r\n    repeated BookProto book = 1;\r\n}\r\n\r\nservice BooksService {\r\n    rpc books(BooksRequest) returns (BooksResponse);\r\n}\r\n```","```\r\n<plugin>\r\n    <groupId>org.xolstice.maven.plugins</groupId>\r\n    <artifactId>protobuf-maven-plugin</artifactId>\r\n    <version>${protobuf-plugin.version}</version>\r\n    <configuration>\r\n        <protocArtifact>com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}</protocArtifact>\r\n        <pluginId>grpc-java</pluginId>\r\n        <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}</pluginArtifact>\r\n    </configuration>\r\n    <executions>\r\n        <execution>\r\n            <goals>\r\n                <goal>compile</goal>\r\n                <goal>compile-custom</goal>\r\n            </goals>\r\n        </execution>\r\n    </executions>\r\n</plugin>\r\n```","```\r\n@Override\r\npublic void books(BooksRequest request, StreamObserver<BooksResponse> responseObserver) {\r\n    List<Book> books = booksService.getBooks();\r\n    BooksResponse.Builder responseBuilder = BooksResponse.newBuilder();\r\n    books.forEach(book -> responseBuilder.addBook(GrpcBooksMapper.mapBookToProto(book)));\r\n\r\n    responseObserver.onNext(responseBuilder.build());\r\n    responseObserver.onCompleted();\r\n}\r\n```","```\r\nBooksRequest request = BooksRequest.newBuilder().build();\r\nBooksResponse response = booksServiceGrpc.books(request);\r\n\r\nList<Book> books = response.getBookList().stream()\r\n  .map(GrpcBooksMapper::mapProtoToBook)\r\n  .collect(Collectors.toList());     \r\n\r\nJSONAssert.assertEquals(objectMapper.writeValueAsString(books), expectedJson, true);\r\n```","```\r\n$ grpcurl --plaintext localhost:9090 com.baeldung.chooseapi.BooksService/books\r\n```"]