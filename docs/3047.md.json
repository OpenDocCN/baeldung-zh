["```\r\npublic interface Shape {\r\n}\r\n```","```\r\npublic class Triangle implements Shape {\r\n}\r\n```","```\r\npublic class IsoscelesTriangle extends Triangle {\r\n}\r\n```","```\r\nShape shape = new Triangle();\r\nTriangle triangle = new Triangle();\r\nIsoscelesTriangle isoscelesTriangle = new IsoscelesTriangle();\r\nShape nonspecificShape = null;\r\n\r\nassertTrue(shape instanceof Shape);\r\nassertTrue(triangle instanceof Shape);\r\nassertTrue(isoscelesTriangle instanceof Shape);\r\nassertFalse(nonspecificShape instanceof Shape);\r\n\r\nassertTrue(shape instanceof Triangle);\r\nassertTrue(triangle instanceof Triangle);\r\nassertTrue(isoscelesTriangle instanceof Triangle);\r\nassertFalse(nonspecificShape instanceof Triangle);\r\n\r\nassertFalse(shape instanceof IsoscelesTriangle);\r\nassertFalse(triangle instanceof IsoscelesTriangle);\r\nassertTrue(isoscelesTriangle instanceof IsoscelesTriangle);\r\nassertFalse(nonspecificShape instanceof IsoscelesTriangle);\r\n```","```\r\nShape shape = new Triangle();\r\nTriangle triangle = new Triangle();\r\nIsoscelesTriangle isoscelesTriangle = new IsoscelesTriangle();\r\nTriangle isoscelesTriangle2 = new IsoscelesTriangle();\r\nShape nonspecificShape = null;\r\n\r\nassertTrue(Shape.class.isInstance(shape));\r\nassertTrue(Shape.class.isInstance(triangle));\r\nassertTrue(Shape.class.isInstance(isoscelesTriangle));\r\nassertTrue(Shape.class.isInstance(isoscelesTriangle2));\r\nassertFalse(Shape.class.isInstance(nonspecificShape));\r\n\r\nassertTrue(Triangle.class.isInstance(shape));\r\nassertTrue(Triangle.class.isInstance(triangle));\r\nassertTrue(Triangle.class.isInstance(isoscelesTriangle));\r\nassertTrue(Triangle.class.isInstance(isoscelesTriangle2));\r\n\r\nassertFalse(IsoscelesTriangle.class.isInstance(shape));\r\nassertFalse(IsoscelesTriangle.class.isInstance(triangle));\r\nassertTrue(IsoscelesTriangle.class.isInstance(isoscelesTriangle));\r\nassertTrue(IsoscelesTriangle.class.isInstance(isoscelesTriangle2));\r\n```","```\r\nShape shape = new Triangle();\r\nTriangle triangle = new Triangle();\r\nIsoscelesTriangle isoscelesTriangle = new IsoscelesTriangle();\r\nTriangle isoscelesTriangle2 = new IsoscelesTriangle();\r\n\r\nassertFalse(shape.getClass().isAssignableFrom(Shape.class));\r\nassertTrue(shape.getClass().isAssignableFrom(shape.getClass()));\r\nassertTrue(shape.getClass().isAssignableFrom(triangle.getClass()));\r\nassertTrue(shape.getClass().isAssignableFrom(isoscelesTriangle.getClass()));\r\nassertTrue(shape.getClass().isAssignableFrom(isoscelesTriangle2.getClass()));\r\n\r\nassertFalse(triangle.getClass().isAssignableFrom(Shape.class));\r\nassertTrue(triangle.getClass().isAssignableFrom(shape.getClass()));\r\nassertTrue(triangle.getClass().isAssignableFrom(triangle.getClass()));\r\nassertTrue(triangle.getClass().isAssignableFrom(isoscelesTriangle.getClass()));\r\nassertTrue(triangle.getClass().isAssignableFrom(isoscelesTriangle2.getClass()));\r\n\r\nassertFalse(isoscelesTriangle.getClass().isAssignableFrom(Shape.class));\r\nassertFalse(isoscelesTriangle.getClass().isAssignableFrom(shape.getClass()));\r\nassertFalse(isoscelesTriangle.getClass().isAssignableFrom(triangle.getClass()));\r\nassertTrue(isoscelesTriangle.getClass().isAssignableFrom(isoscelesTriangle.getClass()));\r\nassertTrue(isoscelesTriangle.getClass().isAssignableFrom(isoscelesTriangle2.getClass()));\r\n\r\nassertFalse(isoscelesTriangle2.getClass().isAssignableFrom(Shape.class));\r\nassertFalse(isoscelesTriangle2.getClass().isAssignableFrom(shape.getClass()));\r\nassertFalse(isoscelesTriangle2.getClass().isAssignableFrom(triangle.getClass()));\r\nassertTrue(isoscelesTriangle2.getClass().isAssignableFrom(isoscelesTriangle.getClass()));\r\nassertTrue(isoscelesTriangle2.getClass().isAssignableFrom(isoscelesTriangle2.getClass()));\r\n```","```\r\nassertFalse(null instanceof Shape);\r\nassertFalse(Shape.class.isInstance(null));\r\nassertFalse(Shape.class.isAssignableFrom(null)); // NullPointerException\r\n```","```\r\nassertFalse(10 instanceof int); // illegal\r\nassertFalse(int.class.isInstance(10));\r\nassertTrue(Integer.class.isInstance(10));\r\nassertTrue(int.class.isAssignableFrom(int.class));\r\nassertFalse(float.class.isAssignableFrom(int.class));\r\n```","```\r\nShape shape = new Triangle();\r\nTriangle triangle = new Triangle();\r\nClass<?> clazz = shape.getClass();\r\n\r\nassertFalse(triangle instanceof clazz); // illegal\r\nassertTrue(clazz.isInstance(triangle));\r\nassertTrue(clazz.isAssignableFrom(triangle.getClass()));\r\n```","```\r\ninstanceof\r\nindexbyte1\r\nindexbyte2\r\n```","```\r\ninvokevirtual\r\nindexbyte1\r\nindexbyte2\r\n```"]