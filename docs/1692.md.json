["```\r\npublic static byte[] floatToByteArray(float value) {\r\n    int intBits =  Float.floatToIntBits(value);\r\n    return new byte[] {\r\n      (byte) (intBits >> 24), (byte) (intBits >> 16), (byte) (intBits >> 8), (byte) (intBits) };\r\n}\r\n```","```\r\nByteBuffer.allocate(4).putFloat(value).array();\r\n```","```\r\npublic static float byteArrayToFloat(byte[] bytes) {\r\n    int intBits = \r\n      bytes[0] << 24 | (bytes[1] & 0xFF) << 16 | (bytes[2] & 0xFF) << 8 | (bytes[3] & 0xFF);\r\n    return Float.intBitsToFloat(intBits);  \r\n}\r\n```","```\r\nByteBuffer.wrap(bytes).getFloat(); \r\n```","```\r\npublic void givenAFloat_thenConvertToByteArray() {\r\n    assertArrayEquals(new byte[] { 63, -116, -52, -51}, floatToByteArray(1.1f));\r\n}\r\n\r\n@Test\r\npublic void givenAByteArray_thenConvertToFloat() {\r\n   assertEquals(1.1f, byteArrayToFloat(new byte[] { 63, -116, -52, -51}), 0);\r\n}\r\n```"]