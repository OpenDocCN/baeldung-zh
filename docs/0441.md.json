["```\r\n<dependency>\r\n    <groupId>org.twitter4j</groupId>\r\n    <artifactId>twitter4j-stream</artifactId>\r\n    <version>4.0.6</version>\r\n</dependency>\r\n```","```\r\noauth.consumerKey =       // your key\r\noauth.consumerSecret =    // your secret\r\noauth.accessToken =       // your token\r\noauth.accessTokenSecret = // your token secret\r\n```","```\r\nConfigurationBuilder cb = new ConfigurationBuilder();\r\ncb.setDebugEnabled(true)\r\n  .setOAuthConsumerKey(\"your consumer key\")\r\n  .setOAuthConsumerSecret(\"your consumer secret\")\r\n  .setOAuthAccessToken(\"your access token\")\r\n  .setOAuthAccessTokenSecret(\"your access token secret\");\r\nTwitterFactory tf = new TwitterFactory(cb.build());\r\nTwitter twitter = tf.getInstance();\r\n```","```\r\n$ export twitter4j.oauth.consumerKey =       // your key\r\n$ export twitter4j.oauth.consumerSecret =    // your secret\r\n$ export twitter4j.oauth.accessToken =       // your access token\r\n$ export twitter4j.oauth.accessTokenSecret = // your access token secret\r\n```","```\r\npublic String createTweet(String tweet) throws TwitterException {\r\n    Twitter twitter = getTwitterinstance();\r\n    Status status = twitter.updateStatus(\"creating baeldung API\");\r\n    return status.getText();\r\n}\r\n```","```\r\npublic List<String> getTimeLine() throws TwitterException {\r\n    Twitter twitter = getTwitterinstance();\r\n\r\n    return twitter.getHomeTimeline().stream()\r\n      .map(item -> item.getText())\r\n      .collect(Collectors.toList());\r\n}\r\n```","```\r\npublic static String sendDirectMessage(String recipientName, String msg) \r\n  throws TwitterException {\r\n\r\n    Twitter twitter = getTwitterinstance();\r\n    DirectMessage message = twitter.sendDirectMessage(recipientName, msg);\r\n    return message.getText();\r\n}\r\n```","```\r\npublic static List<String> searchtweets() throws TwitterException {\r\n\r\n    Twitter twitter = getTwitterinstance();\r\n    Query query = new Query(\"source:twitter4j baeldung\");\r\n    QueryResult result = twitter.search(query);\r\n\r\n    return result.getTweets().stream()\r\n      .map(item -> item.getText())\r\n      .collect(Collectors.toList());\r\n}\r\n```","```\r\npublic static void streamFeed() {\r\n\r\n    StatusListener listener = new StatusListener() {\r\n\r\n        @Override\r\n        public void onException(Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        @Override\r\n        public void onDeletionNotice(StatusDeletionNotice arg) {\r\n        }\r\n        @Override\r\n        public void onScrubGeo(long userId, long upToStatusId) {\r\n        }\r\n        @Override\r\n        public void onStallWarning(StallWarning warning) {\r\n        }\r\n        @Override\r\n        public void onStatus(Status status) {\r\n        }\r\n        @Override\r\n        public void onTrackLimitationNotice(int numberOfLimitedStatuses) {\r\n        }\r\n    };\r\n\r\n    TwitterStream twitterStream = new TwitterStreamFactory().getInstance();\r\n\r\n    twitterStream.addListener(listener);\r\n\r\n    twitterStream.sample();\r\n}\r\n```"]