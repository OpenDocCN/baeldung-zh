["```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter</artifactId>\r\n    <version>2.3.3.RELEASE</version>\r\n</dependency>\r\n```","```\r\n@Configuration\r\npublic class TestConfiguration1 {\r\n\r\n    class TestBean1 {\r\n        private String name;\r\n\r\n        // standard getters and setters\r\n\r\n    }\r\n\r\n    @Bean\r\n    public TestBean1 testBean(){\r\n        return new TestBean1();\r\n    }\r\n} \r\n```","```\r\n@Configuration\r\npublic class TestConfiguration2 {\r\n\r\n    class TestBean2 {\r\n        private String name;\r\n\r\n        // standard getters and setters\r\n\r\n    }\r\n\r\n    @Bean\r\n    public TestBean2 testBean(){\r\n        return new TestBean2();\r\n    }\r\n} \r\n```","```\r\n@RunWith(SpringRunner.class)\r\n@SpringBootTest(classes = {TestConfiguration1.class, TestConfiguration2.class})\r\npublic class SpringBootBeanDefinitionOverrideExceptionIntegrationTest {\r\n\r\n    @Test\r\n    public void whenBeanOverridingAllowed_thenTestBean2OverridesTestBean1() {\r\n        Object testBean = applicationContext.getBean(\"testBean\");\r\n\r\n        assertThat(testBean.getClass()).isEqualTo(TestConfiguration2.TestBean2.class);\r\n    }\r\n} \r\n```","```\r\nInvalid bean definition with name 'testBean' defined in ... \r\n... com.baeldung.beandefinitionoverrideexception.TestConfiguration2 ...\r\nCannot register bean definition [ ... defined in ... \r\n... com.baeldung.beandefinitionoverrideexception.TestConfiguration2] for bean 'testBean' ...\r\nThere is already [ ... defined in ...\r\n... com.baeldung.beandefinitionoverrideexception.TestConfiguration1] bound. \r\n```","```\r\nInvalid bean definition with name 'testBean' ... \r\n```","```\r\n... com.baeldung.beandefinitionoverrideexception.TestConfiguration2 ...\r\n... com.baeldung.beandefinitionoverrideexception.TestConfiguration1 ... \r\n```","```\r\n@Bean\r\npublic TestBean1 testBean1() {\r\n    return new TestBean1();\r\n} \r\n```","```\r\n@Bean\r\npublic TestBean2 testBean2() {\r\n    return new TestBean2();\r\n} \r\n```","```\r\n@Bean(\"testBean1\")\r\npublic TestBean1 testBean() {\r\n    return new TestBean1();\r\n} \r\n```","```\r\n@Bean(\"testBean2\")\r\npublic TestBean1 testBean() {\r\n    return new TestBean2();\r\n} \r\n```","```\r\n@Component(\"testBean1\")\r\nclass TestBean1 {\r\n\r\n    private String name;\r\n\r\n    // standard getters and setters\r\n\r\n} \r\n```","```\r\n@Component(\"testBean2\")\r\nclass TestBean2 {\r\n\r\n    private String name;\r\n\r\n    // standard getters and setters\r\n\r\n} \r\n```","```\r\nspring.main.allow-bean-definition-overriding=true \r\n```"]