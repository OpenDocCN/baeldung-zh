["```\r\nversion: \"3.5\"\r\n\r\nservices:\r\n  test1:\r\n    image: node\r\n    command: node -e \"const http = require('http'); http.createServer((req, res) => { res.write('Hello from test1\\n'); res.end() }).listen(8080)\"\r\n    ports:\r\n      - \"8080:8080\"\r\n    networks:\r\n      - network1\r\n  test2:\r\n    image: node\r\n    command: node -e \"const http = require('http'); http.createServer((req, res) => { res.write('Hello from test2\\n'); res.end() }).listen(8080)\"\r\n    ports:\r\n      - \"8081:8080\"\r\n    networks:\r\n      - network1\r\n      - network2\r\n  test3:\r\n    image: node\r\n    command: node -e \"const http = require('http'); http.createServer((req, res) => { res.write('Hello from test3\\n'); res.end() }).listen(8080)\"\r\n    ports:\r\n      - \"8082:8080\"\r\n    networks:\r\n      - network2\r\n\r\nnetworks:\r\n  network1:\r\n    name: network1\r\n  network2:\r\n    name: network2 \r\n```","```\r\n$ docker-compose up -d\r\nStarting bael_test2_1 ... done\r\nStarting bael_test3_1 ... done\r\nStarting bael_test1_1 ... done\r\n```","```\r\n$ docker network ls\r\nNETWORK ID          NAME                DRIVER              SCOPE\r\n86e6a8138c0d        bridge              bridge              local\r\n73402de5766c        host                host                local\r\ne943f7124776        network1            bridge              local\r\n3b9a28673a16        network2            bridge              local\r\n9361d16a834a        none                null                local\r\n```","```\r\n$ docker inspect network1 network2\r\n[\r\n    {\r\n        \"Name\": \"network1\",\r\n        \"Id\": \"e943f7124776d45a1481ee26795b2dba3f2ab51f000d875a179a99ce832eee9f\",\r\n        \"Created\": \"2020-08-22T10:38:22.198709146Z\",\r\n        \"Scope\": \"local\",\r\n        \"Driver\": \"bridge\",\r\n        \"EnableIPv6\": false,\r\n        // output cutout for brevity\r\n    }\r\n],\r\n    {\r\n        \"Name\": \"network2\",\r\n        // output cutout for brevity\r\n    }\r\n}\r\n```","```\r\n$ docker inspect -f '{{range .IPAM.Config}}{{.Subnet}}{{end}}' network1\r\n172.22.0.0/16\r\n```","```\r\n$ docker ps --format 'table {{.ID}}\\t{{.Names}}'\r\nCONTAINER ID        NAMES\r\n78c10f03ad89        bael_test2_1\r\nf229dde68f3b        bael_test3_1\r\nb09a8f47e2a8        bael_test1_1\r\n```","```\r\n$ docker inspect 78c10f03ad89 --format '{{.NetworkSettings.Networks.network1.IPAddress}}'\r\n172.22.0.2\r\n$ docker inspect 78c10f03ad89 --format '{{.NetworkSettings.Networks.network2.IPAddress}}'\r\n172.23.0.3\r\n```","```\r\n$ docker exec 78c10f03ad89 cat /etc/hosts\r\n127.0.0.1\tlocalhost\r\n::1\tlocalhost ip6-localhost ip6-loopback\r\nfe00::0\tip6-localnet\r\nff00::0\tip6-mcastprefix\r\nff02::1\tip6-allnodes\r\nff02::2\tip6-allrouters\r\n172.22.0.2\t78c10f03ad89\r\n172.23.0.3\t78c10f03ad89\r\n```","```\r\n$ docker exec -it b09a8f47e2a8 /bin/bash\r\n```","```\r\n[[email protected]](/web/20220727020703/https://www.baeldung.com/cdn-cgi/l/email-protection):/# curl 172.22.0.2:8080\r\nHello from test2\r\n```","```\r\n[[email protected]](/web/20220727020703/https://www.baeldung.com/cdn-cgi/l/email-protection):/# curl test2:8080\r\nHello from test2\r\n```","```\r\n[[email protected]](/web/20220727020703/https://www.baeldung.com/cdn-cgi/l/email-protection):/# curl 172.23.0.2:8080\r\n```","```\r\n[[email protected]](/web/20220727020703/https://www.baeldung.com/cdn-cgi/l/email-protection):/# curl test3:8080\r\ncurl: (6) Could not resolve host: test3\r\n```","```\r\n$ docker network connect --alias test3 network1 f229dde68f3b\r\n```","```\r\n[[email protected]](/web/20220727020703/https://www.baeldung.com/cdn-cgi/l/email-protection):/# curl test3:8080\r\nHello from test3\r\n```"]