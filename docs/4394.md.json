["```\r\nBasicTextEncryptor textEncryptor = new BasicTextEncryptor();\r\nString privateData = \"secret-data\";\r\ntextEncryptor.setPasswordCharArray(\"some-random-data\".toCharArray());\r\n```","```\r\nString myEncryptedText = textEncryptor.encrypt(privateData);\r\nassertNotSame(privateData, myEncryptedText);\r\n```","```\r\nString plainText = textEncryptor.decrypt(myEncryptedText);\r\n\r\nassertEquals(plainText, privateData);\r\n```","```\r\nString password = \"secret-pass\";\r\nBasicPasswordEncryptor passwordEncryptor = new BasicPasswordEncryptor();\r\nString encryptedPassword = passwordEncryptor.encryptPassword(password); \r\n```","```\r\nboolean result = passwordEncryptor.checkPassword(\"secret-pass\", encryptedPassword);\r\n\r\nassertTrue(result);\r\n```","```\r\nStandardPBEStringEncryptor encryptor = new StandardPBEStringEncryptor();\r\nString privateData = \"secret-data\";\r\nencryptor.setPassword(\"some-random-passwprd\");\r\nencryptor.setAlgorithm(\"PBEWithMD5AndTripleDES\");\r\n```","```\r\nString encryptedText = encryptor.encrypt(privateData);\r\nassertNotSame(privateData, encryptedText);\r\n\r\nString plainText = encryptor.decrypt(encryptedText);\r\nassertEquals(plainText, privateData);\r\n```","```\r\nPooledPBEStringEncryptor encryptor = new PooledPBEStringEncryptor();\r\nencryptor.setPoolSize(4);\r\nencryptor.setPassword(\"some-random-data\");\r\nencryptor.setAlgorithm(\"PBEWithMD5AndTripleDES\");\r\n```"]