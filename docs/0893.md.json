["```\r\nprivate static Integer doubleInteger(Integer input) {\r\n    if (input == null) {\r\n        return null;\r\n    }\r\n    return 2 * input;\r\n}\r\n```","```\r\npublic static Integer validateAndDouble(Integer input) {\r\n    if (input == null) {\r\n        throw new IllegalArgumentException(\"input should not be null\");\r\n    }\r\n    return doubleInteger(input);\r\n}\r\n```","```\r\n@Test\r\nvoid givenNull_WhenValidateAndDouble_ThenThrows() {\r\n    assertThrows(IllegalArgumentException.class, () -> validateAndDouble(null));\r\n}\r\n```","```\r\n@Test\r\nvoid givenANonNullInteger_WhenValidateAndDouble_ThenDoublesIt() {\r\n    assertEquals(4, validateAndDouble(2));\r\n}\r\n```","```\r\nprivate Method getDoubleIntegerMethod() throws NoSuchMethodException {\r\n    Method method = Utils.class.getDeclaredMethod(\"doubleInteger\", Integer.class);\r\n    method.setAccessible(true);\r\n    return method;\r\n}\r\n```","```\r\n@Test\r\nvoid givenNull_WhenDoubleInteger_ThenNull() throws InvocationTargetException, IllegalAccessException, NoSuchMethodException {\r\n    assertEquals(null, getDoubleIntegerMethod().invoke(null, new Integer[] { null }));\r\n}\r\n```","```\r\n@Test\r\nvoid givenANonNullInteger_WhenDoubleInteger_ThenDoubleIt() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {\r\n    assertEquals(74, getDoubleIntegerMethod().invoke(null, 37));\r\n}\r\n```"]