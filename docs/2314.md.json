["```\r\n<parent>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-parent</artifactId>\r\n    <version>2.4.0</version>\r\n</parent>\r\n<dependencies>\r\n    <dependency>\r\n        <groupId>org.springframework.boot</groupId>\r\n        <artifactId>spring-boot-starter-web</artifactId>\r\n    </dependency>\r\n    <dependency>\r\n        <groupId>org.springframework.boot</groupId>\r\n        <artifactId>spring-boot-starter-thymeleaf</artifactId>\r\n    </dependency>\r\n    <dependency>\r\n        <groupId>org.springframework.boot</groupId>\r\n        <artifactId>spring-boot-starter-data-jpa</artifactId>\r\n    </dependency>\r\n    <dependency>\r\n        <groupId>com.h2database</groupId>\r\n        <artifactId>h2</artifactId>\r\n    </dependency>\r\n</dependencies> \r\n```","```\r\n@Entity\r\npublic class User {\r\n\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.AUTO)\r\n    private long id;\r\n\r\n    @NotBlank(message = \"Name is mandatory\")\r\n    private String name;\r\n\r\n    @NotBlank(message = \"Email is mandatory\")\r\n    private String email;\r\n\r\n    // standard constructors / setters / getters / toString\r\n}\r\n```","```\r\n@Repository\r\npublic interface UserRepository extends CrudRepository<User, Long> {}\r\n```","```\r\n@Controller\r\npublic class UserController {\r\n\r\n    @GetMapping(\"/signup\")\r\n    public String showSignUpForm(User user) {\r\n        return \"add-user\";\r\n    }\r\n\r\n    @PostMapping(\"/adduser\")\r\n    public String addUser(@Valid User user, BindingResult result, Model model) {\r\n        if (result.hasErrors()) {\r\n            return \"add-user\";\r\n        }\r\n\r\n        userRepository.save(user);\r\n        return \"redirect:/index\";\r\n    }\r\n\r\n    // additional CRUD methods\r\n}\r\n```","```\r\n@GetMapping(\"/index\")\r\npublic String showUserList(Model model) {\r\n    model.addAttribute(\"users\", userRepository.findAll());\r\n    return \"index\";\r\n}\r\n```","```\r\n@GetMapping(\"/edit/{id}\")\r\npublic String showUpdateForm(@PathVariable(\"id\") long id, Model model) {\r\n    User user = userRepository.findById(id)\r\n      .orElseThrow(() -> new IllegalArgumentException(\"Invalid user Id:\" + id));\r\n\r\n    model.addAttribute(\"user\", user);\r\n    return \"update-user\";\r\n} \r\n```","```\r\n@PostMapping(\"/update/{id}\")\r\npublic String updateUser(@PathVariable(\"id\") long id, @Valid User user, \r\n  BindingResult result, Model model) {\r\n    if (result.hasErrors()) {\r\n        user.setId(id);\r\n        return \"update-user\";\r\n    }\r\n\r\n    userRepository.save(user);\r\n    return \"redirect:/index\";\r\n}\r\n\r\n@GetMapping(\"/delete/{id}\")\r\npublic String deleteUser(@PathVariable(\"id\") long id, Model model) {\r\n    User user = userRepository.findById(id)\r\n      .orElseThrow(() -> new IllegalArgumentException(\"Invalid user Id:\" + id));\r\n    userRepository.delete(user);\r\n    return \"redirect:/index\";\r\n}\r\n```","```\r\n<form action=\"#\" th:action=\"@{/adduser}\" th:object=\"${user}\" method=\"post\">\r\n    <label for=\"name\">Name</label>\r\n    <input type=\"text\" th:field=\"*{name}\" id=\"name\" placeholder=\"Name\">\r\n    <span th:if=\"${#fields.hasErrors('name')}\" th:errors=\"*{name}\"></span>\r\n    <label for=\"email\">Email</label>\r\n    <input type=\"text\" th:field=\"*{email}\" id=\"email\" placeholder=\"Email\">\r\n    <span th:if=\"${#fields.hasErrors('email')}\" th:errors=\"*{email}\"></span>\r\n    <input type=\"submit\" value=\"Add User\">   \r\n</form>\r\n```","```\r\n<form action=\"#\" \r\n  th:action=\"@{/update/{id}(id=${user.id})}\" \r\n  th:object=\"${user}\" \r\n  method=\"post\">\r\n    <label for=\"name\">Name</label>\r\n    <input type=\"text\" th:field=\"*{name}\" id=\"name\" placeholder=\"Name\">\r\n    <span th:if=\"${#fields.hasErrors('name')}\" th:errors=\"*{name}\"></span>\r\n    <label for=\"email\">Email</label>\r\n    <input type=\"text\" th:field=\"*{email}\" id=\"email\" placeholder=\"Email\">\r\n    <span th:if=\"${#fields.hasErrors('email')}\" th:errors=\"*{email}\"></span>\r\n    <input type=\"submit\" value=\"Update User\">   \r\n</form>\r\n```","```\r\n<div th:switch=\"${users}\">\r\n    <h2 th:case=\"null\">No users yet!</h2>\r\n        <div th:case=\"*\">\r\n            <h2>Users</h2>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                        <th>Edit</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr th:each=\"user : ${users}\">\r\n                    <td th:text=\"${user.name}\"></td>\r\n                    <td th:text=\"${user.email}\"></td>\r\n                    <td><a th:href=\"@{/edit/{id}(id=${user.id})}\">Edit</a></td>\r\n                    <td><a th:href=\"@{/delete/{id}(id=${user.id})}\">Delete</a></td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>      \r\n    <p><a href=\"/signup\">Add a new user</a></p>\r\n</div> \r\n```","```\r\n@SpringBootApplication\r\npublic class Application {\r\n\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(Application.class, args);\r\n    }\r\n}\r\n```"]