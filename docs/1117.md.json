["```\r\npublic interface Movable {\r\n    // returns speed in MPH \r\n    double getSpeed();\r\n}\r\n```","```\r\npublic class BugattiVeyron implements Movable {\r\n\r\n    @Override\r\n    public double getSpeed() {\r\n        return 268;\r\n    }\r\n}\r\n```","```\r\npublic interface MovableAdapter {\r\n    // returns speed in KM/H \r\n    double getSpeed();\r\n} \r\n```","```\r\npublic class MovableAdapterImpl implements MovableAdapter {\r\n    private Movable luxuryCars;\r\n\r\n    // standard constructors\r\n\r\n    @Override\r\n    public double getSpeed() {\r\n        return convertMPHtoKMPH(luxuryCars.getSpeed());\r\n    }\r\n\r\n    private double convertMPHtoKMPH(double mph) {\r\n        return mph * 1.60934;\r\n    }\r\n}\r\n```","```\r\n@Test\r\npublic void whenConvertingMPHToKMPH_thenSuccessfullyConverted() {\r\n    Movable bugattiVeyron = new BugattiVeyron();\r\n    MovableAdapter bugattiVeyronAdapter = new MovableAdapterImpl(bugattiVeyron);\r\n\r\n    assertEquals(bugattiVeyronAdapter.getSpeed(), 431.30312, 0.00001);\r\n}\r\n```"]