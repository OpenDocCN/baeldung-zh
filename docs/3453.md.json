["```\r\n@Component\r\npublic class CommandLineTaskExecutor implements CommandLineRunner {\r\n    private TaskService taskService;\r\n\r\n    public CommandLineTaskExecutor(TaskService taskService) {\r\n        this.taskService = taskService;\r\n    }\r\n\r\n    @Override\r\n    public void run(String... args) throws Exception {\r\n        taskService.execute(\"command line runner task\");\r\n    }\r\n} \r\n```","```\r\n@Component\r\npublic class ApplicationRunnerTaskExecutor implements ApplicationRunner {\r\n    private TaskService taskService;\r\n\r\n    public ApplicationRunnerTaskExecutor(TaskService taskService) {\r\n        this.taskService = taskService;\r\n    }\r\n\r\n    @Override\r\n    public void run(ApplicationArguments args) throws Exception {\r\n        taskService.execute(\"application runner task\");\r\n    }\r\n} \r\n```","```\r\n@Service\r\npublic class TaskService {\r\n    private static Logger logger = LoggerFactory.getLogger(TaskService.class);\r\n\r\n    public void execute(String task) {\r\n        logger.info(\"do \" + task);\r\n    }\r\n} \r\n```","```\r\n@SpringBootApplication\r\npublic class ApplicationCommandLineRunnerApp {\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(ApplicationCommandLineRunnerApp.class, args);\r\n    }\r\n}\r\n```","```\r\n@SpringBootTest\r\nclass RunApplicationIntegrationTest {\r\n    @SpyBean\r\n    ApplicationRunnerTaskExecutor applicationRunnerTaskExecutor;\r\n    @SpyBean\r\n    CommandLineTaskExecutor commandLineTaskExecutor;\r\n\r\n    @Test\r\n    void whenContextLoads_thenRunnersRun() throws Exception {\r\n        verify(applicationRunnerTaskExecutor, times(1)).run(any());\r\n        verify(commandLineTaskExecutor, times(1)).run(any());\r\n    }\r\n}\r\n```","```\r\n@Profile(\"!test\")\r\n@Component\r\npublic class CommandLineTaskExecutor implements CommandLineRunner {\r\n    // same as before\r\n}\r\n```","```\r\n@Profile(\"!test\")\r\n@Component\r\npublic class ApplicationRunnerTaskExecutor implements ApplicationRunner {\r\n    // same as before\r\n}\r\n```","```\r\n@ActiveProfiles(\"test\")\r\n@SpringBootTest\r\nclass RunApplicationWithTestProfileIntegrationTest {\r\n    @Autowired\r\n    private ApplicationContext context;\r\n\r\n    @Test\r\n    void whenContextLoads_thenRunnersAreNotLoaded() {\r\n        assertNotNull(context.getBean(TaskService.class));\r\n        assertThrows(NoSuchBeanDefinitionException.class, \r\n          () -> context.getBean(CommandLineTaskExecutor.class), \r\n          \"CommandLineRunner should not be loaded during this integration test\");\r\n        assertThrows(NoSuchBeanDefinitionException.class, \r\n          () -> context.getBean(ApplicationRunnerTaskExecutor.class), \r\n          \"ApplicationRunner should not be loaded during this integration test\");\r\n    }\r\n}\r\n```","```\r\n@ConditionalOnProperty(\r\n  prefix = \"application.runner\", \r\n  value = \"enabled\", \r\n  havingValue = \"true\", \r\n  matchIfMissing = true)\r\n@Component\r\npublic class ApplicationRunnerTaskExecutor implements ApplicationRunner {\r\n    // same as before\r\n} \r\n```","```\r\n@ConditionalOnProperty(\r\n  prefix = \"command.line.runner\", \r\n  value = \"enabled\", \r\n  havingValue = \"true\", \r\n  matchIfMissing = true)\r\n@Component\r\npublic class CommandLineTaskExecutor implements CommandLineRunner {\r\n    // same as before\r\n}\r\n```","```\r\n@SpringBootTest(properties = { \r\n  \"command.line.runner.enabled=false\", \r\n  \"application.runner.enabled=false\" })\r\nclass RunApplicationWithTestPropertiesIntegrationTest {\r\n    // same as before\r\n}\r\n```","```\r\n@BootstrapWith(SpringBootTestContextBootstrapper.class)\r\n@ExtendWith(SpringExtension.class) \r\n```","```\r\n@ContextConfiguration(classes = {ApplicationCommandLineRunnerApp.class},\r\n  initializers = ConfigDataApplicationContextInitializer.class)\r\n```","```\r\n@ExtendWith(SpringExtension.class)\r\n@ContextConfiguration(classes = { ApplicationCommandLineRunnerApp.class }, \r\n  initializers = ConfigDataApplicationContextInitializer.class)\r\npublic class LoadSpringContextIntegrationTest {\r\n    @SpyBean\r\n    TaskService taskService;\r\n\r\n    @SpyBean\r\n    CommandLineRunner commandLineRunner;\r\n\r\n    @SpyBean\r\n    ApplicationRunner applicationRunner;\r\n\r\n    @Test\r\n    void whenContextLoads_thenRunnersDoNotRun() throws Exception {\r\n        assertNotNull(taskService);\r\n        assertNotNull(commandLineRunner);\r\n        assertNotNull(applicationRunner);\r\n\r\n        verify(taskService, times(0)).execute(any());\r\n        verify(commandLineRunner, times(0)).run(any());\r\n        verify(applicationRunner, times(0)).run(any());\r\n    }\r\n} \r\n```"]