["```\r\n<dependency>\r\n    <groupId>org.ehcache</groupId>\r\n    <artifactId>ehcache</artifactId>\r\n    <version>3.1.3</version>\r\n</dependency>\r\n```","```\r\npublic class CacheHelper {\r\n\r\n    private CacheManager cacheManager;\r\n    private Cache<Integer, Integer> squareNumberCache;\r\n\r\n    public CacheHelper() {\r\n        cacheManager = CacheManagerBuilder\r\n          .newCacheManagerBuilder().build();\r\n        cacheManager.init();\r\n\r\n        squareNumberCache = cacheManager\r\n          .createCache(\"squaredNumber\", CacheConfigurationBuilder\r\n            .newCacheConfigurationBuilder(\r\n              Integer.class, Integer.class,\r\n              ResourcePoolsBuilder.heap(10)));\r\n    }\r\n\r\n    public Cache<Integer, Integer> getSquareNumberCacheFromCacheManager() {\r\n        return cacheManager.getCache(\"squaredNumber\", Integer.class, Integer.class);\r\n    }\r\n\r\n    // standard getters and setters\r\n}\r\n```","```\r\n<cache-template name=\"squaredNumber\">\r\n    <key-type>java.lang.Integer</key-type>\r\n    <value-type>java.lang.Integer</value-type>\r\n    <heap unit=\"entries\">10</heap>\r\n</cache-template>\r\n```","```\r\nURL myUrl = getClass().getResource(xmlFile); \r\nXmlConfiguration xmlConfig = new XmlConfiguration(myUrl); \r\nCacheManager myCacheManager = CacheManagerBuilder\r\n  .newCacheManager(xmlConfig);\r\n```","```\r\npublic class SquaredCalculator {\r\n    private CacheHelper cache;\r\n\r\n    public int getSquareValueOfNumber(int input) {\r\n        if (cache.getSquareNumberCache().containsKey(input)) {\r\n            return cache.getSquareNumberCache().get(input);\r\n        }\r\n\r\n        System.out.println(\"Calculating square value of \" + input + \r\n          \" and caching result.\");\r\n\r\n        int squaredValue = (int) Math.pow(input, 2);\r\n        cache.getSquareNumberCache().put(input, squaredValue);\r\n\r\n        return squaredValue;\r\n    }\r\n\r\n    //standard getters and setters;\r\n}\r\n```","```\r\n@Test\r\npublic void whenCalculatingSquareValueAgain_thenCacheHasAllValues() {\r\n    for (int i = 10; i < 15; i++) {\r\n        assertFalse(cacheHelper.getSquareNumberCache().containsKey(i));\r\n        System.out.println(\"Square value of \" + i + \" is: \"\r\n          + squaredCalculator.getSquareValueOfNumber(i) + \"\\n\");\r\n    }      \r\n\r\n    for (int i = 10; i < 15; i++) {\r\n        assertTrue(cacheHelper.getSquareNumberCache().containsKey(i));\r\n        System.out.println(\"Square value of \" + i + \" is: \"\r\n          + squaredCalculator.getSquareValueOfNumber(i) + \"\\n\");\r\n    }\r\n}\r\n```","```\r\nCalculating square value of 10 and caching result.\r\nSquare value of 10 is: 100\r\n\r\nCalculating square value of 11 and caching result.\r\nSquare value of 11 is: 121\r\n\r\nCalculating square value of 12 and caching result.\r\nSquare value of 12 is: 144\r\n\r\nCalculating square value of 13 and caching result.\r\nSquare value of 13 is: 169\r\n\r\nCalculating square value of 14 and caching result.\r\nSquare value of 14 is: 196\r\n\r\nSquare value of 10 is: 100\r\nSquare value of 11 is: 121\r\nSquare value of 12 is: 144\r\nSquare value of 13 is: 169\r\nSquare value of 14 is: 196\r\n```","```\r\nPersistentCacheManager persistentCacheManager = \r\n  CacheManagerBuilder.newCacheManagerBuilder()\r\n    .with(CacheManagerBuilder.persistence(getStoragePath()\r\n      + File.separator \r\n      + \"squaredValue\")) \r\n    .withCache(\"persistent-cache\", CacheConfigurationBuilder\r\n      .newCacheConfigurationBuilder(Integer.class, Integer.class,\r\n        ResourcePoolsBuilder.newResourcePoolsBuilder()\r\n          .heap(10, EntryUnit.ENTRIES)\r\n          .disk(10, MemoryUnit.MB, true)) \r\n      )\r\n  .build(true);\r\n\r\npersistentCacheManager.close();\r\n```","```\r\nCacheConfiguration<Integer, Integer> cacheConfiguration \r\n  = CacheConfigurationBuilder\r\n    .newCacheConfigurationBuilder(Integer.class, Integer.class, \r\n      ResourcePoolsBuilder.heap(100)) \r\n    .withExpiry(Expirations.timeToLiveExpiration(Duration.of(60, \r\n      TimeUnit.SECONDS))).build();\r\n```"]