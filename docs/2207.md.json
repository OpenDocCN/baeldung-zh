["```\r\n<dependency>\r\n    <groupId>org.docx4j</groupId>\r\n    <artifactId>docx4j</artifactId>\r\n    <version>3.3.5</version>\r\n</dependency>\r\n<dependency> \r\n    <groupId>javax.xml.bind</groupId>\r\n    <artifactId>jaxb-api</artifactId>\r\n    <version>2.1</version>\r\n</dependency>\r\n```","```\r\nWordprocessingMLPackage wordPackage = WordprocessingMLPackage.createPackage();\r\nMainDocumentPart mainDocumentPart = wordPackage.getMainDocumentPart();\r\nmainDocumentPart.addStyledParagraphOfText(\"Title\", \"Hello World!\");\r\nmainDocumentPart.addParagraphOfText(\"Welcome To Baeldung\");\r\nFile exportFile = new File(\"welcome.docx\");\r\nwordPackage.save(exportFile); \r\n```","```\r\n<w:body>\r\n    <w:p>\r\n        <w:pPr>\r\n            <w:pStyle w:val=\"Title\"/>\r\n        </w:pPr>\r\n        <w:r>\r\n            <w:t>Hello World!</w:t>\r\n        </w:r>\r\n    </w:p>\r\n    <w:p>\r\n        <w:r>\r\n            <w:t>Welcome To Baeldung!</w:t>\r\n        </w:r>\r\n    </w:p>\r\n</w:body>\r\n```","```\r\nObjectFactory factory = Context.getWmlObjectFactory();\r\nP p = factory.createP();\r\nR r = factory.createR();\r\nText t = factory.createText();\r\nt.setValue(\"Welcome To Baeldung\");\r\nr.getContent().add(t);\r\np.getContent().add(r);\r\nRPr rpr = factory.createRPr();       \r\nBooleanDefaultTrue b = new BooleanDefaultTrue();\r\nrpr.setB(b);\r\nrpr.setI(b);\r\nrpr.setCaps(b);\r\nColor green = factory.createColor();\r\ngreen.setVal(\"green\");\r\nrpr.setColor(green);\r\nr.setRPr(rpr);\r\nmainDocumentPart.getContent().add(p);\r\nFile exportFile = new File(\"welcome.docx\");\r\nwordPackage.save(exportFile);\r\n```","```\r\nFile image = new File(\"image.jpg\" );\r\nbyte[] fileContent = Files.readAllBytes(image.toPath());\r\nBinaryPartAbstractImage imagePart = BinaryPartAbstractImage\r\n  .createImagePart(wordPackage, fileContent);\r\nInline inline = imagePart.createImageInline(\r\n  \"Baeldung Image (filename hint)\", \"Alt Text\", 1, 2, false);\r\nP Imageparagraph = addImageToParagraph(inline);\r\nmainDocumentPart.getContent().add(Imageparagraph);\r\n```","```\r\nprivate static P addImageToParagraph(Inline inline) {\r\n    ObjectFactory factory = new ObjectFactory();\r\n    P p = factory.createP();\r\n    R r = factory.createR();\r\n    p.getContent().add(r);\r\n    Drawing drawing = factory.createDrawing();\r\n    r.getContent().add(drawing);\r\n    drawing.getAnchorOrInline().add(inline);\r\n    return p;\r\n}\r\n```","```\r\nint writableWidthTwips = wordPackage.getDocumentModel()\r\n  .getSections().get(0).getPageDimensions().getWritableWidthTwips();\r\nint columnNumber = 3;\r\nTbl tbl = TblFactory.createTable(3, 3, writableWidthTwips/columnNumber);     \r\nList<Object> rows = tbl.getContent();\r\nfor (Object row : rows) {\r\n    Tr tr = (Tr) row;\r\n    List<Object> cells = tr.getContent();\r\n    for(Object cell : cells) {\r\n        Tc td = (Tc) cell;\r\n        td.getContent().add(p);\r\n    }\r\n}\r\n```","```\r\nFile doc = new File(\"helloWorld.docx\");\r\nWordprocessingMLPackage wordMLPackage = WordprocessingMLPackage\r\n  .load(doc);\r\nMainDocumentPart mainDocumentPart = wordMLPackage\r\n  .getMainDocumentPart();\r\nString textNodesXPath = \"//w:t\";\r\nList<Object> textNodes= mainDocumentPart\r\n  .getJAXBNodesViaXPath(textNodesXPath, true);\r\nfor (Object obj : textNodes) {\r\n    Text text = (Text) ((JAXBElement) obj).getValue();\r\n    String textValue = text.getValue();\r\n    System.out.println(textValue);\r\n}\r\n```"]