["```\r\n@Entity\r\n@Table(name = \"users\", schema = \"users\")\r\npublic class User {\r\n\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n    private int id;\r\n    private String name;\r\n    private LocalDate creationDate;\r\n    private LocalDate lastLoginDate;\r\n    private boolean active;\r\n    private String email;\r\n\r\n}\r\n```","```\r\npublic interface UserRepository extends JpaRepository<User, Integer> {}\r\n```","```\r\nList<User> findAllByName(String name);\r\nvoid deleteAllByCreationDateAfter(LocalDate date);\r\n```","```\r\n@Query(\"select u from User u where u.email like '%@gmail.com'\")\r\nList<User> findUsersWithGmailAddress();\r\n```","```\r\n@Modifying\r\n@Query(\"update User u set u.active = false where u.lastLoginDate < :date\")\r\nvoid deactivateUsersNotLoggedInSince(@Param(\"date\") LocalDate date);\r\n```","```\r\n@Modifying\r\n@Query(\"delete User u where u.active = false\")\r\nint deleteDeactivatedUsers();\r\n```","```\r\n@Modifying\r\n@Query(value = \"alter table USERS.USERS add column deleted int(1) not null default 0\", nativeQuery = true)\r\nvoid addDeletedColumn();\r\n```","```\r\n@Query(\"delete User u where u.active = false\")\r\nint deleteDeactivatedUsersWithNoModifyingAnnotation();\r\n```","```\r\norg.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.hql.internal.QueryExecutionRequestException: \r\nNot supported for DML operations [delete com.baeldung.boot.domain.User u where u.active = false]\r\n(...) \r\n```","```\r\n@Modifying(clearAutomatically = true)\r\n```","```\r\n@Modifying(flushAutomatically = true)\r\n```"]