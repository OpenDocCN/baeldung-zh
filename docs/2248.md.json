["```\r\n*\r\n**\r\n***\r\n****\r\n*****\r\n```","```\r\npublic static String printARightTriangle(int N) {\r\n    StringBuilder result = new StringBuilder();\r\n    for (int r = 1; r <= N; r++) {\r\n        for (int j = 1; j <= r; j++) {\r\n            result.append(\"*\");\r\n        }\r\n        result.append(System.lineSeparator());\r\n    }\r\n    return result.toString();\r\n}\r\n```","```\r\n *\r\n   ***\r\n  *****\r\n *******\r\n*********\r\n```","```\r\npublic static String printAnIsoscelesTriangle(int N) {\r\n    StringBuilder result = new StringBuilder();\r\n    for (int r = 1; r <= N; r++) {\r\n        for (int sp = 1; sp <= N - r; sp++) {\r\n            result.append(\" \");\r\n        }\r\n        for (int c = 1; c <= (r * 2) - 1; c++) {\r\n            result.append(\"*\");\r\n        }\r\n        result.append(System.lineSeparator());\r\n    }\r\n    return result.toString();\r\n}\r\n```","```\r\npublic static String printAnIsoscelesTriangleUsingStringUtils(int N) {\r\n    StringBuilder result = new StringBuilder();\r\n\r\n    for (int r = 1; r <= N; r++) {\r\n        result.append(StringUtils.repeat(' ', N - r));\r\n        result.append(StringUtils.repeat('*', 2 * r - 1));\r\n        result.append(System.lineSeparator());\r\n    }\r\n    return result.toString();\r\n}\r\n```","```\r\nString helperString = StringUtils.repeat(' ', N - 1) + StringUtils.repeat('*', N * 2 - 1);\r\n// for N = 10, helperString = \"    *********\"\r\n```","```\r\npublic static String printAnIsoscelesTriangleUsingSubstring(int N) {\r\n    StringBuilder result = new StringBuilder();\r\n    String helperString = StringUtils.repeat(' ', N - 1) + StringUtils.repeat('*', N * 2 - 1);\r\n\r\n    for (int r = 0; r < N; r++) {\r\n        result.append(helperString.substring(r, N + 2 * r));\r\n        result.append(System.lineSeparator());\r\n    }\r\n    return result.toString();\r\n}\r\n```"]