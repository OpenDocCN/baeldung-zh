["```\r\n<dependency>\r\n    <groupId>org.junit.jupiter</groupId>\r\n    <artifactId>junit-jupiter-api</artifactId>\r\n    <version>5.8.1</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>org.junit.jupiter</groupId>\r\n    <artifactId>junit-jupiter-params</artifactId>\r\n    <version>5.8.1</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n```","```\r\n@Test\r\nvoid givenTestMethodWithTempDirectory_whenWriteToFile_thenContentIsCorrect(@TempDir Path tempDir) \r\n  throws IOException {\r\n    Path numbers = tempDir.resolve(\"numbers.txt\");\r\n\r\n    List<String> lines = Arrays.asList(\"1\", \"2\", \"3\");\r\n    Files.write(numbers, lines);\r\n\r\n    assertAll(\r\n      () -> assertTrue(\"File should exist\", Files.exists(numbers)),\r\n      () -> assertLinesMatch(lines, Files.readAllLines(numbers)));\r\n}\r\n```","```\r\n@TempDir\r\nFile anotherTempDir;\r\n\r\n@Test\r\nvoid givenFieldWithTempDirectoryFile_whenWriteToFile_thenContentIsCorrect() throws IOException {\r\n    assertTrue(\"Should be a directory \", this.anotherTempDir.isDirectory());\r\n\r\n    File letters = new File(anotherTempDir, \"letters.txt\");\r\n    List<String> lines = Arrays.asList(\"x\", \"y\", \"z\");\r\n\r\n    Files.write(letters.toPath(), lines);\r\n\r\n    assertAll(\r\n      () -> assertTrue(\"File should exist\", Files.exists(letters.toPath())),\r\n      () -> assertLinesMatch(lines, Files.readAllLines(letters.toPath())));\r\n}\r\n```","```\r\n@TempDir\r\nstatic Path sharedTempDir;\r\n\r\n@Test\r\n@Order(1)\r\nvoid givenFieldWithSharedTempDirectoryPath_whenWriteToFile_thenContentIsCorrect() throws IOException {\r\n    Path numbers = sharedTempDir.resolve(\"numbers.txt\");\r\n\r\n    List<String> lines = Arrays.asList(\"1\", \"2\", \"3\");\r\n    Files.write(numbers, lines);\r\n\r\n    assertAll(\r\n        () -> assertTrue(\"File should exist\", Files.exists(numbers)),\r\n        () -> assertLinesMatch(lines, Files.readAllLines(numbers)));\r\n}\r\n\r\n@Test\r\n@Order(2)\r\nvoid givenAlreadyWrittenToSharedFile_whenCheckContents_thenContentIsCorrect() throws IOException {\r\n    Path numbers = sharedTempDir.resolve(\"numbers.txt\");\r\n\r\n    assertLinesMatch(Arrays.asList(\"1\", \"2\", \"3\"), Files.readAllLines(numbers));\r\n  } \r\n```","```\r\nTMPDIR=/var/folders/3b/rp7016xn6fz9g0yf5_nj71m00000gn/T/ \r\n```","```\r\n/var/folders/3b/rp7016xn6fz9g0yf5_nj71m00000gn/T/junit5416670701666180307/numbers.txt\r\n```"]