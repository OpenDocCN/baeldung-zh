["```\r\n<dependency>\r\n    <groupId>com.netflix.spectator</groupId>\r\n    <artifactId>spectator-api</artifactId>\r\n    <version>1.0.11</version>\r\n</dependency>\r\n```","```\r\nRegistry registry = new DefaultRegistry();\r\n```","```\r\ninsertCounter = registry.counter(\"list.insert.count\");\r\nremoveCounter = registry.counter(\"list.remove.count\");\r\n```","```\r\nrequestList.add(element);\r\ninsertCounter.increment();\r\n\r\nrequestList.remove(0);\r\nremoveCounter.increment();\r\n```","```\r\nrequestLatency = registry.timer(\"app.request.latency\");\r\n```","```\r\nrequestLatency.record(() -> handleRequest(input));\r\n```","```\r\nrefreshDuration = LongTaskTimer.get(registry, registry.createId(\"metadata.refreshDuration\"));\r\n```","```\r\nlong taskId = refreshDuration.start();\r\ntry {\r\n    Thread.sleep(input);\r\n    return \"Done\";\r\n} catch (InterruptedException e) {\r\n    e.printStackTrace();\r\n    throw e;\r\n} finally {\r\n    refreshDuration.stop(taskId);\r\n}\r\n```","```\r\nPolledMeter.using(registry)\r\n  .withName(\"list.size\")\r\n  .monitorValue(listSize);\r\n```","```\r\ngauge = registry.gauge(\"list.size\");\r\n```","```\r\nlist.add(element);\r\ngauge.set(listSize);\r\nlist.remove(0);\r\ngauge.set(listSize);\r\n```","```\r\ndistributionSummary = registry.distributionSummary(\"app.request.size\");\r\n```","```\r\ndistributionSummary.record((long) input.length());\r\nhandleRequest();\r\n```"]