["```\r\n<dependency>\r\n    <groupId>com.github.feature-flip</groupId>\r\n    <artifactId>flips-core</artifactId>\r\n    <version>1.0.1</version>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n    <version>1.5.10.RELEASE</version>\r\n</dependency>\r\n```","```\r\npublic class Foo {\r\n    private String name;\r\n    private int id;\r\n} \r\n```","```\r\n@Service\r\npublic class FlipService {\r\n\r\n    private List<Foo> foos;\r\n\r\n    public List<Foo> getAllFoos() {\r\n        return foos;\r\n    }\r\n\r\n    public Foo getNewFoo() {\r\n        return new Foo(\"New Foo!\", 99);\r\n    }\r\n} \r\n```","```\r\n@RestController\r\npublic class FlipController {\r\n\r\n    private FlipService flipService;\r\n\r\n    // constructors\r\n\r\n    @GetMapping(\"/foos\")\r\n    public List<Foo> getAllFoos() {\r\n        return flipService.getAllFoos();\r\n    }\r\n} \r\n```","```\r\n@GetMapping(\"/foos/{id}\")\r\n@FlipOnEnvironmentProperty(\r\n  property = \"feature.foo.by.id\", \r\n  expectedValue = \"Y\")\r\npublic Foo getFooById(@PathVariable int id) {\r\n    return flipService.getFooById(id)\r\n      .orElse(new Foo(\"Not Found\", -1));\r\n} \r\n```","```\r\nStatus = 501\r\nHeaders = {Content-Type=[application/json;charset=UTF-8]}\r\nContent type = application/json;charset=UTF-8\r\nBody = {\r\n    \"errorMessage\": \"Feature not enabled, identified by method \r\n      public com.baeldung.flips.model.Foo\r\n      com.baeldung.flips.controller.FlipController.getFooById(int)\",\r\n    \"className\":\"com.baeldung.flips.controller.FlipController\",\r\n    \"featureName\":\"getFooById\"\r\n}\r\n```","```\r\n@RequestMapping(value = \"/foos\", method = RequestMethod.GET)\r\n@FlipOnProfiles(activeProfiles = \"dev\")\r\npublic List getAllFoos() {\r\n    return flipService.getAllFoos();\r\n} \r\n```","```\r\n@FlipOnSpringExpression(expression = \"(2 + 2) == 4\")\r\n@GetMapping(\"/foo/new\")\r\npublic Foo getNewFoo() {\r\n    return flipService.getNewFoo();\r\n} \r\n```","```\r\n@GetMapping(\"/foo/first\")\r\n@FlipOff\r\npublic Foo getFirstFoo() {\r\n    return flipService.getLastFoo();\r\n} \r\n```","```\r\nfirst.active.after=2018-03-01T00:00:00Z\r\n```","```\r\n@GetMapping(\"/foo/first\")\r\n@FlipOnDateTime(cutoffDateTimeProperty = \"first.active.after\")\r\npublic Foo getFirstFoo() {\r\n    return flipService.getLastFoo();\r\n} \r\n```","```\r\n@GetMapping(\"/foo/{id}\")\r\n@FlipOnDaysOfWeek(daysOfWeek={DayOfWeek.MONDAY, DayOfWeek.WEDNESDAY})\r\npublic Foo getFooByNewId(@PathVariable int id) {\r\n    return flipService.getFooById(id).orElse(new Foo(\"Not Found\", -1));\r\n} \r\n```","```\r\n@Service\r\npublic class NewFlipService {\r\n    public Foo getNewFoo() {\r\n        return new Foo(\"Shiny New Foo!\", 100);\r\n    }\r\n} \r\n```","```\r\n@FlipBean(with = NewFlipService.class)\r\npublic Foo getNewFoo() {\r\n    return new Foo(\"New Foo!\", 99);\r\n} \r\n```","```\r\n@FlipBean(\r\n  with = NewFlipService.class)\r\n@FlipOnEnvironmentProperty(\r\n  property = \"feature.foo.by.id\", \r\n  expectedValue = \"Y\")\r\npublic Foo getNewFoo() {\r\n    return new Foo(\"New Foo!\", 99);\r\n} \r\n```"]