["```\r\npublic class Game {\r\n\r\n    private Long id;\r\n    private String name;\r\n    private Boolean paused;\r\n    private Boolean over;\r\n\r\n    // constructors, getters and setters\r\n}\r\n```","```\r\nObjectMapper mapper = new ObjectMapper();\r\nGame game = new Game(1L, \"My Game\");\r\ngame.setPaused(true);\r\ngame.setOver(false);\r\nString json = mapper.writeValueAsString(game);\r\n```","```\r\n{\"id\":1, \"name\":\"My Game\", \"paused\":true, \"over\":false}\r\n```","```\r\n{\"id\":1, \"name\":\"My Game\", \"paused\":1, \"over\":0}\r\n```","```\r\n@JsonFormat(shape = Shape.NUMBER)\r\nprivate Boolean paused;\r\n\r\n@JsonFormat(shape = Shape.NUMBER)\r\nprivate Boolean over;\r\n```","```\r\nObjectMapper mapper = new ObjectMapper();\r\nGame game = new Game(1L, \"My Game\");\r\ngame.setPaused(true);\r\ngame.setOver(false);\r\nString json = mapper.writeValueAsString(game);\r\n\r\nassertThat(json)\r\n  .isEqualTo(\"{\\\"id\\\":1,\\\"name\\\":\\\"My Game\\\",\\\"paused\\\":1,\\\"over\\\":0}\");\r\n```","```\r\nObjectMapper mapper = new ObjectMapper();\r\nmapper.configOverride(Boolean.class)\r\n  .setFormat(JsonFormat.Value.forShape(Shape.NUMBER));\r\n\r\nGame game = new Game(1L, \"My Game\");\r\ngame.setPaused(true);\r\ngame.setOver(false);\r\nString json = mapper.writeValueAsString(game);\r\n\r\nassertThat(json)\r\n  .isEqualTo(\"{\\\"id\\\":1,\\\"name\\\":\\\"My Game\\\",\\\"paused\\\":1,\\\"over\\\":0}\");\r\n```","```\r\nObjectMapper mapper = new ObjectMapper();\r\nString json = \"{\\\"id\\\":1,\\\"name\\\":\\\"My Game\\\",\\\"paused\\\":1,\\\"over\\\":0}\";\r\nGame game = mapper.readValue(json, Game.class);\r\n\r\nassertThat(game.isPaused()).isEqualTo(true);\r\nassertThat(game.isOver()).isEqualTo(false);\r\n```","```\r\npublic class NumericBooleanSerializer extends JsonSerializer<Boolean> {\r\n\r\n    @Override\r\n    public void serialize(Boolean value, JsonGenerator gen, SerializerProvider serializers)\r\n      throws IOException {\r\n        gen.writeString(value ? \"1\" : \"0\");\r\n    }\r\n}\r\n```","```\r\n@JsonSerialize(using = NumericBooleanSerializer.class)\r\nprivate Boolean paused;\r\n\r\n@JsonSerialize(using = NumericBooleanSerializer.class)\r\nprivate Boolean over;\r\n```","```\r\nObjectMapper mapper = new ObjectMapper();\r\nGame game = new Game(1L, \"My Game\");\r\ngame.setPaused(true);\r\ngame.setOver(false);\r\nString json = mapper.writeValueAsString(game);\r\n\r\nassertThat(json)\r\n  .isEqualTo(\"{\\\"id\\\":1,\\\"name\\\":\\\"My Game\\\",\\\"paused\\\":\\\"1\\\",\\\"over\\\":\\\"0\\\"}\");\r\n```","```\r\nObjectMapper mapper = new ObjectMapper();\r\nSimpleModule module = new SimpleModule();\r\nmodule.addSerializer(Boolean.class, new NumericBooleanSerializer());\r\nmapper.registerModule(module);\r\n\r\nGame game = new Game(1L, \"My Game\");\r\ngame.setPaused(true);\r\ngame.setOver(false);\r\nString json = mapper.writeValueAsString(game);\r\n\r\nassertThat(json)\r\n  .isEqualTo(\"{\\\"id\\\":1,\\\"name\\\":\\\"My Game\\\",\\\"paused\\\":\\\"1\\\",\\\"over\\\":\\\"0\\\"}\");\r\n```","```\r\npublic class NumericBooleanDeserializer extends JsonDeserializer<Boolean> {\r\n\r\n    @Override\r\n    public Boolean deserialize(JsonParser p, DeserializationContext ctxt)\r\n      throws IOException {\r\n        if (\"1\".equals(p.getText())) {\r\n            return Boolean.TRUE;\r\n        }\r\n        if (\"0\".equals(p.getText())) {\r\n            return Boolean.FALSE;\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n```","```\r\n@JsonSerialize(using = NumericBooleanSerializer.class)\r\n@JsonDeserialize(using = NumericBooleanDeserializer.class)\r\nprivate Boolean paused;\r\n\r\n@JsonSerialize(using = NumericBooleanSerializer.class)\r\n@JsonDeserialize(using = NumericBooleanDeserializer.class)\r\nprivate Boolean over;\r\n```","```\r\nObjectMapper mapper = new ObjectMapper();\r\nString json = \"{\\\"id\\\":1,\\\"name\\\":\\\"My Game\\\",\\\"paused\\\":\\\"1\\\",\\\"over\\\":\\\"0\\\"}\";\r\nGame game = mapper.readValue(json, Game.class);\r\n\r\nassertThat(game.isPaused()).isEqualTo(true);\r\nassertThat(game.isOver()).isEqualTo(false);\r\n```","```\r\nObjectMapper mapper = new ObjectMapper();\r\nSimpleModule module = new SimpleModule();\r\nmodule.addDeserializer(Boolean.class, new NumericBooleanDeserializer());\r\nmapper.registerModule(module);\r\n\r\nString json = \"{\\\"id\\\":1,\\\"name\\\":\\\"My Game\\\",\\\"paused\\\":\\\"1\\\",\\\"over\\\":\\\"0\\\"}\";\r\nGame game = mapper.readValue(json, Game.class);\r\n\r\nassertThat(game.isPaused()).isEqualTo(true);\r\nassertThat(game.isOver()).isEqualTo(false);\r\n```"]