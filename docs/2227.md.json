["```\r\n@Test\r\nvoid givenString_whenSort_thenSorted() {\r\n    String abcd = \"bdca\";\r\n    char[] chars = abcd.toCharArray();\r\n\r\n    Arrays.sort(chars);\r\n    String sorted = new String(chars);\r\n\r\n    assertThat(sorted).isEqualTo(\"abcd\");\r\n}\r\n```","```\r\n@Test\r\nvoid givenString_whenSortJava8_thenSorted() {\r\n    String sorted = \"bdca\".chars()\r\n      .sorted()\r\n      .collect(StringBuilder::new, StringBuilder::appendCodePoint, StringBuilder::append)\r\n      .toString();\r\n\r\n    assertThat(sorted).isEqualTo(\"abcd\");\r\n}\r\n```","```\r\npublic class AnagramValidator {\r\n\r\n    public static boolean isValid(String text, String anagram) {\r\n        text = prepare(text);\r\n        anagram = prepare(anagram);\r\n\r\n        String sortedText = sort(text);\r\n        String sortedAnagram = sort(anagram);\r\n\r\n        return sortedText.equals(sortedAnagram);\r\n    }\r\n\r\n    private static String sort(String text) {\r\n        char[] chars = prepare(text).toCharArray();\r\n\r\n        Arrays.sort(chars);\r\n        return new String(chars);\r\n    }\r\n\r\n    private static String prepare(String text) {\r\n        return text.toLowerCase()\r\n          .trim()\r\n          .replaceAll(\"\\\\s+\", \"\");\r\n    }\r\n}\r\n```","```\r\n@Test\r\nvoid givenValidAnagrams_whenSorted_thenEqual() {\r\n    boolean isValidAnagram = AnagramValidator.isValid(\"Avida Dollars\", \"Salvador Dali\");\r\n\r\n    assertTrue(isValidAnagram);\r\n}\r\n```"]