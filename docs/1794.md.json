["```\r\npublic V put(K key, V value) {\r\n    if (key == null)\r\n        return putForNullKey(value);\r\n    int hash = hash(key.hashCode());\r\n    int i = indexFor(hash, table.length);\r\n    for (Entry e = table[i]; e != null; e = e.next) {\r\n        Object k;\r\n        if (e.hash == hash && ((k = e.key) == key || key.equals(k))) {\r\n            V oldValue = e.value;\r\n            e.value = value;\r\n            e.recordAccess(this);\r\n            return oldValue;\r\n        }\r\n    }\r\n\r\n    modCount++;\r\n    addEntry(hash, key, value, i);\r\n    return null;\r\n}\r\n```","```\r\npublic V get(Object key) {\r\n    if (key == null)\r\n        return getForNullKey();\r\n    int hash = hash(key.hashCode());\r\n    for (Entry e = table[indexFor(hash, table.length)]; e != null; e = e.next) {\r\n        Object k;\r\n        if (e.hash == hash && ((k = e.key) == key || key.equals(k)))\r\n            return e.value;\r\n    }\r\n    return null;\r\n}\r\n```","```\r\nbyte[] key1 = {1, 2, 3};\r\nbyte[] key2 = {1, 2, 3};\r\nMap<byte[], String> map = new HashMap<>();\r\nmap.put(key1, \"value1\");\r\nmap.put(key2, \"value2\");\r\n```","```\r\nString retrievedValue1 = map.get(key1);\r\nString retrievedValue2 = map.get(key2);\r\nString retrievedValue3 = map.get(new byte[]{1, 2, 3});\r\n\r\nassertThat(retrievedValue1).isEqualTo(\"value1\");\r\nassertThat(retrievedValue2).isEqualTo(\"value2\");\r\nassertThat(retrievedValue3).isNull();\r\n```","```\r\npublic boolean equals(Object anObject) {\r\n    if (this == anObject) {\r\n        return true;\r\n    }\r\n    if (anObject instanceof String) {\r\n        String anotherString = (String)anObject;\r\n        int n = count;\r\n        if (n == anotherString.count) {\r\n            char v1[] = value;\r\n            char v2[] = anotherString.value;\r\n            int i = offset;\r\n            int j = anotherString.offset;\r\n            while (n-- != 0) {\r\n                if (v1[i++] != v2[j++])\r\n                   return false;\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n```","```\r\nString key1 = Base64.getEncoder().encodeToString(new byte[]{1, 2, 3});\r\nString key2 = Base64.getEncoder().encodeToString(new byte[]{1, 2, 3});\r\n```","```\r\nMap<String, String> map = new HashMap<>();\r\nmap.put(key1, \"value1\");\r\nmap.put(key2, \"value2\");\r\n```","```\r\nString retrievedValue1 = map.get(key1);\r\nString retrievedValue2 = map.get(key2);\r\n\r\nassertThat(key1).isEqualTo(key2);\r\nassertThat(retrievedValue1).isEqualTo(\"value2\");\r\nassertThat(retrievedValue2).isEqualTo(\"value2\");\r\n```","```\r\nList<Byte> key1 = ImmutableList.of((byte)1, (byte)2, (byte)3);\r\nList<Byte> key2 = ImmutableList.of((byte)1, (byte)2, (byte)3);\r\nMap<List<Byte>, String> map = new HashMap<>();\r\nmap.put(key1, \"value1\");\r\nmap.put(key2, \"value2\");\r\n\r\nassertThat(map.get(key1)).isEqualTo(map.get(key2));\r\n```","```\r\npublic final class BytesKey {\r\n    private final byte[] array;\r\n\r\n    public BytesKey(byte[] array) {\r\n        this.array = array;\r\n    }\r\n\r\n    public byte[] getArray() {\r\n        return array.clone();\r\n    }\r\n}\r\n```","```\r\n@Override\r\npublic boolean equals(Object o) {\r\n    if (this == o) return true;\r\n    if (o == null || getClass() != o.getClass()) return false;\r\n    BytesKey bytesKey = (BytesKey) o;\r\n    return Arrays.equals(array, bytesKey.array);\r\n}\r\n\r\n@Override\r\npublic int hashCode() {\r\n    return Arrays.hashCode(array);\r\n}\r\n```","```\r\nBytesKey key1 = new BytesKey(new byte[]{1, 2, 3});\r\nBytesKey key2 = new BytesKey(new byte[]{1, 2, 3});\r\nMap<BytesKey, String> map = new HashMap<>();\r\nmap.put(key1, \"value1\");\r\nmap.put(key2, \"value2\");\r\n```","```\r\nString retrievedValue1 = map.get(key1);\r\nString retrievedValue2 = map.get(key2);\r\nString retrievedValue3 = map.get(new BytesKey(new byte[]{1, 2, 3}));\r\n\r\nassertThat(retrievedValue1).isEqualTo(\"value2\");\r\nassertThat(retrievedValue2).isEqualTo(\"value2\");\r\nassertThat(retrievedValue3).isEqualTo(\"value2\");\r\n```"]