["```\r\nprivate static Object LOCK = new Object();\r\n\r\nprivate static void sleepWaitExamples() \r\n  throws InterruptedException {\r\n\r\n    Thread.sleep(1000);\r\n    System.out.println(\r\n      \"Thread '\" + Thread.currentThread().getName() +\r\n      \"' is woken after sleeping for 1 second\");\r\n\r\n    synchronized (LOCK) {\r\n        LOCK.wait(1000);\r\n        System.out.println(\"Object '\" + LOCK + \"' is woken after\" +\r\n          \" waiting for 1 second\");\r\n    }\r\n} \r\n```","```\r\nsynchronized (b) {\r\n    while (b.sum == 0) {\r\n        System.out.println(\"Waiting for ThreadB to complete...\");\r\n        b.wait();\r\n    }\r\n\r\n    System.out.println(\"ThreadB has completed. \" + \r\n      \"Sum from that thread is: \" + b.sum);\r\n}\r\n```","```\r\nint sum;\r\n\r\n@Override \r\npublic void run() {\r\n    synchronized (this) {\r\n        int i = 0;\r\n        while (i < 100000) {\r\n            sum += i;\r\n            i++; \r\n        }\r\n        notify(); \r\n    } \r\n}\r\n```"]