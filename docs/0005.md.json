["```\r\nconnection.setAutoCommit(true);\r\n```","```\r\n<dependency>\r\n    <groupId>com.h2database</groupId>\r\n    <artifactId>h2</artifactId>\r\n    <version>1.4.200</version>\r\n</dependency>\r\n```","```\r\nCREATE TABLE Person (\r\n    id INTEGER not null,\r\n    name VARCHAR(50),\r\n    lastName VARCHAR(50),\r\n    age INTEGER,PRIMARY KEY (id)\r\n)\r\n```","```\r\nConnection connection1 = DriverManager.getConnection(\"jdbc:h2:mem:testdb\", \"sa\", \"\");\r\nConnection connection2 = DriverManager.getConnection(\"jdbc:h2:mem:testdb\", \"sa\", \"\");\r\n```","```\r\npublic class Person {\r\n\r\n    private Integer id;\r\n    private String name;\r\n    private String lastName;\r\n    private Integer age;\r\n\r\n    // standard constructor, getters, and setters\r\n}\r\n```","```\r\nprivate static int insertPerson(Connection connection, Person person) throws SQLException {    \r\n    try (PreparedStatement preparedStatement = connection.prepareStatement(\r\n      \"INSERT INTO Person VALUES (?,?,?,?)\")) {\r\n\r\n        preparedStatement.setInt(1, person.getId());\r\n        preparedStatement.setString(2, person.getName());\r\n        preparedStatement.setString(3, person.getLastName());\r\n        preparedStatement.setInt(4, person.getAge());\r\n\r\n        return preparedStatement.executeUpdate();\r\n    }        \r\n} \r\n```","```\r\nprivate static void updatePersonAgeById(Connection connection, int id, int newAge) throws SQLException {\r\n    try (PreparedStatement preparedStatement = connection.prepareStatement(\r\n      \"UPDATE Person SET age = ? WHERE id = ?\")) {\r\n        preparedStatement.setInt(1, newAge);\r\n        preparedStatement.setInt(2, id);\r\n\r\n        preparedStatement.executeUpdate();\r\n    }\r\n} \r\n```","```\r\nprivate static List selectAllPeople(Connection connection) throws SQLException {\r\n\r\n    List people = null;\r\n\r\n    try (Statement statement = connection.createStatement()) {\r\n        people = new ArrayList();\r\n        ResultSet resultSet = statement.executeQuery(\"SELECT * FROM Person\");\r\n\r\n        while (resultSet.next()) {\r\n            Person person = new Person();\r\n            person.setId(resultSet.getInt(\"id\"));\r\n            person.setName(resultSet.getString(\"name\"));\r\n            person.setLastName(resultSet.getString(\"lastName\"));\r\n            person.setAge(resultSet.getInt(\"age\"));\r\n\r\n            people.add(person);\r\n        }\r\n    }\r\n\r\n    return people;\r\n} \r\n```","```\r\nPerson person = new Person(1, \"John\", \"Doe\", 45);\r\ninsertPerson(connection1, person);\r\n\r\nList people = selectAllPeople(connection2);\r\nassertThat(\"person record inserted OK into empty table\", people.size(), is(equalTo(1)));\r\nPerson personInserted = people.iterator().next();\r\nassertThat(\"id correct\", personInserted.getId(), is(equalTo(1))); \r\n```","```\r\nupdatePersonAgeById(connection1, 1, 65);\r\n\r\npeople = selectAllPeople(connection2);\r\nPerson personUpdated = people.iterator().next();\r\nassertThat(\"updated age correct\", personUpdated.getAge(), is(equalTo(65))); \r\n```","```\r\nconnection.setAutoCommit(false);\r\n```","```\r\nPerson person = new Person(1, \"John\", \"Doe\", 45);\r\ninsertPerson(connection1, person);\r\n\r\nList<Person> people = selectAllPeople(connection2);\r\nassertThat(\"No people have been inserted into database yet\", people.size(), is(equalTo(0))); \r\n```","```\r\nupdatePersonAgeById(connection1, 1, 65);\r\n\r\npeople = selectAllPeople(connection2);\r\nassertThat(\"No people have been inserted into database yet\", people.size(), is(equalTo(0))); \r\n```","```\r\nconnection1.commit();\r\n\r\npeople = selectAllPeople(connection2);\r\nPerson personUpdated = people.iterator().next();\r\nassertThat(\"person's age updated to 65\", personUpdated.getAge(), is(equalTo(65))); \r\n```"]