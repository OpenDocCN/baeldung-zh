["```\r\n@Test\r\npublic void whenInsertObjectsHashMap_thenRandomOrder() {\r\n    Map<Integer, String> hashmap = new HashMap<>();\r\n    hashmap.put(3, \"TreeMap\");\r\n    hashmap.put(2, \"vs\");\r\n    hashmap.put(1, \"HashMap\");\r\n\r\n    assertThat(hashmap.keySet(), containsInAnyOrder(1, 2, 3));\r\n}\r\n```","```\r\n@Test\r\npublic void whenInsertObjectsTreeMap_thenNaturalOrder() {\r\n    Map<Integer, String> treemap = new TreeMap<>();\r\n    treemap.put(3, \"TreeMap\");\r\n    treemap.put(2, \"vs\");\r\n    treemap.put(1, \"HashMap\");\r\n\r\n    assertThat(treemap.keySet(), contains(1, 2, 3));\r\n}\r\n```","```\r\n@Test\r\npublic void whenInsertNullInHashMap_thenInsertsNull() {\r\n    Map<Integer, String> hashmap = new HashMap<>();\r\n    hashmap.put(null, null);\r\n\r\n    assertNull(hashmap.get(null));\r\n}\r\n```","```\r\n@Test(expected = NullPointerException.class)\r\npublic void whenInsertNullInTreeMap_thenException() {\r\n    Map<Integer, String> treemap = new TreeMap<>();\r\n    treemap.put(null, \"NullPointerException\");\r\n}\r\n```","```\r\nif(binCount >= TREEIFY_THRESHOLD - 1) {\r\n    treeifyBin(tab, hash);\r\n}\r\n```","```\r\n@Test\r\npublic void givenHashMapAndTreeMap_whenputDuplicates_thenOnlyUnique() {\r\n    Map<Integer, String> treeMap = new HashMap<>();\r\n    treeMap.put(1, \"Baeldung\");\r\n    treeMap.put(1, \"Baeldung\");\r\n\r\n    assertTrue(treeMap.size() == 1);\r\n\r\n    Map<Integer, String> treeMap2 = new TreeMap<>();\r\n    treeMap2.put(1, \"Baeldung\");\r\n    treeMap2.put(1, \"Baeldung\");\r\n\r\n    assertTrue(treeMap2.size() == 1);\r\n}\r\n```","```\r\n@Test\r\npublic void whenModifyMapDuringIteration_thenThrowExecption() {\r\n    Map<Integer, String> hashmap = new HashMap<>();\r\n    hashmap.put(1, \"One\");\r\n    hashmap.put(2, \"Two\");\r\n\r\n    Executable executable = () -> hashmap\r\n      .forEach((key,value) -> hashmap.remove(1));\r\n\r\n    assertThrows(ConcurrentModificationException.class, executable);\r\n}\r\n```"]