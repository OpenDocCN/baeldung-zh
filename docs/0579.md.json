["```\r\npublic class DraconianSingleton {\r\n    private static DraconianSingleton instance;\r\n    public static synchronized DraconianSingleton getInstance() {\r\n        if (instance == null) {\r\n            instance = new DraconianSingleton();\r\n        }\r\n        return instance;\r\n    }\r\n\r\n    // private constructor and other methods ...\r\n}\r\n```","```\r\npublic class DclSingleton {\r\n    private static volatile DclSingleton instance;\r\n    public static DclSingleton getInstance() {\r\n        if (instance == null) {\r\n            synchronized (DclSingleton .class) {\r\n                if (instance == null) {\r\n                    instance = new DclSingleton();\r\n                }\r\n            }\r\n        }\r\n        return instance;\r\n    }\r\n\r\n    // private constructor and other methods...\r\n}\r\n```","```\r\npublic class EarlyInitSingleton {\r\n    private static final EarlyInitSingleton INSTANCE = new EarlyInitSingleton();\r\n    public static EarlyInitSingleton getInstance() {\r\n        return INSTANCE;\r\n    }\r\n\r\n     // private constructor and other methods...\r\n}\r\n```","```\r\npublic class InitOnDemandSingleton {\r\n    private static class InstanceHolder {\r\n        private static final InitOnDemandSingleton INSTANCE = new InitOnDemandSingleton();\r\n    }\r\n    public static InitOnDemandSingleton getInstance() {\r\n        return InstanceHolder.INSTANCE;\r\n    }\r\n\r\n     // private constructor and other methods...\r\n}\r\n```","```\r\npublic enum EnumSingleton {\r\n    INSTANCE;\r\n\r\n    // other methods...\r\n}\r\n```"]