["```\r\n@Test\r\npublic void givenUsingPlainJava_whenGeneratingRandomStringUnbounded_thenCorrect() {\r\n    byte[] array = new byte[7]; // length is bounded by 7\r\n    new Random().nextBytes(array);\r\n    String generatedString = new String(array, Charset.forName(\"UTF-8\"));\r\n\r\n    System.out.println(generatedString);\r\n}\r\n```","```\r\n@Test\r\npublic void givenUsingPlainJava_whenGeneratingRandomStringBounded_thenCorrect() {\r\n\r\n    int leftLimit = 97; // letter 'a'\r\n    int rightLimit = 122; // letter 'z'\r\n    int targetStringLength = 10;\r\n    Random random = new Random();\r\n    StringBuilder buffer = new StringBuilder(targetStringLength);\r\n    for (int i = 0; i < targetStringLength; i++) {\r\n        int randomLimitedInt = leftLimit + (int) \r\n          (random.nextFloat() * (rightLimit - leftLimit + 1));\r\n        buffer.append((char) randomLimitedInt);\r\n    }\r\n    String generatedString = buffer.toString();\r\n\r\n    System.out.println(generatedString);\r\n}\r\n```","```\r\n@Test\r\npublic void givenUsingJava8_whenGeneratingRandomAlphabeticString_thenCorrect() {\r\n    int leftLimit = 97; // letter 'a'\r\n    int rightLimit = 122; // letter 'z'\r\n    int targetStringLength = 10;\r\n    Random random = new Random();\r\n\r\n    String generatedString = random.ints(leftLimit, rightLimit + 1)\r\n      .limit(targetStringLength)\r\n      .collect(StringBuilder::new, StringBuilder::appendCodePoint, StringBuilder::append)\r\n      .toString();\r\n\r\n    System.out.println(generatedString);\r\n}\r\n```","```\r\n@Test\r\npublic void givenUsingJava8_whenGeneratingRandomAlphanumericString_thenCorrect() {\r\n    int leftLimit = 48; // numeral '0'\r\n    int rightLimit = 122; // letter 'z'\r\n    int targetStringLength = 10;\r\n    Random random = new Random();\r\n\r\n    String generatedString = random.ints(leftLimit, rightLimit + 1)\r\n      .filter(i -> (i <= 57 || i >= 65) && (i <= 90 || i >= 97))\r\n      .limit(targetStringLength)\r\n      .collect(StringBuilder::new, StringBuilder::appendCodePoint, StringBuilder::append)\r\n      .toString();\r\n\r\n    System.out.println(generatedString);\r\n}\r\n```","```\r\n@Test\r\npublic void givenUsingApache_whenGeneratingRandomStringBounded_thenCorrect() {\r\n\r\n    int length = 10;\r\n    boolean useLetters = true;\r\n    boolean useNumbers = false;\r\n    String generatedString = RandomStringUtils.random(length, useLetters, useNumbers);\r\n\r\n    System.out.println(generatedString);\r\n}\r\n```","```\r\n@Test\r\npublic void givenUsingApache_whenGeneratingRandomAlphabeticString_thenCorrect() {\r\n    String generatedString = RandomStringUtils.randomAlphabetic(10);\r\n\r\n    System.out.println(generatedString);\r\n}\r\n```","```\r\n@Test\r\npublic void givenUsingApache_whenGeneratingRandomAlphanumericString_thenCorrect() {\r\n    String generatedString = RandomStringUtils.randomAlphanumeric(10);\r\n\r\n    System.out.println(generatedString);\r\n}\r\n```"]