["```\r\n@Override\r\nprotected void configure(HttpSecurity http) throws Exception {\r\n    http.csrf()\r\n      .disable()\r\n      .httpBasic().disable()\r\n      .authorizeRequests()\r\n      .antMatchers(\"/login\").permitAll()\r\n      .antMatchers(\"/customError\").permitAll()\r\n      .antMatchers(\"/access-denied\").permitAll()\r\n      .antMatchers(\"/secured\").hasRole(\"ADMIN\")\r\n      .anyRequest().authenticated()\r\n      .and()\r\n      .formLogin()\r\n      .failureHandler(authenticationFailureHandler())\r\n      .successHandler(authenticationSuccessHandler())\r\n      .and()\r\n      .exceptionHandling()\r\n      .accessDeniedHandler(accessDeniedHandler())\r\n      .and()\r\n      .logout();\r\n    }\r\n}\r\n```","```\r\n@Bean\r\npublic AuthenticationFailureHandler authenticationFailureHandler() {\r\n    return new CustomAuthenticationFailureHandler();\r\n} \r\n\r\n@Bean\r\npublic AuthenticationSuccessHandler authenticationSuccessHandler() {\r\n   return new CustomAuthenticationSuccessHandler();\r\n}\r\n\r\n@Bean\r\npublic AccessDeniedHandler accessDeniedHandler() {\r\n   return new CustomAccessDeniedHandler();\r\n}\r\n```","```\r\npublic class CustomAuthenticationFailureHandler implements AuthenticationFailureHandler {\r\n\r\n    @Override\r\n    public void onAuthenticationFailure(HttpServletRequest request, HttpServletResponse response, AuthenticationException exception) \r\n      throws IOException {\r\n        response.sendRedirect(\"/customError\");\r\n    }\r\n}\r\n```","```\r\npublic class CustomAccessDeniedHandler implements AccessDeniedHandler {\r\n\r\n    @Override\r\n    public void handle(HttpServletRequest request, HttpServletResponse response, AccessDeniedException exc) throws IOException {\r\n        response.sendRedirect(\"/access-denied\");\r\n    }\r\n}\r\n```"]