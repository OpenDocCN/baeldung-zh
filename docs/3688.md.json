["```\r\n<dependency>\r\n    <groupId>org.mapstruct</groupId>\r\n    <artifactId>mapstruct</artifactId>\r\n    <version>1.3.1.Final</version> \r\n</dependency>\r\n```","```\r\n<plugin>\r\n    <groupId>org.apache.maven.plugins</groupId>\r\n    <artifactId>maven-compiler-plugin</artifactId>\r\n    <version>3.5.1</version>\r\n    <configuration>\r\n        <source>1.8</source>\r\n        <target>1.8</target>\r\n        <annotationProcessorPaths>\r\n            <path>\r\n                <groupId>org.mapstruct</groupId>\r\n                <artifactId>mapstruct</artifactId>\r\n                <version>1.3.1.Final</version>\r\n            </path>\r\n        </annotationProcessorPaths>\r\n    </configuration>\r\n</plugin>\r\n```","```\r\npublic class UserBodyImperialValuesDTO {\r\n    private int inch;\r\n    private int pound;\r\n    // constructor, getters, and setters\r\n}\r\n```","```\r\npublic class UserBodyValues {\r\n    private double kilogram;\r\n    private double centimeter;\r\n    // constructor, getters, and setters\r\n}\r\n```","```\r\n@Mapper \r\npublic interface UserBodyValuesMapper {\r\n    //...\r\n}\r\n```","```\r\n@Mapper\r\npublic interface UserBodyValuesMapper {\r\n\r\n    @Named(\"inchToCentimeter\")\r\n    public static double inchToCentimeter(int inch) {\r\n        return inch * 2.54;\r\n    }\r\n\r\n    //...\r\n}\r\n```","```\r\n@Mapper\r\npublic interface UserBodyValuesMapper {\r\n    UserBodyValuesMapper INSTANCE = Mappers.getMapper(UserBodyValuesMapper.class);\r\n\r\n    @Mapping(source = \"inch\", target = \"centimeter\", qualifiedByName = \"inchToCentimeter\")\r\n    public UserBodyValues userBodyValuesMapper(UserBodyImperialValuesDTO dto);\r\n\r\n    @Named(\"inchToCentimeter\") \r\n    public static double inchToCentimeter(int inch) { \r\n        return inch * 2.54; \r\n    }\r\n}\r\n```","```\r\nUserBodyImperialValuesDTO dto = new UserBodyImperialValuesDTO();\r\ndto.setInch(10);\r\n\r\nUserBodyValues obj = UserBodyValuesMapper.INSTANCE.userBodyValuesMapper(dto);\r\n\r\nassertNotNull(obj);\r\nassertEquals(25.4, obj.getCentimeter(), 0); \r\n```","```\r\n@Qualifier\r\n@Target(ElementType.METHOD)\r\n@Retention(RetentionPolicy.CLASS)\r\npublic @interface PoundToKilogramMapper {\r\n}\r\n```","```\r\n@PoundToKilogramMapper\r\npublic static double poundToKilogram(int pound) {\r\n    return pound * 0.4535;\r\n} \r\n```","```\r\n@Mapper\r\npublic interface UserBodyValuesMapper {\r\n    UserBodyValuesMapper INSTANCE = Mappers.getMapper(UserBodyValuesMapper.class);\r\n\r\n    @Mapping(source = \"pound\", target = \"kilogram\", qualifiedBy = PoundToKilogramMapper.class)\r\n    public UserBodyValues userBodyValuesMapper(UserBodyImperialValuesDTO dto);\r\n\r\n    @PoundToKilogramMapper\r\n    public static double poundToKilogram(int pound) {\r\n        return pound * 0.4535;\r\n    }\r\n}\r\n```","```\r\nUserBodyImperialValuesDTO dto = new UserBodyImperialValuesDTO();\r\ndto.setPound(100);\r\n\r\nUserBodyValues obj = UserBodyValuesMapper.INSTANCE.userBodyValuesMapper(dto);\r\n\r\nassertNotNull(obj);\r\nassertEquals(45.35, obj.getKilogram(), 0); \r\n```"]