["```\r\nAuthorization: Digest \r\n    username=\"user1\",\r\n    realm=\"Custom Realm Name\",\r\n    nonce=\"MTM3NTYwOTA5NjU3OTo5YmIyMjgwNTFlMjdhMTA1MWM3OTMyMWYyNDY2MGFlZA==\",\r\n    uri=\"/spring-security-rest-digest-auth/api/foos/1\", \r\n    ....\r\n```","```\r\nimport org.apache.http.HttpHost;\r\nimport com.baeldung.client.HttpComponentsClientHttpRequestFactoryDigestAuth;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.web.client.RestTemplate;\r\n\r\n@Configuration\r\npublic class ClientConfig {\r\n\r\n    @Bean\r\n    public RestTemplate restTemplate() {\r\n        HttpHost host = new HttpHost(\"localhost\", 8080, \"http\");\r\n        CloseableHttpClient client = HttpClientBuilder.create().\r\n          setDefaultCredentialsProvider(provider()).useSystemProperties().build();\r\n        HttpComponentsClientHttpRequestFactory requestFactory = \r\n          new HttpComponentsClientHttpRequestFactoryDigestAuth(host, client);\r\n\r\n        return new RestTemplate(requestFactory);;\r\n    }\r\n\r\n    private CredentialsProvider provider() {\r\n        CredentialsProvider provider = new BasicCredentialsProvider();\r\n        UsernamePasswordCredentials credentials = \r\n          new UsernamePasswordCredentials(\"user1\", \"user1Pass\");\r\n        provider.setCredentials(AuthScope.ANY, credentials);\r\n        return provider;\r\n    }\r\n}\r\n```","```\r\nimport java.net.URI;\r\nimport org.apache.http.HttpHost;\r\nimport org.apache.http.client.AuthCache;\r\nimport org.apache.http.client.protocol.ClientContext;\r\nimport org.apache.http.impl.auth.DigestScheme;\r\nimport org.apache.http.impl.client.BasicAuthCache;\r\nimport org.apache.http.protocol.BasicHttpContext;\r\nimport org.apache.http.protocol.HttpContext;\r\nimport org.springframework.http.HttpMethod;\r\nimport org.springframework.http.client.HttpComponentsClientHttpRequestFactory;\r\n\r\npublic class HttpComponentsClientHttpRequestFactoryDigestAuth \r\n  extends HttpComponentsClientHttpRequestFactory {\r\n\r\n    HttpHost host;\r\n\r\n    public HttpComponentsClientHttpRequestFactoryDigestAuth(HttpHost host, HttpClient httpClient) {\r\n        super(httpClient);\r\n        this.host = host;\r\n    }\r\n\r\n    @Override\r\n    protected HttpContext createHttpContext(HttpMethod httpMethod, URI uri) {\r\n        return createHttpContext();\r\n    }\r\n\r\n    private HttpContext createHttpContext() {\r\n        // Create AuthCache instance\r\n        AuthCache authCache = new BasicAuthCache();\r\n        // Generate DIGEST scheme object, initialize it and add it to the local auth cache\r\n        DigestScheme digestAuth = new DigestScheme();\r\n        // If we already know the realm name\r\n        digestAuth.overrideParamter(\"realm\", \"Custom Realm Name\");\r\n        authCache.put(host, digestAuth);\r\n\r\n        // Add AuthCache to the execution context\r\n        BasicHttpContext localcontext = new BasicHttpContext();\r\n        localcontext.setAttribute(ClientContext.AUTH_CACHE, authCache);\r\n        return localcontext;\r\n    }\r\n}\r\n```","```\r\n@Test\r\npublic void whenSecuredRestApiIsConsumed_then200OK() {\r\n    String uri = \"http://localhost:8080/spring-security-rest-digest-auth/api/foos/1\";\r\n    ResponseEntity<Foo> entity = restTemplate.exchange(uri, HttpMethod.GET, null, Foo.class);\r\n    System.out.println(entity.getStatusCode());\r\n}\r\n```","```\r\n<dependency>\r\n   <groupId>org.springframework</groupId>\r\n   <artifactId>spring-webmvc</artifactId>\r\n   <version>5.2.8.RELEASE</version>\r\n</dependency>\r\n\r\n<dependency>\r\n   <groupId>org.apache.httpcomponents</groupId>\r\n   <artifactId>httpclient</artifactId>\r\n   <version>4.3.5</version>\r\n</dependency>\r\n```"]