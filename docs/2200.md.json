["```\r\n<repositories>\r\n    <repository>\r\n        <snapshots>\r\n            <enabled>false</enabled>\r\n        </snapshots>\r\n        <id>bintray-cuba-platform-main</id>\r\n        <name>bintray</name>\r\n        <url>http://dl.bintray.com/cuba-platform/main</url>\r\n    </repository>\r\n</repositories>\r\n...\r\n<dependency> \r\n    <groupId>com.haulmont.yarg</groupId> \r\n    <artifactId>yarg</artifactId> \r\n    <version>2.0.4</version> \r\n</dependency>\r\n```","```\r\n${Main.title}\r\n\r\nHello ${Main.name},\r\n\r\n${Main.content} \r\n```","```\r\n@RestController\r\npublic class DocumentController {\r\n\r\n    @GetMapping(\"/generate/doc\")\r\n    public void generateDocument(HttpServletResponse response)\r\n      throws IOException {\r\n    }\r\n} \r\n```","```\r\nReportBuilder reportBuilder = new ReportBuilder();\r\nReportTemplateBuilder reportTemplateBuilder = new ReportTemplateBuilder()\r\n  .documentPath(\"./src/main/resources/Letter.docx\")\r\n  .documentName(\"Letter.docx\")\r\n  .outputType(ReportOutputType.docx)\r\n  .readFileFromPath();\r\nreportBuilder.template(reportTemplateBuilder.build()); \r\n```","```\r\n{\r\n    \"main\": {\r\n        \"title\" : \"INTRODUCTION TO YARG\",\r\n        \"name\" : \"Baeldung\",\r\n        \"content\" : \"This is the content of the letter, can be anything we like.\"\r\n    }\r\n}\r\n```","```\r\nBandBuilder bandBuilder = new BandBuilder();\r\nString json = FileUtils.readFileToString(\r\n  new File(\"./src/main/resources/Data.json\"));\r\nReportBand main = bandBuilder.name(\"Main\")\r\n  .query(\"Main\", \"parameter=param1 $.main\", \"json\")\r\n  .build();\r\nreportBuilder.band(main);\r\nReport report = reportBuilder.build();\r\n```","```\r\nReporting reporting = new Reporting();\r\nreporting.setFormatterFactory(new DefaultFormatterFactory());\r\nreporting.setLoaderFactory(\r\n  new DefaultLoaderFactory().setJsonDataLoader(new JsonDataLoader()));\r\nresponse.setContentType(\r\n \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\");\r\nreporting.runReport(\r\n  new RunParams(report).param(\"param1\", json),\r\n  response.getOutputStream());\r\n```"]