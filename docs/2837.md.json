["```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-jdbc</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>com.h2database</groupId>\r\n    <artifactId>h2</artifactId>\r\n    <scope>runtime</scope>\r\n</dependency>\r\n```","```\r\nCREATE TABLE IF NOT EXISTS sys_message (\r\n    id bigint(20) NOT NULL AUTO_INCREMENT,\r\n    message varchar(100) NOT NULL,\r\n    PRIMARY KEY (id)\r\n); \r\n```","```\r\nString INSERT_MESSAGE_SQL \r\n  = \"insert into sys_message (message) values(?) \";\r\n\r\npublic long insertMessage(String message) {    \r\n    KeyHolder keyHolder = new GeneratedKeyHolder();\r\n\r\n    jdbcTemplate.update(connection -> {\r\n        PreparedStatement ps = connection\r\n          .prepareStatement(INSERT_MESSAGE_SQL);\r\n          ps.setString(1, message);\r\n          return ps;\r\n        }, keyHolder);\r\n\r\n        return (long) keyHolder.getKey();\r\n    }\r\n} \r\n```","```\r\n@Test\r\npublic void \r\n  insertJDBC_whenLoadMessageByKey_thenGetTheSameMessage() {\r\n    long key = messageRepositoryJDBCTemplate.insert(MESSAGE_CONTENT);\r\n    String loadedMessage = messageRepositoryJDBCTemplate\r\n      .getMessageById(key);\r\n\r\n    assertEquals(MESSAGE_CONTENT, loadedMessage);\r\n}\r\n```","```\r\n@Repository\r\npublic class MessageRepositorySimpleJDBCInsert {\r\n\r\n    SimpleJdbcInsert simpleJdbcInsert;\r\n\r\n    @Autowired\r\n    public MessageRepositorySimpleJDBCInsert(DataSource dataSource) {\r\n        simpleJdbcInsert = new SimpleJdbcInsert(dataSource)\r\n          .withTableName(\"sys_message\").usingGeneratedKeyColumns(\"id\");\r\n    }\r\n\r\n    //...\r\n} \r\n```","```\r\npublic long insert(String message) {\r\n    Map<String, Object> parameters = new HashMap<>(1);\r\n    parameters.put(\"message\", message);\r\n    Number newId = simpleJdbcInsert.executeAndReturnKey(parameters);\r\n    return (long) newId;\r\n} \r\n```","```\r\n@Test\r\npublic void \r\n  insertSimpleInsert_whenLoadMessageKey_thenGetTheSameMessage() {\r\n    long key = messageRepositorySimpleJDBCInsert.insert(MESSAGE_CONTENT);\r\n    String loadedMessage = messageRepositoryJDBCTemplate.getMessageById(key);\r\n\r\n    assertEquals(MESSAGE_CONTENT, loadedMessage);\r\n}\r\n```"]