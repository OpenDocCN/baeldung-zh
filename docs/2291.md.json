["```\r\nthisIsLowerCamelCase\r\nThisIsLowerCamelCase\r\n```","```\r\nString[] words = text.split(\"[\\\\W_]+\");\r\n```","```\r\nStringBuilder builder = new StringBuilder();\r\nfor (int i = 0; i < words.length; i++) {\r\n    String word = words[i];\r\n    if (i == 0) {\r\n        word = word.isEmpty() ? word : word.toLowerCase();\r\n    } else {\r\n        word = word.isEmpty() ? word : Character.toUpperCase(word.charAt(0)) + word.substring(1).toLowerCase();      \r\n    }\r\n    builder.append(word);\r\n}\r\nreturn builder.toString();\r\n```","```\r\nassertThat(toCamelCaseByRegex(\"THIS STRING SHOULD BE IN CAMEL CASE\"))\r\n  .isEqualTo(\"thisStringShouldBeInCamelCase\");\r\n```","```\r\nboolean shouldConvertNextCharToLower = true;\r\n```","```\r\nfor (int i = 0; i < text.length(); i++) {\r\n    char currentChar = text.charAt(i);\r\n    if (currentChar == delimiter) {\r\n        shouldConvertNextCharToLower = false;\r\n    } else if (shouldConvertNextCharToLower) {\r\n        builder.append(Character.toLowerCase(currentChar));\r\n    } else {\r\n        builder.append(Character.toUpperCase(currentChar));\r\n        shouldConvertNextCharToLower = true;\r\n    }\r\n}\r\nreturn builder.toString();\r\n```","```\r\nassertThat(toCamelCaseByIteration(\"THIS STRING SHOULD BE IN CAMEL CASE\", ' '))\r\n  .isEqualTo(\"thisStringShouldBeInCamelCase\");\r\n```","```\r\nassertThat(toCamelCaseByIteration(\"THIS_STRING_SHOULD_BE_IN_CAMEL_CASE\", '_'))\r\n  .isEqualTo(\"thisStringShouldBeInCamelCase\");\r\n```","```\r\n<dependency>\r\n    <groupId>org.apache.commons</groupId>\r\n    <artifactId>commons-text</artifactId>\r\n    <version>1.9</version>\r\n</dependency>\r\n```","```\r\nString camelCase = CaseUtils.toCamelCase(text, false, delimiter);\r\n```","```\r\nassertThat(CaseUtils.toCamelCase(\"THIS STRING SHOULD BE IN CAMEL CASE\", false, ' '))\r\n  .isEqualTo(\"thisStringShouldBeInCamelCase\");\r\n```","```\r\nString camelCase = CaseUtils.toCamelCase(text, true, delimiter);\r\n```","```\r\nassertThat(CaseUtils.toCamelCase(\"THIS STRING SHOULD BE IN CAMEL CASE\", true, ' '))\r\n  .isEqualTo(\"ThisStringShouldBeInCamelCase\");\r\n```","```\r\n<dependency>\r\n      <groupId>com.google.guava</groupId>\r\n      <artifactId>guava</artifactId>\r\n      <version>31.0.1-jre</version>\r\n</dependency>\r\n```","```\r\nString camelCase = CaseFormat.UPPER_UNDERSCORE.to(CaseFormat.LOWER_CAMEL, \"THIS_STRING_SHOULD_BE_IN_CAMEL_CASE\");\r\n```","```\r\nassertThat(CaseFormat.UPPER_UNDERSCORE.to(CaseFormat.LOWER_CAMEL, \"THIS_STRING_SHOULD_BE_IN_CAMEL_CASE\"))\r\n  .isEqualTo(\"thisStringShouldBeInCamelCase\");\r\n```","```\r\nString toUpperUnderscore = \"This string should Be in camel Case\"\r\n  .toUpperCase()\r\n  .replaceAll(' ', \"_\");\r\n```","```\r\nassertThat(toCamelCaseUsingGuava(\"THIS STRING SHOULD BE IN CAMEL CASE\", \" \"))\r\n  .isEqualTo(\"thisStringShouldBeInCamelCase\");\r\n```"]