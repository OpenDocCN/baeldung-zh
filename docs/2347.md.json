["```\r\n@Entity \r\npublic class User {\r\n\r\n    @Id \r\n    @GeneratedValue\r\n    private Long id;\r\n\r\n    private String name;\r\n\r\n    @OneToOne(fetch = FetchType.LAZY, mappedBy = \"user\") \r\n    private Address addresses;\r\n\r\n    // getters & setters \r\n} \r\n```","```\r\n@Entity \r\npublic class Address {\r\n\r\n    @Id \r\n    @GeneratedValue\r\n    private Long id;\r\n\r\n    private String address;\r\n\r\n    private String country;\r\n\r\n    @OneToOne(fetch = FetchType.LAZY) \r\n    @JoinColumn(name = \"user_id\") \r\n    private User user;\r\n\r\n    // getters & setters\r\n} \r\n```","```\r\npublic interface AddressRepository extends JpaRepository<Address, Long>, \r\n  QuerydslPredicateExecutor<Address>, QuerydslBinderCustomizer<QAddress> {\r\n\r\n    @Override \r\n    default void customize(QuerydslBindings bindings, QAddress root) {\r\n        bindings.bind(String.class)\r\n          .first((SingleValueBinding<StringPath, String>) StringExpression::eq);\r\n    }\r\n} \r\n```","```\r\n@GetMapping(value = \"/addresses\", produces = MediaType.APPLICATION_JSON_VALUE)\r\npublic Iterable<Address> queryOverAddress(\r\n  @QuerydslPredicate(root = Address.class) Predicate predicate) {\r\n    BooleanBuilder builder = new BooleanBuilder();\r\n    return addressRepository.findAll(builder.and(predicate));\r\n} \r\n```","```\r\n@Test\r\npublic void givenRequest_whenQueryUserFilteringByCountrySpain_thenGetJohn() throws Exception {\r\n    mockMvc.perform(get(\"/users?address.country=Spain\")).andExpect(status().isOk()).andExpect(content()\r\n      .contentType(contentType))\r\n      .andExpect(jsonPath(\"$\", hasSize(1)))\r\n      .andExpect(jsonPath(\"$[0].name\", is(\"John\")))\r\n      .andExpect(jsonPath(\"$[0].address.address\", is(\"Fake Street 1\")))\r\n      .andExpect(jsonPath(\"$[0].address.country\", is(\"Spain\")));\r\n} \r\n```","```\r\nselect user0_.id as id1_1_, \r\n       user0_.name as name2_1_ \r\nfrom user user0_ \r\n      cross join address address1_ \r\nwhere user0_.id=address1_.user_id \r\n      and address1_.country='Spain'\r\n```"]