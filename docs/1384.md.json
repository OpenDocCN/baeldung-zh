["```\r\nList<String> vavrStringList = List.of(\"JAVA\", \"Javascript\", \"Scala\");\r\njava.util.List<String> javaStringList = vavrStringList.toJavaList();\r\n```","```\r\nStream<String> vavrStream = Stream.of(\"JAVA\", \"Javascript\", \"Scala\");\r\njava.util.List<String> javaStringList = vavrStream.toJavaList();\r\n```","```\r\nMap<String, String> vavrMap = HashMap.of(\"1\", \"a\", \"2\", \"b\", \"3\", \"c\");\r\njava.util.Map<String, String> javaMap = vavrMap.toJavaMap();\r\n```","```\r\nList<String> vavrList = List.of(\"Java\");\r\nOptional<String> optional = vavrList.toJavaOptional();\r\nassertEquals(\"Java\", optional.get());\r\n```","```\r\njava.util.List<String> javaList = Arrays.asList(\"Java\", \"Haskell\", \"Scala\");\r\nList<String> vavrList = List.ofAll(javaList); \r\n```","```\r\njava.util.stream.Stream<String> javaStream \r\n  = Arrays.asList(\"Java\", \"Haskell\", \"Scala\").stream();\r\nStream<String> vavrStream = Stream.ofAll(javaStream);\r\n```","```\r\n@Test(expected = UnsupportedOperationException.class)\r\npublic void givenParams_whenVavrListConverted_thenException() {\r\n    java.util.List<String> javaList \r\n      = List.of(\"Java\", \"Haskell\", \"Scala\").asJava();\r\n\r\n    javaList.add(\"Python\");\r\n    assertEquals(4, javaList.size());\r\n}\r\n```","```\r\n@Test\r\npublic void givenParams_whenVavrListConvertedToMutable_thenRetunMutableList() {\r\n    java.util.List<String> javaList = List.of(\"Java\", \"Haskell\", \"Scala\")\r\n      .asJavaMutable();\r\n    javaList.add(\"Python\");\r\n\r\n    assertEquals(4, javaList.size());\r\n}\r\n```","```\r\nList<String> vavrList = List.of(\"Java\", \"Haskell\", \"Scala\", \"Java\");\r\nSet<String> linkedSet = vavrList.toLinkedSet();\r\nassertEquals(3, linkedSet.size());\r\nassertTrue(linkedSet instanceof LinkedHashSet);\r\n```"]