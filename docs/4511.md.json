["```\r\npublic interface UserManagementDAO {\r\n    boolean createUser(String newUserData);\r\n}\r\n```","```\r\npublic class SpringCoreConfig {\r\n    @Bean\r\n    public UserManagementDAO userManagementDAO() {\r\n        return new UserManagementDAOImpl();\r\n    }\r\n}\r\n```","```\r\n<bean class=\"org.springframework.context.annotation.CommonAnnotationBeanPostProcessor\" />\r\n<bean class=\"com.baeldung.dao.UserManagementDAOImpl\" id=\"userManagementDAO\"/>\r\n```","```\r\npublic void onStartup(ServletContext sc) throws ServletException {\r\n    AnnotationConfigWebApplicationContext root = new AnnotationConfigWebApplicationContext();\r\n    root.register(SpringCoreConfig.class);\r\n    sc.addListener(new ContextLoaderListener(root));\r\n}\r\n```","```\r\npublic class MainWebAppInitializer extends FacesInitializer implements WebApplicationInitializer {\r\n    public void onStartup(ServletContext sc) throws ServletException {\r\n        AnnotationConfigWebApplicationContext root = new AnnotationConfigWebApplicationContext();\r\n        root.register(SpringCoreConfig.class);\r\n        sc.addListener(new ContextLoaderListener(root));\r\n    }\r\n}\r\n```","```\r\n<listener>\r\n    <listener-class>\r\n        org.springframework.web.context.ContextLoaderListener\r\n    </listener-class>\r\n</listener>\r\n```","```\r\n<el-resolver>org.springframework.web.jsf.el.SpringBeanFacesELResolver</el-resolver>\r\n```","```\r\n@ManagedBean(name = \"registration\")\r\n@RequestScoped\r\npublic class RegistrationBean implements Serializable {\r\n    @ManagedProperty(value = \"#{userManagementDAO}\")\r\n    transient private IUserManagementDAO theUserDao;\r\n\r\n    private String userName;\r\n```","```\r\n // getters and setters\r\n}\r\n```","```\r\npublic void createNewUser() {\r\n    FacesContext context = FacesContext.getCurrentInstance();\r\n    boolean operationStatus = userDao.createUser(userName);\r\n    context.isValidationFailed();\r\n    if (operationStatus) {\r\n        operationMessage = \"User \" + userName + \" created\";\r\n    }\r\n} \r\n```","```\r\n@Named( \"registration\")\r\n@RequestScoped\r\npublic class RegistrationBean implements Serializable {\r\n    @Inject\r\n    UserManagementDAO theUserDao;\r\n}\r\n```","```\r\n<h:form>\r\n    <h:panelGrid id=\"theGrid\" columns=\"3\">\r\n        <h:outputText value=\"Username\"/>\r\n        <h:inputText id=\"firstName\" binding=\"#{userName}\" required=\"true\"\r\n          requiredMessage=\"#{msg['message.valueRequired']}\" value=\"#{registration.userName}\"/>\r\n        <h:message for=\"firstName\" style=\"color:red;\"/>\r\n        <h:commandButton value=\"#{msg['label.saveButton']}\" action=\"#{registration.createNewUser}\"\r\n          process=\"@this\"/>\r\n        <h:outputText value=\"#{registration.operationMessage}\" style=\"color:green;\"/>\r\n    </h:panelGrid>\r\n</h:form> \r\n```","```\r\nhttp://localhost:8080/jsf/index.jsf\r\n```","```\r\n<h:commandButton value=\"Save\"\r\n  action=\"#{registration.userDao.createUser(userName.value)}\"/>\r\n```"]