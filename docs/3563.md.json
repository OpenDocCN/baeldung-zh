["```\r\npublic static native void arraycopy(Object src, int srcPos, Object dest, int destPos, int length);\r\n```","```\r\npublic static <T,U> T[] copyOf(U[] original, int newLength, Class<? extends T[]> newType) {\r\n    @SuppressWarnings(\"unchecked\")\r\n    T[] copy = ((Object)newType == (Object)Object[].class) \r\n      ? (T[]) new Object[newLength]\r\n      : (T[]) Array.newInstance(newType.getComponentType(), newLength);\r\n    System.arraycopy(original, 0, copy, 0, Math.min(original.length, newLength));\r\n    return copy;\r\n}\r\n```","```\r\npublic static int[] copyOf(int[] original, int newLength) {\r\n    int[] copy = new int[newLength];\r\n    System.arraycopy(original, 0, copy, 0, Math.min(original.length, newLength));\r\n    return copy;\r\n}\r\n```","```\r\n@BenchmarkMode(Mode.AverageTime)\r\n@State(Scope.Thread)\r\n@OutputTimeUnit(TimeUnit.NANOSECONDS)\r\n@Warmup(iterations = 10)\r\n@Fork(1)\r\n@Measurement(iterations = 100)\r\n```","```\r\npublic class PrimitivesCopyBenchmark {\r\n\r\n    @Param({ \"10\", \"1000000\" })\r\n    public int SIZE;\r\n\r\n    int[] src;\r\n\r\n    @Setup\r\n    public void setup() {\r\n        Random r = new Random();\r\n        src = new int[SIZE];\r\n\r\n        for (int i = 0; i < SIZE; i++) {\r\n            src[i] = r.nextInt();\r\n        }\r\n    }\r\n} \r\n```","```\r\npublic class ObjectsCopyBenchmark {\r\n\r\n    @Param({ \"10\", \"1000000\" })\r\n    public int SIZE;\r\n    Integer[] src;\r\n\r\n    @Setup\r\n    public void setup() {\r\n        Random r = new Random();\r\n        src = new Integer[SIZE];\r\n\r\n        for (int i = 0; i < SIZE; i++) {\r\n            src[i] = r.nextInt();\r\n        }\r\n    }\r\n}\r\n```","```\r\n@Benchmark\r\npublic Integer[] systemArrayCopyBenchmark() {\r\n    Integer[] target = new Integer[SIZE];\r\n    System.arraycopy(src, 0, target, 0, SIZE);\r\n    return target;\r\n}\r\n```","```\r\n@Benchmark\r\npublic Integer[] arraysCopyOfBenchmark() {\r\n    return Arrays.copyOf(src, SIZE);\r\n}\r\n```","```\r\nBenchmark                                          (SIZE)  Mode  Cnt        Score       Error  Units\r\nObjectsCopyBenchmark.arraysCopyOfBenchmark             10  avgt  100        8.535 ±     0.006  ns/op\r\nObjectsCopyBenchmark.arraysCopyOfBenchmark        1000000  avgt  100  2831316.981 ± 15956.082  ns/op\r\nObjectsCopyBenchmark.systemArrayCopyBenchmark          10  avgt  100        9.278 ±     0.005  ns/op\r\nObjectsCopyBenchmark.systemArrayCopyBenchmark     1000000  avgt  100  2826917.513 ± 15585.400  ns/op\r\nPrimitivesCopyBenchmark.arraysCopyOfBenchmark          10  avgt  100        9.172 ±     0.008  ns/op\r\nPrimitivesCopyBenchmark.arraysCopyOfBenchmark     1000000  avgt  100   476395.127 ±   310.189  ns/op\r\nPrimitivesCopyBenchmark.systemArrayCopyBenchmark       10  avgt  100        8.952 ±     0.004  ns/op\r\nPrimitivesCopyBenchmark.systemArrayCopyBenchmark  1000000  avgt  100   475088.291 ±   726.416  ns/op\r\n```"]