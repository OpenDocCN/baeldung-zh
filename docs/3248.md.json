["```\r\n<dependency>\r\n    <groupId>com.sun.mail</groupId>\r\n    <artifactId>javax.mail</artifactId> \r\n    <version>1.6.2</version>\r\n</dependency>\r\n```","```\r\nif (contentType.contains(\"multipart\")) {\r\n    //send to the download utility...\r\n}\r\n```","```\r\nif (Part.ATTACHMENT.equalsIgnoreCase(part.getDisposition())) {\r\n    String file = part.getFileName();\r\n    part.saveFile(downloadDirectory + File.separator + part.getFileName());\r\n    downloadedAttachments.add(file);\r\n}\r\n```","```\r\npublic List<String> downloadAttachments(Message message) throws IOException, MessagingException {\r\n    List<String> downloadedAttachments = new ArrayList<String>();\r\n    Multipart multiPart = (Multipart) message.getContent();\r\n    int numberOfParts = multiPart.getCount();\r\n    for (int partCount = 0; partCount < numberOfParts; partCount++) {\r\n        MimeBodyPart part = (MimeBodyPart) multiPart.getBodyPart(partCount);\r\n        if (Part.ATTACHMENT.equalsIgnoreCase(part.getDisposition())) {\r\n            String file = part.getFileName();\r\n            part.saveFile(downloadDirectory + File.separator + part.getFileName());\r\n            downloadedAttachments.add(file);\r\n        }\r\n    }\r\n    return downloadedAttachments;\r\n} \r\n```"]