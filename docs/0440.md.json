["```\r\n<dependency>\r\n    <groupId>org.thymeleaf</groupId>\r\n    <artifactId>thymeleaf</artifactId>\r\n    <version>3.0.11.RELEASE</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.thymeleaf</groupId>\r\n    <artifactId>thymeleaf-spring5</artifactId>\r\n    <version>3.0.11.RELEASE</version>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.security</groupId>\r\n    <artifactId>spring-security-web</artifactId>\r\n    <version>5.7.3</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.security</groupId>\r\n    <artifactId>spring-security-config</artifactId>\r\n    <version>5.7.3</version>\r\n</dependency> \r\n```","```\r\n@Configuration\r\n@EnableWebSecurity\r\n@EnableGlobalMethodSecurity(securedEnabled = true, prePostEnabled = true)\r\npublic class WebMVCSecurity {\r\n\r\n    @Bean\r\n    public InMemoryUserDetailsManager userDetailsService() {\r\n        UserDetails user = User.withUsername(\"user1\")\r\n            .password(\"{noop}user1Pass\")\r\n            .authorities(\"ROLE_USER\")\r\n            .build();\r\n\r\n        return new InMemoryUserDetailsManager(user);\r\n    }\r\n\r\n    @Bean\r\n    public WebSecurityCustomizer webSecurityCustomizer() {\r\n        return (web) -> web.ignoring()\r\n            .antMatchers(\"/resources/**\");\r\n    }\r\n\r\n    @Bean\r\n    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {\r\n        http.authorizeRequests()\r\n            .anyRequest()\r\n            .authenticated()\r\n            .and()\r\n            .httpBasic();\r\n        return http.build();\r\n    }\r\n}\r\n```","```\r\n.csrf().disable()\r\n```","```\r\n<security:http \r\n  auto-config=\"true\"\r\n  disable-url-rewriting=\"true\" \r\n  use-expressions=\"true\">\r\n    <security:csrf />\r\n\r\n    <!-- Remaining configuration ... -->\r\n</security:http>\r\n```","```\r\n<input \r\n  type=\"hidden\" \r\n  th:name=\"${_csrf.parameterName}\" \r\n  th:value=\"${_csrf.token}\" />\r\n```","```\r\n<input \r\n  type=\"hidden\" \r\n  name=\"_csrf\"\r\n  value=\"32e9ae18-76b9-4330-a8b6-08721283d048\" /> \r\n<!-- Example token -->\r\n```","```\r\n<!DOCTYPE html>\r\n<html \r\n\txmlns:th=\"http://www.thymeleaf.org\">\r\n<head>\r\n<title>Add Student</title>\r\n</head>\r\n<body>\r\n    <h1>Add Student</h1>\r\n        <form action=\"#\" th:action=\"@{/saveStudent}\" th:object=\"${student}\"\r\n          method=\"post\">\r\n            <ul>\r\n                <li th:errors=\"*{id}\" />\r\n                <li th:errors=\"*{name}\" />\r\n                <li th:errors=\"*{gender}\" />\r\n                <li th:errors=\"*{percentage}\" />\r\n            </ul>\r\n    <!-- Remaining part of HTML -->\r\n    </form>\r\n</body>\r\n</html>\r\n```","```\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/>\r\n</head>\r\n<body>\r\n<form action=\"http://localhost:8080/spring-thymeleaf/saveStudent\" method=\"post\">\r\n    <input type=\"hidden\" name=\"payload\" value=\"CSRF attack!\"/>\r\n    <input type=\"submit\" />\r\n</form>\r\n</body>\r\n</html>\r\n```","```\r\n@RunWith(SpringJUnit4ClassRunner.class)\r\n@WebAppConfiguration\r\n@ContextConfiguration(classes = { \r\n  WebApp.class, WebMVCConfig.class, WebMVCSecurity.class, InitSecurity.class })\r\npublic class CsrfEnabledIntegrationTest {\r\n\r\n    // configuration\r\n\r\n}\r\n```","```\r\n@Test\r\npublic void addStudentWithoutCSRF() throws Exception {\r\n    mockMvc.perform(post(\"/saveStudent\").contentType(MediaType.APPLICATION_JSON)\r\n      .param(\"id\", \"1234567\").param(\"name\", \"Joe\").param(\"gender\", \"M\")\r\n      .with(testUser())).andExpect(status().isForbidden());\r\n}\r\n\r\n@Test\r\npublic void addStudentWithCSRF() throws Exception {\r\n    mockMvc.perform(post(\"/saveStudent\").contentType(MediaType.APPLICATION_JSON)\r\n      .param(\"id\", \"1234567\").param(\"name\", \"Joe\").param(\"gender\", \"M\")\r\n      .with(testUser()).with(csrf())).andExpect(status().isOk());\r\n}\r\n```"]