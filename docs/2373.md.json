["```\r\nCloseableHttpClient client = HttpClientBuilder.create().build();\r\n```","```\r\ninstance.execute(new HttpGet(\"http://www.google.com\"));\r\n```","```\r\nCloseableHttpResponse response = instance.execute(new HttpGet(\"http://www.google.com\"));\r\nassertThat(response.getStatusLine().getStatusCode(), equalTo(200));\r\n```","```\r\nCloseableHttpResponse response = instance.execute(new HttpGet(\"http://www.google.com\"));\r\nString contentMimeType = ContentType.getOrDefault(response.getEntity()).getMimeType();\r\nassertThat(contentMimeType, equalTo(ContentType.TEXT_HTML.getMimeType()));\r\n```","```\r\nCloseableHttpResponse response = instance.execute(new HttpGet(\"http://www.google.com\"));\r\nString bodyAsString = EntityUtils.toString(response.getEntity());\r\nassertThat(bodyAsString, notNullValue());\r\n```","```\r\n@Test(expected = SocketTimeoutException.class)\r\npublic void givenLowTimeout_whenExecutingRequestWithTimeout_thenException() \r\n    throws ClientProtocolException, IOException {\r\n    RequestConfig requestConfig = RequestConfig.custom()\r\n      .setConnectionRequestTimeout(1000).setConnectTimeout(1000).setSocketTimeout(1000).build();\r\n    HttpGet request = new HttpGet(SAMPLE_URL);\r\n    request.setConfig(requestConfig);\r\n    instance.execute(request);\r\n}\r\n```","```\r\nRequestConfig requestConfig = RequestConfig.custom().\r\n    setConnectionRequestTimeout(1000).setConnectTimeout(1000).setSocketTimeout(1000).build();\r\nHttpClientBuilder builder = HttpClientBuilder.create().setDefaultRequestConfig(requestConfig);\r\n```","```\r\ninstance.execute(new HttpPost(SAMPLE_URL));\r\n```","```\r\nList<NameValuePair> params = new ArrayList<NameValuePair>();\r\nparams.add(new BasicNameValuePair(\"key1\", \"value1\"));\r\nparams.add(new BasicNameValuePair(\"key2\", \"value2\"));\r\nrequest.setEntity(new UrlEncodedFormEntity(params, Consts.UTF_8));\r\n```","```\r\nCloseableHttpClient instance = HttpClientBuilder.create().disableRedirectHandling().build();\r\nCloseableHttpResponse response = instance.execute(new HttpGet(\"http://t.co/I5YYd9tddw\"));\r\nassertThat(response.getStatusLine().getStatusCode(), equalTo(301));\r\n```","```\r\nHttpGet request = new HttpGet(SAMPLE_URL);\r\nrequest.addHeader(HttpHeaders.ACCEPT, \"application/xml\");\r\nresponse = instance.execute(request);\r\n```","```\r\nCloseableHttpResponse response = instance.execute(new HttpGet(SAMPLE_URL));\r\nHeader[] headers = response.getHeaders(HttpHeaders.CONTENT_TYPE);\r\nassertThat(headers, not(emptyArray()));\r\n```","```\r\nresponse = instance.execute(new HttpGet(SAMPLE_URL));\r\ntry {\r\n    HttpEntity entity = response.getEntity();\r\n    if (entity != null) {\r\n        InputStream instream = entity.getContent();\r\n        instream.close();\r\n    }\r\n} finally {\r\n    response.close();\r\n}\r\n```"]