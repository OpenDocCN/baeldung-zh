["```\r\n<dependency>\r\n    <groupId>org.apache.commons</groupId>\r\n    <artifactId>commons-csv</artifactId>\r\n    <version>1.4</version>\r\n</dependency> \r\n```","```\r\nauthor,title\r\nDan Simmons,Hyperion\r\nDouglas Adams,The Hitchhiker's Guide to the Galaxy\r\n```","```\r\nMap<String, String> AUTHOR_BOOK_MAP = new HashMap<>() {\r\n    {\r\n        put(\"Dan Simmons\", \"Hyperion\");\r\n        put(\"Douglas Adams\", \"The Hitchhiker's Guide to the Galaxy\");\r\n    }\r\n});\r\nString[] HEADERS = { \"author\", \"title\"};\r\n\r\n@Test\r\npublic void givenCSVFile_whenRead_thenContentsAsExpected() throws IOException {\r\n    Reader in = new FileReader(\"book.csv\");\r\n    Iterable<CSVRecord> records = CSVFormat.DEFAULT\r\n      .withHeader(HEADERS)\r\n      .withFirstRecordAsHeader()\r\n      .parse(in);\r\n    for (CSVRecord record : records) {\r\n        String author = record.get(\"author\");\r\n        String title = record.get(\"title\");\r\n        assertEquals(AUTHOR_BOOK_MAP.get(author), title);\r\n    }\r\n}\r\n```","```\r\npublic void createCSVFile() throws IOException {\r\n    FileWriter out = new FileWriter(\"book_new.csv\");\r\n    try (CSVPrinter printer = new CSVPrinter(out, CSVFormat.DEFAULT\r\n      .withHeader(HEADERS))) {\r\n        AUTHOR_BOOK_MAP.forEach((author, title) -> {\r\n            printer.printRecord(author, title);\r\n        });\r\n    }\r\n}\r\n```","```\r\nReader in = new FileReader(\"book.csv\");\r\nIterable<CSVRecord> records = CSVFormat.DEFAULT.parse(in);\r\nfor (CSVRecord record : records) {\r\n    String columnOne = record.get(0);\r\n    String columnTwo = record.get(1);\r\n}\r\n```","```\r\nIterable<CSVRecord> records = CSVFormat.DEFAULT\r\n  .withHeader(\"author\", \"title\").parse(in);\r\nfor (CSVRecord record : records) {\r\n    String author = record.get(\"author\");\r\n    String title = record.get(\"title\");\r\n}\r\n```","```\r\nenum BookHeaders {\r\n    author, title\r\n}\r\n\r\nIterable<CSVRecord> records = CSVFormat.DEFAULT\r\n  .withHeader(BookHeaders.class).parse(in);\r\nfor (CSVRecord record : records) {\r\n    String author = record.get(BookHeaders.author);\r\n    String title = record.get(BookHeaders.title);\r\n}\r\n```","```\r\nIterable<CSVRecord> records = CSVFormat.DEFAULT\r\n  .withFirstRowAsHeader().parse(in);\r\nfor (CSVRecord record : records) {\r\n    String author = record.get(\"author\");\r\n    String title = record.get(\"title\");\r\n}\r\n```","```\r\nFileWriter out = new FileWriter(\"book_new.csv\");\r\nCSVPrinter printer = CSVFormat.DEFAULT\r\n  .withHeader(\"author\", \"title\").print(out);\r\n```"]