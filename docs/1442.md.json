["```\r\n@Service\r\npublic class ArithmeticService {\r\n    public float add(float number1, float number2) {\r\n        return number1 + number2;\r\n    }\r\n\r\n    public float subtract(float number1, float number2) {\r\n        return number1 - number2;\r\n    }\r\n\r\n    public float multiply(float number1, float number2) {\r\n        return number1 * number2;\r\n    }\r\n\r\n    public float divide(float number1, float number2) {\r\n        if (number2 == 0) {\r\n            throw new IllegalArgumentException(\"'number2' cannot be zero\");\r\n        }\r\n        return number1 / number2;\r\n    }\r\n}\r\n```","```\r\n@RestController\r\n@RequestMapping(\"/math\")\r\npublic class ArithmeticController {\r\n    @Autowired\r\n    private ArithmeticService arithmeticService;\r\n\r\n    @GetMapping(\"/sum/{number1}/{number2}\")\r\n    public float getSum(@PathVariable(\"number1\") float number1, @PathVariable(\"number2\") float number2) {\r\n    \treturn arithmeticService.add(number1, number2);\r\n    }\r\n\r\n    @GetMapping(\"/subtract/{number1}/{number2}\")\r\n    public float getDifference(@PathVariable(\"number1\") float number1, @PathVariable(\"number2\") float number2) {\r\n    \treturn arithmeticService.subtract(number1, number2);\r\n    }\r\n\r\n    @GetMapping(\"/multiply/{number1}/{number2}\")\r\n    public float getMultiplication(@PathVariable(\"number1\") float number1, @PathVariable(\"number2\") float number2) {\r\n    \treturn arithmeticService.multiply(number1, number2);\r\n    }\r\n\r\n    @GetMapping(\"/divide/{number1}/{number2}\")\r\n    public float getDivision(@PathVariable(\"number1\") float number1, @PathVariable(\"number2\") float number2) {\r\n    \treturn arithmeticService.divide(number1, number2);\r\n    }\r\n}\r\n```","```\r\n@Singleton \r\npublic class ArithmeticService {\r\n    // implementation identical to the Spring Boot service layer\r\n}\r\n```","```\r\n@Controller(\"/math\")\r\npublic class ArithmeticController {\r\n    @Inject\r\n    private ArithmeticService arithmeticService;\r\n\r\n    @Get(\"/sum/{number1}/{number2}\")\r\n    public float getSum(float number1, float number2) {\r\n    \treturn arithmeticService.add(number1, number2);\r\n    }\r\n\r\n    @Get(\"/subtract/{number1}/{number2}\")\r\n    public float getDifference(float number1, float number2) {\r\n    \treturn arithmeticService.subtract(number1, number2);\r\n    }\r\n\r\n    @Get(\"/multiply/{number1}/{number2}\")\r\n    public float getMultiplication(float number1, float number2) {\r\n    \treturn arithmeticService.multiply(number1, number2);\r\n    }\r\n\r\n    @Get(\"/divide/{number1}/{number2}\")\r\n    public float getDivision(float number1, float number2) {\r\n    \treturn arithmeticService.divide(number1, number2);\r\n    }\r\n}\r\n```","```\r\n[main] INFO  c.b.m.v.s.CompareApplication - Started CompareApplication in 3.179 seconds (JVM running for 4.164)\r\n```","```\r\n21:22:49.267 [main] INFO  io.micronaut.runtime.Micronaut - Startup completed in 1278ms. Server Running: http://localhost:57535 \r\n```","```\r\nInitial: 0.25 GB \r\nUsed: 0.02 GB \r\nMax: 4.00 GB \r\nCommitted: 0.06 GB \r\n```","```\r\nInitial: 0.25 GB \r\nUsed: 0.01 GB \r\nMax: 4.00 GB \r\nCommitted: 0.03 GB\r\n```"]