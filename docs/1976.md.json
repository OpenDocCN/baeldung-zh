["```\r\npublic class Circle {\r\n\r\n    public static double calculateArea(double radius) {\r\n        return Math.PI * radius * radius;\r\n    }\r\n}\r\n```","```\r\npublic class CircleTest {\r\n\r\n    @Test\r\n    public void testCalculateArea() {\r\n        //...\r\n    }\r\n}\r\n```","```\r\npublic class CircleTest {\r\n\r\n    //...\r\n\r\n    @Test\r\n    public void givenRadius_whenCalculateArea_thenReturnArea() {\r\n        //...\r\n    }\r\n\r\n    @Test\r\n    public void givenDoubleMaxValueAsRadius_whenCalculateArea_thenReturnAreaAsInfinity() {\r\n        //...\r\n    }\r\n}\r\n```","```\r\npublic static void assertEquals(Object expected, Object actual)\r\n```","```\r\n@Test \r\npublic void givenRadius_whenCalculateArea_thenReturnArea() {\r\n    double actualArea = Circle.calculateArea(1d);\r\n    double expectedArea = 3.141592653589793;\r\n    Assert.assertEquals(expectedArea, actualArea); \r\n}\r\n```","```\r\n@Test \r\npublic void givenRadius_whenCalculateArea_thenReturnArea() {\r\n    double actualArea = Circle.calculateArea(2d);\r\n    double expectedArea = 3.141592653589793 * 2 * 2;\r\n    Assert.assertEquals(expectedArea, actualArea); \r\n}\r\n```"]