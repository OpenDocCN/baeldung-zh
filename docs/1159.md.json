["```\r\n<dependency>\r\n    <groupId>org.springframework.cloud</groupId>\r\n    <artifactId>spring-cloud-starter-circuitbreaker-resilience4j</artifactId>\r\n    <version>1.0.2.RELEASE</version>\r\n</dependency>\r\n```","```\r\nhttps://jsonplaceholder.typicode.com/albums\r\n```","```\r\n@Service\r\npublic class AlbumService {\r\n\r\n    @Autowired\r\n    private CircuitBreakerFactory circuitBreakerFactory;\r\n\r\n    //... \r\n\r\n}\r\n```","```\r\nCircuitBreaker circuitBreaker = circuitBreakerFactory.create(\"circuitbreaker\");\r\n```","```\r\npublic String getAlbumList() {\r\n    CircuitBreaker circuitBreaker = circuitBreakerFactory.create(\"circuitbreaker\");\r\n    String url = \"https://jsonplaceholder.typicode.com/albums\";\r\n\r\n    return circuitBreaker.run(() -> restTemplate.getForObject(url, String.class));\r\n}\r\n```","```\r\npublic String getAlbumList() {\r\n    CircuitBreaker circuitBreaker = circuitBreakerFactory.create(\"circuitbreaker\");\r\n    String url = \"http://localhost:1234/not-real\";\r\n\r\n    return circuitBreaker.run(() -> restTemplate.getForObject(url, String.class), \r\n      throwable -> getDefaultAlbumList());\r\n}\r\n```","```\r\n@RestController\r\npublic class Controller {\r\n\r\n    @Autowired\r\n    private Service service;\r\n\r\n    @GetMapping(\"/albums\")\r\n    public String albums() {\r\n        return service.getAlbumList();\r\n    }\r\n\r\n}\r\n```","```\r\n[GET] http://localhost:8080/albums\r\n```","```\r\nCircuitBreakerConfig circuitBreakerConfig = CircuitBreakerConfig.custom()\r\n  .failureRateThreshold(50)\r\n  .waitDurationInOpenState(Duration.ofMillis(1000))\r\n  .slidingWindowSize(2)\r\n  .build();\r\nTimeLimiterConfig timeLimiterConfig = TimeLimiterConfig.custom()\r\n  .timeoutDuration(Duration.ofSeconds(4))\r\n  .build();\r\n```","```\r\n@Configuration\r\npublic class Resilience4JConfiguration {\r\n    @Bean\r\n    public Customizer<Resilience4JCircuitBreakerFactory> globalCustomConfiguration() {\r\n\r\n        // the circuitBreakerConfig and timeLimiterConfig objects\r\n\r\n        return factory -> factory.configureDefault(id -> new Resilience4JConfigBuilder(id)\r\n          .timeLimiterConfig(timeLimiterConfig)\r\n          .circuitBreakerConfig(circuitBreakerConfig)\r\n          .build());\r\n    } \r\n}\r\n```","```\r\n@Bean\r\npublic Customizer<Resilience4JCircuitBreakerFactory> specificCustomConfiguration1() {\r\n\r\n    // the circuitBreakerConfig and timeLimiterConfig objects\r\n\r\n    return factory -> factory.configure(builder -> builder.circuitBreakerConfig(circuitBreakerConfig)\r\n      .timeLimiterConfig(timeLimiterConfig).build(), \"circuitBreaker\");\r\n}\r\n```","```\r\n@Bean\r\npublic Customizer<Resilience4JCircuitBreakerFactory> specificCustomConfiguration2() {\r\n\r\n    // the circuitBreakerConfig and timeLimiterConfig objects\r\n\r\n    return factory -> factory.configure(builder -> builder.circuitBreakerConfig(circuitBreakerConfig)\r\n      .timeLimiterConfig(timeLimiterConfig).build(),\r\n        \"circuitBreaker1\", \"circuitBreaker2\", \"circuitBreaker3\");\r\n}\r\n```"]