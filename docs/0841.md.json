["```\r\npublic interface BasicOperation {\r\n    int add(int a, int b);\r\n\r\n    int subtract(int a, int b);\r\n}\r\n```","```\r\npublic interface AdvancedOperation {\r\n    int multiply(int a, int b);\r\n\r\n    int divide(int a, int b);\r\n}\r\n```","```\r\nClassLoader classLoader = ClassLoader.getSystemClassLoader();\r\nClass<?>[] interfaces = {BasicOperation.class, AdvancedOperation.class};\r\nClass<?> proxyClass = Proxy.getProxyClass(classLoader, interfaces);\r\n```","```\r\n-Dsun.misc.ProxyGenerator.saveGeneratedFiles=true\r\n```","```\r\nSystem.setProperty(\"sun.misc.ProxyGenerator.saveGeneratedFiles\", \"true\");\r\n```","```\r\npublic final class $Proxy0 extends Proxy implements BasicOperation, AdvancedOperation\r\n```","```\r\nprivate static Method hashCodeMethod;\r\nprivate static Method equalsMethod;\r\nprivate static Method toStringMethod;\r\nprivate static Method addMethod;\r\nprivate static Method subtractMethod;\r\nprivate static Method multiplyMethod;\r\nprivate static Method divideMethod;\r\n```","```\r\npublic $Proxy0(InvocationHandler handler) {\r\n    super(handler);\r\n}\r\n\r\npublic final int hashCode() {\r\n    try {\r\n        return (Integer) super.h.invoke(this, hashCodeMethod, (Object[]) null);\r\n    }\r\n    catch (RuntimeException | Error ex1) {\r\n        throw ex1;\r\n    }\r\n    catch (Throwable ex2) {\r\n        throw new UndeclaredThrowableException(ex2);\r\n    }\r\n}\r\n```","```\r\nFunctionalInterface instance = Consumer.class.getDeclaredAnnotation(FunctionalInterface.class);\r\nClass<?> clazz = instance.getClass();\r\n\r\nboolean isProxyClass = Proxy.isProxyClass(clazz);\r\nassertTrue(isProxyClass);\r\n```"]