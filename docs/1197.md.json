["```\r\n@Configuration\r\n@EnableTransactionManagement\r\npublic class PersistenceJPAConfig{\r\n\r\n   @Bean\r\n   public LocalContainerEntityManagerFactoryBean\r\n     entityManagerFactoryBean(){\r\n      //...\r\n   }\r\n\r\n   @Bean\r\n   public PlatformTransactionManager transactionManager(){\r\n      JpaTransactionManager transactionManager\r\n        = new JpaTransactionManager();\r\n      transactionManager.setEntityManagerFactory(\r\n        entityManagerFactoryBean().getObject() );\r\n      return transactionManager;\r\n   }\r\n}\r\n```","```\r\n<bean id=\"txManager\" class=\"org.springframework.orm.jpa.JpaTransactionManager\">\r\n   <property name=\"entityManagerFactory\" ref=\"myEmf\" />\r\n</bean>\r\n<tx:annotation-driven transaction-manager=\"txManager\" />\r\n```","```\r\n@Service\r\n@Transactional\r\npublic class FooService {\r\n    //...\r\n}\r\n```","```\r\ncourseDao.createWithRuntimeException(course);\r\n```","```\r\n@Transactional(isolation = Isolation.SERIALIZABLE)\r\n```","```\r\n@Transactional( propagation = Propagation.SUPPORTS,readOnly = true )\r\n```","```\r\n@Transactional\r\npublic void createCourseDeclarativeWithRuntimeException(Course course) {\r\n    courseDao.create(course);\r\n    throw new DataIntegrityViolationException(\"Throwing exception for demoing Rollback!!!\");\r\n}\r\n```","```\r\n@Transactional(rollbackFor = { SQLException.class })\r\npublic void createCourseDeclarativeWithCheckedException(Course course) throws SQLException {\r\n    courseDao.create(course);\r\n    throw new SQLException(\"Throwing exception for demoing rollback\");\r\n}\r\n```","```\r\n@Transactional(noRollbackFor = { SQLException.class })\r\npublic void createCourseDeclarativeWithNoRollBack(Course course) throws SQLException {\r\n    courseDao.create(course);\r\n    throw new SQLException(\"Throwing exception for demoing rollback\");\r\n}\r\n```","```\r\npublic void createCourseDefaultRatingProgramatic(Course course) {\r\n    try {\r\n       courseDao.create(course);\r\n    } catch (Exception e) {\r\n       TransactionAspectSupport.currentTransactionStatus().setRollbackOnly();\r\n    }\r\n}\r\n```"]