["```\r\n<dependency>\r\n    <groupId>com.zaxxer</groupId>\r\n    <artifactId>HikariCP</artifactId>\r\n    <version>3.4.5</version>\r\n</dependency>\r\n```","```\r\npublic class DataSource {\r\n\r\n    private static HikariConfig config = new HikariConfig();\r\n    private static HikariDataSource ds;\r\n\r\n    static {\r\n        config.setJdbcUrl( \"jdbc_url\" );\r\n        config.setUsername( \"database_username\" );\r\n        config.setPassword( \"database_password\" );\r\n        config.addDataSourceProperty( \"cachePrepStmts\" , \"true\" );\r\n        config.addDataSourceProperty( \"prepStmtCacheSize\" , \"250\" );\r\n        config.addDataSourceProperty( \"prepStmtCacheSqlLimit\" , \"2048\" );\r\n        ds = new HikariDataSource( config );\r\n    }\r\n\r\n    private DataSource() {}\r\n\r\n    public static Connection getConnection() throws SQLException {\r\n        return ds.getConnection();\r\n    }\r\n}\r\n```","```\r\nprivate static HikariConfig config = new HikariConfig(\r\n    \"datasource.properties\" );\r\n```","```\r\ndataSourceClassName= //TBD\r\ndataSource.user= //TBD\r\n//other properties name should start with dataSource as shown above\r\n```","```\r\nProperties props = new Properties();\r\nprops.setProperty( \"dataSourceClassName\" , //TBD );\r\nprops.setProperty( \"dataSource.user\" , //TBD );\r\n//setter for other required properties\r\nprivate static HikariConfig config = new HikariConfig( props );\r\n```","```\r\nds.setJdbcUrl( //TBD  );\r\nds.setUsername( //TBD );\r\nds.setPassword( //TBD );\r\n```","```\r\ncreate table dept(\r\n  deptno numeric,\r\n  dname  varchar(14),\r\n  loc    varchar(13),\r\n  constraint pk_dept primary key ( deptno )\r\n);\r\n\r\ncreate table emp(\r\n  empno    numeric,\r\n  ename    varchar(10),\r\n  job      varchar(9),\r\n  mgr      numeric,\r\n  hiredate date,\r\n  sal      numeric,\r\n  comm     numeric,\r\n  deptno   numeric,\r\n  constraint pk_emp primary key ( empno ),\r\n  constraint fk_deptno foreign key ( deptno ) references dept ( deptno )\r\n);\r\n\r\ninsert into dept values( 10, 'ACCOUNTING', 'NEW YORK' );\r\ninsert into dept values( 20, 'RESEARCH', 'DALLAS' );\r\ninsert into dept values( 30, 'SALES', 'CHICAGO' );\r\ninsert into dept values( 40, 'OPERATIONS', 'BOSTON' );\r\n\r\ninsert into emp values(\r\n 7839, 'KING', 'PRESIDENT', null,\r\n to_date( '17-11-1981' , 'dd-mm-yyyy' ),\r\n 7698, null, 10\r\n);\r\ninsert into emp values(\r\n 7698, 'BLAKE', 'MANAGER', 7839,\r\n to_date( '1-5-1981' , 'dd-mm-yyyy' ),\r\n 7782, null, 20\r\n);\r\ninsert into emp values(\r\n 7782, 'CLARK', 'MANAGER', 7839,\r\n to_date( '9-6-1981' , 'dd-mm-yyyy' ),\r\n 7566, null, 30\r\n);\r\ninsert into emp values(\r\n 7566, 'JONES', 'MANAGER', 7839,\r\n to_date( '2-4-1981' , 'dd-mm-yyyy' ),\r\n 7839, null, 40\r\n);\r\n```","```\r\njdbc:h2:mem:test;DB_CLOSE_DELAY=-1;INIT=runscript from 'classpath:/db.sql'\r\n```","```\r\npublic static List<Employee> fetchData() throws SQLException {\r\n    String SQL_QUERY = \"select * from emp\";\r\n    List<Employee> employees = null;\r\n    try (Connection con = DataSource.getConnection();\r\n        PreparedStatement pst = con.prepareStatement( SQL_QUERY );\r\n        ResultSet rs = pst.executeQuery();) {\r\n            employees = new ArrayList<>();\r\n            Employee employee;\r\n            while ( rs.next() ) {\r\n                employee = new Employee();\r\n                employee.setEmpNo( rs.getInt( \"empno\" ) );\r\n                employee.setEname( rs.getString( \"ename\" ) );\r\n                employee.setJob( rs.getString( \"job\" ) );\r\n                employee.setMgr( rs.getInt( \"mgr\" ) );\r\n                employee.setHiredate( rs.getDate( \"hiredate\" ) );\r\n                employee.setSal( rs.getInt( \"sal\" ) );\r\n                employee.setComm( rs.getInt( \"comm\" ) );\r\n                employee.setDeptno( rs.getInt( \"deptno\" ) );\r\n                employees.add( employee );\r\n            }\r\n\t} \r\n    return employees;\r\n}\r\n```","```\r\n@Test\r\npublic void givenConnection_thenFetchDbData() throws SQLException {\r\n    HikariCPDemo.fetchData();\r\n\r\n    assertEquals( 4, employees.size() );\r\n}\r\n```"]