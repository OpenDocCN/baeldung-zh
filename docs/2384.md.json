["```\r\n<dependency>\r\n    <groupId>com.googlecode.json-simple</groupId>\r\n    <artifactId>json-simple</artifactId>\r\n    <version>1.1.1</version>\r\n</dependency>\r\n```","```\r\npublic class Person {\r\n\r\n    private int id;\r\n    private String name;\r\n\r\n    public Person(String json) {\r\n        Gson gson = new Gson();\r\n        Person request = gson.fromJson(json, Person.class);\r\n        this.id = request.getId();\r\n        this.name = request.getName();\r\n    }\r\n\r\n    public String toString() {\r\n        Gson gson = new GsonBuilder().setPrettyPrinting().create();\r\n        return gson.toJson(this);\r\n    }\r\n\r\n    // getters and setters\r\n}\r\n```","```\r\npublic class APIDemoHandler implements RequestStreamHandler {\r\n\r\n    private static final String DYNAMODB_TABLE_NAME = System.getenv(\"TABLE_NAME\"); \r\n\r\n    @Override\r\n    public void handleRequest(\r\n      InputStream inputStream, OutputStream outputStream, Context context)\r\n      throws IOException {\r\n\r\n        // implementation\r\n    }\r\n\r\n    public void handleGetByParam(\r\n      InputStream inputStream, OutputStream outputStream, Context context)\r\n      throws IOException {\r\n\r\n        // implementation\r\n    }\r\n}\r\n```","```\r\npublic void handleRequest(\r\n  InputStream inputStream, \r\n  OutputStream outputStream, \r\n  Context context)\r\n  throws IOException {\r\n\r\n    JSONParser parser = new JSONParser();\r\n    BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream));\r\n    JSONObject responseJson = new JSONObject();\r\n\r\n    AmazonDynamoDB client = AmazonDynamoDBClientBuilder.defaultClient();\r\n    DynamoDB dynamoDb = new DynamoDB(client);\r\n\r\n    try {\r\n        JSONObject event = (JSONObject) parser.parse(reader);\r\n\r\n        if (event.get(\"body\") != null) {\r\n            Person person = new Person((String) event.get(\"body\"));\r\n\r\n            dynamoDb.getTable(DYNAMODB_TABLE_NAME)\r\n              .putItem(new PutItemSpec().withItem(new Item().withNumber(\"id\", person.getId())\r\n                .withString(\"name\", person.getName())));\r\n        }\r\n\r\n        JSONObject responseBody = new JSONObject();\r\n        responseBody.put(\"message\", \"New item created\");\r\n\r\n        JSONObject headerJson = new JSONObject();\r\n        headerJson.put(\"x-custom-header\", \"my custom header value\");\r\n\r\n        responseJson.put(\"statusCode\", 200);\r\n        responseJson.put(\"headers\", headerJson);\r\n        responseJson.put(\"body\", responseBody.toString());\r\n\r\n    } catch (ParseException pex) {\r\n        responseJson.put(\"statusCode\", 400);\r\n        responseJson.put(\"exception\", pex);\r\n    }\r\n\r\n    OutputStreamWriter writer = new OutputStreamWriter(outputStream, \"UTF-8\");\r\n    writer.write(responseJson.toString());\r\n    writer.close();\r\n}\r\n```","```\r\nPerson person = new Person((String) event.get(\"body\"));\r\n```","```\r\nresponseJson.put(\"body\", responseBody.toString());\r\n```","```\r\npublic void handleGetByParam(\r\n  InputStream inputStream, OutputStream outputStream, Context context)\r\n  throws IOException {\r\n\r\n    JSONParser parser = new JSONParser();\r\n    BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream));\r\n    JSONObject responseJson = new JSONObject();\r\n\r\n    AmazonDynamoDB client = AmazonDynamoDBClientBuilder.defaultClient();\r\n    DynamoDB dynamoDb = new DynamoDB(client);\r\n\r\n    Item result = null;\r\n    try {\r\n        JSONObject event = (JSONObject) parser.parse(reader);\r\n        JSONObject responseBody = new JSONObject();\r\n\r\n        if (event.get(\"pathParameters\") != null) {\r\n            JSONObject pps = (JSONObject) event.get(\"pathParameters\");\r\n            if (pps.get(\"id\") != null) {\r\n                int id = Integer.parseInt((String) pps.get(\"id\"));\r\n                result = dynamoDb.getTable(DYNAMODB_TABLE_NAME).getItem(\"id\", id);\r\n            }\r\n        } else if (event.get(\"queryStringParameters\") != null) {\r\n            JSONObject qps = (JSONObject) event.get(\"queryStringParameters\");\r\n            if (qps.get(\"id\") != null) {\r\n\r\n                int id = Integer.parseInt((String) qps.get(\"id\"));\r\n                result = dynamoDb.getTable(DYNAMODB_TABLE_NAME)\r\n                  .getItem(\"id\", id);\r\n            }\r\n        }\r\n        if (result != null) {\r\n            Person person = new Person(result.toJSON());\r\n            responseBody.put(\"Person\", person);\r\n            responseJson.put(\"statusCode\", 200);\r\n        } else {\r\n            responseBody.put(\"message\", \"No item found\");\r\n            responseJson.put(\"statusCode\", 404);\r\n        }\r\n\r\n        JSONObject headerJson = new JSONObject();\r\n        headerJson.put(\"x-custom-header\", \"my custom header value\");\r\n\r\n        responseJson.put(\"headers\", headerJson);\r\n        responseJson.put(\"body\", responseBody.toString());\r\n\r\n    } catch (ParseException pex) {\r\n        responseJson.put(\"statusCode\", 400);\r\n        responseJson.put(\"exception\", pex);\r\n    }\r\n\r\n    OutputStreamWriter writer = new OutputStreamWriter(outputStream, \"UTF-8\");\r\n    writer.write(responseJson.toString());\r\n    writer.close();\r\n}\r\n```","```\r\nmvn clean package shade:shade\r\n```","```\r\n{\r\n    \"body\": \"{\\\"id\\\": 1, \\\"name\\\": \\\"John Doe\\\"}\"\r\n}\r\n```","```\r\n{\r\n    \"isBase64Encoded\": false,\r\n    \"headers\": {\r\n        \"x-custom-header\": \"my custom header value\"\r\n    },\r\n    \"body\": \"{\\\"message\\\":\\\"New item created\\\"}\",\r\n    \"statusCode\": 200\r\n}\r\n```","```\r\n{\r\n    \"pathParameters\": {\r\n        \"id\": \"1\"\r\n    }\r\n}\r\n```","```\r\n{\r\n    \"queryStringParameters\": {\r\n        \"id\": \"1\"\r\n    }\r\n}\r\n```","```\r\n{\r\n  \"headers\": {\r\n    \"x-custom-header\": \"my custom header value\"\r\n  },\r\n  \"body\": \"{\\\"Person\\\":{\\n  \\\"id\\\": 88,\\n  \\\"name\\\": \\\"John Doe\\\"\\n}}\",\r\n  \"statusCode\": 200\r\n}\r\n```","```\r\n{\r\n    \"id\": 2,\r\n    \"name\": \"Jane Doe\"\r\n}\r\n```","```\r\nhttps://{restapi-id}.execute-api.{region}.amazonaws.com/{stageName}\r\n```","```\r\ncurl -X PUT 'https://0skaqfgdw4.execute-api.eu-central-1.amazonaws.com/test/persons' \\\r\n  -H 'content-type: application/json' \\\r\n  -d '{\"id\": 3, \"name\": \"Richard Roe\"}'\r\n```","```\r\ncurl -X GET 'https://0skaqfgdw4.execute-api.eu-central-1.amazonaws.com/test/persons/3' \\\r\n  -H 'content-type: application/json'\r\n```","```\r\ncurl -X GET 'https://0skaqfgdw4.execute-api.eu-central-1.amazonaws.com/test/persons?id=3' \\\r\n  -H 'content-type: application/json'\r\n```"]