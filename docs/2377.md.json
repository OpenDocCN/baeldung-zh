["```\r\nAmazonSQS sqs = AmazonSQSClientBuilder.standard()\r\n  .withCredentials(new AWSStaticCredentialsProvider(credentials))\r\n  .withRegion(Regions.US_EAST_1)\r\n  .build(); \r\n```","```\r\nCreateQueueRequest createStandardQueueRequest = new CreateQueueRequest(\"baeldung-queue\");\r\nString standardQueueUrl = sqs.createQueue(createStandardQueueRequest).getQueueUrl(); \r\n```","```\r\nMap<String, String> queueAttributes = new HashMap<>();\r\nqueueAttributes.put(\"FifoQueue\", \"true\");\r\nqueueAttributes.put(\"ContentBasedDeduplication\", \"true\");\r\nCreateQueueRequest createFifoQueueRequest = new CreateQueueRequest(\r\n  \"baeldung-queue.fifo\").withAttributes(queueAttributes);\r\nString fifoQueueUrl = sqs.createQueue(createFifoQueueRequest)\r\n  .getQueueUrl(); \r\n```","```\r\nMap<String, MessageAttributeValue> messageAttributes = new HashMap<>();\r\nmessageAttributes.put(\"AttributeOne\", new MessageAttributeValue()\r\n  .withStringValue(\"This is an attribute\")\r\n  .withDataType(\"String\"));  \r\n\r\nSendMessageRequest sendMessageStandardQueue = new SendMessageRequest()\r\n  .withQueueUrl(standardQueueUrl)\r\n  .withMessageBody(\"A simple message.\")\r\n  .withDelaySeconds(30)\r\n  .withMessageAttributes(messageAttributes);\r\n\r\nsqs.sendMessage(sendMessageStandardQueue); \r\n```","```\r\nSendMessageRequest sendMessageFifoQueue = new SendMessageRequest()\r\n  .withQueueUrl(fifoQueueUrl)\r\n  .withMessageBody(\"Another simple message.\")\r\n  .withMessageGroupId(\"baeldung-group-1\")\r\n  .withMessageAttributes(messageAttributes);\r\n```","```\r\nList <SendMessageBatchRequestEntry> messageEntries = new ArrayList<>();\r\nmessageEntries.add(new SendMessageBatchRequestEntry()\r\n  .withId(\"id-1\")\r\n  .withMessageBody(\"batch-1\")\r\n  .withMessageGroupId(\"baeldung-group-1\"));\r\nmessageEntries.add(new SendMessageBatchRequestEntry()\r\n  .withId(\"id-2\")\r\n  .withMessageBody(\"batch-2\")\r\n  .withMessageGroupId(\"baeldung-group-1\"));\r\n\r\nSendMessageBatchRequest sendMessageBatchRequest\r\n = new SendMessageBatchRequest(fifoQueueUrl, messageEntries);\r\nsqs.sendMessageBatch(sendMessageBatchRequest);\r\n```","```\r\nReceiveMessageRequest receiveMessageRequest = new ReceiveMessageRequest(fifoQueueUrl)\r\n  .withWaitTimeSeconds(10)\r\n  .withMaxNumberOfMessages(10);\r\n\r\nList<Message> sqsMessages = sqs.receiveMessage(receiveMessageRequest).getMessages(); \r\n```","```\r\nsqsMessages.get(0).getAttributes();\r\nsqsMessages.get(0).getBody();\r\n```","```\r\nsqs.deleteMessage(new DeleteMessageRequest()\r\n  .withQueueUrl(fifoQueueUrl)\r\n  .withReceiptHandle(sqsMessages.get(0).getReceiptHandle())); \r\n```","```\r\nString deadLetterQueueUrl = sqs.createQueue(\"baeldung-dead-letter-queue\").getQueueUrl(); \r\n```","```\r\nGetQueueAttributesResult deadLetterQueueAttributes = sqs.getQueueAttributes(\r\n  new GetQueueAttributesRequest(deadLetterQueueUrl)\r\n    .withAttributeNames(\"QueueArn\"));\r\n\r\nString deadLetterQueueARN = deadLetterQueueAttributes.getAttributes()\r\n  .get(\"QueueArn\"); \r\n```","```\r\nSetQueueAttributesRequest queueAttributesRequest = new SetQueueAttributesRequest()\r\n  .withQueueUrl(standardQueueUrl)\r\n  .addAttributesEntry(\"RedrivePolicy\",\r\n    \"{\\\"maxReceiveCount\\\":\\\"2\\\", \"\r\n      + \"\\\"deadLetterTargetArn\\\":\\\"\" + deadLetterQueueARN + \"\\\"}\");\r\n\r\nsqs.setQueueAttributes(queueAttributesRequest); \r\n```","```\r\nGetQueueAttributesRequest getQueueAttributesRequest \r\n  = new GetQueueAttributesRequest(standardQueueUrl)\r\n    .withAttributeNames(\"All\");\r\nGetQueueAttributesResult getQueueAttributesResult \r\n  = sqs.getQueueAttributes(getQueueAttributesRequest);\r\nSystem.out.println(String.format(\"The number of messages on the queue: %s\", \r\n  getQueueAttributesResult.getAttributes()\r\n    .get(\"ApproximateNumberOfMessages\")));\r\nSystem.out.println(String.format(\"The number of messages in flight: %s\", \r\n  getQueueAttributesResult.getAttributes()\r\n    .get(\"ApproximateNumberOfMessagesNotVisible\")));\r\n```"]