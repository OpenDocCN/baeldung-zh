["```\r\nMap<String, Map<String, String>> mapOfMaps = new HashMap<String, Map<String, String>>();\r\nList<String> strList = Collections.<String>emptyList();\r\nList<Integer> intList = Collections.<Integer>emptyList();\r\n```","```\r\nList<String> strListInferred = Collections.emptyList();\r\nList<Integer> intListInferred = Collections.emptyList(); \r\n```","```\r\npublic static final <T> List<T> emptyList() \r\n```","```\r\nMap<String, Map<String, String>> mapOfMapsInferred = new HashMap<>();\r\n```","```\r\nstatic <T> List<T> add(List<T> list, T a, T b) {\r\n    list.add(a);\r\n    list.add(b);\r\n    return list;\r\n}\r\n\r\nList<String> strListGeneralized = add(new ArrayList<>(), \"abc\", \"def\");\r\nList<Integer> intListGeneralized = add(new ArrayList<>(), 1, 2);\r\nList<Number> numListGeneralized = add(new ArrayList<>(), 1, 2.0);\r\n```","```\r\nList<Integer> intList = Arrays.asList(5, 2, 4, 2, 1);\r\nCollections.sort(intList, (a, b) -> a.compareTo(b));\r\n\r\nList<String> strList = Arrays.asList(\"Red\", \"Blue\", \"Green\");\r\nCollections.sort(strList, (a, b) -> a.compareTo(b));\r\n```"]