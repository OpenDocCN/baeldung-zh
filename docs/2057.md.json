["```\r\n<dependency>\r\n    <groupId>com.vaadin</groupId>\r\n    <artifactId>vaadin-spring-boot-starter</artifactId>\r\n</dependency>\r\n```","```\r\n<dependencyManagement>\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>com.vaadin</groupId>\r\n            <artifactId>vaadin-bom</artifactId>\r\n            <version>10.0.11</version>\r\n            <type>pom</type>\r\n            <scope>import</scope>\r\n        </dependency>\r\n    </dependencies>\r\n</dependencyManagement>\r\n```","```\r\n@Entity\r\npublic class Employee {\r\n\r\n    @Id\r\n    @GeneratedValue\r\n    private Long id;\r\n\r\n    private String firstName;\r\n    private String lastName;\r\n}\r\n```","```\r\npublic interface EmployeeRepository extends JpaRepository<Employee, Long> {\r\n    List<Employee> findByLastNameStartsWithIgnoreCase(String lastName);\r\n}\r\n```","```\r\n@Bean\r\npublic CommandLineRunner loadData(EmployeeRepository repository) {\r\n    return (args) -> {\r\n        repository.save(new Employee(\"Bill\", \"Gates\"));\r\n        repository.save(new Employee(\"Mark\", \"Zuckerberg\"));\r\n        repository.save(new Employee(\"Sundar\", \"Pichai\"));\r\n        repository.save(new Employee(\"Jeff\", \"Bezos\"));\r\n    };\r\n}\r\n```","```\r\n@Route\r\npublic class MainView extends VerticalLayout {\r\n    private EmployeeRepository employeeRepository;\r\n    private EmployeeEditor editor;\r\n    Grid<Employee> grid;\r\n    TextField filter;\r\n    private Button addNewBtn;\r\n}\r\n```","```\r\n@Route(value=\"myhome\")\r\n```","```\r\nthis.grid = new Grid<>(Employee.class);\r\nthis.filter = new TextField();\r\nthis.addNewBtn = new Button(\"New employee\", VaadinIcon.PLUS.create());\r\n```","```\r\nHorizontalLayout actions = new HorizontalLayout(filter, addNewBtn);\r\nadd(actions, grid, editor);\r\n```","```\r\ngrid.setHeight(\"200px\");\r\ngrid.setColumns(\"id\", \"firstName\", \"lastName\");\r\ngrid.getColumnByKey(\"id\").setWidth(\"50px\").setFlexGrow(0);\r\n\r\nfilter.setPlaceholder(\"Filter by last name\");\r\n```","```\r\nfilter.setValueChangeMode(ValueChangeMode.EAGER);\r\nfilter.addValueChangeListener(e -> listEmployees(e.getValue()));\r\n```","```\r\ngrid.asSingleSelect().addValueChangeListener(e -> {\r\n    editor.editEmployee(e.getValue());\r\n});\r\n```","```\r\naddNewBtn.addClickListener(e -> editor.editEmployee(new Employee(\"\", \"\")));\r\n```","```\r\neditor.setChangeHandler(() -> {\r\n    editor.setVisible(false);\r\n    listEmployees(filter.getValue());\r\n});\r\n```","```\r\nvoid listEmployees(String filterText) {\r\n    if (StringUtils.isEmpty(filterText)) {\r\n        grid.setItems(employeeRepository.findAll());\r\n    } else {\r\n        grid.setItems(employeeRepository.findByLastNameStartsWithIgnoreCase(filterText));\r\n    }\r\n}\r\n```","```\r\n@SpringComponent\r\n@UIScope\r\npublic class EmployeeEditor extends VerticalLayout implements KeyNotifier {\r\n\r\n    private EmployeeRepository repository;\r\n    private Employee employee;\r\n\r\n    TextField firstName = new TextField(\"First name\");\r\n    TextField lastName = new TextField(\"Last name\");\r\n\r\n    Button save = new Button(\"Save\", VaadinIcon.CHECK.create());\r\n    Button cancel = new Button(\"Cancel\");\r\n    Button delete = new Button(\"Delete\", VaadinIcon.TRASH.create());\r\n\r\n    HorizontalLayout actions = new HorizontalLayout(save, cancel, delete);\r\n    Binder<Employee> binder = new Binder<>(Employee.class);\r\n    private ChangeHandler changeHandler;\r\n}\r\n```","```\r\nbinder.bindInstanceFields(this);\r\n```","```\r\nvoid delete() {\r\n    repository.delete(employee);\r\n    changeHandler.onChange();\r\n}\r\n\r\nvoid save() {\r\n    repository.save(employee);\r\n    changeHandler.onChange();\r\n}\r\n```"]