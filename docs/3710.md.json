["```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-security</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.security.oauth.boot</groupId>\r\n    <artifactId>spring-security-oauth2-autoconfigure</artifactId>\r\n    <version>2.0.1.RELEASE</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-thymeleaf</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.thymeleaf.extras</groupId>\r\n    <artifactId>thymeleaf-extras-springsecurity4</artifactId>\r\n</dependency>\r\n```","```\r\n@Configuration\r\n@EnableOAuth2Sso\r\npublic class UiSecurityConfig extends WebSecurityConfigurerAdapter {\r\n\r\n    @Override\r\n    public void configure(HttpSecurity http) throws Exception {\r\n        http.antMatcher(\"/**\")\r\n          .authorizeRequests()\r\n          .antMatchers(\"/\", \"/login**\")\r\n          .permitAll()\r\n          .anyRequest()\r\n          .authenticated();\r\n    }\r\n}\r\n```","```\r\nserver:\r\n    port: 8082\r\n    servlet:\r\n        context-path: /ui\r\n    session:\r\n      cookie:\r\n        name: UISESSION\r\nsecurity:\r\n  basic:\r\n    enabled: false\r\n  oauth2:\r\n    client:\r\n      clientId: SampleClientId\r\n      clientSecret: secret\r\n      accessTokenUri: http://localhost:8081/auth/oauth/token\r\n      userAuthorizationUri: http://localhost:8081/auth/oauth/authorize\r\n    resource:\r\n      userInfoUri: http://localhost:8081/auth/user/me\r\nspring:\r\n  thymeleaf:\r\n    cache: false\r\n```","```\r\n<h1>Spring Security SSO</h1>\r\n<a href=\"securedPage\">Login</a>\r\n```","```\r\n<h1>Secured Page</h1>\r\nWelcome, <span th:text=\"${#authentication.name}\">Name</span>\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-web</artifactId>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.security.oauth</groupId>\r\n    <artifactId>spring-security-oauth2</artifactId>\r\n    <version>2.3.3.RELEASE</version>\r\n</dependency>\r\n```","```\r\n@SpringBootApplication\r\n@EnableResourceServer\r\npublic class AuthorizationServerApplication extends SpringBootServletInitializer {\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(AuthorizationServerApplication.class, args);\r\n    }\r\n}\r\n```","```\r\n@Configuration\r\n@EnableAuthorizationServer\r\npublic class AuthServerConfig extends AuthorizationServerConfigurerAdapter {\r\n\r\n    @Autowired\r\n    private BCryptPasswordEncoder passwordEncoder;\r\n\r\n    @Override\r\n    public void configure(\r\n      AuthorizationServerSecurityConfigurer oauthServer) throws Exception {\r\n        oauthServer.tokenKeyAccess(\"permitAll()\")\r\n          .checkTokenAccess(\"isAuthenticated()\");\r\n    }\r\n\r\n    @Override\r\n    public void configure(ClientDetailsServiceConfigurer clients) throws Exception {\r\n        clients.inMemory()\r\n          .withClient(\"SampleClientId\")\r\n          .secret(passwordEncoder.encode(\"secret\"))\r\n          .authorizedGrantTypes(\"authorization_code\")\r\n          .scopes(\"user_info\")\r\n          .autoApprove(true) \r\n          .redirectUris(\r\n            \"http://localhost:8082/ui/login\",\"http://localhost:8083/ui2/login\"); \r\n    }\r\n}\r\n```","```\r\nserver.port=8081\r\nserver.servlet.context-path=/auth\r\n```","```\r\n@Configuration\r\n@Order(1)\r\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\r\n\r\n    @Override\r\n    protected void configure(HttpSecurity http) throws Exception {\r\n        http.requestMatchers()\r\n          .antMatchers(\"/login\", \"/oauth/authorize\")\r\n          .and()\r\n          .authorizeRequests()\r\n          .anyRequest().authenticated()\r\n          .and()\r\n          .formLogin().permitAll();\r\n    }\r\n\r\n    @Override\r\n    protected void configure(AuthenticationManagerBuilder auth) throws Exception {\r\n        auth.inMemoryAuthentication()\r\n            .withUser(\"john\")\r\n            .password(passwordEncoder().encode(\"123\"))\r\n            .roles(\"USER\");\r\n    }\r\n\r\n    @Bean \r\n    public BCryptPasswordEncoder passwordEncoder(){ \r\n        return new BCryptPasswordEncoder(); \r\n    }\r\n}\r\n```","```\r\n@RestController\r\npublic class UserController {\r\n    @GetMapping(\"/user/me\")\r\n    public Principal user(Principal principal) {\r\n        return principal;\r\n    }\r\n}\r\n```"]