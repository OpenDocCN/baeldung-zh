["```\r\n@Test\r\npublic void whenExceptionThrown_thenAssertionSucceeds() {\r\n    Exception exception = assertThrows(NumberFormatException.class, () -> {\r\n        Integer.parseInt(\"1a\");\r\n    });\r\n\r\n    String expectedMessage = \"For input string\";\r\n    String actualMessage = exception.getMessage();\r\n\r\n    assertTrue(actualMessage.contains(expectedMessage));\r\n}\r\n```","```\r\n@Test\r\npublic void whenDerivedExceptionThrown_thenAssertionSucceeds() {\r\n    Exception exception = assertThrows(RuntimeException.class, () -> {\r\n        Integer.parseInt(\"1a\");\r\n    });\r\n\r\n    String expectedMessage = \"For input string\";\r\n    String actualMessage = exception.getMessage();\r\n\r\n    assertTrue(actualMessage.contains(expectedMessage));\r\n}\r\n```","```\r\n@Test(expected = NullPointerException.class)\r\npublic void whenExceptionThrown_thenExpectationSatisfied() {\r\n    String test = null;\r\n    test.length();\r\n}\r\n```","```\r\n@Rule\r\npublic ExpectedException exceptionRule = ExpectedException.none();\r\n\r\n@Test\r\npublic void whenExceptionThrown_thenRuleIsApplied() {\r\n    exceptionRule.expect(NumberFormatException.class);\r\n    exceptionRule.expectMessage(\"For input string\");\r\n    Integer.parseInt(\"1a\");\r\n}\r\n```"]