["```\r\ncurl --location --request POST 'http://localhost:8080/1.0/process' \\\r\n  --header 'Content-Type: application/json' \\\r\n  --data-binary '@/tmp/390KB.json'\r\n```","```\r\norg.springframework.core.io.buffer.DataBufferLimitException: Exceeded limit on max bytes to buffer : 262144\r\n  at org.springframework.core.io.buffer.LimitedDataBufferList.raiseLimitException(LimitedDataBufferList.java:99) ~[spring-core-5.3.23.jar:5.3.23]\r\n  Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nError has been observed at the following site(s):\r\n  *__checkpoint ⇢ HTTP POST \"/1.0/process\" [ExceptionHandlingWebHandler]\r\n```","```\r\nspring:\r\n    codec:\r\n        max-in-memory-size: 500KB\r\n```","```\r\n@Configuration\r\npublic class WebFluxConfiguration implements WebFluxConfigurer {\r\n    @Override\r\n    public void configureHttpMessageCodecs(ServerCodecConfigurer configurer) {\r\n        configurer.defaultCodecs().maxInMemorySize(500 * 1024);\r\n    }\r\n}\r\n```","```\r\npublic Mono<Users> fetch() {\r\n    return webClient\r\n      .post()\r\n      .uri(\"/1.0/process\")\r\n      .body(BodyInserters.fromPublisher(readRequestBody(), Users.class))\r\n      .exchangeToMono(clientResponse -> clientResponse.bodyToMono(Users.class));\r\n}\r\n```","```\r\norg.springframework.core.io.buffer.DataBufferLimitException: Exceeded limit on max bytes to buffer : 262144\r\n  at org.springframework.core.io.buffer.LimitedDataBufferList.raiseLimitException(LimitedDataBufferList.java:99) ~[spring-core-5.3.23.jar:5.3.23]\r\n  Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nError has been observed at the following site(s):\r\n    *__checkpoint ⇢ Body from POST http://localhost:8080/1.0/process [DefaultClientResponse]\r\n    *__checkpoint ⇢ Handler com.baeldung.[[email protected]](/web/20221225091828/https://www.baeldung.com/cdn-cgi/l/email-protection)428eedd9 [DispatcherHandler]\r\n    *__checkpoint ⇢ HTTP POST \"/1.0/trigger\" [ExceptionHandlingWebHandler]\r\n```","```\r\nspring:\r\n    codec:\r\n        max-in-memory-size: 500KB\r\n```","```\r\n@Bean(\"webClient\")\r\npublic WebClient getSelfWebClient(WebClient.Builder builder) {\r\n    return builder.baseUrl(host).build();\r\n}\r\n```","```\r\n@Bean(\"progWebClient\")\r\n    public WebClient getProgSelfWebClient() {\r\n        return WebClient\r\n          .builder()\r\n          .baseUrl(host)\r\n          .exchangeStrategies(ExchangeStrategies\r\n\t  .builder()\r\n\t  .codecs(codecs -> codecs\r\n            .defaultCodecs()\r\n            .maxInMemorySize(500 * 1024))\r\n\t    .build())\r\n          .build();\r\n}\r\n```"]