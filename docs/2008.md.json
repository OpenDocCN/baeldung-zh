["```\r\n<dependency>\r\n    <groupId>com.innoventsolutions.birt.runtime</groupId>\r\n    <artifactId>org.eclipse.birt.runtime_4.8.0-20180626</artifactId>\r\n    <version>4.8.0</version>\r\n</dependency>\r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-logging</artifactId>\r\n    <exclusions>\r\n        <exclusion>\r\n            <groupId>ch.qos.logback</groupId>\r\n            <artifactId>logback-classic</artifactId>\r\n        </exclusion>\r\n    </exclusions>\r\n</dependency>\r\n```","```\r\nDesignElementHandle element = factory.newSimpleMasterPage(\"Page Master\");\r\ndesign.getMasterPages().add(element);\r\n\r\nGridHandle grid = factory.newGridItem(null, 2, 1);\r\ndesign.getBody().add(grid);\r\n\r\ngrid.setWidth(\"100%\"); \r\n\r\nRowHandle row0 = (RowHandle) grid.getRows().get(0);\r\n\r\nImageHandle image = factory.newImage(null);\r\nCellHandle cell = (CellHandle) row0.getCells().get(0);\r\ncell.getContent().add(image);\r\nimage.setURL(\"\\\"https://www.baeldung.com/wp-content/themes/baeldung/favicon/favicon-96x96.png\\\"\");\r\n\r\nLabelHandle label = factory.newLabel(null);\r\ncell = (CellHandle) row0.getCells().get(1);\r\ncell.getContent().add(label);\r\nlabel.setText(\"Hello, Baeldung world!\");\r\n```","```\r\nStudent, Math, Geography, History\r\nBill, 10,3,8\r\nTom, 5,6,5\r\nAnne, 7, 4,9\r\n```","```\r\n@PostConstruct\r\nprotected void initialize() throws BirtException {\r\n    EngineConfig config = new EngineConfig();\r\n    config.getAppContext().put(\"spring\", this.context);\r\n    Platform.startup(config);\r\n    IReportEngineFactory factory = (IReportEngineFactory) Platform\r\n      .createFactoryObject(IReportEngineFactory.EXTENSION_REPORT_ENGINE_FACTORY);\r\n    birtEngine = factory.createReportEngine(config);\r\n    imageFolder = System.getProperty(\"user.dir\") + File.separatorChar + reportsPath + imagesPath;\r\n    loadReports();\r\n}\r\n```","```\r\n@Override\r\npublic void destroy() {\r\n    birtEngine.destroy();\r\n    Platform.shutdown();\r\n}\r\n```","```\r\nprivate void generatePDFReport(IReportRunnable report, HttpServletResponse response, \r\n  HttpServletRequest request) {\r\n    IRunAndRenderTask runAndRenderTask = birtEngine.createRunAndRenderTask(report);\r\n    response.setContentType(birtEngine.getMIMEType(\"pdf\"));\r\n    IRenderOption options = new RenderOption();\r\n    PDFRenderOption pdfRenderOption = new PDFRenderOption(options);\r\n    pdfRenderOption.setOutputFormat(\"pdf\");\r\n    runAndRenderTask.setRenderOption(pdfRenderOption);\r\n    runAndRenderTask.getAppContext().put(EngineConstants.APPCONTEXT_PDF_RENDER_CONTEXT, request);\r\n\r\n    try {\r\n        pdfRenderOption.setOutputStream(response.getOutputStream());\r\n        runAndRenderTask.run();\r\n    } catch (Exception e) {\r\n        throw new RuntimeException(e.getMessage(), e);\r\n    } finally {\r\n        runAndRenderTask.close();\r\n    }\r\n}\r\n```","```\r\nprivate void generateHTMLReport(IReportRunnable report, HttpServletResponse response, \r\n  HttpServletRequest request) {\r\n    IRunAndRenderTask runAndRenderTask = birtEngine.createRunAndRenderTask(report);\r\n    response.setContentType(birtEngine.getMIMEType(\"html\"));\r\n    IRenderOption options = new RenderOption();\r\n    HTMLRenderOption htmlOptions = new HTMLRenderOption(options);\r\n    htmlOptions.setOutputFormat(\"html\");\r\n    htmlOptions.setBaseImageURL(\"/\" + reportsPath + imagesPath);\r\n    htmlOptions.setImageDirectory(imageFolder);\r\n    htmlOptions.setImageHandler(htmlImageHandler);\r\n    runAndRenderTask.setRenderOption(htmlOptions);\r\n    runAndRenderTask.getAppContext().put(\r\n      EngineConstants.APPCONTEXT_BIRT_VIEWER_HTTPSERVET_REQUEST, request);\r\n\r\n    try {\r\n        htmlOptions.setOutputStream(response.getOutputStream());\r\n        runAndRenderTask.run();\r\n    } catch (Exception e) {\r\n        throw new RuntimeException(e.getMessage(), e);\r\n    } finally {\r\n        runAndRenderTask.close();\r\n    }\r\n}\r\n```","```\r\n@SpringBootApplication\r\n@EnableWebMvc\r\npublic class ReportEngineApplication implements WebMvcConfigurer {\r\n    @Value(\"${reports.relative.path}\")\r\n    private String reportsPath;\r\n    @Value(\"${images.relative.path}\")\r\n    private String imagesPath;\r\n\r\n    ...\r\n\r\n    @Override\r\n    public void addResourceHandlers(ResourceHandlerRegistry registry) {\r\n        registry\r\n          .addResourceHandler(reportsPath + imagesPath + \"/**\")\r\n          .addResourceLocations(\"file:///\" + System.getProperty(\"user.dir\") + \"/\" \r\n            + reportsPath + imagesPath);\r\n    }\r\n}\r\n```","```\r\n@RequestMapping(method = RequestMethod.GET, value = \"/report/{name}\")\r\n@ResponseBody\r\npublic void generateFullReport(HttpServletResponse response, HttpServletRequest request,\r\n  @PathVariable(\"name\") String name, @RequestParam(\"output\") String output) \r\n  throws EngineException, IOException {\r\n    OutputType format = OutputType.from(output);\r\n    reportService.generateMainReport(name, format, response, request);\r\n}\r\n```"]