["```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-webflux</artifactId>\r\n    <version>2.5.1</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-security</artifactId>\r\n    <version>2.5.1</version>\r\n</dependency>\r\n<dependency> \r\n    <groupId>org.springframework.session</groupId> \r\n    <artifactId>spring-session-core</artifactId> \r\n    <version>2.5.1</version> \r\n</dependency> \r\n```","```\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-data-redis</artifactId>\r\n    <version>2.5.1</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.springframework.session</groupId>\r\n    <artifactId>spring-session-data-redis</artifactId>\r\n    <version>2.5.1</version>\r\n </dependency>\r\n```","```\r\n@Configuration\r\n@EnableSpringWebSession\r\npublic class SessionConfig {\r\n\r\n    @Bean\r\n    public ReactiveSessionRepository reactiveSessionRepository() {\r\n        return new ReactiveMapSessionRepository(new ConcurrentHashMap<>());\r\n    }\r\n}\r\n```","```\r\n@Configuration\r\n@EnableRedisWebSession\r\npublic class RedisConfig {\r\n\r\n    @Bean\r\n    public LettuceConnectionFactory redisConnectionFactory() {\r\n        return new LettuceConnectionFactory();\r\n    }\r\n}\r\n```","```\r\n$ docker stop redis\r\n$ docker rm redis\r\n$ docker run -d --name redis -p 6379:6379 redis:4.0.5-alpine\r\n```","```\r\n@GetMapping(\"/websession\")\r\npublic Mono<String> getSession(WebSession session) {\r\n    session.getAttributes().putIfAbsent(\"note\", \"Howdy Cosmic Spheroid!\");\r\n    return Mono.just((String) session.getAttributes().get(\"note\"));\r\n}\r\n```","```\r\n$ curl -i -H \"Accept: application/json\" -H \"Content-Type:application/json\" -X GET http://localhost:8080/websession/test?id=222&note;=helloworld\r\n```"]