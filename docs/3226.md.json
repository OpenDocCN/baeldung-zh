["```\r\n@Entity\r\npublic class Channel {\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.AUTO)\r\n    private Long id;\r\n\r\n    private String code;\r\n\r\n    private Long subscriptionId;\r\n\r\n   // getters, setters, etc.\r\n} \r\n```","```\r\n@Entity\r\npublic class Subscription {\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.AUTO)\r\n    private Long id;\r\n\r\n    private String code;\r\n\r\n   // getters, setters, etc.\r\n}\r\n```","```\r\n@Entity\r\npublic class User {\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.AUTO)\r\n    private Long id;\r\n\r\n    private String email;\r\n\r\n    private Long subscriptionId;\r\n\r\n    // getters, setters, etc.\r\n}\r\n```","```\r\nSELECT c, s, u\r\n  FROM Channel c, Subscription s, User u\r\n  WHERE c.subscriptionId = s.id AND s.id = u.subscriptionId AND u.email=:email\r\n```","```\r\npublic class ReportRepository {\r\n    private final EntityManagerFactory emf;\r\n\r\n    public ReportRepository() {\r\n        // create an instance of entity manager factory\r\n    }\r\n\r\n    public List<Object[]> find(String email) {\r\n        EntityManager entityManager = emf.createEntityManager();\r\n        Query query = entityManager\r\n          .createQuery(\"SELECT c, s, u FROM  Channel c, Subscription s, User u\" \r\n          + \" WHERE c.subscriptionId = s.id AND s.id = u.subscriptionId AND u.email=:email\");\r\n        query.setParameter(\"email\", eamil);\r\n\r\n        return query.getResultList();\r\n    }\r\n} \r\n```","```\r\nList<Object[]> reportDetails = reportRepository.find(\"[[emailÂ protected]](/web/20220926191644/https://www.baeldung.com/cdn-cgi/l/email-protection)\");\r\n\r\nfor (Object[] reportDetail : reportDetails) {\r\n    Channel channel = (Channel) reportDetail[0];\r\n    Subscription subscription = (Subscription) reportDetail[1];\r\n    User user = (User) reportDetail[2];\r\n\r\n    // do something with entities\r\n}\r\n```"]