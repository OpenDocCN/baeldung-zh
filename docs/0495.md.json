["```\r\n<dependency>\r\n    <groupId>net.sourceforge.barbecue</groupId>\r\n    <artifactId>barbecue</artifactId>\r\n    <version>1.5-beta1</version>\r\n</dependency>\r\n```","```\r\npublic static BufferedImage generateEAN13BarcodeImage(String barcodeText) throws Exception {\r\n    Barcode barcode = BarcodeFactory.createEAN13(barcodeText);\r\n    barcode.setFont(BARCODE_TEXT_FONT);\r\n\r\n    return BarcodeImageHandler.getImage(barcode);\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>net.sf.barcode4j</groupId>\r\n    <artifactId>barcode4j</artifactId>\r\n    <version>2.1</version>\r\n</dependency>\r\n```","```\r\npublic static BufferedImage generateEAN13BarcodeImage(String barcodeText) {\r\n    EAN13Bean barcodeGenerator = new EAN13Bean();\r\n    BitmapCanvasProvider canvas = \r\n      new BitmapCanvasProvider(160, BufferedImage.TYPE_BYTE_BINARY, false, 0);\r\n\r\n    barcodeGenerator.generateBarcode(canvas, barcodeText);\r\n    return canvas.getBufferedImage();\r\n}\r\n```","```\r\n<dependency>\r\n    <groupId>com.google.zxing</groupId>\r\n    <artifactId>core</artifactId>\r\n    <version>3.3.0</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>com.google.zxing</groupId>\r\n    <artifactId>javase</artifactId>\r\n    <version>3.3.0</version>\r\n</dependency>\r\n```","```\r\npublic static BufferedImage generateEAN13BarcodeImage(String barcodeText) throws Exception {\r\n    EAN13Writer barcodeWriter = new EAN13Writer();\r\n    BitMatrix bitMatrix = barcodeWriter.encode(barcodeText, BarcodeFormat.EAN_13, 300, 150);\r\n\r\n    return MatrixToImageWriter.toBufferedImage(bitMatrix);\r\n}\r\n```","```\r\npublic static BufferedImage generateQRCodeImage(String barcodeText) throws Exception {\r\n    QRCodeWriter barcodeWriter = new QRCodeWriter();\r\n    BitMatrix bitMatrix = \r\n      barcodeWriter.encode(barcodeText, BarcodeFormat.QR_CODE, 200, 200);\r\n\r\n    return MatrixToImageWriter.toBufferedImage(bitMatrix);\r\n}\r\n```","```\r\n<repositories>\r\n    <repository>\r\n        <id>jitpack.io</id>\r\n        <url>https://jitpack.io</url>\r\n    </repository>\r\n</repositories>\r\n\r\n<dependencies>\r\n    <dependency>\r\n        <groupId>com.github.kenglxn.qrgen</groupId>\r\n        <artifactId>javase</artifactId>\r\n        <version>2.6.0</version>\r\n    </dependency>\r\n</dependencies>\r\n```","```\r\npublic static BufferedImage generateQRCodeImage(String barcodeText) throws Exception {\r\n    ByteArrayOutputStream stream = QRCode\r\n      .from(barcodeText)\r\n      .withSize(250, 250)\r\n      .stream();\r\n    ByteArrayInputStream bis = new ByteArrayInputStream(stream.toByteArray());\r\n\r\n    return ImageIO.read(bis);\r\n}\r\n```","```\r\n@RestController\r\n@RequestMapping(\"/barcodes\")\r\npublic class BarcodesController {\r\n\r\n    @GetMapping(value = \"/barbecue/ean13/{barcode}\", produces = MediaType.IMAGE_PNG_VALUE)\r\n    public ResponseEntity<BufferedImage> barbecueEAN13Barcode(@PathVariable(\"barcode\") String barcode)\r\n    throws Exception {\r\n        return okResponse(BarbecueBarcodeGenerator.generateEAN13BarcodeImage(barcode));\r\n    }\r\n    //...\r\n}\r\n```","```\r\n@Bean\r\npublic HttpMessageConverter<BufferedImage> createImageHttpMessageConverter() {\r\n    return new BufferedImageHttpMessageConverter();\r\n}\r\n```","```\r\n[GET] http://localhost:8080/barcodes/barbecue/upca/12345678901\r\n```","```\r\n[GET] http://localhost:8080/barcodes/barbecue/ean13/012345678901\r\n```","```\r\n[POST] http://localhost:8080/barcodes/barbecue/code128\r\n```","```\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit,\r\n sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n```","```\r\n[POST] http://localhost:8080/barcodes/barbecue/pdf417\r\n```","```\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit,\r\n sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n```","```\r\n[POST] http://localhost:8080/barcodes/zxing/qrcode\r\n```","```\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit,\r\n sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\r\n quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n```"]