["```\r\nimport org.springframework.transaction.annotation.Transactional;\r\n\r\n@Service\r\n@Transactional(\r\n  isolation = Isolation.READ_COMMITTED, \r\n  propagation = Propagation.SUPPORTS, \r\n  readOnly = false, \r\n  timeout = 30)\r\npublic class CarService {\r\n\r\n    @Autowired\r\n    private CarRepository carRepository;\r\n\r\n    @Transactional(\r\n      rollbackFor = IllegalArgumentException.class, \r\n      noRollbackFor = EntityExistsException.class,\r\n      rollbackForClassName = \"IllegalArgumentException\", \r\n      noRollbackForClassName = \"EntityExistsException\")\r\n    public Car save(Car car) {\r\n        return carRepository.save(car);\r\n    }\r\n}\r\n```","```\r\nimport javax.transaction.Transactional;\r\n\r\n@Service\r\n@Transactional(Transactional.TxType.SUPPORTS)\r\npublic class RentalService {\r\n\r\n    @Autowired\r\n    private CarRepository carRepository;\r\n\r\n    @Transactional(\r\n      rollbackOn = IllegalArgumentException.class, \r\n      dontRollbackOn = EntityExistsException.class)\r\n    public Car rent(Car car) {\r\n        return carRepository.save(car);\r\n    }\r\n}\r\n```"]