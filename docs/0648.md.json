["```\r\n<dependency>\r\n    <groupId>org.web3j</groupId>\r\n    <artifactId>core</artifactId>\r\n    <version>3.3.1</version>\r\n</dependency> \r\n```","```\r\n$ npm install truffle -g\r\n$ truffle version\r\n```","```\r\n$ truffle init\r\n$ truffle compile\r\n$ truffle migrate\r\n$ truffle test\r\n```","```\r\npragma solidity ^0.4.17;\r\n\r\ncontract Example {\r\n  function Example() {\r\n    // constructor\r\n  }\r\n} \r\n```","```\r\n{\r\n  \"contractName\": \"Example\",\r\n  \"abi\": [\r\n    {\r\n      \"inputs\": [],\r\n      \"payable\": false,\r\n      \"stateMutability\": \"nonpayable\",\r\n      \"type\": \"constructor\"\r\n    }\r\n  ],\r\n  \"bytecode\": \"0x60606040523415600e57600080fd5b603580601b6...,\r\n  \"deployedBytecode\": \"0x6060604052600080fd00a165627a7a72305...,\r\n  //...\r\n}\r\n```","```\r\nWeb3j web3a = Web3j.build(new HttpService());\r\nWeb3j web3b = Web3j.build(new HttpService(\"YOUR_PROVIDER_HERE\"));\r\nWeb3j myEtherWallet = Web3j.build(\r\n  new HttpService(\"https://api.myetherapi.com/eth\"));\r\n```","```\r\npublic EthBlockNumber getBlockNumber() {\r\n    EthBlockNumber result = new EthBlockNumber();\r\n    result = this.web3j.ethBlockNumber()\r\n      .sendAsync()\r\n      .get();\r\n    return result;\r\n}\r\n```","```\r\npublic EthAccounts getEthAccounts() {\r\n    EthAccounts result = new EthAccounts();\r\n    result = this.web3j.ethAccounts()\r\n        .sendAsync() \r\n        .get();\r\n    return result;\r\n}\r\n```","```\r\npublic EthGetTransactionCount getTransactionCount() {\r\n    EthGetTransactionCount result = new EthGetTransactionCount();\r\n    result = this.web3j.ethGetTransactionCount(DEFAULT_ADDRESS, \r\n      DefaultBlockParameter.valueOf(\"latest\"))\r\n        .sendAsync() \r\n        .get();\r\n    return result;\r\n}\r\n```","```\r\npublic EthGetBalance getEthBalance() {\r\n    EthGetBalance result = new EthGetBalance();\r\n    this.web3j.ethGetBalance(DEFAULT_ADDRESS, \r\n      DefaultBlockParameter.valueOf(\"latest\"))\r\n        .sendAsync() \r\n        .get();\r\n    return result;\r\n}\r\n```","```\r\n$ web3j truffle generate [--javaTypes|--solidityTypes] \r\n  /path/to/<truffle-smart-contract-output>.json \r\n  -o /path/to/src/main/java -p com.your.organisation.name\r\n```","```\r\nweb3j truffle generate dev_truffle/build/contracts/Example.json \r\n  -o src/main/java/com/baeldung/web3/contract -p com.baeldung\r\n```","```\r\npublic class Example extends Contract {\r\n    private static final String BINARY = \"0x60606040523415600e576...\";\r\n    //...\r\n}\r\n```","```\r\nWalletUtils.generateNewWalletFile(\"PASSWORD\", new File(\"/path/to/destination\"), true);\r\n```","```\r\nCredentials credentials = WalletUtils.loadCredentials(\"PASSWORD\", \"/path/to/walletfile\");\r\n```","```\r\nExample contract = Example.deploy(this.web3j,\r\n  credentials,\r\n  ManagedTransaction.GAS_PRICE,\r\n  Contract.GAS_LIMIT).send(); \r\n```","```\r\ncontractAddress = contract.getContractAddress();\r\n```","```\r\nList inputParams = new ArrayList();\r\nList outputParams = new ArrayList();\r\nFunction function = new Function(\"fuctionName\", inputParams, outputParams);\r\nString encodedFunction = FunctionEncoder.encode(function); \r\n```","```\r\nBigInteger nonce = BigInteger.valueOf(100);\r\nBigInteger gasprice = BigInteger.valueOf(100);\r\nBigInteger gaslimit = BigInteger.valueOf(100);\r\n\r\nTransaction transaction = Transaction\r\n  .createFunctionCallTransaction(\"FROM_ADDRESS\", \r\n    nonce, gasprice, gaslimit, \"TO_ADDRESS\", encodedFunction);\r\n\r\nEthSendTransaction transactionResponse = web3j.ethSendTransaction(transaction).sendAsync().get();\r\ntransactionHash = transactionResponse.getTransactionHash(); \r\n```"]