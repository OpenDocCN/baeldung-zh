["```\r\npublic class Messages {\r\n\r\n    public static String getMessageForLocale(String messageKey, Locale locale) {\r\n        return ResourceBundle.getBundle(\"messages\", locale)\r\n          .getString(messageKey);\r\n    }\r\n\r\n} \r\n```","```\r\n# messages.properties\r\nmessage.exception = I am an exception.\r\n```","```\r\n# messages_fr.properties\r\nmessage.exception = Je suis une exception.\r\n```","```\r\npublic class LocalizedException extends Exception {\r\n\r\n    private final String messageKey;\r\n    private final Locale locale;\r\n\r\n    public LocalizedException(String messageKey) {\r\n        this(messageKey, Locale.getDefault());\r\n    }\r\n\r\n    public LocalizedException(String messageKey, Locale locale) {\r\n        this.messageKey = messageKey;\r\n        this.locale = locale;\r\n    }\r\n\r\n    public String getLocalizedMessage() {\r\n        return Messages.getMessageForLocale(messageKey, locale);\r\n    }\r\n} \r\n```","```\r\n@Test\r\npublic void givenUsEnglishProvidedLocale_whenLocalizingMessage_thenMessageComesFromDefaultMessage() {\r\n    LocalizedException localizedException = new LocalizedException(\"message.exception\", Locale.US);\r\n    String usEnglishLocalizedExceptionMessage = localizedException.getLocalizedMessage();\r\n\r\n    assertThat(usEnglishLocalizedExceptionMessage).isEqualTo(\"I am an exception.\");\r\n}\r\n\r\n@Test\r\npublic void givenFranceFrenchProvidedLocale_whenLocalizingMessage_thenMessageComesFromFrenchTranslationMessages() {\r\n    LocalizedException localizedException = new LocalizedException(\"message.exception\", Locale.FRANCE);\r\n    String franceFrenchLocalizedExceptionMessage = localizedException.getLocalizedMessage();\r\n\r\n    assertThat(franceFrenchLocalizedExceptionMessage).isEqualTo(\"Je suis une exception.\");\r\n}\r\n```","```\r\n@Test\r\npublic void givenUsEnglishDefaultLocale_whenLocalizingMessage_thenMessageComesFromDefaultMessages() {\r\n    Locale.setDefault(Locale.US);\r\n\r\n    LocalizedException localizedException = new LocalizedException(\"message.exception\");\r\n    String usEnglishLocalizedExceptionMessage = localizedException.getLocalizedMessage();\r\n\r\n    assertThat(usEnglishLocalizedExceptionMessage).isEqualTo(\"I am an exception.\");\r\n}\r\n\r\n@Test\r\npublic void givenFranceFrenchDefaultLocale_whenLocalizingMessage_thenMessageComesFromFrenchTranslationMessages() {\r\n    Locale.setDefault(Locale.FRANCE);\r\n\r\n    LocalizedException localizedException = new LocalizedException(\"message.exception\");\r\n    String franceFrenchLocalizedExceptionMessage = localizedException.getLocalizedMessage();\r\n\r\n    assertThat(franceFrenchLocalizedExceptionMessage).isEqualTo(\"Je suis une exception.\");\r\n} \r\n```"]