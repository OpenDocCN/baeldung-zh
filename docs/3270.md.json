["```\r\npublic interface Stream<T> extends BaseStream<...> {\r\n    // omitted\r\n}\r\npublic interface BaseStream<...> extends AutoCloseable {\r\n    // omitted\r\n}\r\n```","```\r\nList<String> colors = List.of(\"Red\", \"Blue\", \"Green\")\r\n  .stream()\r\n  .filter(c -> c.length() > 4)\r\n  .map(String::toUpperCase)\r\n  .collect(Collectors.toList());\r\n```","```\r\nRandom random = new Random();\r\nrandom.ints().takeWhile(i -> i < 1000).forEach(System.out::println);\r\n```","```\r\nString[] colors = {\"Red\", \"Blue\", \"Green\"};\r\nArrays.stream(colors).map(String::toUpperCase).toArray()\r\n```","```\r\nFiles.lines(Paths.get(\"/path/to/file\"))\r\n  .flatMap(line -> Arrays.stream(line.split(\",\")))\r\n  // omitted\r\n```","```\r\ntry (Stream<String> lines = Files.lines(Paths.get(\"/path/to/file\"))) {\r\n    lines.flatMap(line -> Arrays.stream(line.split(\",\"))) // omitted\r\n}\r\n```"]