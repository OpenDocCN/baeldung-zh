["```\r\nint length = String.valueOf(number).length();\r\n```","```\r\nint length = (int) (Math.log10(number) + 1);\r\n```","```\r\nint length = 0;\r\nlong temp = 1;\r\nwhile (temp <= number) {\r\n    length++;\r\n    temp *= 10;\r\n}\r\nreturn length;\r\n```","```\r\nint length = 1;\r\nif (number >= 100000000) {\r\n    length += 8;\r\n    number /= 100000000;\r\n}\r\nif (number >= 10000) {\r\n    length += 4;\r\n    number /= 10000;\r\n}\r\nif (number >= 100) {\r\n    length += 2;\r\n    number /= 100;\r\n}\r\nif (number >= 10) {\r\n    length += 1;\r\n}\r\nreturn length;\r\n```","```\r\nif (number < 100000) {\r\n    if (number < 100) {\r\n        if (number < 10) {\r\n            return 1;\r\n        } else {\r\n            return 2;\r\n        }\r\n    } else {\r\n        if (number < 1000) {\r\n            return 3;\r\n        } else {\r\n            if (number < 10000) {\r\n                return 4;\r\n            } else {\r\n                return 5;\r\n            }\r\n        }\r\n    }\r\n} else {\r\n    if (number < 10000000) {\r\n        if (number < 1000000) {\r\n            return 6;\r\n        } else {\r\n            return 7;\r\n        }\r\n    } else {\r\n        if (number < 100000000) {\r\n            return 8;\r\n        } else {\r\n            if (number < 1000000000) {\r\n                return 9;\r\n            } else {\r\n                return 10;\r\n            }\r\n        }\r\n    }\r\n}\r\n```","```\r\nBenchmark                            Mode  Cnt   Score   Error  Units\r\nBenchmarking.stringBasedSolution     avgt  200  32.736 ± 0.589  ns/op\r\nBenchmarking.logarithmicApproach     avgt  200  26.123 ± 0.064  ns/op\r\nBenchmarking.repeatedMultiplication  avgt  200   7.494 ± 0.207  ns/op\r\nBenchmarking.dividingWithPowersOf2   avgt  200   1.264 ± 0.030  ns/op\r\nBenchmarking.divideAndConquer        avgt  200   0.956 ± 0.011  ns/op\r\n```"]