["```\r\nSystem.getProperty(\"sun.arch.data.model\"); \r\n```","```\r\npublic class JVMBitVersion {\r\n    public String getUsingSystemClass() {\r\n        return System.getProperty(\"sun.arch.data.model\") + \"-bit\";\r\n    }\r\n\r\n    //... other methods\r\n} \r\n```","```\r\n@Test\r\npublic void whenUsingSystemClass_thenOutputIsAsExpected() {\r\n    if (\"64\".equals(System.getProperty(\"sun.arch.data.model\"))) {\r\n        assertEquals(\"64-bit\", jvmVersion.getUsingSystemClass());\r\n    } else if (\"32\".equals(System.getProperty(\"sun.arch.data.model\"))) {\r\n        assertEquals(\"32-bit\", jvmVersion.getUsingSystemClass());\r\n    }\r\n}\r\n```","```\r\nif (com.sun.jna.Native.POINTER_SIZE == 4) {\r\n    // 32-bit\r\n} else if (com.sun.jna.Native.POINTER_SIZE == 8) {\r\n    // 64-bit\r\n}\r\n```","```\r\npublic static final boolean is64Bit() {\r\n    String model = System.getProperty(\"sun.arch.data.model\",\r\n                                      System.getProperty(\"com.ibm.vm.bitmode\"));\r\n    if (model != null) {\r\n        return \"64\".equals(model);\r\n    }\r\n    if (\"x86-64\".equals(ARCH)\r\n        || \"ia64\".equals(ARCH)\r\n        || \"ppc64\".equals(ARCH) || \"ppc64le\".equals(ARCH)\r\n        || \"sparcv9\".equals(ARCH)\r\n        || \"mips64\".equals(ARCH) || \"mips64el\".equals(ARCH)\r\n        || \"amd64\".equals(ARCH)\r\n        || \"aarch64\".equals(ARCH)) {\r\n        return true;\r\n    }\r\n    return Native.POINTER_SIZE == 8;\r\n}\r\n```","```\r\nARCH = getCanonicalArchitecture(System.getProperty(\"os.arch\"), osType);\r\n```"]