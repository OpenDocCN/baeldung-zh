["```\r\ntry {\r\n    new FileReader(new File(\"/invalid/file/location\"));\r\n} catch (FileNotFoundException e) {\r\n    LOGGER.info(\"FileNotFoundException caught!\");\r\n}\r\n```","```\r\ntry {\r\n    new URL(\"malformedurl\");\r\n} catch (MalformedURLException e) {\r\n    LOGGER.error(\"MalformedURLException caught!\");\r\n}\r\n```","```\r\ntry {\r\n    new SimpleDateFormat(\"MM, dd, yyyy\").parse(\"invalid-date\");\r\n} catch (ParseException e) {\r\n    LOGGER.error(\"ParseException caught!\");\r\n}\r\n```","```\r\nclass ChildThread extends Thread {\r\n\r\n    public void run() {\r\n        try {\r\n            Thread.sleep(1000);\r\n        } catch (InterruptedException e) {\r\n            LOGGER.error(\"InterruptedException caught!\");\r\n        }\r\n    }\r\n}\r\n\r\npublic class MainThread {\r\n\r\n    public static void main(String[] args) \r\n      throws InterruptedException {\r\n        ChildThread childThread = new ChildThread();\r\n        childThread.start();\r\n        childThread.interrupt();\r\n    }\r\n}\r\n```","```\r\nString strObj = null;\r\nstrObj.equals(\"Hello World\"); // throws NullPointerException.\r\n```","```\r\nPerson personObj = null;\r\nString name = personObj.personName; // Accessing the field of a null object\r\npersonObj.personName = \"Jon Doe\"; // Modifying the field of a null object\r\n```","```\r\nint[] nums = new int[] {1, 2, 3};\r\nint numFromNegativeIndex = nums[-1]; // Trying to access at negative index\r\nint numFromGreaterIndex = nums[4];   // Trying to access at greater index\r\nint numFromLengthIndex = nums[3];    // Trying to access at index equal to size of the array\r\n```","```\r\nString str = \"Hello World\";\r\nchar charAtNegativeIndex = str.charAt(-1); // Trying to access at negative index\r\nchar charAtLengthIndex = str.charAt(11);   // Trying to access at index equal to size of the string \r\n```","```\r\nString str = \"100ABCD\";\r\nint x = Integer.parseInt(str); // Throws NumberFormatException\r\nint y = Integer.valueOf(str); //Throws NumberFormatException\r\n```","```\r\nint illegalOperation = 30/0; // Throws ArithmeticException\r\n```","```\r\nclass Animal {}\r\n\r\nclass Dog extends Animal {}\r\n\r\nclass Lion extends Animal {} \r\n```","```\r\nAnimal animal = new Lion(); // At runtime the instance is Lion\r\nDog tommy = (Dog) animal; // Throws ClassCastException\r\n```","```\r\nThread.currentThread().sleep(-10000); // Throws IllegalArgumentException\r\n```","```\r\n//Initialized with index at -1\r\nIterator<Integer> intListIterator = new ArrayList<>().iterator(); \r\n\r\nintListIterator.remove(); // IllegalStateException \r\n```"]